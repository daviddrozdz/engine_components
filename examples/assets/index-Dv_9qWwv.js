import{k as Jo,l as xI,m as kr,W as Bn,a as Xo,n as Bl,H as zs,o as Xb,p as fu,q as rm,r as om,s as am,t as lm,u as cm,v as pu,w as hm,x as um,y as dm,z as fm,A as pm,B as mm,C as gm,S as Zb,D as jb,E as mu,b as Mh,L as qb,F as Kb,G as Qb,I as Em,J as Im,K as _m,c as qn,M as Wr,N as Jb,O as $b,P as ug,Q as dg,j as ey,T as ty,U as iy,V as ny,X as sy}from"./index-H1X3kY-x.js";/**
 * @license
 * Copyright 2010-2025 Three.js Authors
 * SPDX-License-Identifier: MIT
 */const gu="175",ry={LEFT:0,MIDDLE:1,RIGHT:2,ROTATE:0,DOLLY:1,PAN:2},oy=0,fg=1,ay=2,wI=1,ly=2,is=3,pn=0,_i=1,Ai=2,gs=0,Zo=1,pg=2,mg=3,gg=4,cy=5,br=100,hy=101,uy=102,dy=103,fy=104,py=200,my=201,gy=202,Ey=203,gf=204,Ef=205,Iy=206,_y=207,vy=208,by=209,yy=210,Ty=211,Cy=212,xy=213,wy=214,If=0,_f=1,vf=2,$o=3,bf=4,yf=5,Tf=6,Cf=7,vm=0,Sy=1,Ay=2,Es=0,Ry=1,My=2,Fy=3,Py=4,Oy=5,Ly=6,Dy=7,SI=300,ea=301,ta=302,xf=303,wf=304,Eu=306,gl=1e3,Sr=1001,Sf=1002,Ct=1003,Ny=1004,Wl=1005,qt=1006,Bu=1007,Ar=1008,Cs=1009,AI=1010,RI=1011,El=1012,bm=1013,Yn=1014,Sn=1015,ki=1016,ym=1017,Tm=1018,ia=1020,MI=35902,FI=1021,PI=1022,Qt=1023,OI=1024,LI=1025,Dr=1026,na=1027,Iu=1028,Cm=1029,DI=1030,xm=1031,wm=1033,Fh=33776,Ph=33777,Oh=33778,Lh=33779,Af=35840,Rf=35841,Mf=35842,Ff=35843,Pf=36196,Of=37492,Lf=37496,Df=37808,Nf=37809,Uf=37810,Bf=37811,zf=37812,Vf=37813,kf=37814,Gf=37815,Hf=37816,Yf=37817,Wf=37818,Xf=37819,Zf=37820,jf=37821,Dh=36492,qf=36494,Kf=36495,NI=36283,Qf=36284,Jf=36285,$f=36286,Uy=3200,By=3201,Sm=0,zy=1,us="",tn="srgb",sa="srgb-linear",qh="linear",vt="srgb",Xr=7680,Eg=519,Vy=512,ky=513,Gy=514,UI=515,Hy=516,Yy=517,Wy=518,Xy=519,ep=35044,Zy=35048,Ig="300 es",ds=2e3,Kh=2001;class Gr{addEventListener(e,t){this._listeners===void 0&&(this._listeners={});const i=this._listeners;i[e]===void 0&&(i[e]=[]),i[e].indexOf(t)===-1&&i[e].push(t)}hasEventListener(e,t){const i=this._listeners;return i===void 0?!1:i[e]!==void 0&&i[e].indexOf(t)!==-1}removeEventListener(e,t){const i=this._listeners;if(i===void 0)return;const n=i[e];if(n!==void 0){const r=n.indexOf(t);r!==-1&&n.splice(r,1)}}dispatchEvent(e){const t=this._listeners;if(t===void 0)return;const i=t[e.type];if(i!==void 0){e.target=this;const n=i.slice(0);for(let r=0,o=n.length;r<o;r++)n[r].call(this,e);e.target=null}}}const mi=["00","01","02","03","04","05","06","07","08","09","0a","0b","0c","0d","0e","0f","10","11","12","13","14","15","16","17","18","19","1a","1b","1c","1d","1e","1f","20","21","22","23","24","25","26","27","28","29","2a","2b","2c","2d","2e","2f","30","31","32","33","34","35","36","37","38","39","3a","3b","3c","3d","3e","3f","40","41","42","43","44","45","46","47","48","49","4a","4b","4c","4d","4e","4f","50","51","52","53","54","55","56","57","58","59","5a","5b","5c","5d","5e","5f","60","61","62","63","64","65","66","67","68","69","6a","6b","6c","6d","6e","6f","70","71","72","73","74","75","76","77","78","79","7a","7b","7c","7d","7e","7f","80","81","82","83","84","85","86","87","88","89","8a","8b","8c","8d","8e","8f","90","91","92","93","94","95","96","97","98","99","9a","9b","9c","9d","9e","9f","a0","a1","a2","a3","a4","a5","a6","a7","a8","a9","aa","ab","ac","ad","ae","af","b0","b1","b2","b3","b4","b5","b6","b7","b8","b9","ba","bb","bc","bd","be","bf","c0","c1","c2","c3","c4","c5","c6","c7","c8","c9","ca","cb","cc","cd","ce","cf","d0","d1","d2","d3","d4","d5","d6","d7","d8","d9","da","db","dc","dd","de","df","e0","e1","e2","e3","e4","e5","e6","e7","e8","e9","ea","eb","ec","ed","ee","ef","f0","f1","f2","f3","f4","f5","f6","f7","f8","f9","fa","fb","fc","fd","fe","ff"];let _g=1234567;const jo=Math.PI/180,Il=180/Math.PI;function Is(){const s=Math.random()*4294967295|0,e=Math.random()*4294967295|0,t=Math.random()*4294967295|0,i=Math.random()*4294967295|0;return(mi[s&255]+mi[s>>8&255]+mi[s>>16&255]+mi[s>>24&255]+"-"+mi[e&255]+mi[e>>8&255]+"-"+mi[e>>16&15|64]+mi[e>>24&255]+"-"+mi[t&63|128]+mi[t>>8&255]+"-"+mi[t>>16&255]+mi[t>>24&255]+mi[i&255]+mi[i>>8&255]+mi[i>>16&255]+mi[i>>24&255]).toLowerCase()}function ot(s,e,t){return Math.max(e,Math.min(t,s))}function Am(s,e){return(s%e+e)%e}function jy(s,e,t,i,n){return i+(s-e)*(n-i)/(t-e)}function qy(s,e,t){return s!==e?(t-s)/(e-s):0}function sl(s,e,t){return(1-t)*s+t*e}function Ky(s,e,t,i){return sl(s,e,1-Math.exp(-t*i))}function Qy(s,e=1){return e-Math.abs(Am(s,e*2)-e)}function Jy(s,e,t){return s<=e?0:s>=t?1:(s=(s-e)/(t-e),s*s*(3-2*s))}function $y(s,e,t){return s<=e?0:s>=t?1:(s=(s-e)/(t-e),s*s*s*(s*(s*6-15)+10))}function eT(s,e){return s+Math.floor(Math.random()*(e-s+1))}function tT(s,e){return s+Math.random()*(e-s)}function iT(s){return s*(.5-Math.random())}function nT(s){s!==void 0&&(_g=s);let e=_g+=1831565813;return e=Math.imul(e^e>>>15,e|1),e^=e+Math.imul(e^e>>>7,e|61),((e^e>>>14)>>>0)/4294967296}function sT(s){return s*jo}function rT(s){return s*Il}function oT(s){return(s&s-1)===0&&s!==0}function aT(s){return Math.pow(2,Math.ceil(Math.log(s)/Math.LN2))}function lT(s){return Math.pow(2,Math.floor(Math.log(s)/Math.LN2))}function cT(s,e,t,i,n){const r=Math.cos,o=Math.sin,a=r(t/2),l=o(t/2),c=r((e+i)/2),h=o((e+i)/2),d=r((e-i)/2),u=o((e-i)/2),f=r((i-e)/2),m=o((i-e)/2);switch(n){case"XYX":s.set(a*h,l*d,l*u,a*c);break;case"YZY":s.set(l*u,a*h,l*d,a*c);break;case"ZXZ":s.set(l*d,l*u,a*h,a*c);break;case"XZX":s.set(a*h,l*m,l*f,a*c);break;case"YXY":s.set(l*f,a*h,l*m,a*c);break;case"ZYZ":s.set(l*m,l*f,a*h,a*c);break;default:console.warn("THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: "+n)}}function xn(s,e){switch(e.constructor){case Float32Array:return s;case Uint32Array:return s/4294967295;case Uint16Array:return s/65535;case Uint8Array:return s/255;case Int32Array:return Math.max(s/2147483647,-1);case Int16Array:return Math.max(s/32767,-1);case Int8Array:return Math.max(s/127,-1);default:throw new Error("Invalid component type.")}}function It(s,e){switch(e.constructor){case Float32Array:return s;case Uint32Array:return Math.round(s*4294967295);case Uint16Array:return Math.round(s*65535);case Uint8Array:return Math.round(s*255);case Int32Array:return Math.round(s*2147483647);case Int16Array:return Math.round(s*32767);case Int8Array:return Math.round(s*127);default:throw new Error("Invalid component type.")}}const Nr={DEG2RAD:jo,RAD2DEG:Il,generateUUID:Is,clamp:ot,euclideanModulo:Am,mapLinear:jy,inverseLerp:qy,lerp:sl,damp:Ky,pingpong:Qy,smoothstep:Jy,smootherstep:$y,randInt:eT,randFloat:tT,randFloatSpread:iT,seededRandom:nT,degToRad:sT,radToDeg:rT,isPowerOfTwo:oT,ceilPowerOfTwo:aT,floorPowerOfTwo:lT,setQuaternionFromProperEuler:cT,normalize:It,denormalize:xn};class Oe{constructor(e=0,t=0){Oe.prototype.isVector2=!0,this.x=e,this.y=t}get width(){return this.x}set width(e){this.x=e}get height(){return this.y}set height(e){this.y=e}set(e,t){return this.x=e,this.y=t,this}setScalar(e){return this.x=e,this.y=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y)}copy(e){return this.x=e.x,this.y=e.y,this}add(e){return this.x+=e.x,this.y+=e.y,this}addScalar(e){return this.x+=e,this.y+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this}subScalar(e){return this.x-=e,this.y-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this}multiply(e){return this.x*=e.x,this.y*=e.y,this}multiplyScalar(e){return this.x*=e,this.y*=e,this}divide(e){return this.x/=e.x,this.y/=e.y,this}divideScalar(e){return this.multiplyScalar(1/e)}applyMatrix3(e){const t=this.x,i=this.y,n=e.elements;return this.x=n[0]*t+n[3]*i+n[6],this.y=n[1]*t+n[4]*i+n[7],this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this}clamp(e,t){return this.x=ot(this.x,e.x,t.x),this.y=ot(this.y,e.y,t.y),this}clampScalar(e,t){return this.x=ot(this.x,e,t),this.y=ot(this.y,e,t),this}clampLength(e,t){const i=this.length();return this.divideScalar(i||1).multiplyScalar(ot(i,e,t))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this}negate(){return this.x=-this.x,this.y=-this.y,this}dot(e){return this.x*e.x+this.y*e.y}cross(e){return this.x*e.y-this.y*e.x}lengthSq(){return this.x*this.x+this.y*this.y}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)}normalize(){return this.divideScalar(this.length()||1)}angle(){return Math.atan2(-this.y,-this.x)+Math.PI}angleTo(e){const t=Math.sqrt(this.lengthSq()*e.lengthSq());if(t===0)return Math.PI/2;const i=this.dot(e)/t;return Math.acos(ot(i,-1,1))}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){const t=this.x-e.x,i=this.y-e.y;return t*t+i*i}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this}lerpVectors(e,t,i){return this.x=e.x+(t.x-e.x)*i,this.y=e.y+(t.y-e.y)*i,this}equals(e){return e.x===this.x&&e.y===this.y}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this}rotateAround(e,t){const i=Math.cos(t),n=Math.sin(t),r=this.x-e.x,o=this.y-e.y;return this.x=r*i-o*n+e.x,this.y=r*n+o*i+e.y,this}random(){return this.x=Math.random(),this.y=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y}}class Xe{constructor(e,t,i,n,r,o,a,l,c){Xe.prototype.isMatrix3=!0,this.elements=[1,0,0,0,1,0,0,0,1],e!==void 0&&this.set(e,t,i,n,r,o,a,l,c)}set(e,t,i,n,r,o,a,l,c){const h=this.elements;return h[0]=e,h[1]=n,h[2]=a,h[3]=t,h[4]=r,h[5]=l,h[6]=i,h[7]=o,h[8]=c,this}identity(){return this.set(1,0,0,0,1,0,0,0,1),this}copy(e){const t=this.elements,i=e.elements;return t[0]=i[0],t[1]=i[1],t[2]=i[2],t[3]=i[3],t[4]=i[4],t[5]=i[5],t[6]=i[6],t[7]=i[7],t[8]=i[8],this}extractBasis(e,t,i){return e.setFromMatrix3Column(this,0),t.setFromMatrix3Column(this,1),i.setFromMatrix3Column(this,2),this}setFromMatrix4(e){const t=e.elements;return this.set(t[0],t[4],t[8],t[1],t[5],t[9],t[2],t[6],t[10]),this}multiply(e){return this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){const i=e.elements,n=t.elements,r=this.elements,o=i[0],a=i[3],l=i[6],c=i[1],h=i[4],d=i[7],u=i[2],f=i[5],m=i[8],g=n[0],E=n[3],p=n[6],v=n[1],I=n[4],_=n[7],b=n[2],T=n[5],w=n[8];return r[0]=o*g+a*v+l*b,r[3]=o*E+a*I+l*T,r[6]=o*p+a*_+l*w,r[1]=c*g+h*v+d*b,r[4]=c*E+h*I+d*T,r[7]=c*p+h*_+d*w,r[2]=u*g+f*v+m*b,r[5]=u*E+f*I+m*T,r[8]=u*p+f*_+m*w,this}multiplyScalar(e){const t=this.elements;return t[0]*=e,t[3]*=e,t[6]*=e,t[1]*=e,t[4]*=e,t[7]*=e,t[2]*=e,t[5]*=e,t[8]*=e,this}determinant(){const e=this.elements,t=e[0],i=e[1],n=e[2],r=e[3],o=e[4],a=e[5],l=e[6],c=e[7],h=e[8];return t*o*h-t*a*c-i*r*h+i*a*l+n*r*c-n*o*l}invert(){const e=this.elements,t=e[0],i=e[1],n=e[2],r=e[3],o=e[4],a=e[5],l=e[6],c=e[7],h=e[8],d=h*o-a*c,u=a*l-h*r,f=c*r-o*l,m=t*d+i*u+n*f;if(m===0)return this.set(0,0,0,0,0,0,0,0,0);const g=1/m;return e[0]=d*g,e[1]=(n*c-h*i)*g,e[2]=(a*i-n*o)*g,e[3]=u*g,e[4]=(h*t-n*l)*g,e[5]=(n*r-a*t)*g,e[6]=f*g,e[7]=(i*l-c*t)*g,e[8]=(o*t-i*r)*g,this}transpose(){let e;const t=this.elements;return e=t[1],t[1]=t[3],t[3]=e,e=t[2],t[2]=t[6],t[6]=e,e=t[5],t[5]=t[7],t[7]=e,this}getNormalMatrix(e){return this.setFromMatrix4(e).invert().transpose()}transposeIntoArray(e){const t=this.elements;return e[0]=t[0],e[1]=t[3],e[2]=t[6],e[3]=t[1],e[4]=t[4],e[5]=t[7],e[6]=t[2],e[7]=t[5],e[8]=t[8],this}setUvTransform(e,t,i,n,r,o,a){const l=Math.cos(r),c=Math.sin(r);return this.set(i*l,i*c,-i*(l*o+c*a)+o+e,-n*c,n*l,-n*(-c*o+l*a)+a+t,0,0,1),this}scale(e,t){return this.premultiply(zu.makeScale(e,t)),this}rotate(e){return this.premultiply(zu.makeRotation(-e)),this}translate(e,t){return this.premultiply(zu.makeTranslation(e,t)),this}makeTranslation(e,t){return e.isVector2?this.set(1,0,e.x,0,1,e.y,0,0,1):this.set(1,0,e,0,1,t,0,0,1),this}makeRotation(e){const t=Math.cos(e),i=Math.sin(e);return this.set(t,-i,0,i,t,0,0,0,1),this}makeScale(e,t){return this.set(e,0,0,0,t,0,0,0,1),this}equals(e){const t=this.elements,i=e.elements;for(let n=0;n<9;n++)if(t[n]!==i[n])return!1;return!0}fromArray(e,t=0){for(let i=0;i<9;i++)this.elements[i]=e[i+t];return this}toArray(e=[],t=0){const i=this.elements;return e[t]=i[0],e[t+1]=i[1],e[t+2]=i[2],e[t+3]=i[3],e[t+4]=i[4],e[t+5]=i[5],e[t+6]=i[6],e[t+7]=i[7],e[t+8]=i[8],e}clone(){return new this.constructor().fromArray(this.elements)}}const zu=new Xe;function BI(s){for(let e=s.length-1;e>=0;--e)if(s[e]>=65535)return!0;return!1}function Qh(s){return document.createElementNS("http://www.w3.org/1999/xhtml",s)}function hT(){const s=Qh("canvas");return s.style.display="block",s}const vg={};function Nh(s){s in vg||(vg[s]=!0,console.warn(s))}function uT(s,e,t){return new Promise(function(i,n){function r(){switch(s.clientWaitSync(e,s.SYNC_FLUSH_COMMANDS_BIT,0)){case s.WAIT_FAILED:n();break;case s.TIMEOUT_EXPIRED:setTimeout(r,t);break;default:i()}}setTimeout(r,t)})}function dT(s){const e=s.elements;e[2]=.5*e[2]+.5*e[3],e[6]=.5*e[6]+.5*e[7],e[10]=.5*e[10]+.5*e[11],e[14]=.5*e[14]+.5*e[15]}function fT(s){const e=s.elements;e[11]===-1?(e[10]=-e[10]-1,e[14]=-e[14]):(e[10]=-e[10],e[14]=-e[14]+1)}const bg=new Xe().set(.4123908,.3575843,.1804808,.212639,.7151687,.0721923,.0193308,.1191948,.9505322),yg=new Xe().set(3.2409699,-1.5373832,-.4986108,-.9692436,1.8759675,.0415551,.0556301,-.203977,1.0569715);function pT(){const s={enabled:!0,workingColorSpace:sa,spaces:{},convert:function(n,r,o){return this.enabled===!1||r===o||!r||!o||(this.spaces[r].transfer===vt&&(n.r=_s(n.r),n.g=_s(n.g),n.b=_s(n.b)),this.spaces[r].primaries!==this.spaces[o].primaries&&(n.applyMatrix3(this.spaces[r].toXYZ),n.applyMatrix3(this.spaces[o].fromXYZ)),this.spaces[o].transfer===vt&&(n.r=qo(n.r),n.g=qo(n.g),n.b=qo(n.b))),n},fromWorkingColorSpace:function(n,r){return this.convert(n,this.workingColorSpace,r)},toWorkingColorSpace:function(n,r){return this.convert(n,r,this.workingColorSpace)},getPrimaries:function(n){return this.spaces[n].primaries},getTransfer:function(n){return n===us?qh:this.spaces[n].transfer},getLuminanceCoefficients:function(n,r=this.workingColorSpace){return n.fromArray(this.spaces[r].luminanceCoefficients)},define:function(n){Object.assign(this.spaces,n)},_getMatrix:function(n,r,o){return n.copy(this.spaces[r].toXYZ).multiply(this.spaces[o].fromXYZ)},_getDrawingBufferColorSpace:function(n){return this.spaces[n].outputColorSpaceConfig.drawingBufferColorSpace},_getUnpackColorSpace:function(n=this.workingColorSpace){return this.spaces[n].workingColorSpaceConfig.unpackColorSpace}},e=[.64,.33,.3,.6,.15,.06],t=[.2126,.7152,.0722],i=[.3127,.329];return s.define({[sa]:{primaries:e,whitePoint:i,transfer:qh,toXYZ:bg,fromXYZ:yg,luminanceCoefficients:t,workingColorSpaceConfig:{unpackColorSpace:tn},outputColorSpaceConfig:{drawingBufferColorSpace:tn}},[tn]:{primaries:e,whitePoint:i,transfer:vt,toXYZ:bg,fromXYZ:yg,luminanceCoefficients:t,outputColorSpaceConfig:{drawingBufferColorSpace:tn}}}),s}const nt=pT();function _s(s){return s<.04045?s*.0773993808:Math.pow(s*.9478672986+.0521327014,2.4)}function qo(s){return s<.0031308?s*12.92:1.055*Math.pow(s,.41666)-.055}let Zr;class mT{static getDataURL(e,t="image/png"){if(/^data:/i.test(e.src)||typeof HTMLCanvasElement>"u")return e.src;let i;if(e instanceof HTMLCanvasElement)i=e;else{Zr===void 0&&(Zr=Qh("canvas")),Zr.width=e.width,Zr.height=e.height;const n=Zr.getContext("2d");e instanceof ImageData?n.putImageData(e,0,0):n.drawImage(e,0,0,e.width,e.height),i=Zr}return i.toDataURL(t)}static sRGBToLinear(e){if(typeof HTMLImageElement<"u"&&e instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&e instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&e instanceof ImageBitmap){const t=Qh("canvas");t.width=e.width,t.height=e.height;const i=t.getContext("2d");i.drawImage(e,0,0,e.width,e.height);const n=i.getImageData(0,0,e.width,e.height),r=n.data;for(let o=0;o<r.length;o++)r[o]=_s(r[o]/255)*255;return i.putImageData(n,0,0),t}else if(e.data){const t=e.data.slice(0);for(let i=0;i<t.length;i++)t instanceof Uint8Array||t instanceof Uint8ClampedArray?t[i]=Math.floor(_s(t[i]/255)*255):t[i]=_s(t[i]);return{data:t,width:e.width,height:e.height}}else return console.warn("THREE.ImageUtils.sRGBToLinear(): Unsupported image type. No color space conversion applied."),e}}let gT=0;class Rm{constructor(e=null){this.isSource=!0,Object.defineProperty(this,"id",{value:gT++}),this.uuid=Is(),this.data=e,this.dataReady=!0,this.version=0}set needsUpdate(e){e===!0&&this.version++}toJSON(e){const t=e===void 0||typeof e=="string";if(!t&&e.images[this.uuid]!==void 0)return e.images[this.uuid];const i={uuid:this.uuid,url:""},n=this.data;if(n!==null){let r;if(Array.isArray(n)){r=[];for(let o=0,a=n.length;o<a;o++)n[o].isDataTexture?r.push(Vu(n[o].image)):r.push(Vu(n[o]))}else r=Vu(n);i.url=r}return t||(e.images[this.uuid]=i),i}}function Vu(s){return typeof HTMLImageElement<"u"&&s instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&s instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&s instanceof ImageBitmap?mT.getDataURL(s):s.data?{data:Array.from(s.data),width:s.width,height:s.height,type:s.data.constructor.name}:(console.warn("THREE.Texture: Unable to serialize Texture."),{})}let ET=0;class Ri extends Gr{constructor(e=Ri.DEFAULT_IMAGE,t=Ri.DEFAULT_MAPPING,i=Sr,n=Sr,r=qt,o=Ar,a=Qt,l=Cs,c=Ri.DEFAULT_ANISOTROPY,h=us){super(),this.isTexture=!0,Object.defineProperty(this,"id",{value:ET++}),this.uuid=Is(),this.name="",this.source=new Rm(e),this.mipmaps=[],this.mapping=t,this.channel=0,this.wrapS=i,this.wrapT=n,this.magFilter=r,this.minFilter=o,this.anisotropy=c,this.format=a,this.internalFormat=null,this.type=l,this.offset=new Oe(0,0),this.repeat=new Oe(1,1),this.center=new Oe(0,0),this.rotation=0,this.matrixAutoUpdate=!0,this.matrix=new Xe,this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,this.colorSpace=h,this.userData={},this.version=0,this.onUpdate=null,this.renderTarget=null,this.isRenderTargetTexture=!1,this.pmremVersion=0}get image(){return this.source.data}set image(e=null){this.source.data=e}updateMatrix(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)}clone(){return new this.constructor().copy(this)}copy(e){return this.name=e.name,this.source=e.source,this.mipmaps=e.mipmaps.slice(0),this.mapping=e.mapping,this.channel=e.channel,this.wrapS=e.wrapS,this.wrapT=e.wrapT,this.magFilter=e.magFilter,this.minFilter=e.minFilter,this.anisotropy=e.anisotropy,this.format=e.format,this.internalFormat=e.internalFormat,this.type=e.type,this.offset.copy(e.offset),this.repeat.copy(e.repeat),this.center.copy(e.center),this.rotation=e.rotation,this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrix.copy(e.matrix),this.generateMipmaps=e.generateMipmaps,this.premultiplyAlpha=e.premultiplyAlpha,this.flipY=e.flipY,this.unpackAlignment=e.unpackAlignment,this.colorSpace=e.colorSpace,this.renderTarget=e.renderTarget,this.isRenderTargetTexture=e.isRenderTargetTexture,this.userData=JSON.parse(JSON.stringify(e.userData)),this.needsUpdate=!0,this}toJSON(e){const t=e===void 0||typeof e=="string";if(!t&&e.textures[this.uuid]!==void 0)return e.textures[this.uuid];const i={metadata:{version:4.6,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,image:this.source.toJSON(e).uuid,mapping:this.mapping,channel:this.channel,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,internalFormat:this.internalFormat,type:this.type,colorSpace:this.colorSpace,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,generateMipmaps:this.generateMipmaps,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};return Object.keys(this.userData).length>0&&(i.userData=this.userData),t||(e.textures[this.uuid]=i),i}dispose(){this.dispatchEvent({type:"dispose"})}transformUv(e){if(this.mapping!==SI)return e;if(e.applyMatrix3(this.matrix),e.x<0||e.x>1)switch(this.wrapS){case gl:e.x=e.x-Math.floor(e.x);break;case Sr:e.x=e.x<0?0:1;break;case Sf:Math.abs(Math.floor(e.x)%2)===1?e.x=Math.ceil(e.x)-e.x:e.x=e.x-Math.floor(e.x);break}if(e.y<0||e.y>1)switch(this.wrapT){case gl:e.y=e.y-Math.floor(e.y);break;case Sr:e.y=e.y<0?0:1;break;case Sf:Math.abs(Math.floor(e.y)%2)===1?e.y=Math.ceil(e.y)-e.y:e.y=e.y-Math.floor(e.y);break}return this.flipY&&(e.y=1-e.y),e}set needsUpdate(e){e===!0&&(this.version++,this.source.needsUpdate=!0)}set needsPMREMUpdate(e){e===!0&&this.pmremVersion++}}Ri.DEFAULT_IMAGE=null;Ri.DEFAULT_MAPPING=SI;Ri.DEFAULT_ANISOTROPY=1;class ct{constructor(e=0,t=0,i=0,n=1){ct.prototype.isVector4=!0,this.x=e,this.y=t,this.z=i,this.w=n}get width(){return this.z}set width(e){this.z=e}get height(){return this.w}set height(e){this.w=e}set(e,t,i,n){return this.x=e,this.y=t,this.z=i,this.w=n,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this.w=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setW(e){return this.w=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;case 3:this.w=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z,this.w)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this.w=e.w!==void 0?e.w:1,this}add(e){return this.x+=e.x,this.y+=e.y,this.z+=e.z,this.w+=e.w,this}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this.w+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this.w=e.w+t.w,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this.w+=e.w*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this.z-=e.z,this.w-=e.w,this}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this.w-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this.w=e.w-t.w,this}multiply(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this.w*=e.w,this}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this.w*=e,this}applyMatrix4(e){const t=this.x,i=this.y,n=this.z,r=this.w,o=e.elements;return this.x=o[0]*t+o[4]*i+o[8]*n+o[12]*r,this.y=o[1]*t+o[5]*i+o[9]*n+o[13]*r,this.z=o[2]*t+o[6]*i+o[10]*n+o[14]*r,this.w=o[3]*t+o[7]*i+o[11]*n+o[15]*r,this}divide(e){return this.x/=e.x,this.y/=e.y,this.z/=e.z,this.w/=e.w,this}divideScalar(e){return this.multiplyScalar(1/e)}setAxisAngleFromQuaternion(e){this.w=2*Math.acos(e.w);const t=Math.sqrt(1-e.w*e.w);return t<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=e.x/t,this.y=e.y/t,this.z=e.z/t),this}setAxisAngleFromRotationMatrix(e){let t,i,n,r;const l=e.elements,c=l[0],h=l[4],d=l[8],u=l[1],f=l[5],m=l[9],g=l[2],E=l[6],p=l[10];if(Math.abs(h-u)<.01&&Math.abs(d-g)<.01&&Math.abs(m-E)<.01){if(Math.abs(h+u)<.1&&Math.abs(d+g)<.1&&Math.abs(m+E)<.1&&Math.abs(c+f+p-3)<.1)return this.set(1,0,0,0),this;t=Math.PI;const I=(c+1)/2,_=(f+1)/2,b=(p+1)/2,T=(h+u)/4,w=(d+g)/4,A=(m+E)/4;return I>_&&I>b?I<.01?(i=0,n=.707106781,r=.707106781):(i=Math.sqrt(I),n=T/i,r=w/i):_>b?_<.01?(i=.707106781,n=0,r=.707106781):(n=Math.sqrt(_),i=T/n,r=A/n):b<.01?(i=.707106781,n=.707106781,r=0):(r=Math.sqrt(b),i=w/r,n=A/r),this.set(i,n,r,t),this}let v=Math.sqrt((E-m)*(E-m)+(d-g)*(d-g)+(u-h)*(u-h));return Math.abs(v)<.001&&(v=1),this.x=(E-m)/v,this.y=(d-g)/v,this.z=(u-h)/v,this.w=Math.acos((c+f+p-1)/2),this}setFromMatrixPosition(e){const t=e.elements;return this.x=t[12],this.y=t[13],this.z=t[14],this.w=t[15],this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this.w=Math.min(this.w,e.w),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this.w=Math.max(this.w,e.w),this}clamp(e,t){return this.x=ot(this.x,e.x,t.x),this.y=ot(this.y,e.y,t.y),this.z=ot(this.z,e.z,t.z),this.w=ot(this.w,e.w,t.w),this}clampScalar(e,t){return this.x=ot(this.x,e,t),this.y=ot(this.y,e,t),this.z=ot(this.z,e,t),this.w=ot(this.w,e,t),this}clampLength(e,t){const i=this.length();return this.divideScalar(i||1).multiplyScalar(ot(i,e,t))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this.z=Math.trunc(this.z),this.w=Math.trunc(this.w),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z+this.w*e.w}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this.w+=(e.w-this.w)*t,this}lerpVectors(e,t,i){return this.x=e.x+(t.x-e.x)*i,this.y=e.y+(t.y-e.y)*i,this.z=e.z+(t.z-e.z)*i,this.w=e.w+(t.w-e.w)*i,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z&&e.w===this.w}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this.w=e[t+3],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e[t+3]=this.w,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this.w=e.getW(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this.w=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z,yield this.w}}class IT extends Gr{constructor(e=1,t=1,i={}){super(),this.isRenderTarget=!0,this.width=e,this.height=t,this.depth=1,this.scissor=new ct(0,0,e,t),this.scissorTest=!1,this.viewport=new ct(0,0,e,t);const n={width:e,height:t,depth:1};i=Object.assign({generateMipmaps:!1,internalFormat:null,minFilter:qt,depthBuffer:!0,stencilBuffer:!1,resolveDepthBuffer:!0,resolveStencilBuffer:!0,depthTexture:null,samples:0,count:1},i);const r=new Ri(n,i.mapping,i.wrapS,i.wrapT,i.magFilter,i.minFilter,i.format,i.type,i.anisotropy,i.colorSpace);r.flipY=!1,r.generateMipmaps=i.generateMipmaps,r.internalFormat=i.internalFormat,this.textures=[];const o=i.count;for(let a=0;a<o;a++)this.textures[a]=r.clone(),this.textures[a].isRenderTargetTexture=!0,this.textures[a].renderTarget=this;this.depthBuffer=i.depthBuffer,this.stencilBuffer=i.stencilBuffer,this.resolveDepthBuffer=i.resolveDepthBuffer,this.resolveStencilBuffer=i.resolveStencilBuffer,this._depthTexture=i.depthTexture,this.samples=i.samples}get texture(){return this.textures[0]}set texture(e){this.textures[0]=e}set depthTexture(e){this._depthTexture!==null&&(this._depthTexture.renderTarget=null),e!==null&&(e.renderTarget=this),this._depthTexture=e}get depthTexture(){return this._depthTexture}setSize(e,t,i=1){if(this.width!==e||this.height!==t||this.depth!==i){this.width=e,this.height=t,this.depth=i;for(let n=0,r=this.textures.length;n<r;n++)this.textures[n].image.width=e,this.textures[n].image.height=t,this.textures[n].image.depth=i;this.dispose()}this.viewport.set(0,0,e,t),this.scissor.set(0,0,e,t)}clone(){return new this.constructor().copy(this)}copy(e){this.width=e.width,this.height=e.height,this.depth=e.depth,this.scissor.copy(e.scissor),this.scissorTest=e.scissorTest,this.viewport.copy(e.viewport),this.textures.length=0;for(let t=0,i=e.textures.length;t<i;t++){this.textures[t]=e.textures[t].clone(),this.textures[t].isRenderTargetTexture=!0,this.textures[t].renderTarget=this;const n=Object.assign({},e.textures[t].image);this.textures[t].source=new Rm(n)}return this.depthBuffer=e.depthBuffer,this.stencilBuffer=e.stencilBuffer,this.resolveDepthBuffer=e.resolveDepthBuffer,this.resolveStencilBuffer=e.resolveStencilBuffer,e.depthTexture!==null&&(this.depthTexture=e.depthTexture.clone()),this.samples=e.samples,this}dispose(){this.dispatchEvent({type:"dispose"})}}class Nt extends IT{constructor(e=1,t=1,i={}){super(e,t,i),this.isWebGLRenderTarget=!0}}class zI extends Ri{constructor(e=null,t=1,i=1,n=1){super(null),this.isDataArrayTexture=!0,this.image={data:e,width:t,height:i,depth:n},this.magFilter=Ct,this.minFilter=Ct,this.wrapR=Sr,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1,this.layerUpdates=new Set}addLayerUpdate(e){this.layerUpdates.add(e)}clearLayerUpdates(){this.layerUpdates.clear()}}class _T extends Ri{constructor(e=null,t=1,i=1,n=1){super(null),this.isData3DTexture=!0,this.image={data:e,width:t,height:i,depth:n},this.magFilter=Ct,this.minFilter=Ct,this.wrapR=Sr,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}class fi{constructor(e=0,t=0,i=0,n=1){this.isQuaternion=!0,this._x=e,this._y=t,this._z=i,this._w=n}static slerpFlat(e,t,i,n,r,o,a){let l=i[n+0],c=i[n+1],h=i[n+2],d=i[n+3];const u=r[o+0],f=r[o+1],m=r[o+2],g=r[o+3];if(a===0){e[t+0]=l,e[t+1]=c,e[t+2]=h,e[t+3]=d;return}if(a===1){e[t+0]=u,e[t+1]=f,e[t+2]=m,e[t+3]=g;return}if(d!==g||l!==u||c!==f||h!==m){let E=1-a;const p=l*u+c*f+h*m+d*g,v=p>=0?1:-1,I=1-p*p;if(I>Number.EPSILON){const b=Math.sqrt(I),T=Math.atan2(b,p*v);E=Math.sin(E*T)/b,a=Math.sin(a*T)/b}const _=a*v;if(l=l*E+u*_,c=c*E+f*_,h=h*E+m*_,d=d*E+g*_,E===1-a){const b=1/Math.sqrt(l*l+c*c+h*h+d*d);l*=b,c*=b,h*=b,d*=b}}e[t]=l,e[t+1]=c,e[t+2]=h,e[t+3]=d}static multiplyQuaternionsFlat(e,t,i,n,r,o){const a=i[n],l=i[n+1],c=i[n+2],h=i[n+3],d=r[o],u=r[o+1],f=r[o+2],m=r[o+3];return e[t]=a*m+h*d+l*f-c*u,e[t+1]=l*m+h*u+c*d-a*f,e[t+2]=c*m+h*f+a*u-l*d,e[t+3]=h*m-a*d-l*u-c*f,e}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get w(){return this._w}set w(e){this._w=e,this._onChangeCallback()}set(e,t,i,n){return this._x=e,this._y=t,this._z=i,this._w=n,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._w)}copy(e){return this._x=e.x,this._y=e.y,this._z=e.z,this._w=e.w,this._onChangeCallback(),this}setFromEuler(e,t=!0){const i=e._x,n=e._y,r=e._z,o=e._order,a=Math.cos,l=Math.sin,c=a(i/2),h=a(n/2),d=a(r/2),u=l(i/2),f=l(n/2),m=l(r/2);switch(o){case"XYZ":this._x=u*h*d+c*f*m,this._y=c*f*d-u*h*m,this._z=c*h*m+u*f*d,this._w=c*h*d-u*f*m;break;case"YXZ":this._x=u*h*d+c*f*m,this._y=c*f*d-u*h*m,this._z=c*h*m-u*f*d,this._w=c*h*d+u*f*m;break;case"ZXY":this._x=u*h*d-c*f*m,this._y=c*f*d+u*h*m,this._z=c*h*m+u*f*d,this._w=c*h*d-u*f*m;break;case"ZYX":this._x=u*h*d-c*f*m,this._y=c*f*d+u*h*m,this._z=c*h*m-u*f*d,this._w=c*h*d+u*f*m;break;case"YZX":this._x=u*h*d+c*f*m,this._y=c*f*d+u*h*m,this._z=c*h*m-u*f*d,this._w=c*h*d-u*f*m;break;case"XZY":this._x=u*h*d-c*f*m,this._y=c*f*d-u*h*m,this._z=c*h*m+u*f*d,this._w=c*h*d+u*f*m;break;default:console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: "+o)}return t===!0&&this._onChangeCallback(),this}setFromAxisAngle(e,t){const i=t/2,n=Math.sin(i);return this._x=e.x*n,this._y=e.y*n,this._z=e.z*n,this._w=Math.cos(i),this._onChangeCallback(),this}setFromRotationMatrix(e){const t=e.elements,i=t[0],n=t[4],r=t[8],o=t[1],a=t[5],l=t[9],c=t[2],h=t[6],d=t[10],u=i+a+d;if(u>0){const f=.5/Math.sqrt(u+1);this._w=.25/f,this._x=(h-l)*f,this._y=(r-c)*f,this._z=(o-n)*f}else if(i>a&&i>d){const f=2*Math.sqrt(1+i-a-d);this._w=(h-l)/f,this._x=.25*f,this._y=(n+o)/f,this._z=(r+c)/f}else if(a>d){const f=2*Math.sqrt(1+a-i-d);this._w=(r-c)/f,this._x=(n+o)/f,this._y=.25*f,this._z=(l+h)/f}else{const f=2*Math.sqrt(1+d-i-a);this._w=(o-n)/f,this._x=(r+c)/f,this._y=(l+h)/f,this._z=.25*f}return this._onChangeCallback(),this}setFromUnitVectors(e,t){let i=e.dot(t)+1;return i<Number.EPSILON?(i=0,Math.abs(e.x)>Math.abs(e.z)?(this._x=-e.y,this._y=e.x,this._z=0,this._w=i):(this._x=0,this._y=-e.z,this._z=e.y,this._w=i)):(this._x=e.y*t.z-e.z*t.y,this._y=e.z*t.x-e.x*t.z,this._z=e.x*t.y-e.y*t.x,this._w=i),this.normalize()}angleTo(e){return 2*Math.acos(Math.abs(ot(this.dot(e),-1,1)))}rotateTowards(e,t){const i=this.angleTo(e);if(i===0)return this;const n=Math.min(1,t/i);return this.slerp(e,n),this}identity(){return this.set(0,0,0,1)}invert(){return this.conjugate()}conjugate(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this}dot(e){return this._x*e._x+this._y*e._y+this._z*e._z+this._w*e._w}lengthSq(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w}length(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)}normalize(){let e=this.length();return e===0?(this._x=0,this._y=0,this._z=0,this._w=1):(e=1/e,this._x=this._x*e,this._y=this._y*e,this._z=this._z*e,this._w=this._w*e),this._onChangeCallback(),this}multiply(e){return this.multiplyQuaternions(this,e)}premultiply(e){return this.multiplyQuaternions(e,this)}multiplyQuaternions(e,t){const i=e._x,n=e._y,r=e._z,o=e._w,a=t._x,l=t._y,c=t._z,h=t._w;return this._x=i*h+o*a+n*c-r*l,this._y=n*h+o*l+r*a-i*c,this._z=r*h+o*c+i*l-n*a,this._w=o*h-i*a-n*l-r*c,this._onChangeCallback(),this}slerp(e,t){if(t===0)return this;if(t===1)return this.copy(e);const i=this._x,n=this._y,r=this._z,o=this._w;let a=o*e._w+i*e._x+n*e._y+r*e._z;if(a<0?(this._w=-e._w,this._x=-e._x,this._y=-e._y,this._z=-e._z,a=-a):this.copy(e),a>=1)return this._w=o,this._x=i,this._y=n,this._z=r,this;const l=1-a*a;if(l<=Number.EPSILON){const f=1-t;return this._w=f*o+t*this._w,this._x=f*i+t*this._x,this._y=f*n+t*this._y,this._z=f*r+t*this._z,this.normalize(),this}const c=Math.sqrt(l),h=Math.atan2(c,a),d=Math.sin((1-t)*h)/c,u=Math.sin(t*h)/c;return this._w=o*d+this._w*u,this._x=i*d+this._x*u,this._y=n*d+this._y*u,this._z=r*d+this._z*u,this._onChangeCallback(),this}slerpQuaternions(e,t,i){return this.copy(e).slerp(t,i)}random(){const e=2*Math.PI*Math.random(),t=2*Math.PI*Math.random(),i=Math.random(),n=Math.sqrt(1-i),r=Math.sqrt(i);return this.set(n*Math.sin(e),n*Math.cos(e),r*Math.sin(t),r*Math.cos(t))}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._w===this._w}fromArray(e,t=0){return this._x=e[t],this._y=e[t+1],this._z=e[t+2],this._w=e[t+3],this._onChangeCallback(),this}toArray(e=[],t=0){return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._w,e}fromBufferAttribute(e,t){return this._x=e.getX(t),this._y=e.getY(t),this._z=e.getZ(t),this._w=e.getW(t),this._onChangeCallback(),this}toJSON(){return this.toArray()}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._w}}class P{constructor(e=0,t=0,i=0){P.prototype.isVector3=!0,this.x=e,this.y=t,this.z=i}set(e,t,i){return i===void 0&&(i=this.z),this.x=e,this.y=t,this.z=i,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this}add(e){return this.x+=e.x,this.y+=e.y,this.z+=e.z,this}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this.z-=e.z,this}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this}multiply(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this}multiplyVectors(e,t){return this.x=e.x*t.x,this.y=e.y*t.y,this.z=e.z*t.z,this}applyEuler(e){return this.applyQuaternion(Tg.setFromEuler(e))}applyAxisAngle(e,t){return this.applyQuaternion(Tg.setFromAxisAngle(e,t))}applyMatrix3(e){const t=this.x,i=this.y,n=this.z,r=e.elements;return this.x=r[0]*t+r[3]*i+r[6]*n,this.y=r[1]*t+r[4]*i+r[7]*n,this.z=r[2]*t+r[5]*i+r[8]*n,this}applyNormalMatrix(e){return this.applyMatrix3(e).normalize()}applyMatrix4(e){const t=this.x,i=this.y,n=this.z,r=e.elements,o=1/(r[3]*t+r[7]*i+r[11]*n+r[15]);return this.x=(r[0]*t+r[4]*i+r[8]*n+r[12])*o,this.y=(r[1]*t+r[5]*i+r[9]*n+r[13])*o,this.z=(r[2]*t+r[6]*i+r[10]*n+r[14])*o,this}applyQuaternion(e){const t=this.x,i=this.y,n=this.z,r=e.x,o=e.y,a=e.z,l=e.w,c=2*(o*n-a*i),h=2*(a*t-r*n),d=2*(r*i-o*t);return this.x=t+l*c+o*d-a*h,this.y=i+l*h+a*c-r*d,this.z=n+l*d+r*h-o*c,this}project(e){return this.applyMatrix4(e.matrixWorldInverse).applyMatrix4(e.projectionMatrix)}unproject(e){return this.applyMatrix4(e.projectionMatrixInverse).applyMatrix4(e.matrixWorld)}transformDirection(e){const t=this.x,i=this.y,n=this.z,r=e.elements;return this.x=r[0]*t+r[4]*i+r[8]*n,this.y=r[1]*t+r[5]*i+r[9]*n,this.z=r[2]*t+r[6]*i+r[10]*n,this.normalize()}divide(e){return this.x/=e.x,this.y/=e.y,this.z/=e.z,this}divideScalar(e){return this.multiplyScalar(1/e)}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this}clamp(e,t){return this.x=ot(this.x,e.x,t.x),this.y=ot(this.y,e.y,t.y),this.z=ot(this.z,e.z,t.z),this}clampScalar(e,t){return this.x=ot(this.x,e,t),this.y=ot(this.y,e,t),this.z=ot(this.z,e,t),this}clampLength(e,t){const i=this.length();return this.divideScalar(i||1).multiplyScalar(ot(i,e,t))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this.z=Math.trunc(this.z),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this}lerpVectors(e,t,i){return this.x=e.x+(t.x-e.x)*i,this.y=e.y+(t.y-e.y)*i,this.z=e.z+(t.z-e.z)*i,this}cross(e){return this.crossVectors(this,e)}crossVectors(e,t){const i=e.x,n=e.y,r=e.z,o=t.x,a=t.y,l=t.z;return this.x=n*l-r*a,this.y=r*o-i*l,this.z=i*a-n*o,this}projectOnVector(e){const t=e.lengthSq();if(t===0)return this.set(0,0,0);const i=e.dot(this)/t;return this.copy(e).multiplyScalar(i)}projectOnPlane(e){return ku.copy(this).projectOnVector(e),this.sub(ku)}reflect(e){return this.sub(ku.copy(e).multiplyScalar(2*this.dot(e)))}angleTo(e){const t=Math.sqrt(this.lengthSq()*e.lengthSq());if(t===0)return Math.PI/2;const i=this.dot(e)/t;return Math.acos(ot(i,-1,1))}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){const t=this.x-e.x,i=this.y-e.y,n=this.z-e.z;return t*t+i*i+n*n}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)+Math.abs(this.z-e.z)}setFromSpherical(e){return this.setFromSphericalCoords(e.radius,e.phi,e.theta)}setFromSphericalCoords(e,t,i){const n=Math.sin(t)*e;return this.x=n*Math.sin(i),this.y=Math.cos(t)*e,this.z=n*Math.cos(i),this}setFromCylindrical(e){return this.setFromCylindricalCoords(e.radius,e.theta,e.y)}setFromCylindricalCoords(e,t,i){return this.x=e*Math.sin(t),this.y=i,this.z=e*Math.cos(t),this}setFromMatrixPosition(e){const t=e.elements;return this.x=t[12],this.y=t[13],this.z=t[14],this}setFromMatrixScale(e){const t=this.setFromMatrixColumn(e,0).length(),i=this.setFromMatrixColumn(e,1).length(),n=this.setFromMatrixColumn(e,2).length();return this.x=t,this.y=i,this.z=n,this}setFromMatrixColumn(e,t){return this.fromArray(e.elements,t*4)}setFromMatrix3Column(e,t){return this.fromArray(e.elements,t*3)}setFromEuler(e){return this.x=e._x,this.y=e._y,this.z=e._z,this}setFromColor(e){return this.x=e.r,this.y=e.g,this.z=e.b,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this}randomDirection(){const e=Math.random()*Math.PI*2,t=Math.random()*2-1,i=Math.sqrt(1-t*t);return this.x=i*Math.cos(e),this.y=t,this.z=i*Math.sin(e),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z}}const ku=new P,Tg=new fi;class je{constructor(e=new P(1/0,1/0,1/0),t=new P(-1/0,-1/0,-1/0)){this.isBox3=!0,this.min=e,this.max=t}set(e,t){return this.min.copy(e),this.max.copy(t),this}setFromArray(e){this.makeEmpty();for(let t=0,i=e.length;t<i;t+=3)this.expandByPoint(En.fromArray(e,t));return this}setFromBufferAttribute(e){this.makeEmpty();for(let t=0,i=e.count;t<i;t++)this.expandByPoint(En.fromBufferAttribute(e,t));return this}setFromPoints(e){this.makeEmpty();for(let t=0,i=e.length;t<i;t++)this.expandByPoint(e[t]);return this}setFromCenterAndSize(e,t){const i=En.copy(t).multiplyScalar(.5);return this.min.copy(e).sub(i),this.max.copy(e).add(i),this}setFromObject(e,t=!1){return this.makeEmpty(),this.expandByObject(e,t)}clone(){return new this.constructor().copy(this)}copy(e){return this.min.copy(e.min),this.max.copy(e.max),this}makeEmpty(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z}getCenter(e){return this.isEmpty()?e.set(0,0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(e){return this.isEmpty()?e.set(0,0,0):e.subVectors(this.max,this.min)}expandByPoint(e){return this.min.min(e),this.max.max(e),this}expandByVector(e){return this.min.sub(e),this.max.add(e),this}expandByScalar(e){return this.min.addScalar(-e),this.max.addScalar(e),this}expandByObject(e,t=!1){e.updateWorldMatrix(!1,!1);const i=e.geometry;if(i!==void 0){const r=i.getAttribute("position");if(t===!0&&r!==void 0&&e.isInstancedMesh!==!0)for(let o=0,a=r.count;o<a;o++)e.isMesh===!0?e.getVertexPosition(o,En):En.fromBufferAttribute(r,o),En.applyMatrix4(e.matrixWorld),this.expandByPoint(En);else e.boundingBox!==void 0?(e.boundingBox===null&&e.computeBoundingBox(),Xl.copy(e.boundingBox)):(i.boundingBox===null&&i.computeBoundingBox(),Xl.copy(i.boundingBox)),Xl.applyMatrix4(e.matrixWorld),this.union(Xl)}const n=e.children;for(let r=0,o=n.length;r<o;r++)this.expandByObject(n[r],t);return this}containsPoint(e){return e.x>=this.min.x&&e.x<=this.max.x&&e.y>=this.min.y&&e.y<=this.max.y&&e.z>=this.min.z&&e.z<=this.max.z}containsBox(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y&&this.min.z<=e.min.z&&e.max.z<=this.max.z}getParameter(e,t){return t.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y),(e.z-this.min.z)/(this.max.z-this.min.z))}intersectsBox(e){return e.max.x>=this.min.x&&e.min.x<=this.max.x&&e.max.y>=this.min.y&&e.min.y<=this.max.y&&e.max.z>=this.min.z&&e.min.z<=this.max.z}intersectsSphere(e){return this.clampPoint(e.center,En),En.distanceToSquared(e.center)<=e.radius*e.radius}intersectsPlane(e){let t,i;return e.normal.x>0?(t=e.normal.x*this.min.x,i=e.normal.x*this.max.x):(t=e.normal.x*this.max.x,i=e.normal.x*this.min.x),e.normal.y>0?(t+=e.normal.y*this.min.y,i+=e.normal.y*this.max.y):(t+=e.normal.y*this.max.y,i+=e.normal.y*this.min.y),e.normal.z>0?(t+=e.normal.z*this.min.z,i+=e.normal.z*this.max.z):(t+=e.normal.z*this.max.z,i+=e.normal.z*this.min.z),t<=-e.constant&&i>=-e.constant}intersectsTriangle(e){if(this.isEmpty())return!1;this.getCenter(_a),Zl.subVectors(this.max,_a),jr.subVectors(e.a,_a),qr.subVectors(e.b,_a),Kr.subVectors(e.c,_a),Ss.subVectors(qr,jr),As.subVectors(Kr,qr),sr.subVectors(jr,Kr);let t=[0,-Ss.z,Ss.y,0,-As.z,As.y,0,-sr.z,sr.y,Ss.z,0,-Ss.x,As.z,0,-As.x,sr.z,0,-sr.x,-Ss.y,Ss.x,0,-As.y,As.x,0,-sr.y,sr.x,0];return!Gu(t,jr,qr,Kr,Zl)||(t=[1,0,0,0,1,0,0,0,1],!Gu(t,jr,qr,Kr,Zl))?!1:(jl.crossVectors(Ss,As),t=[jl.x,jl.y,jl.z],Gu(t,jr,qr,Kr,Zl))}clampPoint(e,t){return t.copy(e).clamp(this.min,this.max)}distanceToPoint(e){return this.clampPoint(e,En).distanceTo(e)}getBoundingSphere(e){return this.isEmpty()?e.makeEmpty():(this.getCenter(e.center),e.radius=this.getSize(En).length()*.5),e}intersect(e){return this.min.max(e.min),this.max.min(e.max),this.isEmpty()&&this.makeEmpty(),this}union(e){return this.min.min(e.min),this.max.max(e.max),this}applyMatrix4(e){return this.isEmpty()?this:(Kn[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(e),Kn[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(e),Kn[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(e),Kn[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(e),Kn[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(e),Kn[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(e),Kn[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(e),Kn[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(e),this.setFromPoints(Kn),this)}translate(e){return this.min.add(e),this.max.add(e),this}equals(e){return e.min.equals(this.min)&&e.max.equals(this.max)}}const Kn=[new P,new P,new P,new P,new P,new P,new P,new P],En=new P,Xl=new je,jr=new P,qr=new P,Kr=new P,Ss=new P,As=new P,sr=new P,_a=new P,Zl=new P,jl=new P,rr=new P;function Gu(s,e,t,i,n){for(let r=0,o=s.length-3;r<=o;r+=3){rr.fromArray(s,r);const a=n.x*Math.abs(rr.x)+n.y*Math.abs(rr.y)+n.z*Math.abs(rr.z),l=e.dot(rr),c=t.dot(rr),h=i.dot(rr);if(Math.max(-Math.max(l,c,h),Math.min(l,c,h))>a)return!1}return!0}const vT=new je,va=new P,Hu=new P;class vi{constructor(e=new P,t=-1){this.isSphere=!0,this.center=e,this.radius=t}set(e,t){return this.center.copy(e),this.radius=t,this}setFromPoints(e,t){const i=this.center;t!==void 0?i.copy(t):vT.setFromPoints(e).getCenter(i);let n=0;for(let r=0,o=e.length;r<o;r++)n=Math.max(n,i.distanceToSquared(e[r]));return this.radius=Math.sqrt(n),this}copy(e){return this.center.copy(e.center),this.radius=e.radius,this}isEmpty(){return this.radius<0}makeEmpty(){return this.center.set(0,0,0),this.radius=-1,this}containsPoint(e){return e.distanceToSquared(this.center)<=this.radius*this.radius}distanceToPoint(e){return e.distanceTo(this.center)-this.radius}intersectsSphere(e){const t=this.radius+e.radius;return e.center.distanceToSquared(this.center)<=t*t}intersectsBox(e){return e.intersectsSphere(this)}intersectsPlane(e){return Math.abs(e.distanceToPoint(this.center))<=this.radius}clampPoint(e,t){const i=this.center.distanceToSquared(e);return t.copy(e),i>this.radius*this.radius&&(t.sub(this.center).normalize(),t.multiplyScalar(this.radius).add(this.center)),t}getBoundingBox(e){return this.isEmpty()?(e.makeEmpty(),e):(e.set(this.center,this.center),e.expandByScalar(this.radius),e)}applyMatrix4(e){return this.center.applyMatrix4(e),this.radius=this.radius*e.getMaxScaleOnAxis(),this}translate(e){return this.center.add(e),this}expandByPoint(e){if(this.isEmpty())return this.center.copy(e),this.radius=0,this;va.subVectors(e,this.center);const t=va.lengthSq();if(t>this.radius*this.radius){const i=Math.sqrt(t),n=(i-this.radius)*.5;this.center.addScaledVector(va,n/i),this.radius+=n}return this}union(e){return e.isEmpty()?this:this.isEmpty()?(this.copy(e),this):(this.center.equals(e.center)===!0?this.radius=Math.max(this.radius,e.radius):(Hu.subVectors(e.center,this.center).setLength(e.radius),this.expandByPoint(va.copy(e.center).add(Hu)),this.expandByPoint(va.copy(e.center).sub(Hu))),this)}equals(e){return e.center.equals(this.center)&&e.radius===this.radius}clone(){return new this.constructor().copy(this)}}const Qn=new P,Yu=new P,ql=new P,Rs=new P,Wu=new P,Kl=new P,Xu=new P;class da{constructor(e=new P,t=new P(0,0,-1)){this.origin=e,this.direction=t}set(e,t){return this.origin.copy(e),this.direction.copy(t),this}copy(e){return this.origin.copy(e.origin),this.direction.copy(e.direction),this}at(e,t){return t.copy(this.origin).addScaledVector(this.direction,e)}lookAt(e){return this.direction.copy(e).sub(this.origin).normalize(),this}recast(e){return this.origin.copy(this.at(e,Qn)),this}closestPointToPoint(e,t){t.subVectors(e,this.origin);const i=t.dot(this.direction);return i<0?t.copy(this.origin):t.copy(this.origin).addScaledVector(this.direction,i)}distanceToPoint(e){return Math.sqrt(this.distanceSqToPoint(e))}distanceSqToPoint(e){const t=Qn.subVectors(e,this.origin).dot(this.direction);return t<0?this.origin.distanceToSquared(e):(Qn.copy(this.origin).addScaledVector(this.direction,t),Qn.distanceToSquared(e))}distanceSqToSegment(e,t,i,n){Yu.copy(e).add(t).multiplyScalar(.5),ql.copy(t).sub(e).normalize(),Rs.copy(this.origin).sub(Yu);const r=e.distanceTo(t)*.5,o=-this.direction.dot(ql),a=Rs.dot(this.direction),l=-Rs.dot(ql),c=Rs.lengthSq(),h=Math.abs(1-o*o);let d,u,f,m;if(h>0)if(d=o*l-a,u=o*a-l,m=r*h,d>=0)if(u>=-m)if(u<=m){const g=1/h;d*=g,u*=g,f=d*(d+o*u+2*a)+u*(o*d+u+2*l)+c}else u=r,d=Math.max(0,-(o*u+a)),f=-d*d+u*(u+2*l)+c;else u=-r,d=Math.max(0,-(o*u+a)),f=-d*d+u*(u+2*l)+c;else u<=-m?(d=Math.max(0,-(-o*r+a)),u=d>0?-r:Math.min(Math.max(-r,-l),r),f=-d*d+u*(u+2*l)+c):u<=m?(d=0,u=Math.min(Math.max(-r,-l),r),f=u*(u+2*l)+c):(d=Math.max(0,-(o*r+a)),u=d>0?r:Math.min(Math.max(-r,-l),r),f=-d*d+u*(u+2*l)+c);else u=o>0?-r:r,d=Math.max(0,-(o*u+a)),f=-d*d+u*(u+2*l)+c;return i&&i.copy(this.origin).addScaledVector(this.direction,d),n&&n.copy(Yu).addScaledVector(ql,u),f}intersectSphere(e,t){Qn.subVectors(e.center,this.origin);const i=Qn.dot(this.direction),n=Qn.dot(Qn)-i*i,r=e.radius*e.radius;if(n>r)return null;const o=Math.sqrt(r-n),a=i-o,l=i+o;return l<0?null:a<0?this.at(l,t):this.at(a,t)}intersectsSphere(e){return this.distanceSqToPoint(e.center)<=e.radius*e.radius}distanceToPlane(e){const t=e.normal.dot(this.direction);if(t===0)return e.distanceToPoint(this.origin)===0?0:null;const i=-(this.origin.dot(e.normal)+e.constant)/t;return i>=0?i:null}intersectPlane(e,t){const i=this.distanceToPlane(e);return i===null?null:this.at(i,t)}intersectsPlane(e){const t=e.distanceToPoint(this.origin);return t===0||e.normal.dot(this.direction)*t<0}intersectBox(e,t){let i,n,r,o,a,l;const c=1/this.direction.x,h=1/this.direction.y,d=1/this.direction.z,u=this.origin;return c>=0?(i=(e.min.x-u.x)*c,n=(e.max.x-u.x)*c):(i=(e.max.x-u.x)*c,n=(e.min.x-u.x)*c),h>=0?(r=(e.min.y-u.y)*h,o=(e.max.y-u.y)*h):(r=(e.max.y-u.y)*h,o=(e.min.y-u.y)*h),i>o||r>n||((r>i||isNaN(i))&&(i=r),(o<n||isNaN(n))&&(n=o),d>=0?(a=(e.min.z-u.z)*d,l=(e.max.z-u.z)*d):(a=(e.max.z-u.z)*d,l=(e.min.z-u.z)*d),i>l||a>n)||((a>i||i!==i)&&(i=a),(l<n||n!==n)&&(n=l),n<0)?null:this.at(i>=0?i:n,t)}intersectsBox(e){return this.intersectBox(e,Qn)!==null}intersectTriangle(e,t,i,n,r){Wu.subVectors(t,e),Kl.subVectors(i,e),Xu.crossVectors(Wu,Kl);let o=this.direction.dot(Xu),a;if(o>0){if(n)return null;a=1}else if(o<0)a=-1,o=-o;else return null;Rs.subVectors(this.origin,e);const l=a*this.direction.dot(Kl.crossVectors(Rs,Kl));if(l<0)return null;const c=a*this.direction.dot(Wu.cross(Rs));if(c<0||l+c>o)return null;const h=-a*Rs.dot(Xu);return h<0?null:this.at(h/o,r)}applyMatrix4(e){return this.origin.applyMatrix4(e),this.direction.transformDirection(e),this}equals(e){return e.origin.equals(this.origin)&&e.direction.equals(this.direction)}clone(){return new this.constructor().copy(this)}}class _e{constructor(e,t,i,n,r,o,a,l,c,h,d,u,f,m,g,E){_e.prototype.isMatrix4=!0,this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],e!==void 0&&this.set(e,t,i,n,r,o,a,l,c,h,d,u,f,m,g,E)}set(e,t,i,n,r,o,a,l,c,h,d,u,f,m,g,E){const p=this.elements;return p[0]=e,p[4]=t,p[8]=i,p[12]=n,p[1]=r,p[5]=o,p[9]=a,p[13]=l,p[2]=c,p[6]=h,p[10]=d,p[14]=u,p[3]=f,p[7]=m,p[11]=g,p[15]=E,this}identity(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this}clone(){return new _e().fromArray(this.elements)}copy(e){const t=this.elements,i=e.elements;return t[0]=i[0],t[1]=i[1],t[2]=i[2],t[3]=i[3],t[4]=i[4],t[5]=i[5],t[6]=i[6],t[7]=i[7],t[8]=i[8],t[9]=i[9],t[10]=i[10],t[11]=i[11],t[12]=i[12],t[13]=i[13],t[14]=i[14],t[15]=i[15],this}copyPosition(e){const t=this.elements,i=e.elements;return t[12]=i[12],t[13]=i[13],t[14]=i[14],this}setFromMatrix3(e){const t=e.elements;return this.set(t[0],t[3],t[6],0,t[1],t[4],t[7],0,t[2],t[5],t[8],0,0,0,0,1),this}extractBasis(e,t,i){return e.setFromMatrixColumn(this,0),t.setFromMatrixColumn(this,1),i.setFromMatrixColumn(this,2),this}makeBasis(e,t,i){return this.set(e.x,t.x,i.x,0,e.y,t.y,i.y,0,e.z,t.z,i.z,0,0,0,0,1),this}extractRotation(e){const t=this.elements,i=e.elements,n=1/Qr.setFromMatrixColumn(e,0).length(),r=1/Qr.setFromMatrixColumn(e,1).length(),o=1/Qr.setFromMatrixColumn(e,2).length();return t[0]=i[0]*n,t[1]=i[1]*n,t[2]=i[2]*n,t[3]=0,t[4]=i[4]*r,t[5]=i[5]*r,t[6]=i[6]*r,t[7]=0,t[8]=i[8]*o,t[9]=i[9]*o,t[10]=i[10]*o,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromEuler(e){const t=this.elements,i=e.x,n=e.y,r=e.z,o=Math.cos(i),a=Math.sin(i),l=Math.cos(n),c=Math.sin(n),h=Math.cos(r),d=Math.sin(r);if(e.order==="XYZ"){const u=o*h,f=o*d,m=a*h,g=a*d;t[0]=l*h,t[4]=-l*d,t[8]=c,t[1]=f+m*c,t[5]=u-g*c,t[9]=-a*l,t[2]=g-u*c,t[6]=m+f*c,t[10]=o*l}else if(e.order==="YXZ"){const u=l*h,f=l*d,m=c*h,g=c*d;t[0]=u+g*a,t[4]=m*a-f,t[8]=o*c,t[1]=o*d,t[5]=o*h,t[9]=-a,t[2]=f*a-m,t[6]=g+u*a,t[10]=o*l}else if(e.order==="ZXY"){const u=l*h,f=l*d,m=c*h,g=c*d;t[0]=u-g*a,t[4]=-o*d,t[8]=m+f*a,t[1]=f+m*a,t[5]=o*h,t[9]=g-u*a,t[2]=-o*c,t[6]=a,t[10]=o*l}else if(e.order==="ZYX"){const u=o*h,f=o*d,m=a*h,g=a*d;t[0]=l*h,t[4]=m*c-f,t[8]=u*c+g,t[1]=l*d,t[5]=g*c+u,t[9]=f*c-m,t[2]=-c,t[6]=a*l,t[10]=o*l}else if(e.order==="YZX"){const u=o*l,f=o*c,m=a*l,g=a*c;t[0]=l*h,t[4]=g-u*d,t[8]=m*d+f,t[1]=d,t[5]=o*h,t[9]=-a*h,t[2]=-c*h,t[6]=f*d+m,t[10]=u-g*d}else if(e.order==="XZY"){const u=o*l,f=o*c,m=a*l,g=a*c;t[0]=l*h,t[4]=-d,t[8]=c*h,t[1]=u*d+g,t[5]=o*h,t[9]=f*d-m,t[2]=m*d-f,t[6]=a*h,t[10]=g*d+u}return t[3]=0,t[7]=0,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromQuaternion(e){return this.compose(bT,e,yT)}lookAt(e,t,i){const n=this.elements;return Ui.subVectors(e,t),Ui.lengthSq()===0&&(Ui.z=1),Ui.normalize(),Ms.crossVectors(i,Ui),Ms.lengthSq()===0&&(Math.abs(i.z)===1?Ui.x+=1e-4:Ui.z+=1e-4,Ui.normalize(),Ms.crossVectors(i,Ui)),Ms.normalize(),Ql.crossVectors(Ui,Ms),n[0]=Ms.x,n[4]=Ql.x,n[8]=Ui.x,n[1]=Ms.y,n[5]=Ql.y,n[9]=Ui.y,n[2]=Ms.z,n[6]=Ql.z,n[10]=Ui.z,this}multiply(e){return this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){const i=e.elements,n=t.elements,r=this.elements,o=i[0],a=i[4],l=i[8],c=i[12],h=i[1],d=i[5],u=i[9],f=i[13],m=i[2],g=i[6],E=i[10],p=i[14],v=i[3],I=i[7],_=i[11],b=i[15],T=n[0],w=n[4],A=n[8],y=n[12],C=n[1],M=n[5],R=n[9],L=n[13],S=n[2],U=n[6],z=n[10],k=n[14],H=n[3],Y=n[7],re=n[11],j=n[15];return r[0]=o*T+a*C+l*S+c*H,r[4]=o*w+a*M+l*U+c*Y,r[8]=o*A+a*R+l*z+c*re,r[12]=o*y+a*L+l*k+c*j,r[1]=h*T+d*C+u*S+f*H,r[5]=h*w+d*M+u*U+f*Y,r[9]=h*A+d*R+u*z+f*re,r[13]=h*y+d*L+u*k+f*j,r[2]=m*T+g*C+E*S+p*H,r[6]=m*w+g*M+E*U+p*Y,r[10]=m*A+g*R+E*z+p*re,r[14]=m*y+g*L+E*k+p*j,r[3]=v*T+I*C+_*S+b*H,r[7]=v*w+I*M+_*U+b*Y,r[11]=v*A+I*R+_*z+b*re,r[15]=v*y+I*L+_*k+b*j,this}multiplyScalar(e){const t=this.elements;return t[0]*=e,t[4]*=e,t[8]*=e,t[12]*=e,t[1]*=e,t[5]*=e,t[9]*=e,t[13]*=e,t[2]*=e,t[6]*=e,t[10]*=e,t[14]*=e,t[3]*=e,t[7]*=e,t[11]*=e,t[15]*=e,this}determinant(){const e=this.elements,t=e[0],i=e[4],n=e[8],r=e[12],o=e[1],a=e[5],l=e[9],c=e[13],h=e[2],d=e[6],u=e[10],f=e[14],m=e[3],g=e[7],E=e[11],p=e[15];return m*(+r*l*d-n*c*d-r*a*u+i*c*u+n*a*f-i*l*f)+g*(+t*l*f-t*c*u+r*o*u-n*o*f+n*c*h-r*l*h)+E*(+t*c*d-t*a*f-r*o*d+i*o*f+r*a*h-i*c*h)+p*(-n*a*h-t*l*d+t*a*u+n*o*d-i*o*u+i*l*h)}transpose(){const e=this.elements;let t;return t=e[1],e[1]=e[4],e[4]=t,t=e[2],e[2]=e[8],e[8]=t,t=e[6],e[6]=e[9],e[9]=t,t=e[3],e[3]=e[12],e[12]=t,t=e[7],e[7]=e[13],e[13]=t,t=e[11],e[11]=e[14],e[14]=t,this}setPosition(e,t,i){const n=this.elements;return e.isVector3?(n[12]=e.x,n[13]=e.y,n[14]=e.z):(n[12]=e,n[13]=t,n[14]=i),this}invert(){const e=this.elements,t=e[0],i=e[1],n=e[2],r=e[3],o=e[4],a=e[5],l=e[6],c=e[7],h=e[8],d=e[9],u=e[10],f=e[11],m=e[12],g=e[13],E=e[14],p=e[15],v=d*E*c-g*u*c+g*l*f-a*E*f-d*l*p+a*u*p,I=m*u*c-h*E*c-m*l*f+o*E*f+h*l*p-o*u*p,_=h*g*c-m*d*c+m*a*f-o*g*f-h*a*p+o*d*p,b=m*d*l-h*g*l-m*a*u+o*g*u+h*a*E-o*d*E,T=t*v+i*I+n*_+r*b;if(T===0)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);const w=1/T;return e[0]=v*w,e[1]=(g*u*r-d*E*r-g*n*f+i*E*f+d*n*p-i*u*p)*w,e[2]=(a*E*r-g*l*r+g*n*c-i*E*c-a*n*p+i*l*p)*w,e[3]=(d*l*r-a*u*r-d*n*c+i*u*c+a*n*f-i*l*f)*w,e[4]=I*w,e[5]=(h*E*r-m*u*r+m*n*f-t*E*f-h*n*p+t*u*p)*w,e[6]=(m*l*r-o*E*r-m*n*c+t*E*c+o*n*p-t*l*p)*w,e[7]=(o*u*r-h*l*r+h*n*c-t*u*c-o*n*f+t*l*f)*w,e[8]=_*w,e[9]=(m*d*r-h*g*r-m*i*f+t*g*f+h*i*p-t*d*p)*w,e[10]=(o*g*r-m*a*r+m*i*c-t*g*c-o*i*p+t*a*p)*w,e[11]=(h*a*r-o*d*r-h*i*c+t*d*c+o*i*f-t*a*f)*w,e[12]=b*w,e[13]=(h*g*n-m*d*n+m*i*u-t*g*u-h*i*E+t*d*E)*w,e[14]=(m*a*n-o*g*n-m*i*l+t*g*l+o*i*E-t*a*E)*w,e[15]=(o*d*n-h*a*n+h*i*l-t*d*l-o*i*u+t*a*u)*w,this}scale(e){const t=this.elements,i=e.x,n=e.y,r=e.z;return t[0]*=i,t[4]*=n,t[8]*=r,t[1]*=i,t[5]*=n,t[9]*=r,t[2]*=i,t[6]*=n,t[10]*=r,t[3]*=i,t[7]*=n,t[11]*=r,this}getMaxScaleOnAxis(){const e=this.elements,t=e[0]*e[0]+e[1]*e[1]+e[2]*e[2],i=e[4]*e[4]+e[5]*e[5]+e[6]*e[6],n=e[8]*e[8]+e[9]*e[9]+e[10]*e[10];return Math.sqrt(Math.max(t,i,n))}makeTranslation(e,t,i){return e.isVector3?this.set(1,0,0,e.x,0,1,0,e.y,0,0,1,e.z,0,0,0,1):this.set(1,0,0,e,0,1,0,t,0,0,1,i,0,0,0,1),this}makeRotationX(e){const t=Math.cos(e),i=Math.sin(e);return this.set(1,0,0,0,0,t,-i,0,0,i,t,0,0,0,0,1),this}makeRotationY(e){const t=Math.cos(e),i=Math.sin(e);return this.set(t,0,i,0,0,1,0,0,-i,0,t,0,0,0,0,1),this}makeRotationZ(e){const t=Math.cos(e),i=Math.sin(e);return this.set(t,-i,0,0,i,t,0,0,0,0,1,0,0,0,0,1),this}makeRotationAxis(e,t){const i=Math.cos(t),n=Math.sin(t),r=1-i,o=e.x,a=e.y,l=e.z,c=r*o,h=r*a;return this.set(c*o+i,c*a-n*l,c*l+n*a,0,c*a+n*l,h*a+i,h*l-n*o,0,c*l-n*a,h*l+n*o,r*l*l+i,0,0,0,0,1),this}makeScale(e,t,i){return this.set(e,0,0,0,0,t,0,0,0,0,i,0,0,0,0,1),this}makeShear(e,t,i,n,r,o){return this.set(1,i,r,0,e,1,o,0,t,n,1,0,0,0,0,1),this}compose(e,t,i){const n=this.elements,r=t._x,o=t._y,a=t._z,l=t._w,c=r+r,h=o+o,d=a+a,u=r*c,f=r*h,m=r*d,g=o*h,E=o*d,p=a*d,v=l*c,I=l*h,_=l*d,b=i.x,T=i.y,w=i.z;return n[0]=(1-(g+p))*b,n[1]=(f+_)*b,n[2]=(m-I)*b,n[3]=0,n[4]=(f-_)*T,n[5]=(1-(u+p))*T,n[6]=(E+v)*T,n[7]=0,n[8]=(m+I)*w,n[9]=(E-v)*w,n[10]=(1-(u+g))*w,n[11]=0,n[12]=e.x,n[13]=e.y,n[14]=e.z,n[15]=1,this}decompose(e,t,i){const n=this.elements;let r=Qr.set(n[0],n[1],n[2]).length();const o=Qr.set(n[4],n[5],n[6]).length(),a=Qr.set(n[8],n[9],n[10]).length();this.determinant()<0&&(r=-r),e.x=n[12],e.y=n[13],e.z=n[14],In.copy(this);const c=1/r,h=1/o,d=1/a;return In.elements[0]*=c,In.elements[1]*=c,In.elements[2]*=c,In.elements[4]*=h,In.elements[5]*=h,In.elements[6]*=h,In.elements[8]*=d,In.elements[9]*=d,In.elements[10]*=d,t.setFromRotationMatrix(In),i.x=r,i.y=o,i.z=a,this}makePerspective(e,t,i,n,r,o,a=ds){const l=this.elements,c=2*r/(t-e),h=2*r/(i-n),d=(t+e)/(t-e),u=(i+n)/(i-n);let f,m;if(a===ds)f=-(o+r)/(o-r),m=-2*o*r/(o-r);else if(a===Kh)f=-o/(o-r),m=-o*r/(o-r);else throw new Error("THREE.Matrix4.makePerspective(): Invalid coordinate system: "+a);return l[0]=c,l[4]=0,l[8]=d,l[12]=0,l[1]=0,l[5]=h,l[9]=u,l[13]=0,l[2]=0,l[6]=0,l[10]=f,l[14]=m,l[3]=0,l[7]=0,l[11]=-1,l[15]=0,this}makeOrthographic(e,t,i,n,r,o,a=ds){const l=this.elements,c=1/(t-e),h=1/(i-n),d=1/(o-r),u=(t+e)*c,f=(i+n)*h;let m,g;if(a===ds)m=(o+r)*d,g=-2*d;else if(a===Kh)m=r*d,g=-1*d;else throw new Error("THREE.Matrix4.makeOrthographic(): Invalid coordinate system: "+a);return l[0]=2*c,l[4]=0,l[8]=0,l[12]=-u,l[1]=0,l[5]=2*h,l[9]=0,l[13]=-f,l[2]=0,l[6]=0,l[10]=g,l[14]=-m,l[3]=0,l[7]=0,l[11]=0,l[15]=1,this}equals(e){const t=this.elements,i=e.elements;for(let n=0;n<16;n++)if(t[n]!==i[n])return!1;return!0}fromArray(e,t=0){for(let i=0;i<16;i++)this.elements[i]=e[i+t];return this}toArray(e=[],t=0){const i=this.elements;return e[t]=i[0],e[t+1]=i[1],e[t+2]=i[2],e[t+3]=i[3],e[t+4]=i[4],e[t+5]=i[5],e[t+6]=i[6],e[t+7]=i[7],e[t+8]=i[8],e[t+9]=i[9],e[t+10]=i[10],e[t+11]=i[11],e[t+12]=i[12],e[t+13]=i[13],e[t+14]=i[14],e[t+15]=i[15],e}}const Qr=new P,In=new _e,bT=new P(0,0,0),yT=new P(1,1,1),Ms=new P,Ql=new P,Ui=new P,Cg=new _e,xg=new fi;class Ki{constructor(e=0,t=0,i=0,n=Ki.DEFAULT_ORDER){this.isEuler=!0,this._x=e,this._y=t,this._z=i,this._order=n}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get order(){return this._order}set order(e){this._order=e,this._onChangeCallback()}set(e,t,i,n=this._order){return this._x=e,this._y=t,this._z=i,this._order=n,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._order)}copy(e){return this._x=e._x,this._y=e._y,this._z=e._z,this._order=e._order,this._onChangeCallback(),this}setFromRotationMatrix(e,t=this._order,i=!0){const n=e.elements,r=n[0],o=n[4],a=n[8],l=n[1],c=n[5],h=n[9],d=n[2],u=n[6],f=n[10];switch(t){case"XYZ":this._y=Math.asin(ot(a,-1,1)),Math.abs(a)<.9999999?(this._x=Math.atan2(-h,f),this._z=Math.atan2(-o,r)):(this._x=Math.atan2(u,c),this._z=0);break;case"YXZ":this._x=Math.asin(-ot(h,-1,1)),Math.abs(h)<.9999999?(this._y=Math.atan2(a,f),this._z=Math.atan2(l,c)):(this._y=Math.atan2(-d,r),this._z=0);break;case"ZXY":this._x=Math.asin(ot(u,-1,1)),Math.abs(u)<.9999999?(this._y=Math.atan2(-d,f),this._z=Math.atan2(-o,c)):(this._y=0,this._z=Math.atan2(l,r));break;case"ZYX":this._y=Math.asin(-ot(d,-1,1)),Math.abs(d)<.9999999?(this._x=Math.atan2(u,f),this._z=Math.atan2(l,r)):(this._x=0,this._z=Math.atan2(-o,c));break;case"YZX":this._z=Math.asin(ot(l,-1,1)),Math.abs(l)<.9999999?(this._x=Math.atan2(-h,c),this._y=Math.atan2(-d,r)):(this._x=0,this._y=Math.atan2(a,f));break;case"XZY":this._z=Math.asin(-ot(o,-1,1)),Math.abs(o)<.9999999?(this._x=Math.atan2(u,c),this._y=Math.atan2(a,r)):(this._x=Math.atan2(-h,f),this._y=0);break;default:console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: "+t)}return this._order=t,i===!0&&this._onChangeCallback(),this}setFromQuaternion(e,t,i){return Cg.makeRotationFromQuaternion(e),this.setFromRotationMatrix(Cg,t,i)}setFromVector3(e,t=this._order){return this.set(e.x,e.y,e.z,t)}reorder(e){return xg.setFromEuler(this),this.setFromQuaternion(xg,e)}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._order===this._order}fromArray(e){return this._x=e[0],this._y=e[1],this._z=e[2],e[3]!==void 0&&(this._order=e[3]),this._onChangeCallback(),this}toArray(e=[],t=0){return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._order,e}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._order}}Ki.DEFAULT_ORDER="XYZ";class Mm{constructor(){this.mask=1}set(e){this.mask=(1<<e|0)>>>0}enable(e){this.mask|=1<<e|0}enableAll(){this.mask=-1}toggle(e){this.mask^=1<<e|0}disable(e){this.mask&=~(1<<e|0)}disableAll(){this.mask=0}test(e){return(this.mask&e.mask)!==0}isEnabled(e){return(this.mask&(1<<e|0))!==0}}let TT=0;const wg=new P,Jr=new fi,Jn=new _e,Jl=new P,ba=new P,CT=new P,xT=new fi,Sg=new P(1,0,0),Ag=new P(0,1,0),Rg=new P(0,0,1),Mg={type:"added"},wT={type:"removed"},$r={type:"childadded",child:null},Zu={type:"childremoved",child:null};class Wt extends Gr{constructor(){super(),this.isObject3D=!0,Object.defineProperty(this,"id",{value:TT++}),this.uuid=Is(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=Wt.DEFAULT_UP.clone();const e=new P,t=new Ki,i=new fi,n=new P(1,1,1);function r(){i.setFromEuler(t,!1)}function o(){t.setFromQuaternion(i,void 0,!1)}t._onChange(r),i._onChange(o),Object.defineProperties(this,{position:{configurable:!0,enumerable:!0,value:e},rotation:{configurable:!0,enumerable:!0,value:t},quaternion:{configurable:!0,enumerable:!0,value:i},scale:{configurable:!0,enumerable:!0,value:n},modelViewMatrix:{value:new _e},normalMatrix:{value:new Xe}}),this.matrix=new _e,this.matrixWorld=new _e,this.matrixAutoUpdate=Wt.DEFAULT_MATRIX_AUTO_UPDATE,this.matrixWorldAutoUpdate=Wt.DEFAULT_MATRIX_WORLD_AUTO_UPDATE,this.matrixWorldNeedsUpdate=!1,this.layers=new Mm,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.animations=[],this.customDepthMaterial=void 0,this.customDistanceMaterial=void 0,this.userData={}}onBeforeShadow(){}onAfterShadow(){}onBeforeRender(){}onAfterRender(){}applyMatrix4(e){this.matrixAutoUpdate&&this.updateMatrix(),this.matrix.premultiply(e),this.matrix.decompose(this.position,this.quaternion,this.scale)}applyQuaternion(e){return this.quaternion.premultiply(e),this}setRotationFromAxisAngle(e,t){this.quaternion.setFromAxisAngle(e,t)}setRotationFromEuler(e){this.quaternion.setFromEuler(e,!0)}setRotationFromMatrix(e){this.quaternion.setFromRotationMatrix(e)}setRotationFromQuaternion(e){this.quaternion.copy(e)}rotateOnAxis(e,t){return Jr.setFromAxisAngle(e,t),this.quaternion.multiply(Jr),this}rotateOnWorldAxis(e,t){return Jr.setFromAxisAngle(e,t),this.quaternion.premultiply(Jr),this}rotateX(e){return this.rotateOnAxis(Sg,e)}rotateY(e){return this.rotateOnAxis(Ag,e)}rotateZ(e){return this.rotateOnAxis(Rg,e)}translateOnAxis(e,t){return wg.copy(e).applyQuaternion(this.quaternion),this.position.add(wg.multiplyScalar(t)),this}translateX(e){return this.translateOnAxis(Sg,e)}translateY(e){return this.translateOnAxis(Ag,e)}translateZ(e){return this.translateOnAxis(Rg,e)}localToWorld(e){return this.updateWorldMatrix(!0,!1),e.applyMatrix4(this.matrixWorld)}worldToLocal(e){return this.updateWorldMatrix(!0,!1),e.applyMatrix4(Jn.copy(this.matrixWorld).invert())}lookAt(e,t,i){e.isVector3?Jl.copy(e):Jl.set(e,t,i);const n=this.parent;this.updateWorldMatrix(!0,!1),ba.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?Jn.lookAt(ba,Jl,this.up):Jn.lookAt(Jl,ba,this.up),this.quaternion.setFromRotationMatrix(Jn),n&&(Jn.extractRotation(n.matrixWorld),Jr.setFromRotationMatrix(Jn),this.quaternion.premultiply(Jr.invert()))}add(e){if(arguments.length>1){for(let t=0;t<arguments.length;t++)this.add(arguments[t]);return this}return e===this?(console.error("THREE.Object3D.add: object can't be added as a child of itself.",e),this):(e&&e.isObject3D?(e.removeFromParent(),e.parent=this,this.children.push(e),e.dispatchEvent(Mg),$r.child=e,this.dispatchEvent($r),$r.child=null):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",e),this)}remove(e){if(arguments.length>1){for(let i=0;i<arguments.length;i++)this.remove(arguments[i]);return this}const t=this.children.indexOf(e);return t!==-1&&(e.parent=null,this.children.splice(t,1),e.dispatchEvent(wT),Zu.child=e,this.dispatchEvent(Zu),Zu.child=null),this}removeFromParent(){const e=this.parent;return e!==null&&e.remove(this),this}clear(){return this.remove(...this.children)}attach(e){return this.updateWorldMatrix(!0,!1),Jn.copy(this.matrixWorld).invert(),e.parent!==null&&(e.parent.updateWorldMatrix(!0,!1),Jn.multiply(e.parent.matrixWorld)),e.applyMatrix4(Jn),e.removeFromParent(),e.parent=this,this.children.push(e),e.updateWorldMatrix(!1,!0),e.dispatchEvent(Mg),$r.child=e,this.dispatchEvent($r),$r.child=null,this}getObjectById(e){return this.getObjectByProperty("id",e)}getObjectByName(e){return this.getObjectByProperty("name",e)}getObjectByProperty(e,t){if(this[e]===t)return this;for(let i=0,n=this.children.length;i<n;i++){const o=this.children[i].getObjectByProperty(e,t);if(o!==void 0)return o}}getObjectsByProperty(e,t,i=[]){this[e]===t&&i.push(this);const n=this.children;for(let r=0,o=n.length;r<o;r++)n[r].getObjectsByProperty(e,t,i);return i}getWorldPosition(e){return this.updateWorldMatrix(!0,!1),e.setFromMatrixPosition(this.matrixWorld)}getWorldQuaternion(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(ba,e,CT),e}getWorldScale(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(ba,xT,e),e}getWorldDirection(e){this.updateWorldMatrix(!0,!1);const t=this.matrixWorld.elements;return e.set(t[8],t[9],t[10]).normalize()}raycast(){}traverse(e){e(this);const t=this.children;for(let i=0,n=t.length;i<n;i++)t[i].traverse(e)}traverseVisible(e){if(this.visible===!1)return;e(this);const t=this.children;for(let i=0,n=t.length;i<n;i++)t[i].traverseVisible(e)}traverseAncestors(e){const t=this.parent;t!==null&&(e(t),t.traverseAncestors(e))}updateMatrix(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0}updateMatrixWorld(e){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||e)&&(this.matrixWorldAutoUpdate===!0&&(this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix)),this.matrixWorldNeedsUpdate=!1,e=!0);const t=this.children;for(let i=0,n=t.length;i<n;i++)t[i].updateMatrixWorld(e)}updateWorldMatrix(e,t){const i=this.parent;if(e===!0&&i!==null&&i.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),this.matrixWorldAutoUpdate===!0&&(this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix)),t===!0){const n=this.children;for(let r=0,o=n.length;r<o;r++)n[r].updateWorldMatrix(!1,!0)}}toJSON(e){const t=e===void 0||typeof e=="string",i={};t&&(e={geometries:{},materials:{},textures:{},images:{},shapes:{},skeletons:{},animations:{},nodes:{}},i.metadata={version:4.6,type:"Object",generator:"Object3D.toJSON"});const n={};n.uuid=this.uuid,n.type=this.type,this.name!==""&&(n.name=this.name),this.castShadow===!0&&(n.castShadow=!0),this.receiveShadow===!0&&(n.receiveShadow=!0),this.visible===!1&&(n.visible=!1),this.frustumCulled===!1&&(n.frustumCulled=!1),this.renderOrder!==0&&(n.renderOrder=this.renderOrder),Object.keys(this.userData).length>0&&(n.userData=this.userData),n.layers=this.layers.mask,n.matrix=this.matrix.toArray(),n.up=this.up.toArray(),this.matrixAutoUpdate===!1&&(n.matrixAutoUpdate=!1),this.isInstancedMesh&&(n.type="InstancedMesh",n.count=this.count,n.instanceMatrix=this.instanceMatrix.toJSON(),this.instanceColor!==null&&(n.instanceColor=this.instanceColor.toJSON())),this.isBatchedMesh&&(n.type="BatchedMesh",n.perObjectFrustumCulled=this.perObjectFrustumCulled,n.sortObjects=this.sortObjects,n.drawRanges=this._drawRanges,n.reservedRanges=this._reservedRanges,n.visibility=this._visibility,n.active=this._active,n.bounds=this._bounds.map(a=>({boxInitialized:a.boxInitialized,boxMin:a.box.min.toArray(),boxMax:a.box.max.toArray(),sphereInitialized:a.sphereInitialized,sphereRadius:a.sphere.radius,sphereCenter:a.sphere.center.toArray()})),n.maxInstanceCount=this._maxInstanceCount,n.maxVertexCount=this._maxVertexCount,n.maxIndexCount=this._maxIndexCount,n.geometryInitialized=this._geometryInitialized,n.geometryCount=this._geometryCount,n.matricesTexture=this._matricesTexture.toJSON(e),this._colorsTexture!==null&&(n.colorsTexture=this._colorsTexture.toJSON(e)),this.boundingSphere!==null&&(n.boundingSphere={center:n.boundingSphere.center.toArray(),radius:n.boundingSphere.radius}),this.boundingBox!==null&&(n.boundingBox={min:n.boundingBox.min.toArray(),max:n.boundingBox.max.toArray()}));function r(a,l){return a[l.uuid]===void 0&&(a[l.uuid]=l.toJSON(e)),l.uuid}if(this.isScene)this.background&&(this.background.isColor?n.background=this.background.toJSON():this.background.isTexture&&(n.background=this.background.toJSON(e).uuid)),this.environment&&this.environment.isTexture&&this.environment.isRenderTargetTexture!==!0&&(n.environment=this.environment.toJSON(e).uuid);else if(this.isMesh||this.isLine||this.isPoints){n.geometry=r(e.geometries,this.geometry);const a=this.geometry.parameters;if(a!==void 0&&a.shapes!==void 0){const l=a.shapes;if(Array.isArray(l))for(let c=0,h=l.length;c<h;c++){const d=l[c];r(e.shapes,d)}else r(e.shapes,l)}}if(this.isSkinnedMesh&&(n.bindMode=this.bindMode,n.bindMatrix=this.bindMatrix.toArray(),this.skeleton!==void 0&&(r(e.skeletons,this.skeleton),n.skeleton=this.skeleton.uuid)),this.material!==void 0)if(Array.isArray(this.material)){const a=[];for(let l=0,c=this.material.length;l<c;l++)a.push(r(e.materials,this.material[l]));n.material=a}else n.material=r(e.materials,this.material);if(this.children.length>0){n.children=[];for(let a=0;a<this.children.length;a++)n.children.push(this.children[a].toJSON(e).object)}if(this.animations.length>0){n.animations=[];for(let a=0;a<this.animations.length;a++){const l=this.animations[a];n.animations.push(r(e.animations,l))}}if(t){const a=o(e.geometries),l=o(e.materials),c=o(e.textures),h=o(e.images),d=o(e.shapes),u=o(e.skeletons),f=o(e.animations),m=o(e.nodes);a.length>0&&(i.geometries=a),l.length>0&&(i.materials=l),c.length>0&&(i.textures=c),h.length>0&&(i.images=h),d.length>0&&(i.shapes=d),u.length>0&&(i.skeletons=u),f.length>0&&(i.animations=f),m.length>0&&(i.nodes=m)}return i.object=n,i;function o(a){const l=[];for(const c in a){const h=a[c];delete h.metadata,l.push(h)}return l}}clone(e){return new this.constructor().copy(this,e)}copy(e,t=!0){if(this.name=e.name,this.up.copy(e.up),this.position.copy(e.position),this.rotation.order=e.rotation.order,this.quaternion.copy(e.quaternion),this.scale.copy(e.scale),this.matrix.copy(e.matrix),this.matrixWorld.copy(e.matrixWorld),this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrixWorldAutoUpdate=e.matrixWorldAutoUpdate,this.matrixWorldNeedsUpdate=e.matrixWorldNeedsUpdate,this.layers.mask=e.layers.mask,this.visible=e.visible,this.castShadow=e.castShadow,this.receiveShadow=e.receiveShadow,this.frustumCulled=e.frustumCulled,this.renderOrder=e.renderOrder,this.animations=e.animations.slice(),this.userData=JSON.parse(JSON.stringify(e.userData)),t===!0)for(let i=0;i<e.children.length;i++){const n=e.children[i];this.add(n.clone())}return this}}Wt.DEFAULT_UP=new P(0,1,0);Wt.DEFAULT_MATRIX_AUTO_UPDATE=!0;Wt.DEFAULT_MATRIX_WORLD_AUTO_UPDATE=!0;const _n=new P,$n=new P,ju=new P,es=new P,eo=new P,to=new P,Fg=new P,qu=new P,Ku=new P,Qu=new P,Ju=new ct,$u=new ct,ed=new ct;class Ft{constructor(e=new P,t=new P,i=new P){this.a=e,this.b=t,this.c=i}static getNormal(e,t,i,n){n.subVectors(i,t),_n.subVectors(e,t),n.cross(_n);const r=n.lengthSq();return r>0?n.multiplyScalar(1/Math.sqrt(r)):n.set(0,0,0)}static getBarycoord(e,t,i,n,r){_n.subVectors(n,t),$n.subVectors(i,t),ju.subVectors(e,t);const o=_n.dot(_n),a=_n.dot($n),l=_n.dot(ju),c=$n.dot($n),h=$n.dot(ju),d=o*c-a*a;if(d===0)return r.set(0,0,0),null;const u=1/d,f=(c*l-a*h)*u,m=(o*h-a*l)*u;return r.set(1-f-m,m,f)}static containsPoint(e,t,i,n){return this.getBarycoord(e,t,i,n,es)===null?!1:es.x>=0&&es.y>=0&&es.x+es.y<=1}static getInterpolation(e,t,i,n,r,o,a,l){return this.getBarycoord(e,t,i,n,es)===null?(l.x=0,l.y=0,"z"in l&&(l.z=0),"w"in l&&(l.w=0),null):(l.setScalar(0),l.addScaledVector(r,es.x),l.addScaledVector(o,es.y),l.addScaledVector(a,es.z),l)}static getInterpolatedAttribute(e,t,i,n,r,o){return Ju.setScalar(0),$u.setScalar(0),ed.setScalar(0),Ju.fromBufferAttribute(e,t),$u.fromBufferAttribute(e,i),ed.fromBufferAttribute(e,n),o.setScalar(0),o.addScaledVector(Ju,r.x),o.addScaledVector($u,r.y),o.addScaledVector(ed,r.z),o}static isFrontFacing(e,t,i,n){return _n.subVectors(i,t),$n.subVectors(e,t),_n.cross($n).dot(n)<0}set(e,t,i){return this.a.copy(e),this.b.copy(t),this.c.copy(i),this}setFromPointsAndIndices(e,t,i,n){return this.a.copy(e[t]),this.b.copy(e[i]),this.c.copy(e[n]),this}setFromAttributeAndIndices(e,t,i,n){return this.a.fromBufferAttribute(e,t),this.b.fromBufferAttribute(e,i),this.c.fromBufferAttribute(e,n),this}clone(){return new this.constructor().copy(this)}copy(e){return this.a.copy(e.a),this.b.copy(e.b),this.c.copy(e.c),this}getArea(){return _n.subVectors(this.c,this.b),$n.subVectors(this.a,this.b),_n.cross($n).length()*.5}getMidpoint(e){return e.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)}getNormal(e){return Ft.getNormal(this.a,this.b,this.c,e)}getPlane(e){return e.setFromCoplanarPoints(this.a,this.b,this.c)}getBarycoord(e,t){return Ft.getBarycoord(e,this.a,this.b,this.c,t)}getInterpolation(e,t,i,n,r){return Ft.getInterpolation(e,this.a,this.b,this.c,t,i,n,r)}containsPoint(e){return Ft.containsPoint(e,this.a,this.b,this.c)}isFrontFacing(e){return Ft.isFrontFacing(this.a,this.b,this.c,e)}intersectsBox(e){return e.intersectsTriangle(this)}closestPointToPoint(e,t){const i=this.a,n=this.b,r=this.c;let o,a;eo.subVectors(n,i),to.subVectors(r,i),qu.subVectors(e,i);const l=eo.dot(qu),c=to.dot(qu);if(l<=0&&c<=0)return t.copy(i);Ku.subVectors(e,n);const h=eo.dot(Ku),d=to.dot(Ku);if(h>=0&&d<=h)return t.copy(n);const u=l*d-h*c;if(u<=0&&l>=0&&h<=0)return o=l/(l-h),t.copy(i).addScaledVector(eo,o);Qu.subVectors(e,r);const f=eo.dot(Qu),m=to.dot(Qu);if(m>=0&&f<=m)return t.copy(r);const g=f*c-l*m;if(g<=0&&c>=0&&m<=0)return a=c/(c-m),t.copy(i).addScaledVector(to,a);const E=h*m-f*d;if(E<=0&&d-h>=0&&f-m>=0)return Fg.subVectors(r,n),a=(d-h)/(d-h+(f-m)),t.copy(n).addScaledVector(Fg,a);const p=1/(E+g+u);return o=g*p,a=u*p,t.copy(i).addScaledVector(eo,o).addScaledVector(to,a)}equals(e){return e.a.equals(this.a)&&e.b.equals(this.b)&&e.c.equals(this.c)}}const VI={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},Fs={h:0,s:0,l:0},$l={h:0,s:0,l:0};function td(s,e,t){return t<0&&(t+=1),t>1&&(t-=1),t<1/6?s+(e-s)*6*t:t<1/2?e:t<2/3?s+(e-s)*6*(2/3-t):s}class Ne{constructor(e,t,i){return this.isColor=!0,this.r=1,this.g=1,this.b=1,this.set(e,t,i)}set(e,t,i){if(t===void 0&&i===void 0){const n=e;n&&n.isColor?this.copy(n):typeof n=="number"?this.setHex(n):typeof n=="string"&&this.setStyle(n)}else this.setRGB(e,t,i);return this}setScalar(e){return this.r=e,this.g=e,this.b=e,this}setHex(e,t=tn){return e=Math.floor(e),this.r=(e>>16&255)/255,this.g=(e>>8&255)/255,this.b=(e&255)/255,nt.toWorkingColorSpace(this,t),this}setRGB(e,t,i,n=nt.workingColorSpace){return this.r=e,this.g=t,this.b=i,nt.toWorkingColorSpace(this,n),this}setHSL(e,t,i,n=nt.workingColorSpace){if(e=Am(e,1),t=ot(t,0,1),i=ot(i,0,1),t===0)this.r=this.g=this.b=i;else{const r=i<=.5?i*(1+t):i+t-i*t,o=2*i-r;this.r=td(o,r,e+1/3),this.g=td(o,r,e),this.b=td(o,r,e-1/3)}return nt.toWorkingColorSpace(this,n),this}setStyle(e,t=tn){function i(r){r!==void 0&&parseFloat(r)<1&&console.warn("THREE.Color: Alpha component of "+e+" will be ignored.")}let n;if(n=/^(\w+)\(([^\)]*)\)/.exec(e)){let r;const o=n[1],a=n[2];switch(o){case"rgb":case"rgba":if(r=/^\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(a))return i(r[4]),this.setRGB(Math.min(255,parseInt(r[1],10))/255,Math.min(255,parseInt(r[2],10))/255,Math.min(255,parseInt(r[3],10))/255,t);if(r=/^\s*(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(a))return i(r[4]),this.setRGB(Math.min(100,parseInt(r[1],10))/100,Math.min(100,parseInt(r[2],10))/100,Math.min(100,parseInt(r[3],10))/100,t);break;case"hsl":case"hsla":if(r=/^\s*(\d*\.?\d+)\s*,\s*(\d*\.?\d+)\%\s*,\s*(\d*\.?\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(a))return i(r[4]),this.setHSL(parseFloat(r[1])/360,parseFloat(r[2])/100,parseFloat(r[3])/100,t);break;default:console.warn("THREE.Color: Unknown color model "+e)}}else if(n=/^\#([A-Fa-f\d]+)$/.exec(e)){const r=n[1],o=r.length;if(o===3)return this.setRGB(parseInt(r.charAt(0),16)/15,parseInt(r.charAt(1),16)/15,parseInt(r.charAt(2),16)/15,t);if(o===6)return this.setHex(parseInt(r,16),t);console.warn("THREE.Color: Invalid hex color "+e)}else if(e&&e.length>0)return this.setColorName(e,t);return this}setColorName(e,t=tn){const i=VI[e.toLowerCase()];return i!==void 0?this.setHex(i,t):console.warn("THREE.Color: Unknown color "+e),this}clone(){return new this.constructor(this.r,this.g,this.b)}copy(e){return this.r=e.r,this.g=e.g,this.b=e.b,this}copySRGBToLinear(e){return this.r=_s(e.r),this.g=_s(e.g),this.b=_s(e.b),this}copyLinearToSRGB(e){return this.r=qo(e.r),this.g=qo(e.g),this.b=qo(e.b),this}convertSRGBToLinear(){return this.copySRGBToLinear(this),this}convertLinearToSRGB(){return this.copyLinearToSRGB(this),this}getHex(e=tn){return nt.fromWorkingColorSpace(gi.copy(this),e),Math.round(ot(gi.r*255,0,255))*65536+Math.round(ot(gi.g*255,0,255))*256+Math.round(ot(gi.b*255,0,255))}getHexString(e=tn){return("000000"+this.getHex(e).toString(16)).slice(-6)}getHSL(e,t=nt.workingColorSpace){nt.fromWorkingColorSpace(gi.copy(this),t);const i=gi.r,n=gi.g,r=gi.b,o=Math.max(i,n,r),a=Math.min(i,n,r);let l,c;const h=(a+o)/2;if(a===o)l=0,c=0;else{const d=o-a;switch(c=h<=.5?d/(o+a):d/(2-o-a),o){case i:l=(n-r)/d+(n<r?6:0);break;case n:l=(r-i)/d+2;break;case r:l=(i-n)/d+4;break}l/=6}return e.h=l,e.s=c,e.l=h,e}getRGB(e,t=nt.workingColorSpace){return nt.fromWorkingColorSpace(gi.copy(this),t),e.r=gi.r,e.g=gi.g,e.b=gi.b,e}getStyle(e=tn){nt.fromWorkingColorSpace(gi.copy(this),e);const t=gi.r,i=gi.g,n=gi.b;return e!==tn?`color(${e} ${t.toFixed(3)} ${i.toFixed(3)} ${n.toFixed(3)})`:`rgb(${Math.round(t*255)},${Math.round(i*255)},${Math.round(n*255)})`}offsetHSL(e,t,i){return this.getHSL(Fs),this.setHSL(Fs.h+e,Fs.s+t,Fs.l+i)}add(e){return this.r+=e.r,this.g+=e.g,this.b+=e.b,this}addColors(e,t){return this.r=e.r+t.r,this.g=e.g+t.g,this.b=e.b+t.b,this}addScalar(e){return this.r+=e,this.g+=e,this.b+=e,this}sub(e){return this.r=Math.max(0,this.r-e.r),this.g=Math.max(0,this.g-e.g),this.b=Math.max(0,this.b-e.b),this}multiply(e){return this.r*=e.r,this.g*=e.g,this.b*=e.b,this}multiplyScalar(e){return this.r*=e,this.g*=e,this.b*=e,this}lerp(e,t){return this.r+=(e.r-this.r)*t,this.g+=(e.g-this.g)*t,this.b+=(e.b-this.b)*t,this}lerpColors(e,t,i){return this.r=e.r+(t.r-e.r)*i,this.g=e.g+(t.g-e.g)*i,this.b=e.b+(t.b-e.b)*i,this}lerpHSL(e,t){this.getHSL(Fs),e.getHSL($l);const i=sl(Fs.h,$l.h,t),n=sl(Fs.s,$l.s,t),r=sl(Fs.l,$l.l,t);return this.setHSL(i,n,r),this}setFromVector3(e){return this.r=e.x,this.g=e.y,this.b=e.z,this}applyMatrix3(e){const t=this.r,i=this.g,n=this.b,r=e.elements;return this.r=r[0]*t+r[3]*i+r[6]*n,this.g=r[1]*t+r[4]*i+r[7]*n,this.b=r[2]*t+r[5]*i+r[8]*n,this}equals(e){return e.r===this.r&&e.g===this.g&&e.b===this.b}fromArray(e,t=0){return this.r=e[t],this.g=e[t+1],this.b=e[t+2],this}toArray(e=[],t=0){return e[t]=this.r,e[t+1]=this.g,e[t+2]=this.b,e}fromBufferAttribute(e,t){return this.r=e.getX(t),this.g=e.getY(t),this.b=e.getZ(t),this}toJSON(){return this.getHex()}*[Symbol.iterator](){yield this.r,yield this.g,yield this.b}}const gi=new Ne;Ne.NAMES=VI;let ST=0;class $s extends Gr{constructor(){super(),this.isMaterial=!0,Object.defineProperty(this,"id",{value:ST++}),this.uuid=Is(),this.name="",this.type="Material",this.blending=Zo,this.side=pn,this.vertexColors=!1,this.opacity=1,this.transparent=!1,this.alphaHash=!1,this.blendSrc=gf,this.blendDst=Ef,this.blendEquation=br,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.blendColor=new Ne(0,0,0),this.blendAlpha=0,this.depthFunc=$o,this.depthTest=!0,this.depthWrite=!0,this.stencilWriteMask=255,this.stencilFunc=Eg,this.stencilRef=0,this.stencilFuncMask=255,this.stencilFail=Xr,this.stencilZFail=Xr,this.stencilZPass=Xr,this.stencilWrite=!1,this.clippingPlanes=null,this.clipIntersection=!1,this.clipShadows=!1,this.shadowSide=null,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.dithering=!1,this.alphaToCoverage=!1,this.premultipliedAlpha=!1,this.forceSinglePass=!1,this.allowOverride=!0,this.visible=!0,this.toneMapped=!0,this.userData={},this.version=0,this._alphaTest=0}get alphaTest(){return this._alphaTest}set alphaTest(e){this._alphaTest>0!=e>0&&this.version++,this._alphaTest=e}onBeforeRender(){}onBeforeCompile(){}customProgramCacheKey(){return this.onBeforeCompile.toString()}setValues(e){if(e!==void 0)for(const t in e){const i=e[t];if(i===void 0){console.warn(`THREE.Material: parameter '${t}' has value of undefined.`);continue}const n=this[t];if(n===void 0){console.warn(`THREE.Material: '${t}' is not a property of THREE.${this.type}.`);continue}n&&n.isColor?n.set(i):n&&n.isVector3&&i&&i.isVector3?n.copy(i):this[t]=i}}toJSON(e){const t=e===void 0||typeof e=="string";t&&(e={textures:{},images:{}});const i={metadata:{version:4.6,type:"Material",generator:"Material.toJSON"}};i.uuid=this.uuid,i.type=this.type,this.name!==""&&(i.name=this.name),this.color&&this.color.isColor&&(i.color=this.color.getHex()),this.roughness!==void 0&&(i.roughness=this.roughness),this.metalness!==void 0&&(i.metalness=this.metalness),this.sheen!==void 0&&(i.sheen=this.sheen),this.sheenColor&&this.sheenColor.isColor&&(i.sheenColor=this.sheenColor.getHex()),this.sheenRoughness!==void 0&&(i.sheenRoughness=this.sheenRoughness),this.emissive&&this.emissive.isColor&&(i.emissive=this.emissive.getHex()),this.emissiveIntensity!==void 0&&this.emissiveIntensity!==1&&(i.emissiveIntensity=this.emissiveIntensity),this.specular&&this.specular.isColor&&(i.specular=this.specular.getHex()),this.specularIntensity!==void 0&&(i.specularIntensity=this.specularIntensity),this.specularColor&&this.specularColor.isColor&&(i.specularColor=this.specularColor.getHex()),this.shininess!==void 0&&(i.shininess=this.shininess),this.clearcoat!==void 0&&(i.clearcoat=this.clearcoat),this.clearcoatRoughness!==void 0&&(i.clearcoatRoughness=this.clearcoatRoughness),this.clearcoatMap&&this.clearcoatMap.isTexture&&(i.clearcoatMap=this.clearcoatMap.toJSON(e).uuid),this.clearcoatRoughnessMap&&this.clearcoatRoughnessMap.isTexture&&(i.clearcoatRoughnessMap=this.clearcoatRoughnessMap.toJSON(e).uuid),this.clearcoatNormalMap&&this.clearcoatNormalMap.isTexture&&(i.clearcoatNormalMap=this.clearcoatNormalMap.toJSON(e).uuid,i.clearcoatNormalScale=this.clearcoatNormalScale.toArray()),this.dispersion!==void 0&&(i.dispersion=this.dispersion),this.iridescence!==void 0&&(i.iridescence=this.iridescence),this.iridescenceIOR!==void 0&&(i.iridescenceIOR=this.iridescenceIOR),this.iridescenceThicknessRange!==void 0&&(i.iridescenceThicknessRange=this.iridescenceThicknessRange),this.iridescenceMap&&this.iridescenceMap.isTexture&&(i.iridescenceMap=this.iridescenceMap.toJSON(e).uuid),this.iridescenceThicknessMap&&this.iridescenceThicknessMap.isTexture&&(i.iridescenceThicknessMap=this.iridescenceThicknessMap.toJSON(e).uuid),this.anisotropy!==void 0&&(i.anisotropy=this.anisotropy),this.anisotropyRotation!==void 0&&(i.anisotropyRotation=this.anisotropyRotation),this.anisotropyMap&&this.anisotropyMap.isTexture&&(i.anisotropyMap=this.anisotropyMap.toJSON(e).uuid),this.map&&this.map.isTexture&&(i.map=this.map.toJSON(e).uuid),this.matcap&&this.matcap.isTexture&&(i.matcap=this.matcap.toJSON(e).uuid),this.alphaMap&&this.alphaMap.isTexture&&(i.alphaMap=this.alphaMap.toJSON(e).uuid),this.lightMap&&this.lightMap.isTexture&&(i.lightMap=this.lightMap.toJSON(e).uuid,i.lightMapIntensity=this.lightMapIntensity),this.aoMap&&this.aoMap.isTexture&&(i.aoMap=this.aoMap.toJSON(e).uuid,i.aoMapIntensity=this.aoMapIntensity),this.bumpMap&&this.bumpMap.isTexture&&(i.bumpMap=this.bumpMap.toJSON(e).uuid,i.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(i.normalMap=this.normalMap.toJSON(e).uuid,i.normalMapType=this.normalMapType,i.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(i.displacementMap=this.displacementMap.toJSON(e).uuid,i.displacementScale=this.displacementScale,i.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(i.roughnessMap=this.roughnessMap.toJSON(e).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(i.metalnessMap=this.metalnessMap.toJSON(e).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(i.emissiveMap=this.emissiveMap.toJSON(e).uuid),this.specularMap&&this.specularMap.isTexture&&(i.specularMap=this.specularMap.toJSON(e).uuid),this.specularIntensityMap&&this.specularIntensityMap.isTexture&&(i.specularIntensityMap=this.specularIntensityMap.toJSON(e).uuid),this.specularColorMap&&this.specularColorMap.isTexture&&(i.specularColorMap=this.specularColorMap.toJSON(e).uuid),this.envMap&&this.envMap.isTexture&&(i.envMap=this.envMap.toJSON(e).uuid,this.combine!==void 0&&(i.combine=this.combine)),this.envMapRotation!==void 0&&(i.envMapRotation=this.envMapRotation.toArray()),this.envMapIntensity!==void 0&&(i.envMapIntensity=this.envMapIntensity),this.reflectivity!==void 0&&(i.reflectivity=this.reflectivity),this.refractionRatio!==void 0&&(i.refractionRatio=this.refractionRatio),this.gradientMap&&this.gradientMap.isTexture&&(i.gradientMap=this.gradientMap.toJSON(e).uuid),this.transmission!==void 0&&(i.transmission=this.transmission),this.transmissionMap&&this.transmissionMap.isTexture&&(i.transmissionMap=this.transmissionMap.toJSON(e).uuid),this.thickness!==void 0&&(i.thickness=this.thickness),this.thicknessMap&&this.thicknessMap.isTexture&&(i.thicknessMap=this.thicknessMap.toJSON(e).uuid),this.attenuationDistance!==void 0&&this.attenuationDistance!==1/0&&(i.attenuationDistance=this.attenuationDistance),this.attenuationColor!==void 0&&(i.attenuationColor=this.attenuationColor.getHex()),this.size!==void 0&&(i.size=this.size),this.shadowSide!==null&&(i.shadowSide=this.shadowSide),this.sizeAttenuation!==void 0&&(i.sizeAttenuation=this.sizeAttenuation),this.blending!==Zo&&(i.blending=this.blending),this.side!==pn&&(i.side=this.side),this.vertexColors===!0&&(i.vertexColors=!0),this.opacity<1&&(i.opacity=this.opacity),this.transparent===!0&&(i.transparent=!0),this.blendSrc!==gf&&(i.blendSrc=this.blendSrc),this.blendDst!==Ef&&(i.blendDst=this.blendDst),this.blendEquation!==br&&(i.blendEquation=this.blendEquation),this.blendSrcAlpha!==null&&(i.blendSrcAlpha=this.blendSrcAlpha),this.blendDstAlpha!==null&&(i.blendDstAlpha=this.blendDstAlpha),this.blendEquationAlpha!==null&&(i.blendEquationAlpha=this.blendEquationAlpha),this.blendColor&&this.blendColor.isColor&&(i.blendColor=this.blendColor.getHex()),this.blendAlpha!==0&&(i.blendAlpha=this.blendAlpha),this.depthFunc!==$o&&(i.depthFunc=this.depthFunc),this.depthTest===!1&&(i.depthTest=this.depthTest),this.depthWrite===!1&&(i.depthWrite=this.depthWrite),this.colorWrite===!1&&(i.colorWrite=this.colorWrite),this.stencilWriteMask!==255&&(i.stencilWriteMask=this.stencilWriteMask),this.stencilFunc!==Eg&&(i.stencilFunc=this.stencilFunc),this.stencilRef!==0&&(i.stencilRef=this.stencilRef),this.stencilFuncMask!==255&&(i.stencilFuncMask=this.stencilFuncMask),this.stencilFail!==Xr&&(i.stencilFail=this.stencilFail),this.stencilZFail!==Xr&&(i.stencilZFail=this.stencilZFail),this.stencilZPass!==Xr&&(i.stencilZPass=this.stencilZPass),this.stencilWrite===!0&&(i.stencilWrite=this.stencilWrite),this.rotation!==void 0&&this.rotation!==0&&(i.rotation=this.rotation),this.polygonOffset===!0&&(i.polygonOffset=!0),this.polygonOffsetFactor!==0&&(i.polygonOffsetFactor=this.polygonOffsetFactor),this.polygonOffsetUnits!==0&&(i.polygonOffsetUnits=this.polygonOffsetUnits),this.linewidth!==void 0&&this.linewidth!==1&&(i.linewidth=this.linewidth),this.dashSize!==void 0&&(i.dashSize=this.dashSize),this.gapSize!==void 0&&(i.gapSize=this.gapSize),this.scale!==void 0&&(i.scale=this.scale),this.dithering===!0&&(i.dithering=!0),this.alphaTest>0&&(i.alphaTest=this.alphaTest),this.alphaHash===!0&&(i.alphaHash=!0),this.alphaToCoverage===!0&&(i.alphaToCoverage=!0),this.premultipliedAlpha===!0&&(i.premultipliedAlpha=!0),this.forceSinglePass===!0&&(i.forceSinglePass=!0),this.wireframe===!0&&(i.wireframe=!0),this.wireframeLinewidth>1&&(i.wireframeLinewidth=this.wireframeLinewidth),this.wireframeLinecap!=="round"&&(i.wireframeLinecap=this.wireframeLinecap),this.wireframeLinejoin!=="round"&&(i.wireframeLinejoin=this.wireframeLinejoin),this.flatShading===!0&&(i.flatShading=!0),this.visible===!1&&(i.visible=!1),this.toneMapped===!1&&(i.toneMapped=!1),this.fog===!1&&(i.fog=!1),Object.keys(this.userData).length>0&&(i.userData=this.userData);function n(r){const o=[];for(const a in r){const l=r[a];delete l.metadata,o.push(l)}return o}if(t){const r=n(e.textures),o=n(e.images);r.length>0&&(i.textures=r),o.length>0&&(i.images=o)}return i}clone(){return new this.constructor().copy(this)}copy(e){this.name=e.name,this.blending=e.blending,this.side=e.side,this.vertexColors=e.vertexColors,this.opacity=e.opacity,this.transparent=e.transparent,this.blendSrc=e.blendSrc,this.blendDst=e.blendDst,this.blendEquation=e.blendEquation,this.blendSrcAlpha=e.blendSrcAlpha,this.blendDstAlpha=e.blendDstAlpha,this.blendEquationAlpha=e.blendEquationAlpha,this.blendColor.copy(e.blendColor),this.blendAlpha=e.blendAlpha,this.depthFunc=e.depthFunc,this.depthTest=e.depthTest,this.depthWrite=e.depthWrite,this.stencilWriteMask=e.stencilWriteMask,this.stencilFunc=e.stencilFunc,this.stencilRef=e.stencilRef,this.stencilFuncMask=e.stencilFuncMask,this.stencilFail=e.stencilFail,this.stencilZFail=e.stencilZFail,this.stencilZPass=e.stencilZPass,this.stencilWrite=e.stencilWrite;const t=e.clippingPlanes;let i=null;if(t!==null){const n=t.length;i=new Array(n);for(let r=0;r!==n;++r)i[r]=t[r].clone()}return this.clippingPlanes=i,this.clipIntersection=e.clipIntersection,this.clipShadows=e.clipShadows,this.shadowSide=e.shadowSide,this.colorWrite=e.colorWrite,this.precision=e.precision,this.polygonOffset=e.polygonOffset,this.polygonOffsetFactor=e.polygonOffsetFactor,this.polygonOffsetUnits=e.polygonOffsetUnits,this.dithering=e.dithering,this.alphaTest=e.alphaTest,this.alphaHash=e.alphaHash,this.alphaToCoverage=e.alphaToCoverage,this.premultipliedAlpha=e.premultipliedAlpha,this.forceSinglePass=e.forceSinglePass,this.visible=e.visible,this.toneMapped=e.toneMapped,this.userData=JSON.parse(JSON.stringify(e.userData)),this}dispose(){this.dispatchEvent({type:"dispose"})}set needsUpdate(e){e===!0&&this.version++}onBuild(){console.warn("Material: onBuild() has been removed.")}}class Mi extends $s{constructor(e){super(),this.isMeshBasicMaterial=!0,this.type="MeshBasicMaterial",this.color=new Ne(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.envMapRotation=new Ki,this.combine=vm,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.envMapRotation.copy(e.envMapRotation),this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.fog=e.fog,this}}const Zt=new P,ec=new Oe;let AT=0;class at{constructor(e,t,i=!1){if(Array.isArray(e))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.isBufferAttribute=!0,Object.defineProperty(this,"id",{value:AT++}),this.name="",this.array=e,this.itemSize=t,this.count=e!==void 0?e.length/t:0,this.normalized=i,this.usage=ep,this.updateRanges=[],this.gpuType=Sn,this.version=0}onUploadCallback(){}set needsUpdate(e){e===!0&&this.version++}setUsage(e){return this.usage=e,this}addUpdateRange(e,t){this.updateRanges.push({start:e,count:t})}clearUpdateRanges(){this.updateRanges.length=0}copy(e){return this.name=e.name,this.array=new e.array.constructor(e.array),this.itemSize=e.itemSize,this.count=e.count,this.normalized=e.normalized,this.usage=e.usage,this.gpuType=e.gpuType,this}copyAt(e,t,i){e*=this.itemSize,i*=t.itemSize;for(let n=0,r=this.itemSize;n<r;n++)this.array[e+n]=t.array[i+n];return this}copyArray(e){return this.array.set(e),this}applyMatrix3(e){if(this.itemSize===2)for(let t=0,i=this.count;t<i;t++)ec.fromBufferAttribute(this,t),ec.applyMatrix3(e),this.setXY(t,ec.x,ec.y);else if(this.itemSize===3)for(let t=0,i=this.count;t<i;t++)Zt.fromBufferAttribute(this,t),Zt.applyMatrix3(e),this.setXYZ(t,Zt.x,Zt.y,Zt.z);return this}applyMatrix4(e){for(let t=0,i=this.count;t<i;t++)Zt.fromBufferAttribute(this,t),Zt.applyMatrix4(e),this.setXYZ(t,Zt.x,Zt.y,Zt.z);return this}applyNormalMatrix(e){for(let t=0,i=this.count;t<i;t++)Zt.fromBufferAttribute(this,t),Zt.applyNormalMatrix(e),this.setXYZ(t,Zt.x,Zt.y,Zt.z);return this}transformDirection(e){for(let t=0,i=this.count;t<i;t++)Zt.fromBufferAttribute(this,t),Zt.transformDirection(e),this.setXYZ(t,Zt.x,Zt.y,Zt.z);return this}set(e,t=0){return this.array.set(e,t),this}getComponent(e,t){let i=this.array[e*this.itemSize+t];return this.normalized&&(i=xn(i,this.array)),i}setComponent(e,t,i){return this.normalized&&(i=It(i,this.array)),this.array[e*this.itemSize+t]=i,this}getX(e){let t=this.array[e*this.itemSize];return this.normalized&&(t=xn(t,this.array)),t}setX(e,t){return this.normalized&&(t=It(t,this.array)),this.array[e*this.itemSize]=t,this}getY(e){let t=this.array[e*this.itemSize+1];return this.normalized&&(t=xn(t,this.array)),t}setY(e,t){return this.normalized&&(t=It(t,this.array)),this.array[e*this.itemSize+1]=t,this}getZ(e){let t=this.array[e*this.itemSize+2];return this.normalized&&(t=xn(t,this.array)),t}setZ(e,t){return this.normalized&&(t=It(t,this.array)),this.array[e*this.itemSize+2]=t,this}getW(e){let t=this.array[e*this.itemSize+3];return this.normalized&&(t=xn(t,this.array)),t}setW(e,t){return this.normalized&&(t=It(t,this.array)),this.array[e*this.itemSize+3]=t,this}setXY(e,t,i){return e*=this.itemSize,this.normalized&&(t=It(t,this.array),i=It(i,this.array)),this.array[e+0]=t,this.array[e+1]=i,this}setXYZ(e,t,i,n){return e*=this.itemSize,this.normalized&&(t=It(t,this.array),i=It(i,this.array),n=It(n,this.array)),this.array[e+0]=t,this.array[e+1]=i,this.array[e+2]=n,this}setXYZW(e,t,i,n,r){return e*=this.itemSize,this.normalized&&(t=It(t,this.array),i=It(i,this.array),n=It(n,this.array),r=It(r,this.array)),this.array[e+0]=t,this.array[e+1]=i,this.array[e+2]=n,this.array[e+3]=r,this}onUpload(e){return this.onUploadCallback=e,this}clone(){return new this.constructor(this.array,this.itemSize).copy(this)}toJSON(){const e={itemSize:this.itemSize,type:this.array.constructor.name,array:Array.from(this.array),normalized:this.normalized};return this.name!==""&&(e.name=this.name),this.usage!==ep&&(e.usage=this.usage),e}}class RT extends at{constructor(e,t,i){super(new Uint8Array(e),t,i)}}class kI extends at{constructor(e,t,i){super(new Uint16Array(e),t,i)}}class GI extends at{constructor(e,t,i){super(new Uint32Array(e),t,i)}}class dt extends at{constructor(e,t,i){super(new Float32Array(e),t,i)}}let MT=0;const $i=new _e,id=new Wt,io=new P,Bi=new je,ya=new je,ii=new P;class We extends Gr{constructor(){super(),this.isBufferGeometry=!0,Object.defineProperty(this,"id",{value:MT++}),this.uuid=Is(),this.name="",this.type="BufferGeometry",this.index=null,this.indirect=null,this.attributes={},this.morphAttributes={},this.morphTargetsRelative=!1,this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0},this.userData={}}getIndex(){return this.index}setIndex(e){return Array.isArray(e)?this.index=new(BI(e)?GI:kI)(e,1):this.index=e,this}setIndirect(e){return this.indirect=e,this}getIndirect(){return this.indirect}getAttribute(e){return this.attributes[e]}setAttribute(e,t){return this.attributes[e]=t,this}deleteAttribute(e){return delete this.attributes[e],this}hasAttribute(e){return this.attributes[e]!==void 0}addGroup(e,t,i=0){this.groups.push({start:e,count:t,materialIndex:i})}clearGroups(){this.groups=[]}setDrawRange(e,t){this.drawRange.start=e,this.drawRange.count=t}applyMatrix4(e){const t=this.attributes.position;t!==void 0&&(t.applyMatrix4(e),t.needsUpdate=!0);const i=this.attributes.normal;if(i!==void 0){const r=new Xe().getNormalMatrix(e);i.applyNormalMatrix(r),i.needsUpdate=!0}const n=this.attributes.tangent;return n!==void 0&&(n.transformDirection(e),n.needsUpdate=!0),this.boundingBox!==null&&this.computeBoundingBox(),this.boundingSphere!==null&&this.computeBoundingSphere(),this}applyQuaternion(e){return $i.makeRotationFromQuaternion(e),this.applyMatrix4($i),this}rotateX(e){return $i.makeRotationX(e),this.applyMatrix4($i),this}rotateY(e){return $i.makeRotationY(e),this.applyMatrix4($i),this}rotateZ(e){return $i.makeRotationZ(e),this.applyMatrix4($i),this}translate(e,t,i){return $i.makeTranslation(e,t,i),this.applyMatrix4($i),this}scale(e,t,i){return $i.makeScale(e,t,i),this.applyMatrix4($i),this}lookAt(e){return id.lookAt(e),id.updateMatrix(),this.applyMatrix4(id.matrix),this}center(){return this.computeBoundingBox(),this.boundingBox.getCenter(io).negate(),this.translate(io.x,io.y,io.z),this}setFromPoints(e){const t=this.getAttribute("position");if(t===void 0){const i=[];for(let n=0,r=e.length;n<r;n++){const o=e[n];i.push(o.x,o.y,o.z||0)}this.setAttribute("position",new dt(i,3))}else{const i=Math.min(e.length,t.count);for(let n=0;n<i;n++){const r=e[n];t.setXYZ(n,r.x,r.y,r.z||0)}e.length>t.count&&console.warn("THREE.BufferGeometry: Buffer size too small for points data. Use .dispose() and create a new geometry."),t.needsUpdate=!0}return this}computeBoundingBox(){this.boundingBox===null&&(this.boundingBox=new je);const e=this.attributes.position,t=this.morphAttributes.position;if(e&&e.isGLBufferAttribute){console.error("THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box.",this),this.boundingBox.set(new P(-1/0,-1/0,-1/0),new P(1/0,1/0,1/0));return}if(e!==void 0){if(this.boundingBox.setFromBufferAttribute(e),t)for(let i=0,n=t.length;i<n;i++){const r=t[i];Bi.setFromBufferAttribute(r),this.morphTargetsRelative?(ii.addVectors(this.boundingBox.min,Bi.min),this.boundingBox.expandByPoint(ii),ii.addVectors(this.boundingBox.max,Bi.max),this.boundingBox.expandByPoint(ii)):(this.boundingBox.expandByPoint(Bi.min),this.boundingBox.expandByPoint(Bi.max))}}else this.boundingBox.makeEmpty();(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)}computeBoundingSphere(){this.boundingSphere===null&&(this.boundingSphere=new vi);const e=this.attributes.position,t=this.morphAttributes.position;if(e&&e.isGLBufferAttribute){console.error("THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere.",this),this.boundingSphere.set(new P,1/0);return}if(e){const i=this.boundingSphere.center;if(Bi.setFromBufferAttribute(e),t)for(let r=0,o=t.length;r<o;r++){const a=t[r];ya.setFromBufferAttribute(a),this.morphTargetsRelative?(ii.addVectors(Bi.min,ya.min),Bi.expandByPoint(ii),ii.addVectors(Bi.max,ya.max),Bi.expandByPoint(ii)):(Bi.expandByPoint(ya.min),Bi.expandByPoint(ya.max))}Bi.getCenter(i);let n=0;for(let r=0,o=e.count;r<o;r++)ii.fromBufferAttribute(e,r),n=Math.max(n,i.distanceToSquared(ii));if(t)for(let r=0,o=t.length;r<o;r++){const a=t[r],l=this.morphTargetsRelative;for(let c=0,h=a.count;c<h;c++)ii.fromBufferAttribute(a,c),l&&(io.fromBufferAttribute(e,c),ii.add(io)),n=Math.max(n,i.distanceToSquared(ii))}this.boundingSphere.radius=Math.sqrt(n),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}}computeTangents(){const e=this.index,t=this.attributes;if(e===null||t.position===void 0||t.normal===void 0||t.uv===void 0){console.error("THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)");return}const i=t.position,n=t.normal,r=t.uv;this.hasAttribute("tangent")===!1&&this.setAttribute("tangent",new at(new Float32Array(4*i.count),4));const o=this.getAttribute("tangent"),a=[],l=[];for(let A=0;A<i.count;A++)a[A]=new P,l[A]=new P;const c=new P,h=new P,d=new P,u=new Oe,f=new Oe,m=new Oe,g=new P,E=new P;function p(A,y,C){c.fromBufferAttribute(i,A),h.fromBufferAttribute(i,y),d.fromBufferAttribute(i,C),u.fromBufferAttribute(r,A),f.fromBufferAttribute(r,y),m.fromBufferAttribute(r,C),h.sub(c),d.sub(c),f.sub(u),m.sub(u);const M=1/(f.x*m.y-m.x*f.y);isFinite(M)&&(g.copy(h).multiplyScalar(m.y).addScaledVector(d,-f.y).multiplyScalar(M),E.copy(d).multiplyScalar(f.x).addScaledVector(h,-m.x).multiplyScalar(M),a[A].add(g),a[y].add(g),a[C].add(g),l[A].add(E),l[y].add(E),l[C].add(E))}let v=this.groups;v.length===0&&(v=[{start:0,count:e.count}]);for(let A=0,y=v.length;A<y;++A){const C=v[A],M=C.start,R=C.count;for(let L=M,S=M+R;L<S;L+=3)p(e.getX(L+0),e.getX(L+1),e.getX(L+2))}const I=new P,_=new P,b=new P,T=new P;function w(A){b.fromBufferAttribute(n,A),T.copy(b);const y=a[A];I.copy(y),I.sub(b.multiplyScalar(b.dot(y))).normalize(),_.crossVectors(T,y);const M=_.dot(l[A])<0?-1:1;o.setXYZW(A,I.x,I.y,I.z,M)}for(let A=0,y=v.length;A<y;++A){const C=v[A],M=C.start,R=C.count;for(let L=M,S=M+R;L<S;L+=3)w(e.getX(L+0)),w(e.getX(L+1)),w(e.getX(L+2))}}computeVertexNormals(){const e=this.index,t=this.getAttribute("position");if(t!==void 0){let i=this.getAttribute("normal");if(i===void 0)i=new at(new Float32Array(t.count*3),3),this.setAttribute("normal",i);else for(let u=0,f=i.count;u<f;u++)i.setXYZ(u,0,0,0);const n=new P,r=new P,o=new P,a=new P,l=new P,c=new P,h=new P,d=new P;if(e)for(let u=0,f=e.count;u<f;u+=3){const m=e.getX(u+0),g=e.getX(u+1),E=e.getX(u+2);n.fromBufferAttribute(t,m),r.fromBufferAttribute(t,g),o.fromBufferAttribute(t,E),h.subVectors(o,r),d.subVectors(n,r),h.cross(d),a.fromBufferAttribute(i,m),l.fromBufferAttribute(i,g),c.fromBufferAttribute(i,E),a.add(h),l.add(h),c.add(h),i.setXYZ(m,a.x,a.y,a.z),i.setXYZ(g,l.x,l.y,l.z),i.setXYZ(E,c.x,c.y,c.z)}else for(let u=0,f=t.count;u<f;u+=3)n.fromBufferAttribute(t,u+0),r.fromBufferAttribute(t,u+1),o.fromBufferAttribute(t,u+2),h.subVectors(o,r),d.subVectors(n,r),h.cross(d),i.setXYZ(u+0,h.x,h.y,h.z),i.setXYZ(u+1,h.x,h.y,h.z),i.setXYZ(u+2,h.x,h.y,h.z);this.normalizeNormals(),i.needsUpdate=!0}}normalizeNormals(){const e=this.attributes.normal;for(let t=0,i=e.count;t<i;t++)ii.fromBufferAttribute(e,t),ii.normalize(),e.setXYZ(t,ii.x,ii.y,ii.z)}toNonIndexed(){function e(a,l){const c=a.array,h=a.itemSize,d=a.normalized,u=new c.constructor(l.length*h);let f=0,m=0;for(let g=0,E=l.length;g<E;g++){a.isInterleavedBufferAttribute?f=l[g]*a.data.stride+a.offset:f=l[g]*h;for(let p=0;p<h;p++)u[m++]=c[f++]}return new at(u,h,d)}if(this.index===null)return console.warn("THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed."),this;const t=new We,i=this.index.array,n=this.attributes;for(const a in n){const l=n[a],c=e(l,i);t.setAttribute(a,c)}const r=this.morphAttributes;for(const a in r){const l=[],c=r[a];for(let h=0,d=c.length;h<d;h++){const u=c[h],f=e(u,i);l.push(f)}t.morphAttributes[a]=l}t.morphTargetsRelative=this.morphTargetsRelative;const o=this.groups;for(let a=0,l=o.length;a<l;a++){const c=o[a];t.addGroup(c.start,c.count,c.materialIndex)}return t}toJSON(){const e={metadata:{version:4.6,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(e.uuid=this.uuid,e.type=this.type,this.name!==""&&(e.name=this.name),Object.keys(this.userData).length>0&&(e.userData=this.userData),this.parameters!==void 0){const l=this.parameters;for(const c in l)l[c]!==void 0&&(e[c]=l[c]);return e}e.data={attributes:{}};const t=this.index;t!==null&&(e.data.index={type:t.array.constructor.name,array:Array.prototype.slice.call(t.array)});const i=this.attributes;for(const l in i){const c=i[l];e.data.attributes[l]=c.toJSON(e.data)}const n={};let r=!1;for(const l in this.morphAttributes){const c=this.morphAttributes[l],h=[];for(let d=0,u=c.length;d<u;d++){const f=c[d];h.push(f.toJSON(e.data))}h.length>0&&(n[l]=h,r=!0)}r&&(e.data.morphAttributes=n,e.data.morphTargetsRelative=this.morphTargetsRelative);const o=this.groups;o.length>0&&(e.data.groups=JSON.parse(JSON.stringify(o)));const a=this.boundingSphere;return a!==null&&(e.data.boundingSphere={center:a.center.toArray(),radius:a.radius}),e}clone(){return new this.constructor().copy(this)}copy(e){this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null;const t={};this.name=e.name;const i=e.index;i!==null&&this.setIndex(i.clone());const n=e.attributes;for(const c in n){const h=n[c];this.setAttribute(c,h.clone(t))}const r=e.morphAttributes;for(const c in r){const h=[],d=r[c];for(let u=0,f=d.length;u<f;u++)h.push(d[u].clone(t));this.morphAttributes[c]=h}this.morphTargetsRelative=e.morphTargetsRelative;const o=e.groups;for(let c=0,h=o.length;c<h;c++){const d=o[c];this.addGroup(d.start,d.count,d.materialIndex)}const a=e.boundingBox;a!==null&&(this.boundingBox=a.clone());const l=e.boundingSphere;return l!==null&&(this.boundingSphere=l.clone()),this.drawRange.start=e.drawRange.start,this.drawRange.count=e.drawRange.count,this.userData=e.userData,this}dispose(){this.dispatchEvent({type:"dispose"})}}const Pg=new _e,or=new da,tc=new vi,Og=new P,ic=new P,nc=new P,sc=new P,nd=new P,rc=new P,Lg=new P,oc=new P;class Te extends Wt{constructor(e=new We,t=new Mi){super(),this.isMesh=!0,this.type="Mesh",this.geometry=e,this.material=t,this.morphTargetDictionary=void 0,this.morphTargetInfluences=void 0,this.updateMorphTargets()}copy(e,t){return super.copy(e,t),e.morphTargetInfluences!==void 0&&(this.morphTargetInfluences=e.morphTargetInfluences.slice()),e.morphTargetDictionary!==void 0&&(this.morphTargetDictionary=Object.assign({},e.morphTargetDictionary)),this.material=Array.isArray(e.material)?e.material.slice():e.material,this.geometry=e.geometry,this}updateMorphTargets(){const t=this.geometry.morphAttributes,i=Object.keys(t);if(i.length>0){const n=t[i[0]];if(n!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let r=0,o=n.length;r<o;r++){const a=n[r].name||String(r);this.morphTargetInfluences.push(0),this.morphTargetDictionary[a]=r}}}}getVertexPosition(e,t){const i=this.geometry,n=i.attributes.position,r=i.morphAttributes.position,o=i.morphTargetsRelative;t.fromBufferAttribute(n,e);const a=this.morphTargetInfluences;if(r&&a){rc.set(0,0,0);for(let l=0,c=r.length;l<c;l++){const h=a[l],d=r[l];h!==0&&(nd.fromBufferAttribute(d,e),o?rc.addScaledVector(nd,h):rc.addScaledVector(nd.sub(t),h))}t.add(rc)}return t}raycast(e,t){const i=this.geometry,n=this.material,r=this.matrixWorld;n!==void 0&&(i.boundingSphere===null&&i.computeBoundingSphere(),tc.copy(i.boundingSphere),tc.applyMatrix4(r),or.copy(e.ray).recast(e.near),!(tc.containsPoint(or.origin)===!1&&(or.intersectSphere(tc,Og)===null||or.origin.distanceToSquared(Og)>(e.far-e.near)**2))&&(Pg.copy(r).invert(),or.copy(e.ray).applyMatrix4(Pg),!(i.boundingBox!==null&&or.intersectsBox(i.boundingBox)===!1)&&this._computeIntersections(e,t,or)))}_computeIntersections(e,t,i){let n;const r=this.geometry,o=this.material,a=r.index,l=r.attributes.position,c=r.attributes.uv,h=r.attributes.uv1,d=r.attributes.normal,u=r.groups,f=r.drawRange;if(a!==null)if(Array.isArray(o))for(let m=0,g=u.length;m<g;m++){const E=u[m],p=o[E.materialIndex],v=Math.max(E.start,f.start),I=Math.min(a.count,Math.min(E.start+E.count,f.start+f.count));for(let _=v,b=I;_<b;_+=3){const T=a.getX(_),w=a.getX(_+1),A=a.getX(_+2);n=ac(this,p,e,i,c,h,d,T,w,A),n&&(n.faceIndex=Math.floor(_/3),n.face.materialIndex=E.materialIndex,t.push(n))}}else{const m=Math.max(0,f.start),g=Math.min(a.count,f.start+f.count);for(let E=m,p=g;E<p;E+=3){const v=a.getX(E),I=a.getX(E+1),_=a.getX(E+2);n=ac(this,o,e,i,c,h,d,v,I,_),n&&(n.faceIndex=Math.floor(E/3),t.push(n))}}else if(l!==void 0)if(Array.isArray(o))for(let m=0,g=u.length;m<g;m++){const E=u[m],p=o[E.materialIndex],v=Math.max(E.start,f.start),I=Math.min(l.count,Math.min(E.start+E.count,f.start+f.count));for(let _=v,b=I;_<b;_+=3){const T=_,w=_+1,A=_+2;n=ac(this,p,e,i,c,h,d,T,w,A),n&&(n.faceIndex=Math.floor(_/3),n.face.materialIndex=E.materialIndex,t.push(n))}}else{const m=Math.max(0,f.start),g=Math.min(l.count,f.start+f.count);for(let E=m,p=g;E<p;E+=3){const v=E,I=E+1,_=E+2;n=ac(this,o,e,i,c,h,d,v,I,_),n&&(n.faceIndex=Math.floor(E/3),t.push(n))}}}}function FT(s,e,t,i,n,r,o,a){let l;if(e.side===_i?l=i.intersectTriangle(o,r,n,!0,a):l=i.intersectTriangle(n,r,o,e.side===pn,a),l===null)return null;oc.copy(a),oc.applyMatrix4(s.matrixWorld);const c=t.ray.origin.distanceTo(oc);return c<t.near||c>t.far?null:{distance:c,point:oc.clone(),object:s}}function ac(s,e,t,i,n,r,o,a,l,c){s.getVertexPosition(a,ic),s.getVertexPosition(l,nc),s.getVertexPosition(c,sc);const h=FT(s,e,t,i,ic,nc,sc,Lg);if(h){const d=new P;Ft.getBarycoord(Lg,ic,nc,sc,d),n&&(h.uv=Ft.getInterpolatedAttribute(n,a,l,c,d,new Oe)),r&&(h.uv1=Ft.getInterpolatedAttribute(r,a,l,c,d,new Oe)),o&&(h.normal=Ft.getInterpolatedAttribute(o,a,l,c,d,new P),h.normal.dot(i.direction)>0&&h.normal.multiplyScalar(-1));const u={a,b:l,c,normal:new P,materialIndex:0};Ft.getNormal(ic,nc,sc,u.normal),h.face=u,h.barycoord=d}return h}class Ot extends We{constructor(e=1,t=1,i=1,n=1,r=1,o=1){super(),this.type="BoxGeometry",this.parameters={width:e,height:t,depth:i,widthSegments:n,heightSegments:r,depthSegments:o};const a=this;n=Math.floor(n),r=Math.floor(r),o=Math.floor(o);const l=[],c=[],h=[],d=[];let u=0,f=0;m("z","y","x",-1,-1,i,t,e,o,r,0),m("z","y","x",1,-1,i,t,-e,o,r,1),m("x","z","y",1,1,e,i,t,n,o,2),m("x","z","y",1,-1,e,i,-t,n,o,3),m("x","y","z",1,-1,e,t,i,n,r,4),m("x","y","z",-1,-1,e,t,-i,n,r,5),this.setIndex(l),this.setAttribute("position",new dt(c,3)),this.setAttribute("normal",new dt(h,3)),this.setAttribute("uv",new dt(d,2));function m(g,E,p,v,I,_,b,T,w,A,y){const C=_/w,M=b/A,R=_/2,L=b/2,S=T/2,U=w+1,z=A+1;let k=0,H=0;const Y=new P;for(let re=0;re<z;re++){const j=re*M-L;for(let X=0;X<U;X++){const ue=X*C-R;Y[g]=ue*v,Y[E]=j*I,Y[p]=S,c.push(Y.x,Y.y,Y.z),Y[g]=0,Y[E]=0,Y[p]=T>0?1:-1,h.push(Y.x,Y.y,Y.z),d.push(X/w),d.push(1-re/A),k+=1}}for(let re=0;re<A;re++)for(let j=0;j<w;j++){const X=u+j+U*re,ue=u+j+U*(re+1),Z=u+(j+1)+U*(re+1),K=u+(j+1)+U*re;l.push(X,ue,K),l.push(ue,Z,K),H+=6}a.addGroup(f,H,y),f+=H,u+=k}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new Ot(e.width,e.height,e.depth,e.widthSegments,e.heightSegments,e.depthSegments)}}function ra(s){const e={};for(const t in s){e[t]={};for(const i in s[t]){const n=s[t][i];n&&(n.isColor||n.isMatrix3||n.isMatrix4||n.isVector2||n.isVector3||n.isVector4||n.isTexture||n.isQuaternion)?n.isRenderTargetTexture?(console.warn("UniformsUtils: Textures of render targets cannot be cloned via cloneUniforms() or mergeUniforms()."),e[t][i]=null):e[t][i]=n.clone():Array.isArray(n)?e[t][i]=n.slice():e[t][i]=n}}return e}function Ci(s){const e={};for(let t=0;t<s.length;t++){const i=ra(s[t]);for(const n in i)e[n]=i[n]}return e}function PT(s){const e=[];for(let t=0;t<s.length;t++)e.push(s[t].clone());return e}function HI(s){const e=s.getRenderTarget();return e===null?s.outputColorSpace:e.isXRRenderTarget===!0?e.texture.colorSpace:nt.workingColorSpace}const fa={clone:ra,merge:Ci};var OT=`void main() {
	gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );
}`,LT=`void main() {
	gl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );
}`;class Tt extends $s{constructor(e){super(),this.isShaderMaterial=!0,this.type="ShaderMaterial",this.defines={},this.uniforms={},this.uniformsGroups=[],this.vertexShader=OT,this.fragmentShader=LT,this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.clipping=!1,this.forceSinglePass=!0,this.extensions={clipCullDistance:!1,multiDraw:!1},this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv1:[0,0]},this.index0AttributeName=void 0,this.uniformsNeedUpdate=!1,this.glslVersion=null,e!==void 0&&this.setValues(e)}copy(e){return super.copy(e),this.fragmentShader=e.fragmentShader,this.vertexShader=e.vertexShader,this.uniforms=ra(e.uniforms),this.uniformsGroups=PT(e.uniformsGroups),this.defines=Object.assign({},e.defines),this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.fog=e.fog,this.lights=e.lights,this.clipping=e.clipping,this.extensions=Object.assign({},e.extensions),this.glslVersion=e.glslVersion,this}toJSON(e){const t=super.toJSON(e);t.glslVersion=this.glslVersion,t.uniforms={};for(const n in this.uniforms){const o=this.uniforms[n].value;o&&o.isTexture?t.uniforms[n]={type:"t",value:o.toJSON(e).uuid}:o&&o.isColor?t.uniforms[n]={type:"c",value:o.getHex()}:o&&o.isVector2?t.uniforms[n]={type:"v2",value:o.toArray()}:o&&o.isVector3?t.uniforms[n]={type:"v3",value:o.toArray()}:o&&o.isVector4?t.uniforms[n]={type:"v4",value:o.toArray()}:o&&o.isMatrix3?t.uniforms[n]={type:"m3",value:o.toArray()}:o&&o.isMatrix4?t.uniforms[n]={type:"m4",value:o.toArray()}:t.uniforms[n]={value:o}}Object.keys(this.defines).length>0&&(t.defines=this.defines),t.vertexShader=this.vertexShader,t.fragmentShader=this.fragmentShader,t.lights=this.lights,t.clipping=this.clipping;const i={};for(const n in this.extensions)this.extensions[n]===!0&&(i[n]=!0);return Object.keys(i).length>0&&(t.extensions=i),t}}class YI extends Wt{constructor(){super(),this.isCamera=!0,this.type="Camera",this.matrixWorldInverse=new _e,this.projectionMatrix=new _e,this.projectionMatrixInverse=new _e,this.coordinateSystem=ds}copy(e,t){return super.copy(e,t),this.matrixWorldInverse.copy(e.matrixWorldInverse),this.projectionMatrix.copy(e.projectionMatrix),this.projectionMatrixInverse.copy(e.projectionMatrixInverse),this.coordinateSystem=e.coordinateSystem,this}getWorldDirection(e){return super.getWorldDirection(e).negate()}updateMatrixWorld(e){super.updateMatrixWorld(e),this.matrixWorldInverse.copy(this.matrixWorld).invert()}updateWorldMatrix(e,t){super.updateWorldMatrix(e,t),this.matrixWorldInverse.copy(this.matrixWorld).invert()}clone(){return new this.constructor().copy(this)}}const Ps=new P,Dg=new Oe,Ng=new Oe;class Gi extends YI{constructor(e=50,t=1,i=.1,n=2e3){super(),this.isPerspectiveCamera=!0,this.type="PerspectiveCamera",this.fov=e,this.zoom=1,this.near=i,this.far=n,this.focus=10,this.aspect=t,this.view=null,this.filmGauge=35,this.filmOffset=0,this.updateProjectionMatrix()}copy(e,t){return super.copy(e,t),this.fov=e.fov,this.zoom=e.zoom,this.near=e.near,this.far=e.far,this.focus=e.focus,this.aspect=e.aspect,this.view=e.view===null?null:Object.assign({},e.view),this.filmGauge=e.filmGauge,this.filmOffset=e.filmOffset,this}setFocalLength(e){const t=.5*this.getFilmHeight()/e;this.fov=Il*2*Math.atan(t),this.updateProjectionMatrix()}getFocalLength(){const e=Math.tan(jo*.5*this.fov);return .5*this.getFilmHeight()/e}getEffectiveFOV(){return Il*2*Math.atan(Math.tan(jo*.5*this.fov)/this.zoom)}getFilmWidth(){return this.filmGauge*Math.min(this.aspect,1)}getFilmHeight(){return this.filmGauge/Math.max(this.aspect,1)}getViewBounds(e,t,i){Ps.set(-1,-1,.5).applyMatrix4(this.projectionMatrixInverse),t.set(Ps.x,Ps.y).multiplyScalar(-e/Ps.z),Ps.set(1,1,.5).applyMatrix4(this.projectionMatrixInverse),i.set(Ps.x,Ps.y).multiplyScalar(-e/Ps.z)}getViewSize(e,t){return this.getViewBounds(e,Dg,Ng),t.subVectors(Ng,Dg)}setViewOffset(e,t,i,n,r,o){this.aspect=e/t,this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=i,this.view.offsetY=n,this.view.width=r,this.view.height=o,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const e=this.near;let t=e*Math.tan(jo*.5*this.fov)/this.zoom,i=2*t,n=this.aspect*i,r=-.5*n;const o=this.view;if(this.view!==null&&this.view.enabled){const l=o.fullWidth,c=o.fullHeight;r+=o.offsetX*n/l,t-=o.offsetY*i/c,n*=o.width/l,i*=o.height/c}const a=this.filmOffset;a!==0&&(r+=e*a/this.getFilmWidth()),this.projectionMatrix.makePerspective(r,r+n,t,t-i,e,this.far,this.coordinateSystem),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){const t=super.toJSON(e);return t.object.fov=this.fov,t.object.zoom=this.zoom,t.object.near=this.near,t.object.far=this.far,t.object.focus=this.focus,t.object.aspect=this.aspect,this.view!==null&&(t.object.view=Object.assign({},this.view)),t.object.filmGauge=this.filmGauge,t.object.filmOffset=this.filmOffset,t}}const no=-90,so=1;class DT extends Wt{constructor(e,t,i){super(),this.type="CubeCamera",this.renderTarget=i,this.coordinateSystem=null,this.activeMipmapLevel=0;const n=new Gi(no,so,e,t);n.layers=this.layers,this.add(n);const r=new Gi(no,so,e,t);r.layers=this.layers,this.add(r);const o=new Gi(no,so,e,t);o.layers=this.layers,this.add(o);const a=new Gi(no,so,e,t);a.layers=this.layers,this.add(a);const l=new Gi(no,so,e,t);l.layers=this.layers,this.add(l);const c=new Gi(no,so,e,t);c.layers=this.layers,this.add(c)}updateCoordinateSystem(){const e=this.coordinateSystem,t=this.children.concat(),[i,n,r,o,a,l]=t;for(const c of t)this.remove(c);if(e===ds)i.up.set(0,1,0),i.lookAt(1,0,0),n.up.set(0,1,0),n.lookAt(-1,0,0),r.up.set(0,0,-1),r.lookAt(0,1,0),o.up.set(0,0,1),o.lookAt(0,-1,0),a.up.set(0,1,0),a.lookAt(0,0,1),l.up.set(0,1,0),l.lookAt(0,0,-1);else if(e===Kh)i.up.set(0,-1,0),i.lookAt(-1,0,0),n.up.set(0,-1,0),n.lookAt(1,0,0),r.up.set(0,0,1),r.lookAt(0,1,0),o.up.set(0,0,-1),o.lookAt(0,-1,0),a.up.set(0,-1,0),a.lookAt(0,0,1),l.up.set(0,-1,0),l.lookAt(0,0,-1);else throw new Error("THREE.CubeCamera.updateCoordinateSystem(): Invalid coordinate system: "+e);for(const c of t)this.add(c),c.updateMatrixWorld()}update(e,t){this.parent===null&&this.updateMatrixWorld();const{renderTarget:i,activeMipmapLevel:n}=this;this.coordinateSystem!==e.coordinateSystem&&(this.coordinateSystem=e.coordinateSystem,this.updateCoordinateSystem());const[r,o,a,l,c,h]=this.children,d=e.getRenderTarget(),u=e.getActiveCubeFace(),f=e.getActiveMipmapLevel(),m=e.xr.enabled;e.xr.enabled=!1;const g=i.texture.generateMipmaps;i.texture.generateMipmaps=!1,e.setRenderTarget(i,0,n),e.render(t,r),e.setRenderTarget(i,1,n),e.render(t,o),e.setRenderTarget(i,2,n),e.render(t,a),e.setRenderTarget(i,3,n),e.render(t,l),e.setRenderTarget(i,4,n),e.render(t,c),i.texture.generateMipmaps=g,e.setRenderTarget(i,5,n),e.render(t,h),e.setRenderTarget(d,u,f),e.xr.enabled=m,i.texture.needsPMREMUpdate=!0}}class WI extends Ri{constructor(e=[],t=ea,i,n,r,o,a,l,c,h){super(e,t,i,n,r,o,a,l,c,h),this.isCubeTexture=!0,this.flipY=!1}get images(){return this.image}set images(e){this.image=e}}class NT extends Nt{constructor(e=1,t={}){super(e,e,t),this.isWebGLCubeRenderTarget=!0;const i={width:e,height:e,depth:1},n=[i,i,i,i,i,i];this.texture=new WI(n,t.mapping,t.wrapS,t.wrapT,t.magFilter,t.minFilter,t.format,t.type,t.anisotropy,t.colorSpace),this.texture.isRenderTargetTexture=!0,this.texture.generateMipmaps=t.generateMipmaps!==void 0?t.generateMipmaps:!1,this.texture.minFilter=t.minFilter!==void 0?t.minFilter:qt}fromEquirectangularTexture(e,t){this.texture.type=t.type,this.texture.colorSpace=t.colorSpace,this.texture.generateMipmaps=t.generateMipmaps,this.texture.minFilter=t.minFilter,this.texture.magFilter=t.magFilter;const i={uniforms:{tEquirect:{value:null}},vertexShader:`

				varying vec3 vWorldDirection;

				vec3 transformDirection( in vec3 dir, in mat4 matrix ) {

					return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );

				}

				void main() {

					vWorldDirection = transformDirection( position, modelMatrix );

					#include <begin_vertex>
					#include <project_vertex>

				}
			`,fragmentShader:`

				uniform sampler2D tEquirect;

				varying vec3 vWorldDirection;

				#include <common>

				void main() {

					vec3 direction = normalize( vWorldDirection );

					vec2 sampleUV = equirectUv( direction );

					gl_FragColor = texture2D( tEquirect, sampleUV );

				}
			`},n=new Ot(5,5,5),r=new Tt({name:"CubemapFromEquirect",uniforms:ra(i.uniforms),vertexShader:i.vertexShader,fragmentShader:i.fragmentShader,side:_i,blending:gs});r.uniforms.tEquirect.value=t;const o=new Te(n,r),a=t.minFilter;return t.minFilter===Ar&&(t.minFilter=qt),new DT(1,10,this).update(e,o),t.minFilter=a,o.geometry.dispose(),o.material.dispose(),this}clear(e,t=!0,i=!0,n=!0){const r=e.getRenderTarget();for(let o=0;o<6;o++)e.setRenderTarget(this,o),e.clear(t,i,n);e.setRenderTarget(r)}}class fs extends Wt{constructor(){super(),this.isGroup=!0,this.type="Group"}}const UT={type:"move"};class sd{constructor(){this._targetRay=null,this._grip=null,this._hand=null}getHandSpace(){return this._hand===null&&(this._hand=new fs,this._hand.matrixAutoUpdate=!1,this._hand.visible=!1,this._hand.joints={},this._hand.inputState={pinching:!1}),this._hand}getTargetRaySpace(){return this._targetRay===null&&(this._targetRay=new fs,this._targetRay.matrixAutoUpdate=!1,this._targetRay.visible=!1,this._targetRay.hasLinearVelocity=!1,this._targetRay.linearVelocity=new P,this._targetRay.hasAngularVelocity=!1,this._targetRay.angularVelocity=new P),this._targetRay}getGripSpace(){return this._grip===null&&(this._grip=new fs,this._grip.matrixAutoUpdate=!1,this._grip.visible=!1,this._grip.hasLinearVelocity=!1,this._grip.linearVelocity=new P,this._grip.hasAngularVelocity=!1,this._grip.angularVelocity=new P),this._grip}dispatchEvent(e){return this._targetRay!==null&&this._targetRay.dispatchEvent(e),this._grip!==null&&this._grip.dispatchEvent(e),this._hand!==null&&this._hand.dispatchEvent(e),this}connect(e){if(e&&e.hand){const t=this._hand;if(t)for(const i of e.hand.values())this._getHandJoint(t,i)}return this.dispatchEvent({type:"connected",data:e}),this}disconnect(e){return this.dispatchEvent({type:"disconnected",data:e}),this._targetRay!==null&&(this._targetRay.visible=!1),this._grip!==null&&(this._grip.visible=!1),this._hand!==null&&(this._hand.visible=!1),this}update(e,t,i){let n=null,r=null,o=null;const a=this._targetRay,l=this._grip,c=this._hand;if(e&&t.session.visibilityState!=="visible-blurred"){if(c&&e.hand){o=!0;for(const g of e.hand.values()){const E=t.getJointPose(g,i),p=this._getHandJoint(c,g);E!==null&&(p.matrix.fromArray(E.transform.matrix),p.matrix.decompose(p.position,p.rotation,p.scale),p.matrixWorldNeedsUpdate=!0,p.jointRadius=E.radius),p.visible=E!==null}const h=c.joints["index-finger-tip"],d=c.joints["thumb-tip"],u=h.position.distanceTo(d.position),f=.02,m=.005;c.inputState.pinching&&u>f+m?(c.inputState.pinching=!1,this.dispatchEvent({type:"pinchend",handedness:e.handedness,target:this})):!c.inputState.pinching&&u<=f-m&&(c.inputState.pinching=!0,this.dispatchEvent({type:"pinchstart",handedness:e.handedness,target:this}))}else l!==null&&e.gripSpace&&(r=t.getPose(e.gripSpace,i),r!==null&&(l.matrix.fromArray(r.transform.matrix),l.matrix.decompose(l.position,l.rotation,l.scale),l.matrixWorldNeedsUpdate=!0,r.linearVelocity?(l.hasLinearVelocity=!0,l.linearVelocity.copy(r.linearVelocity)):l.hasLinearVelocity=!1,r.angularVelocity?(l.hasAngularVelocity=!0,l.angularVelocity.copy(r.angularVelocity)):l.hasAngularVelocity=!1));a!==null&&(n=t.getPose(e.targetRaySpace,i),n===null&&r!==null&&(n=r),n!==null&&(a.matrix.fromArray(n.transform.matrix),a.matrix.decompose(a.position,a.rotation,a.scale),a.matrixWorldNeedsUpdate=!0,n.linearVelocity?(a.hasLinearVelocity=!0,a.linearVelocity.copy(n.linearVelocity)):a.hasLinearVelocity=!1,n.angularVelocity?(a.hasAngularVelocity=!0,a.angularVelocity.copy(n.angularVelocity)):a.hasAngularVelocity=!1,this.dispatchEvent(UT)))}return a!==null&&(a.visible=n!==null),l!==null&&(l.visible=r!==null),c!==null&&(c.visible=o!==null),this}_getHandJoint(e,t){if(e.joints[t.jointName]===void 0){const i=new fs;i.matrixAutoUpdate=!1,i.visible=!1,e.joints[t.jointName]=i,e.add(i)}return e.joints[t.jointName]}}class Hr extends Wt{constructor(){super(),this.isScene=!0,this.type="Scene",this.background=null,this.environment=null,this.fog=null,this.backgroundBlurriness=0,this.backgroundIntensity=1,this.backgroundRotation=new Ki,this.environmentIntensity=1,this.environmentRotation=new Ki,this.overrideMaterial=null,typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}copy(e,t){return super.copy(e,t),e.background!==null&&(this.background=e.background.clone()),e.environment!==null&&(this.environment=e.environment.clone()),e.fog!==null&&(this.fog=e.fog.clone()),this.backgroundBlurriness=e.backgroundBlurriness,this.backgroundIntensity=e.backgroundIntensity,this.backgroundRotation.copy(e.backgroundRotation),this.environmentIntensity=e.environmentIntensity,this.environmentRotation.copy(e.environmentRotation),e.overrideMaterial!==null&&(this.overrideMaterial=e.overrideMaterial.clone()),this.matrixAutoUpdate=e.matrixAutoUpdate,this}toJSON(e){const t=super.toJSON(e);return this.fog!==null&&(t.object.fog=this.fog.toJSON()),this.backgroundBlurriness>0&&(t.object.backgroundBlurriness=this.backgroundBlurriness),this.backgroundIntensity!==1&&(t.object.backgroundIntensity=this.backgroundIntensity),t.object.backgroundRotation=this.backgroundRotation.toArray(),this.environmentIntensity!==1&&(t.object.environmentIntensity=this.environmentIntensity),t.object.environmentRotation=this.environmentRotation.toArray(),t}}class BT{constructor(e,t){this.isInterleavedBuffer=!0,this.array=e,this.stride=t,this.count=e!==void 0?e.length/t:0,this.usage=ep,this.updateRanges=[],this.version=0,this.uuid=Is()}onUploadCallback(){}set needsUpdate(e){e===!0&&this.version++}setUsage(e){return this.usage=e,this}addUpdateRange(e,t){this.updateRanges.push({start:e,count:t})}clearUpdateRanges(){this.updateRanges.length=0}copy(e){return this.array=new e.array.constructor(e.array),this.count=e.count,this.stride=e.stride,this.usage=e.usage,this}copyAt(e,t,i){e*=this.stride,i*=t.stride;for(let n=0,r=this.stride;n<r;n++)this.array[e+n]=t.array[i+n];return this}set(e,t=0){return this.array.set(e,t),this}clone(e){e.arrayBuffers===void 0&&(e.arrayBuffers={}),this.array.buffer._uuid===void 0&&(this.array.buffer._uuid=Is()),e.arrayBuffers[this.array.buffer._uuid]===void 0&&(e.arrayBuffers[this.array.buffer._uuid]=this.array.slice(0).buffer);const t=new this.array.constructor(e.arrayBuffers[this.array.buffer._uuid]),i=new this.constructor(t,this.stride);return i.setUsage(this.usage),i}onUpload(e){return this.onUploadCallback=e,this}toJSON(e){return e.arrayBuffers===void 0&&(e.arrayBuffers={}),this.array.buffer._uuid===void 0&&(this.array.buffer._uuid=Is()),e.arrayBuffers[this.array.buffer._uuid]===void 0&&(e.arrayBuffers[this.array.buffer._uuid]=Array.from(new Uint32Array(this.array.buffer))),{uuid:this.uuid,buffer:this.array.buffer._uuid,type:this.array.constructor.name,stride:this.stride}}}const yi=new P;class Hn{constructor(e,t,i,n=!1){this.isInterleavedBufferAttribute=!0,this.name="",this.data=e,this.itemSize=t,this.offset=i,this.normalized=n}get count(){return this.data.count}get array(){return this.data.array}set needsUpdate(e){this.data.needsUpdate=e}applyMatrix4(e){for(let t=0,i=this.data.count;t<i;t++)yi.fromBufferAttribute(this,t),yi.applyMatrix4(e),this.setXYZ(t,yi.x,yi.y,yi.z);return this}applyNormalMatrix(e){for(let t=0,i=this.count;t<i;t++)yi.fromBufferAttribute(this,t),yi.applyNormalMatrix(e),this.setXYZ(t,yi.x,yi.y,yi.z);return this}transformDirection(e){for(let t=0,i=this.count;t<i;t++)yi.fromBufferAttribute(this,t),yi.transformDirection(e),this.setXYZ(t,yi.x,yi.y,yi.z);return this}getComponent(e,t){let i=this.array[e*this.data.stride+this.offset+t];return this.normalized&&(i=xn(i,this.array)),i}setComponent(e,t,i){return this.normalized&&(i=It(i,this.array)),this.data.array[e*this.data.stride+this.offset+t]=i,this}setX(e,t){return this.normalized&&(t=It(t,this.array)),this.data.array[e*this.data.stride+this.offset]=t,this}setY(e,t){return this.normalized&&(t=It(t,this.array)),this.data.array[e*this.data.stride+this.offset+1]=t,this}setZ(e,t){return this.normalized&&(t=It(t,this.array)),this.data.array[e*this.data.stride+this.offset+2]=t,this}setW(e,t){return this.normalized&&(t=It(t,this.array)),this.data.array[e*this.data.stride+this.offset+3]=t,this}getX(e){let t=this.data.array[e*this.data.stride+this.offset];return this.normalized&&(t=xn(t,this.array)),t}getY(e){let t=this.data.array[e*this.data.stride+this.offset+1];return this.normalized&&(t=xn(t,this.array)),t}getZ(e){let t=this.data.array[e*this.data.stride+this.offset+2];return this.normalized&&(t=xn(t,this.array)),t}getW(e){let t=this.data.array[e*this.data.stride+this.offset+3];return this.normalized&&(t=xn(t,this.array)),t}setXY(e,t,i){return e=e*this.data.stride+this.offset,this.normalized&&(t=It(t,this.array),i=It(i,this.array)),this.data.array[e+0]=t,this.data.array[e+1]=i,this}setXYZ(e,t,i,n){return e=e*this.data.stride+this.offset,this.normalized&&(t=It(t,this.array),i=It(i,this.array),n=It(n,this.array)),this.data.array[e+0]=t,this.data.array[e+1]=i,this.data.array[e+2]=n,this}setXYZW(e,t,i,n,r){return e=e*this.data.stride+this.offset,this.normalized&&(t=It(t,this.array),i=It(i,this.array),n=It(n,this.array),r=It(r,this.array)),this.data.array[e+0]=t,this.data.array[e+1]=i,this.data.array[e+2]=n,this.data.array[e+3]=r,this}clone(e){if(e===void 0){console.log("THREE.InterleavedBufferAttribute.clone(): Cloning an interleaved buffer attribute will de-interleave buffer data.");const t=[];for(let i=0;i<this.count;i++){const n=i*this.data.stride+this.offset;for(let r=0;r<this.itemSize;r++)t.push(this.data.array[n+r])}return new at(new this.array.constructor(t),this.itemSize,this.normalized)}else return e.interleavedBuffers===void 0&&(e.interleavedBuffers={}),e.interleavedBuffers[this.data.uuid]===void 0&&(e.interleavedBuffers[this.data.uuid]=this.data.clone(e)),new Hn(e.interleavedBuffers[this.data.uuid],this.itemSize,this.offset,this.normalized)}toJSON(e){if(e===void 0){console.log("THREE.InterleavedBufferAttribute.toJSON(): Serializing an interleaved buffer attribute will de-interleave buffer data.");const t=[];for(let i=0;i<this.count;i++){const n=i*this.data.stride+this.offset;for(let r=0;r<this.itemSize;r++)t.push(this.data.array[n+r])}return{itemSize:this.itemSize,type:this.array.constructor.name,array:t,normalized:this.normalized}}else return e.interleavedBuffers===void 0&&(e.interleavedBuffers={}),e.interleavedBuffers[this.data.uuid]===void 0&&(e.interleavedBuffers[this.data.uuid]=this.data.toJSON(e)),{isInterleavedBufferAttribute:!0,itemSize:this.itemSize,data:this.data.uuid,offset:this.offset,normalized:this.normalized}}}class XI extends Ri{constructor(e=null,t=1,i=1,n,r,o,a,l,c=Ct,h=Ct,d,u){super(null,o,a,l,c,h,n,r,d,u),this.isDataTexture=!0,this.image={data:e,width:t,height:i},this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}class tp extends at{constructor(e,t,i,n=1){super(e,t,i),this.isInstancedBufferAttribute=!0,this.meshPerAttribute=n}copy(e){return super.copy(e),this.meshPerAttribute=e.meshPerAttribute,this}toJSON(){const e=super.toJSON();return e.meshPerAttribute=this.meshPerAttribute,e.isInstancedBufferAttribute=!0,e}}const ro=new _e,Ug=new _e,lc=[],Bg=new je,zT=new _e,Ta=new Te,Ca=new vi;class ji extends Te{constructor(e,t,i){super(e,t),this.isInstancedMesh=!0,this.instanceMatrix=new tp(new Float32Array(i*16),16),this.instanceColor=null,this.morphTexture=null,this.count=i,this.boundingBox=null,this.boundingSphere=null;for(let n=0;n<i;n++)this.setMatrixAt(n,zT)}computeBoundingBox(){const e=this.geometry,t=this.count;this.boundingBox===null&&(this.boundingBox=new je),e.boundingBox===null&&e.computeBoundingBox(),this.boundingBox.makeEmpty();for(let i=0;i<t;i++)this.getMatrixAt(i,ro),Bg.copy(e.boundingBox).applyMatrix4(ro),this.boundingBox.union(Bg)}computeBoundingSphere(){const e=this.geometry,t=this.count;this.boundingSphere===null&&(this.boundingSphere=new vi),e.boundingSphere===null&&e.computeBoundingSphere(),this.boundingSphere.makeEmpty();for(let i=0;i<t;i++)this.getMatrixAt(i,ro),Ca.copy(e.boundingSphere).applyMatrix4(ro),this.boundingSphere.union(Ca)}copy(e,t){return super.copy(e,t),this.instanceMatrix.copy(e.instanceMatrix),e.morphTexture!==null&&(this.morphTexture=e.morphTexture.clone()),e.instanceColor!==null&&(this.instanceColor=e.instanceColor.clone()),this.count=e.count,e.boundingBox!==null&&(this.boundingBox=e.boundingBox.clone()),e.boundingSphere!==null&&(this.boundingSphere=e.boundingSphere.clone()),this}getColorAt(e,t){t.fromArray(this.instanceColor.array,e*3)}getMatrixAt(e,t){t.fromArray(this.instanceMatrix.array,e*16)}getMorphAt(e,t){const i=t.morphTargetInfluences,n=this.morphTexture.source.data.data,r=i.length+1,o=e*r+1;for(let a=0;a<i.length;a++)i[a]=n[o+a]}raycast(e,t){const i=this.matrixWorld,n=this.count;if(Ta.geometry=this.geometry,Ta.material=this.material,Ta.material!==void 0&&(this.boundingSphere===null&&this.computeBoundingSphere(),Ca.copy(this.boundingSphere),Ca.applyMatrix4(i),e.ray.intersectsSphere(Ca)!==!1))for(let r=0;r<n;r++){this.getMatrixAt(r,ro),Ug.multiplyMatrices(i,ro),Ta.matrixWorld=Ug,Ta.raycast(e,lc);for(let o=0,a=lc.length;o<a;o++){const l=lc[o];l.instanceId=r,l.object=this,t.push(l)}lc.length=0}}setColorAt(e,t){this.instanceColor===null&&(this.instanceColor=new tp(new Float32Array(this.instanceMatrix.count*3).fill(1),3)),t.toArray(this.instanceColor.array,e*3)}setMatrixAt(e,t){t.toArray(this.instanceMatrix.array,e*16)}setMorphAt(e,t){const i=t.morphTargetInfluences,n=i.length+1;this.morphTexture===null&&(this.morphTexture=new XI(new Float32Array(n*this.count),n,this.count,Iu,Sn));const r=this.morphTexture.source.data.data;let o=0;for(let c=0;c<i.length;c++)o+=i[c];const a=this.geometry.morphTargetsRelative?1:1-o,l=n*e;r[l]=a,r.set(i,l+1)}updateMorphTargets(){}dispose(){this.dispatchEvent({type:"dispose"}),this.morphTexture!==null&&(this.morphTexture.dispose(),this.morphTexture=null)}}const rd=new P,VT=new P,kT=new Xe;class ri{constructor(e=new P(1,0,0),t=0){this.isPlane=!0,this.normal=e,this.constant=t}set(e,t){return this.normal.copy(e),this.constant=t,this}setComponents(e,t,i,n){return this.normal.set(e,t,i),this.constant=n,this}setFromNormalAndCoplanarPoint(e,t){return this.normal.copy(e),this.constant=-t.dot(this.normal),this}setFromCoplanarPoints(e,t,i){const n=rd.subVectors(i,t).cross(VT.subVectors(e,t)).normalize();return this.setFromNormalAndCoplanarPoint(n,e),this}copy(e){return this.normal.copy(e.normal),this.constant=e.constant,this}normalize(){const e=1/this.normal.length();return this.normal.multiplyScalar(e),this.constant*=e,this}negate(){return this.constant*=-1,this.normal.negate(),this}distanceToPoint(e){return this.normal.dot(e)+this.constant}distanceToSphere(e){return this.distanceToPoint(e.center)-e.radius}projectPoint(e,t){return t.copy(e).addScaledVector(this.normal,-this.distanceToPoint(e))}intersectLine(e,t){const i=e.delta(rd),n=this.normal.dot(i);if(n===0)return this.distanceToPoint(e.start)===0?t.copy(e.start):null;const r=-(e.start.dot(this.normal)+this.constant)/n;return r<0||r>1?null:t.copy(e.start).addScaledVector(i,r)}intersectsLine(e){const t=this.distanceToPoint(e.start),i=this.distanceToPoint(e.end);return t<0&&i>0||i<0&&t>0}intersectsBox(e){return e.intersectsPlane(this)}intersectsSphere(e){return e.intersectsPlane(this)}coplanarPoint(e){return e.copy(this.normal).multiplyScalar(-this.constant)}applyMatrix4(e,t){const i=t||kT.getNormalMatrix(e),n=this.coplanarPoint(rd).applyMatrix4(e),r=this.normal.applyMatrix3(i).normalize();return this.constant=-n.dot(r),this}translate(e){return this.constant-=e.dot(this.normal),this}equals(e){return e.normal.equals(this.normal)&&e.constant===this.constant}clone(){return new this.constructor().copy(this)}}const ar=new vi,cc=new P;class ZI{constructor(e=new ri,t=new ri,i=new ri,n=new ri,r=new ri,o=new ri){this.planes=[e,t,i,n,r,o]}set(e,t,i,n,r,o){const a=this.planes;return a[0].copy(e),a[1].copy(t),a[2].copy(i),a[3].copy(n),a[4].copy(r),a[5].copy(o),this}copy(e){const t=this.planes;for(let i=0;i<6;i++)t[i].copy(e.planes[i]);return this}setFromProjectionMatrix(e,t=ds){const i=this.planes,n=e.elements,r=n[0],o=n[1],a=n[2],l=n[3],c=n[4],h=n[5],d=n[6],u=n[7],f=n[8],m=n[9],g=n[10],E=n[11],p=n[12],v=n[13],I=n[14],_=n[15];if(i[0].setComponents(l-r,u-c,E-f,_-p).normalize(),i[1].setComponents(l+r,u+c,E+f,_+p).normalize(),i[2].setComponents(l+o,u+h,E+m,_+v).normalize(),i[3].setComponents(l-o,u-h,E-m,_-v).normalize(),i[4].setComponents(l-a,u-d,E-g,_-I).normalize(),t===ds)i[5].setComponents(l+a,u+d,E+g,_+I).normalize();else if(t===Kh)i[5].setComponents(a,d,g,I).normalize();else throw new Error("THREE.Frustum.setFromProjectionMatrix(): Invalid coordinate system: "+t);return this}intersectsObject(e){if(e.boundingSphere!==void 0)e.boundingSphere===null&&e.computeBoundingSphere(),ar.copy(e.boundingSphere).applyMatrix4(e.matrixWorld);else{const t=e.geometry;t.boundingSphere===null&&t.computeBoundingSphere(),ar.copy(t.boundingSphere).applyMatrix4(e.matrixWorld)}return this.intersectsSphere(ar)}intersectsSprite(e){return ar.center.set(0,0,0),ar.radius=.7071067811865476,ar.applyMatrix4(e.matrixWorld),this.intersectsSphere(ar)}intersectsSphere(e){const t=this.planes,i=e.center,n=-e.radius;for(let r=0;r<6;r++)if(t[r].distanceToPoint(i)<n)return!1;return!0}intersectsBox(e){const t=this.planes;for(let i=0;i<6;i++){const n=t[i];if(cc.x=n.normal.x>0?e.max.x:e.min.x,cc.y=n.normal.y>0?e.max.y:e.min.y,cc.z=n.normal.z>0?e.max.z:e.min.z,n.distanceToPoint(cc)<0)return!1}return!0}containsPoint(e){const t=this.planes;for(let i=0;i<6;i++)if(t[i].distanceToPoint(e)<0)return!1;return!0}clone(){return new this.constructor().copy(this)}}class Fn extends $s{constructor(e){super(),this.isLineBasicMaterial=!0,this.type="LineBasicMaterial",this.color=new Ne(16777215),this.map=null,this.linewidth=1,this.linecap="round",this.linejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.linewidth=e.linewidth,this.linecap=e.linecap,this.linejoin=e.linejoin,this.fog=e.fog,this}}const Jh=new P,$h=new P,zg=new _e,xa=new da,hc=new vi,od=new P,Vg=new P;class Ht extends Wt{constructor(e=new We,t=new Fn){super(),this.isLine=!0,this.type="Line",this.geometry=e,this.material=t,this.morphTargetDictionary=void 0,this.morphTargetInfluences=void 0,this.updateMorphTargets()}copy(e,t){return super.copy(e,t),this.material=Array.isArray(e.material)?e.material.slice():e.material,this.geometry=e.geometry,this}computeLineDistances(){const e=this.geometry;if(e.index===null){const t=e.attributes.position,i=[0];for(let n=1,r=t.count;n<r;n++)Jh.fromBufferAttribute(t,n-1),$h.fromBufferAttribute(t,n),i[n]=i[n-1],i[n]+=Jh.distanceTo($h);e.setAttribute("lineDistance",new dt(i,1))}else console.warn("THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");return this}raycast(e,t){const i=this.geometry,n=this.matrixWorld,r=e.params.Line.threshold,o=i.drawRange;if(i.boundingSphere===null&&i.computeBoundingSphere(),hc.copy(i.boundingSphere),hc.applyMatrix4(n),hc.radius+=r,e.ray.intersectsSphere(hc)===!1)return;zg.copy(n).invert(),xa.copy(e.ray).applyMatrix4(zg);const a=r/((this.scale.x+this.scale.y+this.scale.z)/3),l=a*a,c=this.isLineSegments?2:1,h=i.index,u=i.attributes.position;if(h!==null){const f=Math.max(0,o.start),m=Math.min(h.count,o.start+o.count);for(let g=f,E=m-1;g<E;g+=c){const p=h.getX(g),v=h.getX(g+1),I=uc(this,e,xa,l,p,v,g);I&&t.push(I)}if(this.isLineLoop){const g=h.getX(m-1),E=h.getX(f),p=uc(this,e,xa,l,g,E,m-1);p&&t.push(p)}}else{const f=Math.max(0,o.start),m=Math.min(u.count,o.start+o.count);for(let g=f,E=m-1;g<E;g+=c){const p=uc(this,e,xa,l,g,g+1,g);p&&t.push(p)}if(this.isLineLoop){const g=uc(this,e,xa,l,m-1,f,m-1);g&&t.push(g)}}}updateMorphTargets(){const t=this.geometry.morphAttributes,i=Object.keys(t);if(i.length>0){const n=t[i[0]];if(n!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let r=0,o=n.length;r<o;r++){const a=n[r].name||String(r);this.morphTargetInfluences.push(0),this.morphTargetDictionary[a]=r}}}}}function uc(s,e,t,i,n,r,o){const a=s.geometry.attributes.position;if(Jh.fromBufferAttribute(a,n),$h.fromBufferAttribute(a,r),t.distanceSqToSegment(Jh,$h,od,Vg)>i)return;od.applyMatrix4(s.matrixWorld);const c=e.ray.origin.distanceTo(od);if(!(c<e.near||c>e.far))return{distance:c,point:Vg.clone().applyMatrix4(s.matrixWorld),index:o,face:null,faceIndex:null,barycoord:null,object:s}}const kg=new P,Gg=new P;class jI extends Ht{constructor(e,t){super(e,t),this.isLineSegments=!0,this.type="LineSegments"}computeLineDistances(){const e=this.geometry;if(e.index===null){const t=e.attributes.position,i=[];for(let n=0,r=t.count;n<r;n+=2)kg.fromBufferAttribute(t,n),Gg.fromBufferAttribute(t,n+1),i[n]=n===0?0:i[n-1],i[n+1]=i[n]+kg.distanceTo(Gg);e.setAttribute("lineDistance",new dt(i,1))}else console.warn("THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");return this}}class qI extends $s{constructor(e){super(),this.isPointsMaterial=!0,this.type="PointsMaterial",this.color=new Ne(16777215),this.map=null,this.alphaMap=null,this.size=1,this.sizeAttenuation=!0,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.alphaMap=e.alphaMap,this.size=e.size,this.sizeAttenuation=e.sizeAttenuation,this.fog=e.fog,this}}const Hg=new _e,ip=new da,dc=new vi,fc=new P;class GT extends Wt{constructor(e=new We,t=new qI){super(),this.isPoints=!0,this.type="Points",this.geometry=e,this.material=t,this.morphTargetDictionary=void 0,this.morphTargetInfluences=void 0,this.updateMorphTargets()}copy(e,t){return super.copy(e,t),this.material=Array.isArray(e.material)?e.material.slice():e.material,this.geometry=e.geometry,this}raycast(e,t){const i=this.geometry,n=this.matrixWorld,r=e.params.Points.threshold,o=i.drawRange;if(i.boundingSphere===null&&i.computeBoundingSphere(),dc.copy(i.boundingSphere),dc.applyMatrix4(n),dc.radius+=r,e.ray.intersectsSphere(dc)===!1)return;Hg.copy(n).invert(),ip.copy(e.ray).applyMatrix4(Hg);const a=r/((this.scale.x+this.scale.y+this.scale.z)/3),l=a*a,c=i.index,d=i.attributes.position;if(c!==null){const u=Math.max(0,o.start),f=Math.min(c.count,o.start+o.count);for(let m=u,g=f;m<g;m++){const E=c.getX(m);fc.fromBufferAttribute(d,E),Yg(fc,E,l,n,e,t,this)}}else{const u=Math.max(0,o.start),f=Math.min(d.count,o.start+o.count);for(let m=u,g=f;m<g;m++)fc.fromBufferAttribute(d,m),Yg(fc,m,l,n,e,t,this)}}updateMorphTargets(){const t=this.geometry.morphAttributes,i=Object.keys(t);if(i.length>0){const n=t[i[0]];if(n!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let r=0,o=n.length;r<o;r++){const a=n[r].name||String(r);this.morphTargetInfluences.push(0),this.morphTargetDictionary[a]=r}}}}}function Yg(s,e,t,i,n,r,o){const a=ip.distanceSqToPoint(s);if(a<t){const l=new P;ip.closestPointToPoint(s,l),l.applyMatrix4(i);const c=n.ray.origin.distanceTo(l);if(c<n.near||c>n.far)return;r.push({distance:c,distanceToRay:Math.sqrt(a),point:l,index:e,face:null,faceIndex:null,barycoord:null,object:o})}}class rl extends Ri{constructor(e,t,i=Yn,n,r,o,a=Ct,l=Ct,c,h=Dr){if(h!==Dr&&h!==na)throw new Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");super(null,n,r,o,a,l,h,i,c),this.isDepthTexture=!0,this.image={width:e,height:t},this.flipY=!1,this.generateMipmaps=!1,this.compareFunction=null}copy(e){return super.copy(e),this.source=new Rm(Object.assign({},e.image)),this.compareFunction=e.compareFunction,this}toJSON(e){const t=super.toJSON(e);return this.compareFunction!==null&&(t.compareFunction=this.compareFunction),t}}class ui extends We{constructor(e=1,t=1,i=1,n=32,r=1,o=!1,a=0,l=Math.PI*2){super(),this.type="CylinderGeometry",this.parameters={radiusTop:e,radiusBottom:t,height:i,radialSegments:n,heightSegments:r,openEnded:o,thetaStart:a,thetaLength:l};const c=this;n=Math.floor(n),r=Math.floor(r);const h=[],d=[],u=[],f=[];let m=0;const g=[],E=i/2;let p=0;v(),o===!1&&(e>0&&I(!0),t>0&&I(!1)),this.setIndex(h),this.setAttribute("position",new dt(d,3)),this.setAttribute("normal",new dt(u,3)),this.setAttribute("uv",new dt(f,2));function v(){const _=new P,b=new P;let T=0;const w=(t-e)/i;for(let A=0;A<=r;A++){const y=[],C=A/r,M=C*(t-e)+e;for(let R=0;R<=n;R++){const L=R/n,S=L*l+a,U=Math.sin(S),z=Math.cos(S);b.x=M*U,b.y=-C*i+E,b.z=M*z,d.push(b.x,b.y,b.z),_.set(U,w,z).normalize(),u.push(_.x,_.y,_.z),f.push(L,1-C),y.push(m++)}g.push(y)}for(let A=0;A<n;A++)for(let y=0;y<r;y++){const C=g[y][A],M=g[y+1][A],R=g[y+1][A+1],L=g[y][A+1];(e>0||y!==0)&&(h.push(C,M,L),T+=3),(t>0||y!==r-1)&&(h.push(M,R,L),T+=3)}c.addGroup(p,T,0),p+=T}function I(_){const b=m,T=new Oe,w=new P;let A=0;const y=_===!0?e:t,C=_===!0?1:-1;for(let R=1;R<=n;R++)d.push(0,E*C,0),u.push(0,C,0),f.push(.5,.5),m++;const M=m;for(let R=0;R<=n;R++){const S=R/n*l+a,U=Math.cos(S),z=Math.sin(S);w.x=y*z,w.y=E*C,w.z=y*U,d.push(w.x,w.y,w.z),u.push(0,C,0),T.x=U*.5+.5,T.y=z*.5*C+.5,f.push(T.x,T.y),m++}for(let R=0;R<n;R++){const L=b+R,S=M+R;_===!0?h.push(S,S+1,L):h.push(S+1,S,L),A+=3}c.addGroup(p,A,_===!0?1:2),p+=A}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new ui(e.radiusTop,e.radiusBottom,e.height,e.radialSegments,e.heightSegments,e.openEnded,e.thetaStart,e.thetaLength)}}class Fm extends We{constructor(e=[],t=[],i=1,n=0){super(),this.type="PolyhedronGeometry",this.parameters={vertices:e,indices:t,radius:i,detail:n};const r=[],o=[];a(n),c(i),h(),this.setAttribute("position",new dt(r,3)),this.setAttribute("normal",new dt(r.slice(),3)),this.setAttribute("uv",new dt(o,2)),n===0?this.computeVertexNormals():this.normalizeNormals();function a(v){const I=new P,_=new P,b=new P;for(let T=0;T<t.length;T+=3)f(t[T+0],I),f(t[T+1],_),f(t[T+2],b),l(I,_,b,v)}function l(v,I,_,b){const T=b+1,w=[];for(let A=0;A<=T;A++){w[A]=[];const y=v.clone().lerp(_,A/T),C=I.clone().lerp(_,A/T),M=T-A;for(let R=0;R<=M;R++)R===0&&A===T?w[A][R]=y:w[A][R]=y.clone().lerp(C,R/M)}for(let A=0;A<T;A++)for(let y=0;y<2*(T-A)-1;y++){const C=Math.floor(y/2);y%2===0?(u(w[A][C+1]),u(w[A+1][C]),u(w[A][C])):(u(w[A][C+1]),u(w[A+1][C+1]),u(w[A+1][C]))}}function c(v){const I=new P;for(let _=0;_<r.length;_+=3)I.x=r[_+0],I.y=r[_+1],I.z=r[_+2],I.normalize().multiplyScalar(v),r[_+0]=I.x,r[_+1]=I.y,r[_+2]=I.z}function h(){const v=new P;for(let I=0;I<r.length;I+=3){v.x=r[I+0],v.y=r[I+1],v.z=r[I+2];const _=E(v)/2/Math.PI+.5,b=p(v)/Math.PI+.5;o.push(_,1-b)}m(),d()}function d(){for(let v=0;v<o.length;v+=6){const I=o[v+0],_=o[v+2],b=o[v+4],T=Math.max(I,_,b),w=Math.min(I,_,b);T>.9&&w<.1&&(I<.2&&(o[v+0]+=1),_<.2&&(o[v+2]+=1),b<.2&&(o[v+4]+=1))}}function u(v){r.push(v.x,v.y,v.z)}function f(v,I){const _=v*3;I.x=e[_+0],I.y=e[_+1],I.z=e[_+2]}function m(){const v=new P,I=new P,_=new P,b=new P,T=new Oe,w=new Oe,A=new Oe;for(let y=0,C=0;y<r.length;y+=9,C+=6){v.set(r[y+0],r[y+1],r[y+2]),I.set(r[y+3],r[y+4],r[y+5]),_.set(r[y+6],r[y+7],r[y+8]),T.set(o[C+0],o[C+1]),w.set(o[C+2],o[C+3]),A.set(o[C+4],o[C+5]),b.copy(v).add(I).add(_).divideScalar(3);const M=E(b);g(T,C+0,v,M),g(w,C+2,I,M),g(A,C+4,_,M)}}function g(v,I,_,b){b<0&&v.x===1&&(o[I]=v.x-1),_.x===0&&_.z===0&&(o[I]=b/2/Math.PI+.5)}function E(v){return Math.atan2(v.z,-v.x)}function p(v){return Math.atan2(-v.y,Math.sqrt(v.x*v.x+v.z*v.z))}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new Fm(e.vertices,e.indices,e.radius,e.details)}}const pc=new P,mc=new P,ad=new P,gc=new Ft;class Pm extends We{constructor(e=null,t=1){if(super(),this.type="EdgesGeometry",this.parameters={geometry:e,thresholdAngle:t},e!==null){const n=Math.pow(10,4),r=Math.cos(jo*t),o=e.getIndex(),a=e.getAttribute("position"),l=o?o.count:a.count,c=[0,0,0],h=["a","b","c"],d=new Array(3),u={},f=[];for(let m=0;m<l;m+=3){o?(c[0]=o.getX(m),c[1]=o.getX(m+1),c[2]=o.getX(m+2)):(c[0]=m,c[1]=m+1,c[2]=m+2);const{a:g,b:E,c:p}=gc;if(g.fromBufferAttribute(a,c[0]),E.fromBufferAttribute(a,c[1]),p.fromBufferAttribute(a,c[2]),gc.getNormal(ad),d[0]=`${Math.round(g.x*n)},${Math.round(g.y*n)},${Math.round(g.z*n)}`,d[1]=`${Math.round(E.x*n)},${Math.round(E.y*n)},${Math.round(E.z*n)}`,d[2]=`${Math.round(p.x*n)},${Math.round(p.y*n)},${Math.round(p.z*n)}`,!(d[0]===d[1]||d[1]===d[2]||d[2]===d[0]))for(let v=0;v<3;v++){const I=(v+1)%3,_=d[v],b=d[I],T=gc[h[v]],w=gc[h[I]],A=`${_}_${b}`,y=`${b}_${_}`;y in u&&u[y]?(ad.dot(u[y].normal)<=r&&(f.push(T.x,T.y,T.z),f.push(w.x,w.y,w.z)),u[y]=null):A in u||(u[A]={index0:c[v],index1:c[I],normal:ad.clone()})}}for(const m in u)if(u[m]){const{index0:g,index1:E}=u[m];pc.fromBufferAttribute(a,g),mc.fromBufferAttribute(a,E),f.push(pc.x,pc.y,pc.z),f.push(mc.x,mc.y,mc.z)}this.setAttribute("position",new dt(f,3))}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}}function HT(s,e,t=2){const i=e&&e.length,n=i?e[0]*t:s.length;let r=KI(s,0,n,t,!0);const o=[];if(!r||r.next===r.prev)return o;let a,l,c;if(i&&(r=jT(s,e,r,t)),s.length>80*t){a=1/0,l=1/0;let h=-1/0,d=-1/0;for(let u=t;u<n;u+=t){const f=s[u],m=s[u+1];f<a&&(a=f),m<l&&(l=m),f>h&&(h=f),m>d&&(d=m)}c=Math.max(h-a,d-l),c=c!==0?32767/c:0}return _l(r,o,t,a,l,c,0),o}function KI(s,e,t,i,n){let r;if(n===rC(s,e,t,i)>0)for(let o=e;o<t;o+=i)r=Wg(o/i|0,s[o],s[o+1],r);else for(let o=t-i;o>=e;o-=i)r=Wg(o/i|0,s[o],s[o+1],r);return r&&oa(r,r.next)&&(bl(r),r=r.next),r}function Ur(s,e){if(!s)return s;e||(e=s);let t=s,i;do if(i=!1,!t.steiner&&(oa(t,t.next)||Ut(t.prev,t,t.next)===0)){if(bl(t),t=e=t.prev,t===t.next)break;i=!0}else t=t.next;while(i||t!==e);return e}function _l(s,e,t,i,n,r,o){if(!s)return;!o&&r&&$T(s,i,n,r);let a=s;for(;s.prev!==s.next;){const l=s.prev,c=s.next;if(r?WT(s,i,n,r):YT(s)){e.push(l.i,s.i,c.i),bl(s),s=c.next,a=c.next;continue}if(s=c,s===a){o?o===1?(s=XT(Ur(s),e),_l(s,e,t,i,n,r,2)):o===2&&ZT(s,e,t,i,n,r):_l(Ur(s),e,t,i,n,r,1);break}}}function YT(s){const e=s.prev,t=s,i=s.next;if(Ut(e,t,i)>=0)return!1;const n=e.x,r=t.x,o=i.x,a=e.y,l=t.y,c=i.y,h=Math.min(n,r,o),d=Math.min(a,l,c),u=Math.max(n,r,o),f=Math.max(a,l,c);let m=i.next;for(;m!==e;){if(m.x>=h&&m.x<=u&&m.y>=d&&m.y<=f&&qa(n,a,r,l,o,c,m.x,m.y)&&Ut(m.prev,m,m.next)>=0)return!1;m=m.next}return!0}function WT(s,e,t,i){const n=s.prev,r=s,o=s.next;if(Ut(n,r,o)>=0)return!1;const a=n.x,l=r.x,c=o.x,h=n.y,d=r.y,u=o.y,f=Math.min(a,l,c),m=Math.min(h,d,u),g=Math.max(a,l,c),E=Math.max(h,d,u),p=np(f,m,e,t,i),v=np(g,E,e,t,i);let I=s.prevZ,_=s.nextZ;for(;I&&I.z>=p&&_&&_.z<=v;){if(I.x>=f&&I.x<=g&&I.y>=m&&I.y<=E&&I!==n&&I!==o&&qa(a,h,l,d,c,u,I.x,I.y)&&Ut(I.prev,I,I.next)>=0||(I=I.prevZ,_.x>=f&&_.x<=g&&_.y>=m&&_.y<=E&&_!==n&&_!==o&&qa(a,h,l,d,c,u,_.x,_.y)&&Ut(_.prev,_,_.next)>=0))return!1;_=_.nextZ}for(;I&&I.z>=p;){if(I.x>=f&&I.x<=g&&I.y>=m&&I.y<=E&&I!==n&&I!==o&&qa(a,h,l,d,c,u,I.x,I.y)&&Ut(I.prev,I,I.next)>=0)return!1;I=I.prevZ}for(;_&&_.z<=v;){if(_.x>=f&&_.x<=g&&_.y>=m&&_.y<=E&&_!==n&&_!==o&&qa(a,h,l,d,c,u,_.x,_.y)&&Ut(_.prev,_,_.next)>=0)return!1;_=_.nextZ}return!0}function XT(s,e){let t=s;do{const i=t.prev,n=t.next.next;!oa(i,n)&&JI(i,t,t.next,n)&&vl(i,n)&&vl(n,i)&&(e.push(i.i,t.i,n.i),bl(t),bl(t.next),t=s=n),t=t.next}while(t!==s);return Ur(t)}function ZT(s,e,t,i,n,r){let o=s;do{let a=o.next.next;for(;a!==o.prev;){if(o.i!==a.i&&iC(o,a)){let l=$I(o,a);o=Ur(o,o.next),l=Ur(l,l.next),_l(o,e,t,i,n,r,0),_l(l,e,t,i,n,r,0);return}a=a.next}o=o.next}while(o!==s)}function jT(s,e,t,i){const n=[];for(let r=0,o=e.length;r<o;r++){const a=e[r]*i,l=r<o-1?e[r+1]*i:s.length,c=KI(s,a,l,i,!1);c===c.next&&(c.steiner=!0),n.push(tC(c))}n.sort(qT);for(let r=0;r<n.length;r++)t=KT(n[r],t);return t}function qT(s,e){let t=s.x-e.x;if(t===0&&(t=s.y-e.y,t===0)){const i=(s.next.y-s.y)/(s.next.x-s.x),n=(e.next.y-e.y)/(e.next.x-e.x);t=i-n}return t}function KT(s,e){const t=QT(s,e);if(!t)return e;const i=$I(t,s);return Ur(i,i.next),Ur(t,t.next)}function QT(s,e){let t=e;const i=s.x,n=s.y;let r=-1/0,o;if(oa(s,t))return t;do{if(oa(s,t.next))return t.next;if(n<=t.y&&n>=t.next.y&&t.next.y!==t.y){const d=t.x+(n-t.y)*(t.next.x-t.x)/(t.next.y-t.y);if(d<=i&&d>r&&(r=d,o=t.x<t.next.x?t:t.next,d===i))return o}t=t.next}while(t!==e);if(!o)return null;const a=o,l=o.x,c=o.y;let h=1/0;t=o;do{if(i>=t.x&&t.x>=l&&i!==t.x&&QI(n<c?i:r,n,l,c,n<c?r:i,n,t.x,t.y)){const d=Math.abs(n-t.y)/(i-t.x);vl(t,s)&&(d<h||d===h&&(t.x>o.x||t.x===o.x&&JT(o,t)))&&(o=t,h=d)}t=t.next}while(t!==a);return o}function JT(s,e){return Ut(s.prev,s,e.prev)<0&&Ut(e.next,s,s.next)<0}function $T(s,e,t,i){let n=s;do n.z===0&&(n.z=np(n.x,n.y,e,t,i)),n.prevZ=n.prev,n.nextZ=n.next,n=n.next;while(n!==s);n.prevZ.nextZ=null,n.prevZ=null,eC(n)}function eC(s){let e,t=1;do{let i=s,n;s=null;let r=null;for(e=0;i;){e++;let o=i,a=0;for(let c=0;c<t&&(a++,o=o.nextZ,!!o);c++);let l=t;for(;a>0||l>0&&o;)a!==0&&(l===0||!o||i.z<=o.z)?(n=i,i=i.nextZ,a--):(n=o,o=o.nextZ,l--),r?r.nextZ=n:s=n,n.prevZ=r,r=n;i=o}r.nextZ=null,t*=2}while(e>1);return s}function np(s,e,t,i,n){return s=(s-t)*n|0,e=(e-i)*n|0,s=(s|s<<8)&16711935,s=(s|s<<4)&252645135,s=(s|s<<2)&858993459,s=(s|s<<1)&1431655765,e=(e|e<<8)&16711935,e=(e|e<<4)&252645135,e=(e|e<<2)&858993459,e=(e|e<<1)&1431655765,s|e<<1}function tC(s){let e=s,t=s;do(e.x<t.x||e.x===t.x&&e.y<t.y)&&(t=e),e=e.next;while(e!==s);return t}function QI(s,e,t,i,n,r,o,a){return(n-o)*(e-a)>=(s-o)*(r-a)&&(s-o)*(i-a)>=(t-o)*(e-a)&&(t-o)*(r-a)>=(n-o)*(i-a)}function qa(s,e,t,i,n,r,o,a){return!(s===o&&e===a)&&QI(s,e,t,i,n,r,o,a)}function iC(s,e){return s.next.i!==e.i&&s.prev.i!==e.i&&!nC(s,e)&&(vl(s,e)&&vl(e,s)&&sC(s,e)&&(Ut(s.prev,s,e.prev)||Ut(s,e.prev,e))||oa(s,e)&&Ut(s.prev,s,s.next)>0&&Ut(e.prev,e,e.next)>0)}function Ut(s,e,t){return(e.y-s.y)*(t.x-e.x)-(e.x-s.x)*(t.y-e.y)}function oa(s,e){return s.x===e.x&&s.y===e.y}function JI(s,e,t,i){const n=Ic(Ut(s,e,t)),r=Ic(Ut(s,e,i)),o=Ic(Ut(t,i,s)),a=Ic(Ut(t,i,e));return!!(n!==r&&o!==a||n===0&&Ec(s,t,e)||r===0&&Ec(s,i,e)||o===0&&Ec(t,s,i)||a===0&&Ec(t,e,i))}function Ec(s,e,t){return e.x<=Math.max(s.x,t.x)&&e.x>=Math.min(s.x,t.x)&&e.y<=Math.max(s.y,t.y)&&e.y>=Math.min(s.y,t.y)}function Ic(s){return s>0?1:s<0?-1:0}function nC(s,e){let t=s;do{if(t.i!==s.i&&t.next.i!==s.i&&t.i!==e.i&&t.next.i!==e.i&&JI(t,t.next,s,e))return!0;t=t.next}while(t!==s);return!1}function vl(s,e){return Ut(s.prev,s,s.next)<0?Ut(s,e,s.next)>=0&&Ut(s,s.prev,e)>=0:Ut(s,e,s.prev)<0||Ut(s,s.next,e)<0}function sC(s,e){let t=s,i=!1;const n=(s.x+e.x)/2,r=(s.y+e.y)/2;do t.y>r!=t.next.y>r&&t.next.y!==t.y&&n<(t.next.x-t.x)*(r-t.y)/(t.next.y-t.y)+t.x&&(i=!i),t=t.next;while(t!==s);return i}function $I(s,e){const t=sp(s.i,s.x,s.y),i=sp(e.i,e.x,e.y),n=s.next,r=e.prev;return s.next=e,e.prev=s,t.next=n,n.prev=t,i.next=t,t.prev=i,r.next=i,i.prev=r,i}function Wg(s,e,t,i){const n=sp(s,e,t);return i?(n.next=i.next,n.prev=i,i.next.prev=n,i.next=n):(n.prev=n,n.next=n),n}function bl(s){s.next.prev=s.prev,s.prev.next=s.next,s.prevZ&&(s.prevZ.nextZ=s.nextZ),s.nextZ&&(s.nextZ.prevZ=s.prevZ)}function sp(s,e,t){return{i:s,x:e,y:t,prev:null,next:null,z:0,prevZ:null,nextZ:null,steiner:!1}}function rC(s,e,t,i){let n=0;for(let r=e,o=t-i;r<t;r+=i)n+=(s[o]-s[r])*(s[r+1]+s[o+1]),o=r;return n}class oC{static triangulate(e,t,i=2){return HT(e,t,i)}}class Om{static area(e){const t=e.length;let i=0;for(let n=t-1,r=0;r<t;n=r++)i+=e[n].x*e[r].y-e[r].x*e[n].y;return i*.5}static isClockWise(e){return Om.area(e)<0}static triangulateShape(e,t){const i=[],n=[],r=[];Xg(e),Zg(i,e);let o=e.length;t.forEach(Xg);for(let l=0;l<t.length;l++)n.push(o),o+=t[l].length,Zg(i,t[l]);const a=oC.triangulate(i,n);for(let l=0;l<a.length;l+=3)r.push(a.slice(l,l+3));return r}}function Xg(s){const e=s.length;e>2&&s[e-1].equals(s[0])&&s.pop()}function Zg(s,e){for(let t=0;t<e.length;t++)s.push(e[t].x),s.push(e[t].y)}class Bo extends Fm{constructor(e=1,t=0){const i=[1,0,0,-1,0,0,0,1,0,0,-1,0,0,0,1,0,0,-1],n=[0,2,4,0,4,3,0,3,5,0,5,2,1,2,5,1,5,3,1,3,4,1,4,2];super(i,n,e,t),this.type="OctahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new Bo(e.radius,e.detail)}}class er extends We{constructor(e=1,t=1,i=1,n=1){super(),this.type="PlaneGeometry",this.parameters={width:e,height:t,widthSegments:i,heightSegments:n};const r=e/2,o=t/2,a=Math.floor(i),l=Math.floor(n),c=a+1,h=l+1,d=e/a,u=t/l,f=[],m=[],g=[],E=[];for(let p=0;p<h;p++){const v=p*u-o;for(let I=0;I<c;I++){const _=I*d-r;m.push(_,-v,0),g.push(0,0,1),E.push(I/a),E.push(1-p/l)}}for(let p=0;p<l;p++)for(let v=0;v<a;v++){const I=v+c*p,_=v+c*(p+1),b=v+1+c*(p+1),T=v+1+c*p;f.push(I,_,T),f.push(_,b,T)}this.setIndex(f),this.setAttribute("position",new dt(m,3)),this.setAttribute("normal",new dt(g,3)),this.setAttribute("uv",new dt(E,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new er(e.width,e.height,e.widthSegments,e.heightSegments)}}class Lm extends We{constructor(e=1,t=32,i=16,n=0,r=Math.PI*2,o=0,a=Math.PI){super(),this.type="SphereGeometry",this.parameters={radius:e,widthSegments:t,heightSegments:i,phiStart:n,phiLength:r,thetaStart:o,thetaLength:a},t=Math.max(3,Math.floor(t)),i=Math.max(2,Math.floor(i));const l=Math.min(o+a,Math.PI);let c=0;const h=[],d=new P,u=new P,f=[],m=[],g=[],E=[];for(let p=0;p<=i;p++){const v=[],I=p/i;let _=0;p===0&&o===0?_=.5/t:p===i&&l===Math.PI&&(_=-.5/t);for(let b=0;b<=t;b++){const T=b/t;d.x=-e*Math.cos(n+T*r)*Math.sin(o+I*a),d.y=e*Math.cos(o+I*a),d.z=e*Math.sin(n+T*r)*Math.sin(o+I*a),m.push(d.x,d.y,d.z),u.copy(d).normalize(),g.push(u.x,u.y,u.z),E.push(T+_,1-I),v.push(c++)}h.push(v)}for(let p=0;p<i;p++)for(let v=0;v<t;v++){const I=h[p][v+1],_=h[p][v],b=h[p+1][v],T=h[p+1][v+1];(p!==0||o>0)&&f.push(I,_,T),(p!==i-1||l<Math.PI)&&f.push(_,b,T)}this.setIndex(f),this.setAttribute("position",new dt(m,3)),this.setAttribute("normal",new dt(g,3)),this.setAttribute("uv",new dt(E,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new Lm(e.radius,e.widthSegments,e.heightSegments,e.phiStart,e.phiLength,e.thetaStart,e.thetaLength)}}class yr extends We{constructor(e=1,t=.4,i=12,n=48,r=Math.PI*2){super(),this.type="TorusGeometry",this.parameters={radius:e,tube:t,radialSegments:i,tubularSegments:n,arc:r},i=Math.floor(i),n=Math.floor(n);const o=[],a=[],l=[],c=[],h=new P,d=new P,u=new P;for(let f=0;f<=i;f++)for(let m=0;m<=n;m++){const g=m/n*r,E=f/i*Math.PI*2;d.x=(e+t*Math.cos(E))*Math.cos(g),d.y=(e+t*Math.cos(E))*Math.sin(g),d.z=t*Math.sin(E),a.push(d.x,d.y,d.z),h.x=e*Math.cos(g),h.y=e*Math.sin(g),u.subVectors(d,h).normalize(),l.push(u.x,u.y,u.z),c.push(m/n),c.push(f/i)}for(let f=1;f<=i;f++)for(let m=1;m<=n;m++){const g=(n+1)*f+m-1,E=(n+1)*(f-1)+m-1,p=(n+1)*(f-1)+m,v=(n+1)*f+m;o.push(g,E,v),o.push(E,p,v)}this.setIndex(o),this.setAttribute("position",new dt(a,3)),this.setAttribute("normal",new dt(l,3)),this.setAttribute("uv",new dt(c,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new yr(e.radius,e.tube,e.radialSegments,e.tubularSegments,e.arc)}}class aC extends We{constructor(e=null){if(super(),this.type="WireframeGeometry",this.parameters={geometry:e},e!==null){const t=[],i=new Set,n=new P,r=new P;if(e.index!==null){const o=e.attributes.position,a=e.index;let l=e.groups;l.length===0&&(l=[{start:0,count:a.count,materialIndex:0}]);for(let c=0,h=l.length;c<h;++c){const d=l[c],u=d.start,f=d.count;for(let m=u,g=u+f;m<g;m+=3)for(let E=0;E<3;E++){const p=a.getX(m+E),v=a.getX(m+(E+1)%3);n.fromBufferAttribute(o,p),r.fromBufferAttribute(o,v),jg(n,r,i)===!0&&(t.push(n.x,n.y,n.z),t.push(r.x,r.y,r.z))}}}else{const o=e.attributes.position;for(let a=0,l=o.count/3;a<l;a++)for(let c=0;c<3;c++){const h=3*a+c,d=3*a+(c+1)%3;n.fromBufferAttribute(o,h),r.fromBufferAttribute(o,d),jg(n,r,i)===!0&&(t.push(n.x,n.y,n.z),t.push(r.x,r.y,r.z))}}this.setAttribute("position",new dt(t,3))}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}}function jg(s,e,t){const i=`${s.x},${s.y},${s.z}-${e.x},${e.y},${e.z}`,n=`${e.x},${e.y},${e.z}-${s.x},${s.y},${s.z}`;return t.has(i)===!0||t.has(n)===!0?!1:(t.add(i),t.add(n),!0)}class dL extends $s{constructor(e){super(),this.isMeshStandardMaterial=!0,this.type="MeshStandardMaterial",this.defines={STANDARD:""},this.color=new Ne(16777215),this.roughness=1,this.metalness=0,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Ne(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Sm,this.normalScale=new Oe(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.roughnessMap=null,this.metalnessMap=null,this.alphaMap=null,this.envMap=null,this.envMapRotation=new Ki,this.envMapIntensity=1,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.defines={STANDARD:""},this.color.copy(e.color),this.roughness=e.roughness,this.metalness=e.metalness,this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.roughnessMap=e.roughnessMap,this.metalnessMap=e.metalnessMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.envMapRotation.copy(e.envMapRotation),this.envMapIntensity=e.envMapIntensity,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this.fog=e.fog,this}}class aa extends $s{constructor(e){super(),this.isMeshLambertMaterial=!0,this.type="MeshLambertMaterial",this.color=new Ne(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Ne(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Sm,this.normalScale=new Oe(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.envMapRotation=new Ki,this.combine=vm,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.envMapRotation.copy(e.envMapRotation),this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this.fog=e.fog,this}}class Dm extends $s{constructor(e){super(),this.isMeshDepthMaterial=!0,this.type="MeshDepthMaterial",this.depthPacking=Uy,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.setValues(e)}copy(e){return super.copy(e),this.depthPacking=e.depthPacking,this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this}}class lC extends $s{constructor(e){super(),this.isMeshDistanceMaterial=!0,this.type="MeshDistanceMaterial",this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.setValues(e)}copy(e){return super.copy(e),this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this}}class Zn extends YI{constructor(e=-1,t=1,i=1,n=-1,r=.1,o=2e3){super(),this.isOrthographicCamera=!0,this.type="OrthographicCamera",this.zoom=1,this.view=null,this.left=e,this.right=t,this.top=i,this.bottom=n,this.near=r,this.far=o,this.updateProjectionMatrix()}copy(e,t){return super.copy(e,t),this.left=e.left,this.right=e.right,this.top=e.top,this.bottom=e.bottom,this.near=e.near,this.far=e.far,this.zoom=e.zoom,this.view=e.view===null?null:Object.assign({},e.view),this}setViewOffset(e,t,i,n,r,o){this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=i,this.view.offsetY=n,this.view.width=r,this.view.height=o,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const e=(this.right-this.left)/(2*this.zoom),t=(this.top-this.bottom)/(2*this.zoom),i=(this.right+this.left)/2,n=(this.top+this.bottom)/2;let r=i-e,o=i+e,a=n+t,l=n-t;if(this.view!==null&&this.view.enabled){const c=(this.right-this.left)/this.view.fullWidth/this.zoom,h=(this.top-this.bottom)/this.view.fullHeight/this.zoom;r+=c*this.view.offsetX,o=r+c*this.view.width,a-=h*this.view.offsetY,l=a-h*this.view.height}this.projectionMatrix.makeOrthographic(r,o,a,l,this.near,this.far,this.coordinateSystem),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){const t=super.toJSON(e);return t.object.zoom=this.zoom,t.object.left=this.left,t.object.right=this.right,t.object.top=this.top,t.object.bottom=this.bottom,t.object.near=this.near,t.object.far=this.far,this.view!==null&&(t.object.view=Object.assign({},this.view)),t}}class cC extends We{constructor(){super(),this.isInstancedBufferGeometry=!0,this.type="InstancedBufferGeometry",this.instanceCount=1/0}copy(e){return super.copy(e),this.instanceCount=e.instanceCount,this}toJSON(){const e=super.toJSON();return e.instanceCount=this.instanceCount,e.isInstancedBufferGeometry=!0,e}}class hC extends Gi{constructor(e=[]){super(),this.isArrayCamera=!0,this.cameras=e,this.index=0}}class e_{constructor(e=!0){this.autoStart=e,this.startTime=0,this.oldTime=0,this.elapsedTime=0,this.running=!1}start(){this.startTime=qg(),this.oldTime=this.startTime,this.elapsedTime=0,this.running=!0}stop(){this.getElapsedTime(),this.running=!1,this.autoStart=!1}getElapsedTime(){return this.getDelta(),this.elapsedTime}getDelta(){let e=0;if(this.autoStart&&!this.running)return this.start(),0;if(this.running){const t=qg();e=(t-this.oldTime)/1e3,this.oldTime=t,this.elapsedTime+=e}return e}}function qg(){return performance.now()}class eu extends BT{constructor(e,t,i=1){super(e,t),this.isInstancedInterleavedBuffer=!0,this.meshPerAttribute=i}copy(e){return super.copy(e),this.meshPerAttribute=e.meshPerAttribute,this}clone(e){const t=super.clone(e);return t.meshPerAttribute=this.meshPerAttribute,t}toJSON(e){const t=super.toJSON(e);return t.isInstancedInterleavedBuffer=!0,t.meshPerAttribute=this.meshPerAttribute,t}}const Kg=new _e;class _u{constructor(e,t,i=0,n=1/0){this.ray=new da(e,t),this.near=i,this.far=n,this.camera=null,this.layers=new Mm,this.params={Mesh:{},Line:{threshold:1},LOD:{},Points:{threshold:1},Sprite:{}}}set(e,t){this.ray.set(e,t)}setFromCamera(e,t){t.isPerspectiveCamera?(this.ray.origin.setFromMatrixPosition(t.matrixWorld),this.ray.direction.set(e.x,e.y,.5).unproject(t).sub(this.ray.origin).normalize(),this.camera=t):t.isOrthographicCamera?(this.ray.origin.set(e.x,e.y,(t.near+t.far)/(t.near-t.far)).unproject(t),this.ray.direction.set(0,0,-1).transformDirection(t.matrixWorld),this.camera=t):console.error("THREE.Raycaster: Unsupported camera type: "+t.type)}setFromXRController(e){return Kg.identity().extractRotation(e.matrixWorld),this.ray.origin.setFromMatrixPosition(e.matrixWorld),this.ray.direction.set(0,0,-1).applyMatrix4(Kg),this}intersectObject(e,t=!0,i=[]){return rp(e,this,i,t),i.sort(Qg),i}intersectObjects(e,t=!0,i=[]){for(let n=0,r=e.length;n<r;n++)rp(e[n],this,i,t);return i.sort(Qg),i}}function Qg(s,e){return s.distance-e.distance}function rp(s,e,t,i){let n=!0;if(s.layers.test(e.layers)&&s.raycast(e,t)===!1&&(n=!1),n===!0&&i===!0){const r=s.children;for(let o=0,a=r.length;o<a;o++)rp(r[o],e,t,!0)}}class uC{constructor(e=1,t=0,i=0){this.radius=e,this.phi=t,this.theta=i}set(e,t,i){return this.radius=e,this.phi=t,this.theta=i,this}copy(e){return this.radius=e.radius,this.phi=e.phi,this.theta=e.theta,this}makeSafe(){return this.phi=ot(this.phi,1e-6,Math.PI-1e-6),this}setFromVector3(e){return this.setFromCartesianCoords(e.x,e.y,e.z)}setFromCartesianCoords(e,t,i){return this.radius=Math.sqrt(e*e+t*t+i*i),this.radius===0?(this.theta=0,this.phi=0):(this.theta=Math.atan2(e,i),this.phi=Math.acos(ot(t/this.radius,-1,1))),this}clone(){return new this.constructor().copy(this)}}const Jg=new P,_c=new P;class xt{constructor(e=new P,t=new P){this.start=e,this.end=t}set(e,t){return this.start.copy(e),this.end.copy(t),this}copy(e){return this.start.copy(e.start),this.end.copy(e.end),this}getCenter(e){return e.addVectors(this.start,this.end).multiplyScalar(.5)}delta(e){return e.subVectors(this.end,this.start)}distanceSq(){return this.start.distanceToSquared(this.end)}distance(){return this.start.distanceTo(this.end)}at(e,t){return this.delta(t).multiplyScalar(e).add(this.start)}closestPointToPointParameter(e,t){Jg.subVectors(e,this.start),_c.subVectors(this.end,this.start);const i=_c.dot(_c);let r=_c.dot(Jg)/i;return t&&(r=ot(r,0,1)),r}closestPointToPoint(e,t,i){const n=this.closestPointToPointParameter(e,t);return this.delta(i).multiplyScalar(n).add(this.start)}applyMatrix4(e){return this.start.applyMatrix4(e),this.end.applyMatrix4(e),this}equals(e){return e.start.equals(this.start)&&e.end.equals(this.end)}clone(){return new this.constructor().copy(this)}}class dC extends Gr{constructor(e,t=null){super(),this.object=e,this.domElement=t,this.enabled=!0,this.state=-1,this.keys={},this.mouseButtons={LEFT:null,MIDDLE:null,RIGHT:null},this.touches={ONE:null,TWO:null}}connect(e){if(e===void 0){console.warn("THREE.Controls: connect() now requires an element.");return}this.domElement!==null&&this.disconnect(),this.domElement=e}disconnect(){}dispose(){}update(){}}function $g(s,e,t,i){const n=fC(i);switch(t){case FI:return s*e;case OI:return s*e;case LI:return s*e*2;case Iu:return s*e/n.components*n.byteLength;case Cm:return s*e/n.components*n.byteLength;case DI:return s*e*2/n.components*n.byteLength;case xm:return s*e*2/n.components*n.byteLength;case PI:return s*e*3/n.components*n.byteLength;case Qt:return s*e*4/n.components*n.byteLength;case wm:return s*e*4/n.components*n.byteLength;case Fh:case Ph:return Math.floor((s+3)/4)*Math.floor((e+3)/4)*8;case Oh:case Lh:return Math.floor((s+3)/4)*Math.floor((e+3)/4)*16;case Rf:case Ff:return Math.max(s,16)*Math.max(e,8)/4;case Af:case Mf:return Math.max(s,8)*Math.max(e,8)/2;case Pf:case Of:return Math.floor((s+3)/4)*Math.floor((e+3)/4)*8;case Lf:return Math.floor((s+3)/4)*Math.floor((e+3)/4)*16;case Df:return Math.floor((s+3)/4)*Math.floor((e+3)/4)*16;case Nf:return Math.floor((s+4)/5)*Math.floor((e+3)/4)*16;case Uf:return Math.floor((s+4)/5)*Math.floor((e+4)/5)*16;case Bf:return Math.floor((s+5)/6)*Math.floor((e+4)/5)*16;case zf:return Math.floor((s+5)/6)*Math.floor((e+5)/6)*16;case Vf:return Math.floor((s+7)/8)*Math.floor((e+4)/5)*16;case kf:return Math.floor((s+7)/8)*Math.floor((e+5)/6)*16;case Gf:return Math.floor((s+7)/8)*Math.floor((e+7)/8)*16;case Hf:return Math.floor((s+9)/10)*Math.floor((e+4)/5)*16;case Yf:return Math.floor((s+9)/10)*Math.floor((e+5)/6)*16;case Wf:return Math.floor((s+9)/10)*Math.floor((e+7)/8)*16;case Xf:return Math.floor((s+9)/10)*Math.floor((e+9)/10)*16;case Zf:return Math.floor((s+11)/12)*Math.floor((e+9)/10)*16;case jf:return Math.floor((s+11)/12)*Math.floor((e+11)/12)*16;case Dh:case qf:case Kf:return Math.ceil(s/4)*Math.ceil(e/4)*16;case NI:case Qf:return Math.ceil(s/4)*Math.ceil(e/4)*8;case Jf:case $f:return Math.ceil(s/4)*Math.ceil(e/4)*16}throw new Error(`Unable to determine texture byte length for ${t} format.`)}function fC(s){switch(s){case Cs:case AI:return{byteLength:1,components:1};case El:case RI:case ki:return{byteLength:2,components:1};case ym:case Tm:return{byteLength:2,components:4};case Yn:case bm:case Sn:return{byteLength:4,components:1};case MI:return{byteLength:4,components:3}}throw new Error(`Unknown texture type ${s}.`)}typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",{detail:{revision:gu}}));typeof window<"u"&&(window.__THREE__?console.warn("WARNING: Multiple instances of Three.js being imported."):window.__THREE__=gu);/**
 * @license
 * Copyright 2010-2025 Three.js Authors
 * SPDX-License-Identifier: MIT
 */function t_(){let s=null,e=!1,t=null,i=null;function n(r,o){t(r,o),i=s.requestAnimationFrame(n)}return{start:function(){e!==!0&&t!==null&&(i=s.requestAnimationFrame(n),e=!0)},stop:function(){s.cancelAnimationFrame(i),e=!1},setAnimationLoop:function(r){t=r},setContext:function(r){s=r}}}function pC(s){const e=new WeakMap;function t(a,l){const c=a.array,h=a.usage,d=c.byteLength,u=s.createBuffer();s.bindBuffer(l,u),s.bufferData(l,c,h),a.onUploadCallback();let f;if(c instanceof Float32Array)f=s.FLOAT;else if(c instanceof Uint16Array)a.isFloat16BufferAttribute?f=s.HALF_FLOAT:f=s.UNSIGNED_SHORT;else if(c instanceof Int16Array)f=s.SHORT;else if(c instanceof Uint32Array)f=s.UNSIGNED_INT;else if(c instanceof Int32Array)f=s.INT;else if(c instanceof Int8Array)f=s.BYTE;else if(c instanceof Uint8Array)f=s.UNSIGNED_BYTE;else if(c instanceof Uint8ClampedArray)f=s.UNSIGNED_BYTE;else throw new Error("THREE.WebGLAttributes: Unsupported buffer data format: "+c);return{buffer:u,type:f,bytesPerElement:c.BYTES_PER_ELEMENT,version:a.version,size:d}}function i(a,l,c){const h=l.array,d=l.updateRanges;if(s.bindBuffer(c,a),d.length===0)s.bufferSubData(c,0,h);else{d.sort((f,m)=>f.start-m.start);let u=0;for(let f=1;f<d.length;f++){const m=d[u],g=d[f];g.start<=m.start+m.count+1?m.count=Math.max(m.count,g.start+g.count-m.start):(++u,d[u]=g)}d.length=u+1;for(let f=0,m=d.length;f<m;f++){const g=d[f];s.bufferSubData(c,g.start*h.BYTES_PER_ELEMENT,h,g.start,g.count)}l.clearUpdateRanges()}l.onUploadCallback()}function n(a){return a.isInterleavedBufferAttribute&&(a=a.data),e.get(a)}function r(a){a.isInterleavedBufferAttribute&&(a=a.data);const l=e.get(a);l&&(s.deleteBuffer(l.buffer),e.delete(a))}function o(a,l){if(a.isInterleavedBufferAttribute&&(a=a.data),a.isGLBufferAttribute){const h=e.get(a);(!h||h.version<a.version)&&e.set(a,{buffer:a.buffer,type:a.type,bytesPerElement:a.elementSize,version:a.version});return}const c=e.get(a);if(c===void 0)e.set(a,t(a,l));else if(c.version<a.version){if(c.size!==a.array.byteLength)throw new Error("THREE.WebGLAttributes: The size of the buffer attribute's array buffer does not match the original size. Resizing buffer attributes is not supported.");i(c.buffer,a,l),c.version=a.version}}return{get:n,remove:r,update:o}}var mC=`#ifdef USE_ALPHAHASH
	if ( diffuseColor.a < getAlphaHashThreshold( vPosition ) ) discard;
#endif`,gC=`#ifdef USE_ALPHAHASH
	const float ALPHA_HASH_SCALE = 0.05;
	float hash2D( vec2 value ) {
		return fract( 1.0e4 * sin( 17.0 * value.x + 0.1 * value.y ) * ( 0.1 + abs( sin( 13.0 * value.y + value.x ) ) ) );
	}
	float hash3D( vec3 value ) {
		return hash2D( vec2( hash2D( value.xy ), value.z ) );
	}
	float getAlphaHashThreshold( vec3 position ) {
		float maxDeriv = max(
			length( dFdx( position.xyz ) ),
			length( dFdy( position.xyz ) )
		);
		float pixScale = 1.0 / ( ALPHA_HASH_SCALE * maxDeriv );
		vec2 pixScales = vec2(
			exp2( floor( log2( pixScale ) ) ),
			exp2( ceil( log2( pixScale ) ) )
		);
		vec2 alpha = vec2(
			hash3D( floor( pixScales.x * position.xyz ) ),
			hash3D( floor( pixScales.y * position.xyz ) )
		);
		float lerpFactor = fract( log2( pixScale ) );
		float x = ( 1.0 - lerpFactor ) * alpha.x + lerpFactor * alpha.y;
		float a = min( lerpFactor, 1.0 - lerpFactor );
		vec3 cases = vec3(
			x * x / ( 2.0 * a * ( 1.0 - a ) ),
			( x - 0.5 * a ) / ( 1.0 - a ),
			1.0 - ( ( 1.0 - x ) * ( 1.0 - x ) / ( 2.0 * a * ( 1.0 - a ) ) )
		);
		float threshold = ( x < ( 1.0 - a ) )
			? ( ( x < a ) ? cases.x : cases.y )
			: cases.z;
		return clamp( threshold , 1.0e-6, 1.0 );
	}
#endif`,EC=`#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, vAlphaMapUv ).g;
#endif`,IC=`#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,_C=`#ifdef USE_ALPHATEST
	#ifdef ALPHA_TO_COVERAGE
	diffuseColor.a = smoothstep( alphaTest, alphaTest + fwidth( diffuseColor.a ), diffuseColor.a );
	if ( diffuseColor.a == 0.0 ) discard;
	#else
	if ( diffuseColor.a < alphaTest ) discard;
	#endif
#endif`,vC=`#ifdef USE_ALPHATEST
	uniform float alphaTest;
#endif`,bC=`#ifdef USE_AOMAP
	float ambientOcclusion = ( texture2D( aoMap, vAoMapUv ).r - 1.0 ) * aoMapIntensity + 1.0;
	reflectedLight.indirectDiffuse *= ambientOcclusion;
	#if defined( USE_CLEARCOAT ) 
		clearcoatSpecularIndirect *= ambientOcclusion;
	#endif
	#if defined( USE_SHEEN ) 
		sheenSpecularIndirect *= ambientOcclusion;
	#endif
	#if defined( USE_ENVMAP ) && defined( STANDARD )
		float dotNV = saturate( dot( geometryNormal, geometryViewDir ) );
		reflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.roughness );
	#endif
#endif`,yC=`#ifdef USE_AOMAP
	uniform sampler2D aoMap;
	uniform float aoMapIntensity;
#endif`,TC=`#ifdef USE_BATCHING
	#if ! defined( GL_ANGLE_multi_draw )
	#define gl_DrawID _gl_DrawID
	uniform int _gl_DrawID;
	#endif
	uniform highp sampler2D batchingTexture;
	uniform highp usampler2D batchingIdTexture;
	mat4 getBatchingMatrix( const in float i ) {
		int size = textureSize( batchingTexture, 0 ).x;
		int j = int( i ) * 4;
		int x = j % size;
		int y = j / size;
		vec4 v1 = texelFetch( batchingTexture, ivec2( x, y ), 0 );
		vec4 v2 = texelFetch( batchingTexture, ivec2( x + 1, y ), 0 );
		vec4 v3 = texelFetch( batchingTexture, ivec2( x + 2, y ), 0 );
		vec4 v4 = texelFetch( batchingTexture, ivec2( x + 3, y ), 0 );
		return mat4( v1, v2, v3, v4 );
	}
	float getIndirectIndex( const in int i ) {
		int size = textureSize( batchingIdTexture, 0 ).x;
		int x = i % size;
		int y = i / size;
		return float( texelFetch( batchingIdTexture, ivec2( x, y ), 0 ).r );
	}
#endif
#ifdef USE_BATCHING_COLOR
	uniform sampler2D batchingColorTexture;
	vec3 getBatchingColor( const in float i ) {
		int size = textureSize( batchingColorTexture, 0 ).x;
		int j = int( i );
		int x = j % size;
		int y = j / size;
		return texelFetch( batchingColorTexture, ivec2( x, y ), 0 ).rgb;
	}
#endif`,CC=`#ifdef USE_BATCHING
	mat4 batchingMatrix = getBatchingMatrix( getIndirectIndex( gl_DrawID ) );
#endif`,xC=`vec3 transformed = vec3( position );
#ifdef USE_ALPHAHASH
	vPosition = vec3( position );
#endif`,wC=`vec3 objectNormal = vec3( normal );
#ifdef USE_TANGENT
	vec3 objectTangent = vec3( tangent.xyz );
#endif`,SC=`float G_BlinnPhong_Implicit( ) {
	return 0.25;
}
float D_BlinnPhong( const in float shininess, const in float dotNH ) {
	return RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );
}
vec3 BRDF_BlinnPhong( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float shininess ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( specularColor, 1.0, dotVH );
	float G = G_BlinnPhong_Implicit( );
	float D = D_BlinnPhong( shininess, dotNH );
	return F * ( G * D );
} // validated`,AC=`#ifdef USE_IRIDESCENCE
	const mat3 XYZ_TO_REC709 = mat3(
		 3.2404542, -0.9692660,  0.0556434,
		-1.5371385,  1.8760108, -0.2040259,
		-0.4985314,  0.0415560,  1.0572252
	);
	vec3 Fresnel0ToIor( vec3 fresnel0 ) {
		vec3 sqrtF0 = sqrt( fresnel0 );
		return ( vec3( 1.0 ) + sqrtF0 ) / ( vec3( 1.0 ) - sqrtF0 );
	}
	vec3 IorToFresnel0( vec3 transmittedIor, float incidentIor ) {
		return pow2( ( transmittedIor - vec3( incidentIor ) ) / ( transmittedIor + vec3( incidentIor ) ) );
	}
	float IorToFresnel0( float transmittedIor, float incidentIor ) {
		return pow2( ( transmittedIor - incidentIor ) / ( transmittedIor + incidentIor ));
	}
	vec3 evalSensitivity( float OPD, vec3 shift ) {
		float phase = 2.0 * PI * OPD * 1.0e-9;
		vec3 val = vec3( 5.4856e-13, 4.4201e-13, 5.2481e-13 );
		vec3 pos = vec3( 1.6810e+06, 1.7953e+06, 2.2084e+06 );
		vec3 var = vec3( 4.3278e+09, 9.3046e+09, 6.6121e+09 );
		vec3 xyz = val * sqrt( 2.0 * PI * var ) * cos( pos * phase + shift ) * exp( - pow2( phase ) * var );
		xyz.x += 9.7470e-14 * sqrt( 2.0 * PI * 4.5282e+09 ) * cos( 2.2399e+06 * phase + shift[ 0 ] ) * exp( - 4.5282e+09 * pow2( phase ) );
		xyz /= 1.0685e-7;
		vec3 rgb = XYZ_TO_REC709 * xyz;
		return rgb;
	}
	vec3 evalIridescence( float outsideIOR, float eta2, float cosTheta1, float thinFilmThickness, vec3 baseF0 ) {
		vec3 I;
		float iridescenceIOR = mix( outsideIOR, eta2, smoothstep( 0.0, 0.03, thinFilmThickness ) );
		float sinTheta2Sq = pow2( outsideIOR / iridescenceIOR ) * ( 1.0 - pow2( cosTheta1 ) );
		float cosTheta2Sq = 1.0 - sinTheta2Sq;
		if ( cosTheta2Sq < 0.0 ) {
			return vec3( 1.0 );
		}
		float cosTheta2 = sqrt( cosTheta2Sq );
		float R0 = IorToFresnel0( iridescenceIOR, outsideIOR );
		float R12 = F_Schlick( R0, 1.0, cosTheta1 );
		float T121 = 1.0 - R12;
		float phi12 = 0.0;
		if ( iridescenceIOR < outsideIOR ) phi12 = PI;
		float phi21 = PI - phi12;
		vec3 baseIOR = Fresnel0ToIor( clamp( baseF0, 0.0, 0.9999 ) );		vec3 R1 = IorToFresnel0( baseIOR, iridescenceIOR );
		vec3 R23 = F_Schlick( R1, 1.0, cosTheta2 );
		vec3 phi23 = vec3( 0.0 );
		if ( baseIOR[ 0 ] < iridescenceIOR ) phi23[ 0 ] = PI;
		if ( baseIOR[ 1 ] < iridescenceIOR ) phi23[ 1 ] = PI;
		if ( baseIOR[ 2 ] < iridescenceIOR ) phi23[ 2 ] = PI;
		float OPD = 2.0 * iridescenceIOR * thinFilmThickness * cosTheta2;
		vec3 phi = vec3( phi21 ) + phi23;
		vec3 R123 = clamp( R12 * R23, 1e-5, 0.9999 );
		vec3 r123 = sqrt( R123 );
		vec3 Rs = pow2( T121 ) * R23 / ( vec3( 1.0 ) - R123 );
		vec3 C0 = R12 + Rs;
		I = C0;
		vec3 Cm = Rs - T121;
		for ( int m = 1; m <= 2; ++ m ) {
			Cm *= r123;
			vec3 Sm = 2.0 * evalSensitivity( float( m ) * OPD, float( m ) * phi );
			I += Cm * Sm;
		}
		return max( I, vec3( 0.0 ) );
	}
#endif`,RC=`#ifdef USE_BUMPMAP
	uniform sampler2D bumpMap;
	uniform float bumpScale;
	vec2 dHdxy_fwd() {
		vec2 dSTdx = dFdx( vBumpMapUv );
		vec2 dSTdy = dFdy( vBumpMapUv );
		float Hll = bumpScale * texture2D( bumpMap, vBumpMapUv ).x;
		float dBx = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdx ).x - Hll;
		float dBy = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdy ).x - Hll;
		return vec2( dBx, dBy );
	}
	vec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {
		vec3 vSigmaX = normalize( dFdx( surf_pos.xyz ) );
		vec3 vSigmaY = normalize( dFdy( surf_pos.xyz ) );
		vec3 vN = surf_norm;
		vec3 R1 = cross( vSigmaY, vN );
		vec3 R2 = cross( vN, vSigmaX );
		float fDet = dot( vSigmaX, R1 ) * faceDirection;
		vec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );
		return normalize( abs( fDet ) * surf_norm - vGrad );
	}
#endif`,MC=`#if NUM_CLIPPING_PLANES > 0
	vec4 plane;
	#ifdef ALPHA_TO_COVERAGE
		float distanceToPlane, distanceGradient;
		float clipOpacity = 1.0;
		#pragma unroll_loop_start
		for ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {
			plane = clippingPlanes[ i ];
			distanceToPlane = - dot( vClipPosition, plane.xyz ) + plane.w;
			distanceGradient = fwidth( distanceToPlane ) / 2.0;
			clipOpacity *= smoothstep( - distanceGradient, distanceGradient, distanceToPlane );
			if ( clipOpacity == 0.0 ) discard;
		}
		#pragma unroll_loop_end
		#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES
			float unionClipOpacity = 1.0;
			#pragma unroll_loop_start
			for ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {
				plane = clippingPlanes[ i ];
				distanceToPlane = - dot( vClipPosition, plane.xyz ) + plane.w;
				distanceGradient = fwidth( distanceToPlane ) / 2.0;
				unionClipOpacity *= 1.0 - smoothstep( - distanceGradient, distanceGradient, distanceToPlane );
			}
			#pragma unroll_loop_end
			clipOpacity *= 1.0 - unionClipOpacity;
		#endif
		diffuseColor.a *= clipOpacity;
		if ( diffuseColor.a == 0.0 ) discard;
	#else
		#pragma unroll_loop_start
		for ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {
			plane = clippingPlanes[ i ];
			if ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;
		}
		#pragma unroll_loop_end
		#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES
			bool clipped = true;
			#pragma unroll_loop_start
			for ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {
				plane = clippingPlanes[ i ];
				clipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;
			}
			#pragma unroll_loop_end
			if ( clipped ) discard;
		#endif
	#endif
#endif`,FC=`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
	uniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];
#endif`,PC=`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
#endif`,OC=`#if NUM_CLIPPING_PLANES > 0
	vClipPosition = - mvPosition.xyz;
#endif`,LC=`#if defined( USE_COLOR_ALPHA )
	diffuseColor *= vColor;
#elif defined( USE_COLOR )
	diffuseColor.rgb *= vColor;
#endif`,DC=`#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR )
	varying vec3 vColor;
#endif`,NC=`#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR ) || defined( USE_BATCHING_COLOR )
	varying vec3 vColor;
#endif`,UC=`#if defined( USE_COLOR_ALPHA )
	vColor = vec4( 1.0 );
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR ) || defined( USE_BATCHING_COLOR )
	vColor = vec3( 1.0 );
#endif
#ifdef USE_COLOR
	vColor *= color;
#endif
#ifdef USE_INSTANCING_COLOR
	vColor.xyz *= instanceColor.xyz;
#endif
#ifdef USE_BATCHING_COLOR
	vec3 batchingColor = getBatchingColor( getIndirectIndex( gl_DrawID ) );
	vColor.xyz *= batchingColor.xyz;
#endif`,BC=`#define PI 3.141592653589793
#define PI2 6.283185307179586
#define PI_HALF 1.5707963267948966
#define RECIPROCAL_PI 0.3183098861837907
#define RECIPROCAL_PI2 0.15915494309189535
#define EPSILON 1e-6
#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
#define whiteComplement( a ) ( 1.0 - saturate( a ) )
float pow2( const in float x ) { return x*x; }
vec3 pow2( const in vec3 x ) { return x*x; }
float pow3( const in float x ) { return x*x*x; }
float pow4( const in float x ) { float x2 = x*x; return x2*x2; }
float max3( const in vec3 v ) { return max( max( v.x, v.y ), v.z ); }
float average( const in vec3 v ) { return dot( v, vec3( 0.3333333 ) ); }
highp float rand( const in vec2 uv ) {
	const highp float a = 12.9898, b = 78.233, c = 43758.5453;
	highp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );
	return fract( sin( sn ) * c );
}
#ifdef HIGH_PRECISION
	float precisionSafeLength( vec3 v ) { return length( v ); }
#else
	float precisionSafeLength( vec3 v ) {
		float maxComponent = max3( abs( v ) );
		return length( v / maxComponent ) * maxComponent;
	}
#endif
struct IncidentLight {
	vec3 color;
	vec3 direction;
	bool visible;
};
struct ReflectedLight {
	vec3 directDiffuse;
	vec3 directSpecular;
	vec3 indirectDiffuse;
	vec3 indirectSpecular;
};
#ifdef USE_ALPHAHASH
	varying vec3 vPosition;
#endif
vec3 transformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );
}
vec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );
}
mat3 transposeMat3( const in mat3 m ) {
	mat3 tmp;
	tmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );
	tmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );
	tmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );
	return tmp;
}
bool isPerspectiveMatrix( mat4 m ) {
	return m[ 2 ][ 3 ] == - 1.0;
}
vec2 equirectUv( in vec3 dir ) {
	float u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;
	float v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;
	return vec2( u, v );
}
vec3 BRDF_Lambert( const in vec3 diffuseColor ) {
	return RECIPROCAL_PI * diffuseColor;
}
vec3 F_Schlick( const in vec3 f0, const in float f90, const in float dotVH ) {
	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );
	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );
}
float F_Schlick( const in float f0, const in float f90, const in float dotVH ) {
	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );
	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );
} // validated`,zC=`#ifdef ENVMAP_TYPE_CUBE_UV
	#define cubeUV_minMipLevel 4.0
	#define cubeUV_minTileSize 16.0
	float getFace( vec3 direction ) {
		vec3 absDirection = abs( direction );
		float face = - 1.0;
		if ( absDirection.x > absDirection.z ) {
			if ( absDirection.x > absDirection.y )
				face = direction.x > 0.0 ? 0.0 : 3.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		} else {
			if ( absDirection.z > absDirection.y )
				face = direction.z > 0.0 ? 2.0 : 5.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		}
		return face;
	}
	vec2 getUV( vec3 direction, float face ) {
		vec2 uv;
		if ( face == 0.0 ) {
			uv = vec2( direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 1.0 ) {
			uv = vec2( - direction.x, - direction.z ) / abs( direction.y );
		} else if ( face == 2.0 ) {
			uv = vec2( - direction.x, direction.y ) / abs( direction.z );
		} else if ( face == 3.0 ) {
			uv = vec2( - direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 4.0 ) {
			uv = vec2( - direction.x, direction.z ) / abs( direction.y );
		} else {
			uv = vec2( direction.x, direction.y ) / abs( direction.z );
		}
		return 0.5 * ( uv + 1.0 );
	}
	vec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {
		float face = getFace( direction );
		float filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );
		mipInt = max( mipInt, cubeUV_minMipLevel );
		float faceSize = exp2( mipInt );
		highp vec2 uv = getUV( direction, face ) * ( faceSize - 2.0 ) + 1.0;
		if ( face > 2.0 ) {
			uv.y += faceSize;
			face -= 3.0;
		}
		uv.x += face * faceSize;
		uv.x += filterInt * 3.0 * cubeUV_minTileSize;
		uv.y += 4.0 * ( exp2( CUBEUV_MAX_MIP ) - faceSize );
		uv.x *= CUBEUV_TEXEL_WIDTH;
		uv.y *= CUBEUV_TEXEL_HEIGHT;
		#ifdef texture2DGradEXT
			return texture2DGradEXT( envMap, uv, vec2( 0.0 ), vec2( 0.0 ) ).rgb;
		#else
			return texture2D( envMap, uv ).rgb;
		#endif
	}
	#define cubeUV_r0 1.0
	#define cubeUV_m0 - 2.0
	#define cubeUV_r1 0.8
	#define cubeUV_m1 - 1.0
	#define cubeUV_r4 0.4
	#define cubeUV_m4 2.0
	#define cubeUV_r5 0.305
	#define cubeUV_m5 3.0
	#define cubeUV_r6 0.21
	#define cubeUV_m6 4.0
	float roughnessToMip( float roughness ) {
		float mip = 0.0;
		if ( roughness >= cubeUV_r1 ) {
			mip = ( cubeUV_r0 - roughness ) * ( cubeUV_m1 - cubeUV_m0 ) / ( cubeUV_r0 - cubeUV_r1 ) + cubeUV_m0;
		} else if ( roughness >= cubeUV_r4 ) {
			mip = ( cubeUV_r1 - roughness ) * ( cubeUV_m4 - cubeUV_m1 ) / ( cubeUV_r1 - cubeUV_r4 ) + cubeUV_m1;
		} else if ( roughness >= cubeUV_r5 ) {
			mip = ( cubeUV_r4 - roughness ) * ( cubeUV_m5 - cubeUV_m4 ) / ( cubeUV_r4 - cubeUV_r5 ) + cubeUV_m4;
		} else if ( roughness >= cubeUV_r6 ) {
			mip = ( cubeUV_r5 - roughness ) * ( cubeUV_m6 - cubeUV_m5 ) / ( cubeUV_r5 - cubeUV_r6 ) + cubeUV_m5;
		} else {
			mip = - 2.0 * log2( 1.16 * roughness );		}
		return mip;
	}
	vec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {
		float mip = clamp( roughnessToMip( roughness ), cubeUV_m0, CUBEUV_MAX_MIP );
		float mipF = fract( mip );
		float mipInt = floor( mip );
		vec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );
		if ( mipF == 0.0 ) {
			return vec4( color0, 1.0 );
		} else {
			vec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );
			return vec4( mix( color0, color1, mipF ), 1.0 );
		}
	}
#endif`,VC=`vec3 transformedNormal = objectNormal;
#ifdef USE_TANGENT
	vec3 transformedTangent = objectTangent;
#endif
#ifdef USE_BATCHING
	mat3 bm = mat3( batchingMatrix );
	transformedNormal /= vec3( dot( bm[ 0 ], bm[ 0 ] ), dot( bm[ 1 ], bm[ 1 ] ), dot( bm[ 2 ], bm[ 2 ] ) );
	transformedNormal = bm * transformedNormal;
	#ifdef USE_TANGENT
		transformedTangent = bm * transformedTangent;
	#endif
#endif
#ifdef USE_INSTANCING
	mat3 im = mat3( instanceMatrix );
	transformedNormal /= vec3( dot( im[ 0 ], im[ 0 ] ), dot( im[ 1 ], im[ 1 ] ), dot( im[ 2 ], im[ 2 ] ) );
	transformedNormal = im * transformedNormal;
	#ifdef USE_TANGENT
		transformedTangent = im * transformedTangent;
	#endif
#endif
transformedNormal = normalMatrix * transformedNormal;
#ifdef FLIP_SIDED
	transformedNormal = - transformedNormal;
#endif
#ifdef USE_TANGENT
	transformedTangent = ( modelViewMatrix * vec4( transformedTangent, 0.0 ) ).xyz;
	#ifdef FLIP_SIDED
		transformedTangent = - transformedTangent;
	#endif
#endif`,kC=`#ifdef USE_DISPLACEMENTMAP
	uniform sampler2D displacementMap;
	uniform float displacementScale;
	uniform float displacementBias;
#endif`,GC=`#ifdef USE_DISPLACEMENTMAP
	transformed += normalize( objectNormal ) * ( texture2D( displacementMap, vDisplacementMapUv ).x * displacementScale + displacementBias );
#endif`,HC=`#ifdef USE_EMISSIVEMAP
	vec4 emissiveColor = texture2D( emissiveMap, vEmissiveMapUv );
	#ifdef DECODE_VIDEO_TEXTURE_EMISSIVE
		emissiveColor = sRGBTransferEOTF( emissiveColor );
	#endif
	totalEmissiveRadiance *= emissiveColor.rgb;
#endif`,YC=`#ifdef USE_EMISSIVEMAP
	uniform sampler2D emissiveMap;
#endif`,WC="gl_FragColor = linearToOutputTexel( gl_FragColor );",XC=`vec4 LinearTransferOETF( in vec4 value ) {
	return value;
}
vec4 sRGBTransferEOTF( in vec4 value ) {
	return vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.a );
}
vec4 sRGBTransferOETF( in vec4 value ) {
	return vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );
}`,ZC=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vec3 cameraToFrag;
		if ( isOrthographic ) {
			cameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToFrag = normalize( vWorldPosition - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vec3 reflectVec = reflect( cameraToFrag, worldNormal );
		#else
			vec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );
		#endif
	#else
		vec3 reflectVec = vReflect;
	#endif
	#ifdef ENVMAP_TYPE_CUBE
		vec4 envColor = textureCube( envMap, envMapRotation * vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );
	#else
		vec4 envColor = vec4( 0.0 );
	#endif
	#ifdef ENVMAP_BLENDING_MULTIPLY
		outgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_MIX )
		outgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_ADD )
		outgoingLight += envColor.xyz * specularStrength * reflectivity;
	#endif
#endif`,jC=`#ifdef USE_ENVMAP
	uniform float envMapIntensity;
	uniform float flipEnvMap;
	uniform mat3 envMapRotation;
	#ifdef ENVMAP_TYPE_CUBE
		uniform samplerCube envMap;
	#else
		uniform sampler2D envMap;
	#endif
	
#endif`,qC=`#ifdef USE_ENVMAP
	uniform float reflectivity;
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		varying vec3 vWorldPosition;
		uniform float refractionRatio;
	#else
		varying vec3 vReflect;
	#endif
#endif`,KC=`#ifdef USE_ENVMAP
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		
		varying vec3 vWorldPosition;
	#else
		varying vec3 vReflect;
		uniform float refractionRatio;
	#endif
#endif`,QC=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vWorldPosition = worldPosition.xyz;
	#else
		vec3 cameraToVertex;
		if ( isOrthographic ) {
			cameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToVertex = normalize( worldPosition.xyz - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vReflect = reflect( cameraToVertex, worldNormal );
		#else
			vReflect = refract( cameraToVertex, worldNormal, refractionRatio );
		#endif
	#endif
#endif`,JC=`#ifdef USE_FOG
	vFogDepth = - mvPosition.z;
#endif`,$C=`#ifdef USE_FOG
	varying float vFogDepth;
#endif`,e1=`#ifdef USE_FOG
	#ifdef FOG_EXP2
		float fogFactor = 1.0 - exp( - fogDensity * fogDensity * vFogDepth * vFogDepth );
	#else
		float fogFactor = smoothstep( fogNear, fogFar, vFogDepth );
	#endif
	gl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );
#endif`,t1=`#ifdef USE_FOG
	uniform vec3 fogColor;
	varying float vFogDepth;
	#ifdef FOG_EXP2
		uniform float fogDensity;
	#else
		uniform float fogNear;
		uniform float fogFar;
	#endif
#endif`,i1=`#ifdef USE_GRADIENTMAP
	uniform sampler2D gradientMap;
#endif
vec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {
	float dotNL = dot( normal, lightDirection );
	vec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );
	#ifdef USE_GRADIENTMAP
		return vec3( texture2D( gradientMap, coord ).r );
	#else
		vec2 fw = fwidth( coord ) * 0.5;
		return mix( vec3( 0.7 ), vec3( 1.0 ), smoothstep( 0.7 - fw.x, 0.7 + fw.x, coord.x ) );
	#endif
}`,n1=`#ifdef USE_LIGHTMAP
	uniform sampler2D lightMap;
	uniform float lightMapIntensity;
#endif`,s1=`LambertMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularStrength = specularStrength;`,r1=`varying vec3 vViewPosition;
struct LambertMaterial {
	vec3 diffuseColor;
	float specularStrength;
};
void RE_Direct_Lambert( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometryNormal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Lambert( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_Lambert
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Lambert`,o1=`uniform bool receiveShadow;
uniform vec3 ambientLightColor;
#if defined( USE_LIGHT_PROBES )
	uniform vec3 lightProbe[ 9 ];
#endif
vec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {
	float x = normal.x, y = normal.y, z = normal.z;
	vec3 result = shCoefficients[ 0 ] * 0.886227;
	result += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;
	result += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;
	result += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;
	result += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;
	result += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;
	result += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );
	result += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;
	result += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );
	return result;
}
vec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in vec3 normal ) {
	vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
	vec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );
	return irradiance;
}
vec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {
	vec3 irradiance = ambientLightColor;
	return irradiance;
}
float getDistanceAttenuation( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {
	float distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );
	if ( cutoffDistance > 0.0 ) {
		distanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );
	}
	return distanceFalloff;
}
float getSpotAttenuation( const in float coneCosine, const in float penumbraCosine, const in float angleCosine ) {
	return smoothstep( coneCosine, penumbraCosine, angleCosine );
}
#if NUM_DIR_LIGHTS > 0
	struct DirectionalLight {
		vec3 direction;
		vec3 color;
	};
	uniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];
	void getDirectionalLightInfo( const in DirectionalLight directionalLight, out IncidentLight light ) {
		light.color = directionalLight.color;
		light.direction = directionalLight.direction;
		light.visible = true;
	}
#endif
#if NUM_POINT_LIGHTS > 0
	struct PointLight {
		vec3 position;
		vec3 color;
		float distance;
		float decay;
	};
	uniform PointLight pointLights[ NUM_POINT_LIGHTS ];
	void getPointLightInfo( const in PointLight pointLight, const in vec3 geometryPosition, out IncidentLight light ) {
		vec3 lVector = pointLight.position - geometryPosition;
		light.direction = normalize( lVector );
		float lightDistance = length( lVector );
		light.color = pointLight.color;
		light.color *= getDistanceAttenuation( lightDistance, pointLight.distance, pointLight.decay );
		light.visible = ( light.color != vec3( 0.0 ) );
	}
#endif
#if NUM_SPOT_LIGHTS > 0
	struct SpotLight {
		vec3 position;
		vec3 direction;
		vec3 color;
		float distance;
		float decay;
		float coneCos;
		float penumbraCos;
	};
	uniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];
	void getSpotLightInfo( const in SpotLight spotLight, const in vec3 geometryPosition, out IncidentLight light ) {
		vec3 lVector = spotLight.position - geometryPosition;
		light.direction = normalize( lVector );
		float angleCos = dot( light.direction, spotLight.direction );
		float spotAttenuation = getSpotAttenuation( spotLight.coneCos, spotLight.penumbraCos, angleCos );
		if ( spotAttenuation > 0.0 ) {
			float lightDistance = length( lVector );
			light.color = spotLight.color * spotAttenuation;
			light.color *= getDistanceAttenuation( lightDistance, spotLight.distance, spotLight.decay );
			light.visible = ( light.color != vec3( 0.0 ) );
		} else {
			light.color = vec3( 0.0 );
			light.visible = false;
		}
	}
#endif
#if NUM_RECT_AREA_LIGHTS > 0
	struct RectAreaLight {
		vec3 color;
		vec3 position;
		vec3 halfWidth;
		vec3 halfHeight;
	};
	uniform sampler2D ltc_1;	uniform sampler2D ltc_2;
	uniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];
#endif
#if NUM_HEMI_LIGHTS > 0
	struct HemisphereLight {
		vec3 direction;
		vec3 skyColor;
		vec3 groundColor;
	};
	uniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];
	vec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in vec3 normal ) {
		float dotNL = dot( normal, hemiLight.direction );
		float hemiDiffuseWeight = 0.5 * dotNL + 0.5;
		vec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );
		return irradiance;
	}
#endif`,a1=`#ifdef USE_ENVMAP
	vec3 getIBLIrradiance( const in vec3 normal ) {
		#ifdef ENVMAP_TYPE_CUBE_UV
			vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, envMapRotation * worldNormal, 1.0 );
			return PI * envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
	vec3 getIBLRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness ) {
		#ifdef ENVMAP_TYPE_CUBE_UV
			vec3 reflectVec = reflect( - viewDir, normal );
			reflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );
			reflectVec = inverseTransformDirection( reflectVec, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, envMapRotation * reflectVec, roughness );
			return envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
	#ifdef USE_ANISOTROPY
		vec3 getIBLAnisotropyRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness, const in vec3 bitangent, const in float anisotropy ) {
			#ifdef ENVMAP_TYPE_CUBE_UV
				vec3 bentNormal = cross( bitangent, viewDir );
				bentNormal = normalize( cross( bentNormal, bitangent ) );
				bentNormal = normalize( mix( bentNormal, normal, pow2( pow2( 1.0 - anisotropy * ( 1.0 - roughness ) ) ) ) );
				return getIBLRadiance( viewDir, bentNormal, roughness );
			#else
				return vec3( 0.0 );
			#endif
		}
	#endif
#endif`,l1=`ToonMaterial material;
material.diffuseColor = diffuseColor.rgb;`,c1=`varying vec3 vViewPosition;
struct ToonMaterial {
	vec3 diffuseColor;
};
void RE_Direct_Toon( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	vec3 irradiance = getGradientIrradiance( geometryNormal, directLight.direction ) * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_Toon
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Toon`,h1=`BlinnPhongMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularColor = specular;
material.specularShininess = shininess;
material.specularStrength = specularStrength;`,u1=`varying vec3 vViewPosition;
struct BlinnPhongMaterial {
	vec3 diffuseColor;
	vec3 specularColor;
	float specularShininess;
	float specularStrength;
};
void RE_Direct_BlinnPhong( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometryNormal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
	reflectedLight.directSpecular += irradiance * BRDF_BlinnPhong( directLight.direction, geometryViewDir, geometryNormal, material.specularColor, material.specularShininess ) * material.specularStrength;
}
void RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_BlinnPhong
#define RE_IndirectDiffuse		RE_IndirectDiffuse_BlinnPhong`,d1=`PhysicalMaterial material;
material.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );
vec3 dxy = max( abs( dFdx( nonPerturbedNormal ) ), abs( dFdy( nonPerturbedNormal ) ) );
float geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );
material.roughness = max( roughnessFactor, 0.0525 );material.roughness += geometryRoughness;
material.roughness = min( material.roughness, 1.0 );
#ifdef IOR
	material.ior = ior;
	#ifdef USE_SPECULAR
		float specularIntensityFactor = specularIntensity;
		vec3 specularColorFactor = specularColor;
		#ifdef USE_SPECULAR_COLORMAP
			specularColorFactor *= texture2D( specularColorMap, vSpecularColorMapUv ).rgb;
		#endif
		#ifdef USE_SPECULAR_INTENSITYMAP
			specularIntensityFactor *= texture2D( specularIntensityMap, vSpecularIntensityMapUv ).a;
		#endif
		material.specularF90 = mix( specularIntensityFactor, 1.0, metalnessFactor );
	#else
		float specularIntensityFactor = 1.0;
		vec3 specularColorFactor = vec3( 1.0 );
		material.specularF90 = 1.0;
	#endif
	material.specularColor = mix( min( pow2( ( material.ior - 1.0 ) / ( material.ior + 1.0 ) ) * specularColorFactor, vec3( 1.0 ) ) * specularIntensityFactor, diffuseColor.rgb, metalnessFactor );
#else
	material.specularColor = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessFactor );
	material.specularF90 = 1.0;
#endif
#ifdef USE_CLEARCOAT
	material.clearcoat = clearcoat;
	material.clearcoatRoughness = clearcoatRoughness;
	material.clearcoatF0 = vec3( 0.04 );
	material.clearcoatF90 = 1.0;
	#ifdef USE_CLEARCOATMAP
		material.clearcoat *= texture2D( clearcoatMap, vClearcoatMapUv ).x;
	#endif
	#ifdef USE_CLEARCOAT_ROUGHNESSMAP
		material.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vClearcoatRoughnessMapUv ).y;
	#endif
	material.clearcoat = saturate( material.clearcoat );	material.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );
	material.clearcoatRoughness += geometryRoughness;
	material.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );
#endif
#ifdef USE_DISPERSION
	material.dispersion = dispersion;
#endif
#ifdef USE_IRIDESCENCE
	material.iridescence = iridescence;
	material.iridescenceIOR = iridescenceIOR;
	#ifdef USE_IRIDESCENCEMAP
		material.iridescence *= texture2D( iridescenceMap, vIridescenceMapUv ).r;
	#endif
	#ifdef USE_IRIDESCENCE_THICKNESSMAP
		material.iridescenceThickness = (iridescenceThicknessMaximum - iridescenceThicknessMinimum) * texture2D( iridescenceThicknessMap, vIridescenceThicknessMapUv ).g + iridescenceThicknessMinimum;
	#else
		material.iridescenceThickness = iridescenceThicknessMaximum;
	#endif
#endif
#ifdef USE_SHEEN
	material.sheenColor = sheenColor;
	#ifdef USE_SHEEN_COLORMAP
		material.sheenColor *= texture2D( sheenColorMap, vSheenColorMapUv ).rgb;
	#endif
	material.sheenRoughness = clamp( sheenRoughness, 0.07, 1.0 );
	#ifdef USE_SHEEN_ROUGHNESSMAP
		material.sheenRoughness *= texture2D( sheenRoughnessMap, vSheenRoughnessMapUv ).a;
	#endif
#endif
#ifdef USE_ANISOTROPY
	#ifdef USE_ANISOTROPYMAP
		mat2 anisotropyMat = mat2( anisotropyVector.x, anisotropyVector.y, - anisotropyVector.y, anisotropyVector.x );
		vec3 anisotropyPolar = texture2D( anisotropyMap, vAnisotropyMapUv ).rgb;
		vec2 anisotropyV = anisotropyMat * normalize( 2.0 * anisotropyPolar.rg - vec2( 1.0 ) ) * anisotropyPolar.b;
	#else
		vec2 anisotropyV = anisotropyVector;
	#endif
	material.anisotropy = length( anisotropyV );
	if( material.anisotropy == 0.0 ) {
		anisotropyV = vec2( 1.0, 0.0 );
	} else {
		anisotropyV /= material.anisotropy;
		material.anisotropy = saturate( material.anisotropy );
	}
	material.alphaT = mix( pow2( material.roughness ), 1.0, pow2( material.anisotropy ) );
	material.anisotropyT = tbn[ 0 ] * anisotropyV.x + tbn[ 1 ] * anisotropyV.y;
	material.anisotropyB = tbn[ 1 ] * anisotropyV.x - tbn[ 0 ] * anisotropyV.y;
#endif`,f1=`struct PhysicalMaterial {
	vec3 diffuseColor;
	float roughness;
	vec3 specularColor;
	float specularF90;
	float dispersion;
	#ifdef USE_CLEARCOAT
		float clearcoat;
		float clearcoatRoughness;
		vec3 clearcoatF0;
		float clearcoatF90;
	#endif
	#ifdef USE_IRIDESCENCE
		float iridescence;
		float iridescenceIOR;
		float iridescenceThickness;
		vec3 iridescenceFresnel;
		vec3 iridescenceF0;
	#endif
	#ifdef USE_SHEEN
		vec3 sheenColor;
		float sheenRoughness;
	#endif
	#ifdef IOR
		float ior;
	#endif
	#ifdef USE_TRANSMISSION
		float transmission;
		float transmissionAlpha;
		float thickness;
		float attenuationDistance;
		vec3 attenuationColor;
	#endif
	#ifdef USE_ANISOTROPY
		float anisotropy;
		float alphaT;
		vec3 anisotropyT;
		vec3 anisotropyB;
	#endif
};
vec3 clearcoatSpecularDirect = vec3( 0.0 );
vec3 clearcoatSpecularIndirect = vec3( 0.0 );
vec3 sheenSpecularDirect = vec3( 0.0 );
vec3 sheenSpecularIndirect = vec3(0.0 );
vec3 Schlick_to_F0( const in vec3 f, const in float f90, const in float dotVH ) {
    float x = clamp( 1.0 - dotVH, 0.0, 1.0 );
    float x2 = x * x;
    float x5 = clamp( x * x2 * x2, 0.0, 0.9999 );
    return ( f - vec3( f90 ) * x5 ) / ( 1.0 - x5 );
}
float V_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {
	float a2 = pow2( alpha );
	float gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );
	float gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );
	return 0.5 / max( gv + gl, EPSILON );
}
float D_GGX( const in float alpha, const in float dotNH ) {
	float a2 = pow2( alpha );
	float denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;
	return RECIPROCAL_PI * a2 / pow2( denom );
}
#ifdef USE_ANISOTROPY
	float V_GGX_SmithCorrelated_Anisotropic( const in float alphaT, const in float alphaB, const in float dotTV, const in float dotBV, const in float dotTL, const in float dotBL, const in float dotNV, const in float dotNL ) {
		float gv = dotNL * length( vec3( alphaT * dotTV, alphaB * dotBV, dotNV ) );
		float gl = dotNV * length( vec3( alphaT * dotTL, alphaB * dotBL, dotNL ) );
		float v = 0.5 / ( gv + gl );
		return saturate(v);
	}
	float D_GGX_Anisotropic( const in float alphaT, const in float alphaB, const in float dotNH, const in float dotTH, const in float dotBH ) {
		float a2 = alphaT * alphaB;
		highp vec3 v = vec3( alphaB * dotTH, alphaT * dotBH, a2 * dotNH );
		highp float v2 = dot( v, v );
		float w2 = a2 / v2;
		return RECIPROCAL_PI * a2 * pow2 ( w2 );
	}
#endif
#ifdef USE_CLEARCOAT
	vec3 BRDF_GGX_Clearcoat( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material) {
		vec3 f0 = material.clearcoatF0;
		float f90 = material.clearcoatF90;
		float roughness = material.clearcoatRoughness;
		float alpha = pow2( roughness );
		vec3 halfDir = normalize( lightDir + viewDir );
		float dotNL = saturate( dot( normal, lightDir ) );
		float dotNV = saturate( dot( normal, viewDir ) );
		float dotNH = saturate( dot( normal, halfDir ) );
		float dotVH = saturate( dot( viewDir, halfDir ) );
		vec3 F = F_Schlick( f0, f90, dotVH );
		float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );
		float D = D_GGX( alpha, dotNH );
		return F * ( V * D );
	}
#endif
vec3 BRDF_GGX( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material ) {
	vec3 f0 = material.specularColor;
	float f90 = material.specularF90;
	float roughness = material.roughness;
	float alpha = pow2( roughness );
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( f0, f90, dotVH );
	#ifdef USE_IRIDESCENCE
		F = mix( F, material.iridescenceFresnel, material.iridescence );
	#endif
	#ifdef USE_ANISOTROPY
		float dotTL = dot( material.anisotropyT, lightDir );
		float dotTV = dot( material.anisotropyT, viewDir );
		float dotTH = dot( material.anisotropyT, halfDir );
		float dotBL = dot( material.anisotropyB, lightDir );
		float dotBV = dot( material.anisotropyB, viewDir );
		float dotBH = dot( material.anisotropyB, halfDir );
		float V = V_GGX_SmithCorrelated_Anisotropic( material.alphaT, alpha, dotTV, dotBV, dotTL, dotBL, dotNV, dotNL );
		float D = D_GGX_Anisotropic( material.alphaT, alpha, dotNH, dotTH, dotBH );
	#else
		float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );
		float D = D_GGX( alpha, dotNH );
	#endif
	return F * ( V * D );
}
vec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {
	const float LUT_SIZE = 64.0;
	const float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;
	const float LUT_BIAS = 0.5 / LUT_SIZE;
	float dotNV = saturate( dot( N, V ) );
	vec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );
	uv = uv * LUT_SCALE + LUT_BIAS;
	return uv;
}
float LTC_ClippedSphereFormFactor( const in vec3 f ) {
	float l = length( f );
	return max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );
}
vec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {
	float x = dot( v1, v2 );
	float y = abs( x );
	float a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;
	float b = 3.4175940 + ( 4.1616724 + y ) * y;
	float v = a / b;
	float theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;
	return cross( v1, v2 ) * theta_sintheta;
}
vec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {
	vec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];
	vec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];
	vec3 lightNormal = cross( v1, v2 );
	if( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );
	vec3 T1, T2;
	T1 = normalize( V - N * dot( V, N ) );
	T2 = - cross( N, T1 );
	mat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );
	vec3 coords[ 4 ];
	coords[ 0 ] = mat * ( rectCoords[ 0 ] - P );
	coords[ 1 ] = mat * ( rectCoords[ 1 ] - P );
	coords[ 2 ] = mat * ( rectCoords[ 2 ] - P );
	coords[ 3 ] = mat * ( rectCoords[ 3 ] - P );
	coords[ 0 ] = normalize( coords[ 0 ] );
	coords[ 1 ] = normalize( coords[ 1 ] );
	coords[ 2 ] = normalize( coords[ 2 ] );
	coords[ 3 ] = normalize( coords[ 3 ] );
	vec3 vectorFormFactor = vec3( 0.0 );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );
	float result = LTC_ClippedSphereFormFactor( vectorFormFactor );
	return vec3( result );
}
#if defined( USE_SHEEN )
float D_Charlie( float roughness, float dotNH ) {
	float alpha = pow2( roughness );
	float invAlpha = 1.0 / alpha;
	float cos2h = dotNH * dotNH;
	float sin2h = max( 1.0 - cos2h, 0.0078125 );
	return ( 2.0 + invAlpha ) * pow( sin2h, invAlpha * 0.5 ) / ( 2.0 * PI );
}
float V_Neubelt( float dotNV, float dotNL ) {
	return saturate( 1.0 / ( 4.0 * ( dotNL + dotNV - dotNL * dotNV ) ) );
}
vec3 BRDF_Sheen( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, vec3 sheenColor, const in float sheenRoughness ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float D = D_Charlie( sheenRoughness, dotNH );
	float V = V_Neubelt( dotNV, dotNL );
	return sheenColor * ( D * V );
}
#endif
float IBLSheenBRDF( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {
	float dotNV = saturate( dot( normal, viewDir ) );
	float r2 = roughness * roughness;
	float a = roughness < 0.25 ? -339.2 * r2 + 161.4 * roughness - 25.9 : -8.48 * r2 + 14.3 * roughness - 9.95;
	float b = roughness < 0.25 ? 44.0 * r2 - 23.7 * roughness + 3.26 : 1.97 * r2 - 3.27 * roughness + 0.72;
	float DG = exp( a * dotNV + b ) + ( roughness < 0.25 ? 0.0 : 0.1 * ( roughness - 0.25 ) );
	return saturate( DG * RECIPROCAL_PI );
}
vec2 DFGApprox( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {
	float dotNV = saturate( dot( normal, viewDir ) );
	const vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );
	const vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );
	vec4 r = roughness * c0 + c1;
	float a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;
	vec2 fab = vec2( - 1.04, 1.04 ) * a004 + r.zw;
	return fab;
}
vec3 EnvironmentBRDF( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness ) {
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	return specularColor * fab.x + specularF90 * fab.y;
}
#ifdef USE_IRIDESCENCE
void computeMultiscatteringIridescence( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float iridescence, const in vec3 iridescenceF0, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
#else
void computeMultiscattering( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
#endif
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	#ifdef USE_IRIDESCENCE
		vec3 Fr = mix( specularColor, iridescenceF0, iridescence );
	#else
		vec3 Fr = specularColor;
	#endif
	vec3 FssEss = Fr * fab.x + specularF90 * fab.y;
	float Ess = fab.x + fab.y;
	float Ems = 1.0 - Ess;
	vec3 Favg = Fr + ( 1.0 - Fr ) * 0.047619;	vec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );
	singleScatter += FssEss;
	multiScatter += Fms * Ems;
}
#if NUM_RECT_AREA_LIGHTS > 0
	void RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
		vec3 normal = geometryNormal;
		vec3 viewDir = geometryViewDir;
		vec3 position = geometryPosition;
		vec3 lightPos = rectAreaLight.position;
		vec3 halfWidth = rectAreaLight.halfWidth;
		vec3 halfHeight = rectAreaLight.halfHeight;
		vec3 lightColor = rectAreaLight.color;
		float roughness = material.roughness;
		vec3 rectCoords[ 4 ];
		rectCoords[ 0 ] = lightPos + halfWidth - halfHeight;		rectCoords[ 1 ] = lightPos - halfWidth - halfHeight;
		rectCoords[ 2 ] = lightPos - halfWidth + halfHeight;
		rectCoords[ 3 ] = lightPos + halfWidth + halfHeight;
		vec2 uv = LTC_Uv( normal, viewDir, roughness );
		vec4 t1 = texture2D( ltc_1, uv );
		vec4 t2 = texture2D( ltc_2, uv );
		mat3 mInv = mat3(
			vec3( t1.x, 0, t1.y ),
			vec3(    0, 1,    0 ),
			vec3( t1.z, 0, t1.w )
		);
		vec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );
		reflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );
		reflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );
	}
#endif
void RE_Direct_Physical( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometryNormal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	#ifdef USE_CLEARCOAT
		float dotNLcc = saturate( dot( geometryClearcoatNormal, directLight.direction ) );
		vec3 ccIrradiance = dotNLcc * directLight.color;
		clearcoatSpecularDirect += ccIrradiance * BRDF_GGX_Clearcoat( directLight.direction, geometryViewDir, geometryClearcoatNormal, material );
	#endif
	#ifdef USE_SHEEN
		sheenSpecularDirect += irradiance * BRDF_Sheen( directLight.direction, geometryViewDir, geometryNormal, material.sheenColor, material.sheenRoughness );
	#endif
	reflectedLight.directSpecular += irradiance * BRDF_GGX( directLight.direction, geometryViewDir, geometryNormal, material );
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {
	#ifdef USE_CLEARCOAT
		clearcoatSpecularIndirect += clearcoatRadiance * EnvironmentBRDF( geometryClearcoatNormal, geometryViewDir, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );
	#endif
	#ifdef USE_SHEEN
		sheenSpecularIndirect += irradiance * material.sheenColor * IBLSheenBRDF( geometryNormal, geometryViewDir, material.sheenRoughness );
	#endif
	vec3 singleScattering = vec3( 0.0 );
	vec3 multiScattering = vec3( 0.0 );
	vec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;
	#ifdef USE_IRIDESCENCE
		computeMultiscatteringIridescence( geometryNormal, geometryViewDir, material.specularColor, material.specularF90, material.iridescence, material.iridescenceFresnel, material.roughness, singleScattering, multiScattering );
	#else
		computeMultiscattering( geometryNormal, geometryViewDir, material.specularColor, material.specularF90, material.roughness, singleScattering, multiScattering );
	#endif
	vec3 totalScattering = singleScattering + multiScattering;
	vec3 diffuse = material.diffuseColor * ( 1.0 - max( max( totalScattering.r, totalScattering.g ), totalScattering.b ) );
	reflectedLight.indirectSpecular += radiance * singleScattering;
	reflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;
	reflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;
}
#define RE_Direct				RE_Direct_Physical
#define RE_Direct_RectArea		RE_Direct_RectArea_Physical
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Physical
#define RE_IndirectSpecular		RE_IndirectSpecular_Physical
float computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {
	return saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );
}`,p1=`
vec3 geometryPosition = - vViewPosition;
vec3 geometryNormal = normal;
vec3 geometryViewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );
vec3 geometryClearcoatNormal = vec3( 0.0 );
#ifdef USE_CLEARCOAT
	geometryClearcoatNormal = clearcoatNormal;
#endif
#ifdef USE_IRIDESCENCE
	float dotNVi = saturate( dot( normal, geometryViewDir ) );
	if ( material.iridescenceThickness == 0.0 ) {
		material.iridescence = 0.0;
	} else {
		material.iridescence = saturate( material.iridescence );
	}
	if ( material.iridescence > 0.0 ) {
		material.iridescenceFresnel = evalIridescence( 1.0, material.iridescenceIOR, dotNVi, material.iridescenceThickness, material.specularColor );
		material.iridescenceF0 = Schlick_to_F0( material.iridescenceFresnel, 1.0, dotNVi );
	}
#endif
IncidentLight directLight;
#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )
	PointLight pointLight;
	#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {
		pointLight = pointLights[ i ];
		getPointLightInfo( pointLight, geometryPosition, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )
		pointLightShadow = pointLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowIntensity, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;
		#endif
		RE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )
	SpotLight spotLight;
	vec4 spotColor;
	vec3 spotLightCoord;
	bool inSpotLightMap;
	#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {
		spotLight = spotLights[ i ];
		getSpotLightInfo( spotLight, geometryPosition, directLight );
		#if ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )
		#define SPOT_LIGHT_MAP_INDEX UNROLLED_LOOP_INDEX
		#elif ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
		#define SPOT_LIGHT_MAP_INDEX NUM_SPOT_LIGHT_MAPS
		#else
		#define SPOT_LIGHT_MAP_INDEX ( UNROLLED_LOOP_INDEX - NUM_SPOT_LIGHT_SHADOWS + NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )
		#endif
		#if ( SPOT_LIGHT_MAP_INDEX < NUM_SPOT_LIGHT_MAPS )
			spotLightCoord = vSpotLightCoord[ i ].xyz / vSpotLightCoord[ i ].w;
			inSpotLightMap = all( lessThan( abs( spotLightCoord * 2. - 1. ), vec3( 1.0 ) ) );
			spotColor = texture2D( spotLightMap[ SPOT_LIGHT_MAP_INDEX ], spotLightCoord.xy );
			directLight.color = inSpotLightMap ? directLight.color * spotColor.rgb : directLight.color;
		#endif
		#undef SPOT_LIGHT_MAP_INDEX
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
		spotLightShadow = spotLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowIntensity, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )
	DirectionalLight directionalLight;
	#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {
		directionalLight = directionalLights[ i ];
		getDirectionalLightInfo( directionalLight, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )
		directionalLightShadow = directionalLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowIntensity, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )
	RectAreaLight rectAreaLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {
		rectAreaLight = rectAreaLights[ i ];
		RE_Direct_RectArea( rectAreaLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if defined( RE_IndirectDiffuse )
	vec3 iblIrradiance = vec3( 0.0 );
	vec3 irradiance = getAmbientLightIrradiance( ambientLightColor );
	#if defined( USE_LIGHT_PROBES )
		irradiance += getLightProbeIrradiance( lightProbe, geometryNormal );
	#endif
	#if ( NUM_HEMI_LIGHTS > 0 )
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {
			irradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometryNormal );
		}
		#pragma unroll_loop_end
	#endif
#endif
#if defined( RE_IndirectSpecular )
	vec3 radiance = vec3( 0.0 );
	vec3 clearcoatRadiance = vec3( 0.0 );
#endif`,m1=`#if defined( RE_IndirectDiffuse )
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel = texture2D( lightMap, vLightMapUv );
		vec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;
		irradiance += lightMapIrradiance;
	#endif
	#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )
		iblIrradiance += getIBLIrradiance( geometryNormal );
	#endif
#endif
#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )
	#ifdef USE_ANISOTROPY
		radiance += getIBLAnisotropyRadiance( geometryViewDir, geometryNormal, material.roughness, material.anisotropyB, material.anisotropy );
	#else
		radiance += getIBLRadiance( geometryViewDir, geometryNormal, material.roughness );
	#endif
	#ifdef USE_CLEARCOAT
		clearcoatRadiance += getIBLRadiance( geometryViewDir, geometryClearcoatNormal, material.clearcoatRoughness );
	#endif
#endif`,g1=`#if defined( RE_IndirectDiffuse )
	RE_IndirectDiffuse( irradiance, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
#endif
#if defined( RE_IndirectSpecular )
	RE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
#endif`,E1=`#if defined( USE_LOGDEPTHBUF )
	gl_FragDepth = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;
#endif`,I1=`#if defined( USE_LOGDEPTHBUF )
	uniform float logDepthBufFC;
	varying float vFragDepth;
	varying float vIsPerspective;
#endif`,_1=`#ifdef USE_LOGDEPTHBUF
	varying float vFragDepth;
	varying float vIsPerspective;
#endif`,v1=`#ifdef USE_LOGDEPTHBUF
	vFragDepth = 1.0 + gl_Position.w;
	vIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );
#endif`,b1=`#ifdef USE_MAP
	vec4 sampledDiffuseColor = texture2D( map, vMapUv );
	#ifdef DECODE_VIDEO_TEXTURE
		sampledDiffuseColor = sRGBTransferEOTF( sampledDiffuseColor );
	#endif
	diffuseColor *= sampledDiffuseColor;
#endif`,y1=`#ifdef USE_MAP
	uniform sampler2D map;
#endif`,T1=`#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
	#if defined( USE_POINTS_UV )
		vec2 uv = vUv;
	#else
		vec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;
	#endif
#endif
#ifdef USE_MAP
	diffuseColor *= texture2D( map, uv );
#endif
#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, uv ).g;
#endif`,C1=`#if defined( USE_POINTS_UV )
	varying vec2 vUv;
#else
	#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
		uniform mat3 uvTransform;
	#endif
#endif
#ifdef USE_MAP
	uniform sampler2D map;
#endif
#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,x1=`float metalnessFactor = metalness;
#ifdef USE_METALNESSMAP
	vec4 texelMetalness = texture2D( metalnessMap, vMetalnessMapUv );
	metalnessFactor *= texelMetalness.b;
#endif`,w1=`#ifdef USE_METALNESSMAP
	uniform sampler2D metalnessMap;
#endif`,S1=`#ifdef USE_INSTANCING_MORPH
	float morphTargetInfluences[ MORPHTARGETS_COUNT ];
	float morphTargetBaseInfluence = texelFetch( morphTexture, ivec2( 0, gl_InstanceID ), 0 ).r;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		morphTargetInfluences[i] =  texelFetch( morphTexture, ivec2( i + 1, gl_InstanceID ), 0 ).r;
	}
#endif`,A1=`#if defined( USE_MORPHCOLORS )
	vColor *= morphTargetBaseInfluence;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		#if defined( USE_COLOR_ALPHA )
			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ) * morphTargetInfluences[ i ];
		#elif defined( USE_COLOR )
			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ).rgb * morphTargetInfluences[ i ];
		#endif
	}
#endif`,R1=`#ifdef USE_MORPHNORMALS
	objectNormal *= morphTargetBaseInfluence;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		if ( morphTargetInfluences[ i ] != 0.0 ) objectNormal += getMorph( gl_VertexID, i, 1 ).xyz * morphTargetInfluences[ i ];
	}
#endif`,M1=`#ifdef USE_MORPHTARGETS
	#ifndef USE_INSTANCING_MORPH
		uniform float morphTargetBaseInfluence;
		uniform float morphTargetInfluences[ MORPHTARGETS_COUNT ];
	#endif
	uniform sampler2DArray morphTargetsTexture;
	uniform ivec2 morphTargetsTextureSize;
	vec4 getMorph( const in int vertexIndex, const in int morphTargetIndex, const in int offset ) {
		int texelIndex = vertexIndex * MORPHTARGETS_TEXTURE_STRIDE + offset;
		int y = texelIndex / morphTargetsTextureSize.x;
		int x = texelIndex - y * morphTargetsTextureSize.x;
		ivec3 morphUV = ivec3( x, y, morphTargetIndex );
		return texelFetch( morphTargetsTexture, morphUV, 0 );
	}
#endif`,F1=`#ifdef USE_MORPHTARGETS
	transformed *= morphTargetBaseInfluence;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		if ( morphTargetInfluences[ i ] != 0.0 ) transformed += getMorph( gl_VertexID, i, 0 ).xyz * morphTargetInfluences[ i ];
	}
#endif`,P1=`float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;
#ifdef FLAT_SHADED
	vec3 fdx = dFdx( vViewPosition );
	vec3 fdy = dFdy( vViewPosition );
	vec3 normal = normalize( cross( fdx, fdy ) );
#else
	vec3 normal = normalize( vNormal );
	#ifdef DOUBLE_SIDED
		normal *= faceDirection;
	#endif
#endif
#if defined( USE_NORMALMAP_TANGENTSPACE ) || defined( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY )
	#ifdef USE_TANGENT
		mat3 tbn = mat3( normalize( vTangent ), normalize( vBitangent ), normal );
	#else
		mat3 tbn = getTangentFrame( - vViewPosition, normal,
		#if defined( USE_NORMALMAP )
			vNormalMapUv
		#elif defined( USE_CLEARCOAT_NORMALMAP )
			vClearcoatNormalMapUv
		#else
			vUv
		#endif
		);
	#endif
	#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )
		tbn[0] *= faceDirection;
		tbn[1] *= faceDirection;
	#endif
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	#ifdef USE_TANGENT
		mat3 tbn2 = mat3( normalize( vTangent ), normalize( vBitangent ), normal );
	#else
		mat3 tbn2 = getTangentFrame( - vViewPosition, normal, vClearcoatNormalMapUv );
	#endif
	#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )
		tbn2[0] *= faceDirection;
		tbn2[1] *= faceDirection;
	#endif
#endif
vec3 nonPerturbedNormal = normal;`,O1=`#ifdef USE_NORMALMAP_OBJECTSPACE
	normal = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;
	#ifdef FLIP_SIDED
		normal = - normal;
	#endif
	#ifdef DOUBLE_SIDED
		normal = normal * faceDirection;
	#endif
	normal = normalize( normalMatrix * normal );
#elif defined( USE_NORMALMAP_TANGENTSPACE )
	vec3 mapN = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;
	mapN.xy *= normalScale;
	normal = normalize( tbn * mapN );
#elif defined( USE_BUMPMAP )
	normal = perturbNormalArb( - vViewPosition, normal, dHdxy_fwd(), faceDirection );
#endif`,L1=`#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`,D1=`#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`,N1=`#ifndef FLAT_SHADED
	vNormal = normalize( transformedNormal );
	#ifdef USE_TANGENT
		vTangent = normalize( transformedTangent );
		vBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );
	#endif
#endif`,U1=`#ifdef USE_NORMALMAP
	uniform sampler2D normalMap;
	uniform vec2 normalScale;
#endif
#ifdef USE_NORMALMAP_OBJECTSPACE
	uniform mat3 normalMatrix;
#endif
#if ! defined ( USE_TANGENT ) && ( defined ( USE_NORMALMAP_TANGENTSPACE ) || defined ( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY ) )
	mat3 getTangentFrame( vec3 eye_pos, vec3 surf_norm, vec2 uv ) {
		vec3 q0 = dFdx( eye_pos.xyz );
		vec3 q1 = dFdy( eye_pos.xyz );
		vec2 st0 = dFdx( uv.st );
		vec2 st1 = dFdy( uv.st );
		vec3 N = surf_norm;
		vec3 q1perp = cross( q1, N );
		vec3 q0perp = cross( N, q0 );
		vec3 T = q1perp * st0.x + q0perp * st1.x;
		vec3 B = q1perp * st0.y + q0perp * st1.y;
		float det = max( dot( T, T ), dot( B, B ) );
		float scale = ( det == 0.0 ) ? 0.0 : inversesqrt( det );
		return mat3( T * scale, B * scale, N );
	}
#endif`,B1=`#ifdef USE_CLEARCOAT
	vec3 clearcoatNormal = nonPerturbedNormal;
#endif`,z1=`#ifdef USE_CLEARCOAT_NORMALMAP
	vec3 clearcoatMapN = texture2D( clearcoatNormalMap, vClearcoatNormalMapUv ).xyz * 2.0 - 1.0;
	clearcoatMapN.xy *= clearcoatNormalScale;
	clearcoatNormal = normalize( tbn2 * clearcoatMapN );
#endif`,V1=`#ifdef USE_CLEARCOATMAP
	uniform sampler2D clearcoatMap;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	uniform sampler2D clearcoatNormalMap;
	uniform vec2 clearcoatNormalScale;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	uniform sampler2D clearcoatRoughnessMap;
#endif`,k1=`#ifdef USE_IRIDESCENCEMAP
	uniform sampler2D iridescenceMap;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	uniform sampler2D iridescenceThicknessMap;
#endif`,G1=`#ifdef OPAQUE
diffuseColor.a = 1.0;
#endif
#ifdef USE_TRANSMISSION
diffuseColor.a *= material.transmissionAlpha;
#endif
gl_FragColor = vec4( outgoingLight, diffuseColor.a );`,H1=`vec3 packNormalToRGB( const in vec3 normal ) {
	return normalize( normal ) * 0.5 + 0.5;
}
vec3 unpackRGBToNormal( const in vec3 rgb ) {
	return 2.0 * rgb.xyz - 1.0;
}
const float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;const float ShiftRight8 = 1. / 256.;
const float Inv255 = 1. / 255.;
const vec4 PackFactors = vec4( 1.0, 256.0, 256.0 * 256.0, 256.0 * 256.0 * 256.0 );
const vec2 UnpackFactors2 = vec2( UnpackDownscale, 1.0 / PackFactors.g );
const vec3 UnpackFactors3 = vec3( UnpackDownscale / PackFactors.rg, 1.0 / PackFactors.b );
const vec4 UnpackFactors4 = vec4( UnpackDownscale / PackFactors.rgb, 1.0 / PackFactors.a );
vec4 packDepthToRGBA( const in float v ) {
	if( v <= 0.0 )
		return vec4( 0., 0., 0., 0. );
	if( v >= 1.0 )
		return vec4( 1., 1., 1., 1. );
	float vuf;
	float af = modf( v * PackFactors.a, vuf );
	float bf = modf( vuf * ShiftRight8, vuf );
	float gf = modf( vuf * ShiftRight8, vuf );
	return vec4( vuf * Inv255, gf * PackUpscale, bf * PackUpscale, af );
}
vec3 packDepthToRGB( const in float v ) {
	if( v <= 0.0 )
		return vec3( 0., 0., 0. );
	if( v >= 1.0 )
		return vec3( 1., 1., 1. );
	float vuf;
	float bf = modf( v * PackFactors.b, vuf );
	float gf = modf( vuf * ShiftRight8, vuf );
	return vec3( vuf * Inv255, gf * PackUpscale, bf );
}
vec2 packDepthToRG( const in float v ) {
	if( v <= 0.0 )
		return vec2( 0., 0. );
	if( v >= 1.0 )
		return vec2( 1., 1. );
	float vuf;
	float gf = modf( v * 256., vuf );
	return vec2( vuf * Inv255, gf );
}
float unpackRGBAToDepth( const in vec4 v ) {
	return dot( v, UnpackFactors4 );
}
float unpackRGBToDepth( const in vec3 v ) {
	return dot( v, UnpackFactors3 );
}
float unpackRGToDepth( const in vec2 v ) {
	return v.r * UnpackFactors2.r + v.g * UnpackFactors2.g;
}
vec4 pack2HalfToRGBA( const in vec2 v ) {
	vec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ) );
	return vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w );
}
vec2 unpackRGBATo2Half( const in vec4 v ) {
	return vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );
}
float viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {
	return ( viewZ + near ) / ( near - far );
}
float orthographicDepthToViewZ( const in float depth, const in float near, const in float far ) {
	return depth * ( near - far ) - near;
}
float viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {
	return ( ( near + viewZ ) * far ) / ( ( far - near ) * viewZ );
}
float perspectiveDepthToViewZ( const in float depth, const in float near, const in float far ) {
	return ( near * far ) / ( ( far - near ) * depth - far );
}`,Y1=`#ifdef PREMULTIPLIED_ALPHA
	gl_FragColor.rgb *= gl_FragColor.a;
#endif`,W1=`vec4 mvPosition = vec4( transformed, 1.0 );
#ifdef USE_BATCHING
	mvPosition = batchingMatrix * mvPosition;
#endif
#ifdef USE_INSTANCING
	mvPosition = instanceMatrix * mvPosition;
#endif
mvPosition = modelViewMatrix * mvPosition;
gl_Position = projectionMatrix * mvPosition;`,X1=`#ifdef DITHERING
	gl_FragColor.rgb = dithering( gl_FragColor.rgb );
#endif`,Z1=`#ifdef DITHERING
	vec3 dithering( vec3 color ) {
		float grid_position = rand( gl_FragCoord.xy );
		vec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );
		dither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );
		return color + dither_shift_RGB;
	}
#endif`,j1=`float roughnessFactor = roughness;
#ifdef USE_ROUGHNESSMAP
	vec4 texelRoughness = texture2D( roughnessMap, vRoughnessMapUv );
	roughnessFactor *= texelRoughness.g;
#endif`,q1=`#ifdef USE_ROUGHNESSMAP
	uniform sampler2D roughnessMap;
#endif`,K1=`#if NUM_SPOT_LIGHT_COORDS > 0
	varying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];
#endif
#if NUM_SPOT_LIGHT_MAPS > 0
	uniform sampler2D spotLightMap[ NUM_SPOT_LIGHT_MAPS ];
#endif
#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		uniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];
		struct SpotLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
	float texture2DCompare( sampler2D depths, vec2 uv, float compare ) {
		return step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );
	}
	vec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {
		return unpackRGBATo2Half( texture2D( shadow, uv ) );
	}
	float VSMShadow (sampler2D shadow, vec2 uv, float compare ){
		float occlusion = 1.0;
		vec2 distribution = texture2DDistribution( shadow, uv );
		float hard_shadow = step( compare , distribution.x );
		if (hard_shadow != 1.0 ) {
			float distance = compare - distribution.x ;
			float variance = max( 0.00000, distribution.y * distribution.y );
			float softness_probability = variance / (variance + distance * distance );			softness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );			occlusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );
		}
		return occlusion;
	}
	float getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowIntensity, float shadowBias, float shadowRadius, vec4 shadowCoord ) {
		float shadow = 1.0;
		shadowCoord.xyz /= shadowCoord.w;
		shadowCoord.z += shadowBias;
		bool inFrustum = shadowCoord.x >= 0.0 && shadowCoord.x <= 1.0 && shadowCoord.y >= 0.0 && shadowCoord.y <= 1.0;
		bool frustumTest = inFrustum && shadowCoord.z <= 1.0;
		if ( frustumTest ) {
		#if defined( SHADOWMAP_TYPE_PCF )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx0 = - texelSize.x * shadowRadius;
			float dy0 = - texelSize.y * shadowRadius;
			float dx1 = + texelSize.x * shadowRadius;
			float dy1 = + texelSize.y * shadowRadius;
			float dx2 = dx0 / 2.0;
			float dy2 = dy0 / 2.0;
			float dx3 = dx1 / 2.0;
			float dy3 = dy1 / 2.0;
			shadow = (
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )
			) * ( 1.0 / 17.0 );
		#elif defined( SHADOWMAP_TYPE_PCF_SOFT )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx = texelSize.x;
			float dy = texelSize.y;
			vec2 uv = shadowCoord.xy;
			vec2 f = fract( uv * shadowMapSize + 0.5 );
			uv -= f * texelSize;
			shadow = (
				texture2DCompare( shadowMap, uv, shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ),
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),
						  f.x ),
					 mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ),
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),
						  f.x ),
					 f.y )
			) * ( 1.0 / 9.0 );
		#elif defined( SHADOWMAP_TYPE_VSM )
			shadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );
		#else
			shadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );
		#endif
		}
		return mix( 1.0, shadow, shadowIntensity );
	}
	vec2 cubeToUV( vec3 v, float texelSizeY ) {
		vec3 absV = abs( v );
		float scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );
		absV *= scaleToCube;
		v *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );
		vec2 planar = v.xy;
		float almostATexel = 1.5 * texelSizeY;
		float almostOne = 1.0 - almostATexel;
		if ( absV.z >= almostOne ) {
			if ( v.z > 0.0 )
				planar.x = 4.0 - v.x;
		} else if ( absV.x >= almostOne ) {
			float signX = sign( v.x );
			planar.x = v.z * signX + 2.0 * signX;
		} else if ( absV.y >= almostOne ) {
			float signY = sign( v.y );
			planar.x = v.x + 2.0 * signY + 2.0;
			planar.y = v.z * signY - 2.0;
		}
		return vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );
	}
	float getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowIntensity, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {
		float shadow = 1.0;
		vec3 lightToPosition = shadowCoord.xyz;
		
		float lightToPositionLength = length( lightToPosition );
		if ( lightToPositionLength - shadowCameraFar <= 0.0 && lightToPositionLength - shadowCameraNear >= 0.0 ) {
			float dp = ( lightToPositionLength - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );			dp += shadowBias;
			vec3 bd3D = normalize( lightToPosition );
			vec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );
			#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )
				vec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;
				shadow = (
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )
				) * ( 1.0 / 9.0 );
			#else
				shadow = texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );
			#endif
		}
		return mix( 1.0, shadow, shadowIntensity );
	}
#endif`,Q1=`#if NUM_SPOT_LIGHT_COORDS > 0
	uniform mat4 spotLightMatrix[ NUM_SPOT_LIGHT_COORDS ];
	varying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];
#endif
#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		struct SpotLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
#endif`,J1=`#if ( defined( USE_SHADOWMAP ) && ( NUM_DIR_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0 ) ) || ( NUM_SPOT_LIGHT_COORDS > 0 )
	vec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
	vec4 shadowWorldPosition;
#endif
#if defined( USE_SHADOWMAP )
	#if NUM_DIR_LIGHT_SHADOWS > 0
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
			shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );
			vDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;
		}
		#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
			shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );
			vPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;
		}
		#pragma unroll_loop_end
	#endif
#endif
#if NUM_SPOT_LIGHT_COORDS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_COORDS; i ++ ) {
		shadowWorldPosition = worldPosition;
		#if ( defined( USE_SHADOWMAP ) && UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
			shadowWorldPosition.xyz += shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias;
		#endif
		vSpotLightCoord[ i ] = spotLightMatrix[ i ] * shadowWorldPosition;
	}
	#pragma unroll_loop_end
#endif`,$1=`float getShadowMask() {
	float shadow = 1.0;
	#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
		directionalLight = directionalLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowIntensity, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {
		spotLight = spotLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowIntensity, spotLight.shadowBias, spotLight.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
		pointLight = pointLightShadows[ i ];
		shadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowIntensity, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#endif
	return shadow;
}`,ex=`#ifdef USE_SKINNING
	mat4 boneMatX = getBoneMatrix( skinIndex.x );
	mat4 boneMatY = getBoneMatrix( skinIndex.y );
	mat4 boneMatZ = getBoneMatrix( skinIndex.z );
	mat4 boneMatW = getBoneMatrix( skinIndex.w );
#endif`,tx=`#ifdef USE_SKINNING
	uniform mat4 bindMatrix;
	uniform mat4 bindMatrixInverse;
	uniform highp sampler2D boneTexture;
	mat4 getBoneMatrix( const in float i ) {
		int size = textureSize( boneTexture, 0 ).x;
		int j = int( i ) * 4;
		int x = j % size;
		int y = j / size;
		vec4 v1 = texelFetch( boneTexture, ivec2( x, y ), 0 );
		vec4 v2 = texelFetch( boneTexture, ivec2( x + 1, y ), 0 );
		vec4 v3 = texelFetch( boneTexture, ivec2( x + 2, y ), 0 );
		vec4 v4 = texelFetch( boneTexture, ivec2( x + 3, y ), 0 );
		return mat4( v1, v2, v3, v4 );
	}
#endif`,ix=`#ifdef USE_SKINNING
	vec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );
	vec4 skinned = vec4( 0.0 );
	skinned += boneMatX * skinVertex * skinWeight.x;
	skinned += boneMatY * skinVertex * skinWeight.y;
	skinned += boneMatZ * skinVertex * skinWeight.z;
	skinned += boneMatW * skinVertex * skinWeight.w;
	transformed = ( bindMatrixInverse * skinned ).xyz;
#endif`,nx=`#ifdef USE_SKINNING
	mat4 skinMatrix = mat4( 0.0 );
	skinMatrix += skinWeight.x * boneMatX;
	skinMatrix += skinWeight.y * boneMatY;
	skinMatrix += skinWeight.z * boneMatZ;
	skinMatrix += skinWeight.w * boneMatW;
	skinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;
	objectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;
	#ifdef USE_TANGENT
		objectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;
	#endif
#endif`,sx=`float specularStrength;
#ifdef USE_SPECULARMAP
	vec4 texelSpecular = texture2D( specularMap, vSpecularMapUv );
	specularStrength = texelSpecular.r;
#else
	specularStrength = 1.0;
#endif`,rx=`#ifdef USE_SPECULARMAP
	uniform sampler2D specularMap;
#endif`,ox=`#if defined( TONE_MAPPING )
	gl_FragColor.rgb = toneMapping( gl_FragColor.rgb );
#endif`,ax=`#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
uniform float toneMappingExposure;
vec3 LinearToneMapping( vec3 color ) {
	return saturate( toneMappingExposure * color );
}
vec3 ReinhardToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	return saturate( color / ( vec3( 1.0 ) + color ) );
}
vec3 CineonToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	color = max( vec3( 0.0 ), color - 0.004 );
	return pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );
}
vec3 RRTAndODTFit( vec3 v ) {
	vec3 a = v * ( v + 0.0245786 ) - 0.000090537;
	vec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;
	return a / b;
}
vec3 ACESFilmicToneMapping( vec3 color ) {
	const mat3 ACESInputMat = mat3(
		vec3( 0.59719, 0.07600, 0.02840 ),		vec3( 0.35458, 0.90834, 0.13383 ),
		vec3( 0.04823, 0.01566, 0.83777 )
	);
	const mat3 ACESOutputMat = mat3(
		vec3(  1.60475, -0.10208, -0.00327 ),		vec3( -0.53108,  1.10813, -0.07276 ),
		vec3( -0.07367, -0.00605,  1.07602 )
	);
	color *= toneMappingExposure / 0.6;
	color = ACESInputMat * color;
	color = RRTAndODTFit( color );
	color = ACESOutputMat * color;
	return saturate( color );
}
const mat3 LINEAR_REC2020_TO_LINEAR_SRGB = mat3(
	vec3( 1.6605, - 0.1246, - 0.0182 ),
	vec3( - 0.5876, 1.1329, - 0.1006 ),
	vec3( - 0.0728, - 0.0083, 1.1187 )
);
const mat3 LINEAR_SRGB_TO_LINEAR_REC2020 = mat3(
	vec3( 0.6274, 0.0691, 0.0164 ),
	vec3( 0.3293, 0.9195, 0.0880 ),
	vec3( 0.0433, 0.0113, 0.8956 )
);
vec3 agxDefaultContrastApprox( vec3 x ) {
	vec3 x2 = x * x;
	vec3 x4 = x2 * x2;
	return + 15.5 * x4 * x2
		- 40.14 * x4 * x
		+ 31.96 * x4
		- 6.868 * x2 * x
		+ 0.4298 * x2
		+ 0.1191 * x
		- 0.00232;
}
vec3 AgXToneMapping( vec3 color ) {
	const mat3 AgXInsetMatrix = mat3(
		vec3( 0.856627153315983, 0.137318972929847, 0.11189821299995 ),
		vec3( 0.0951212405381588, 0.761241990602591, 0.0767994186031903 ),
		vec3( 0.0482516061458583, 0.101439036467562, 0.811302368396859 )
	);
	const mat3 AgXOutsetMatrix = mat3(
		vec3( 1.1271005818144368, - 0.1413297634984383, - 0.14132976349843826 ),
		vec3( - 0.11060664309660323, 1.157823702216272, - 0.11060664309660294 ),
		vec3( - 0.016493938717834573, - 0.016493938717834257, 1.2519364065950405 )
	);
	const float AgxMinEv = - 12.47393;	const float AgxMaxEv = 4.026069;
	color *= toneMappingExposure;
	color = LINEAR_SRGB_TO_LINEAR_REC2020 * color;
	color = AgXInsetMatrix * color;
	color = max( color, 1e-10 );	color = log2( color );
	color = ( color - AgxMinEv ) / ( AgxMaxEv - AgxMinEv );
	color = clamp( color, 0.0, 1.0 );
	color = agxDefaultContrastApprox( color );
	color = AgXOutsetMatrix * color;
	color = pow( max( vec3( 0.0 ), color ), vec3( 2.2 ) );
	color = LINEAR_REC2020_TO_LINEAR_SRGB * color;
	color = clamp( color, 0.0, 1.0 );
	return color;
}
vec3 NeutralToneMapping( vec3 color ) {
	const float StartCompression = 0.8 - 0.04;
	const float Desaturation = 0.15;
	color *= toneMappingExposure;
	float x = min( color.r, min( color.g, color.b ) );
	float offset = x < 0.08 ? x - 6.25 * x * x : 0.04;
	color -= offset;
	float peak = max( color.r, max( color.g, color.b ) );
	if ( peak < StartCompression ) return color;
	float d = 1. - StartCompression;
	float newPeak = 1. - d * d / ( peak + d - StartCompression );
	color *= newPeak / peak;
	float g = 1. - 1. / ( Desaturation * ( peak - newPeak ) + 1. );
	return mix( color, vec3( newPeak ), g );
}
vec3 CustomToneMapping( vec3 color ) { return color; }`,lx=`#ifdef USE_TRANSMISSION
	material.transmission = transmission;
	material.transmissionAlpha = 1.0;
	material.thickness = thickness;
	material.attenuationDistance = attenuationDistance;
	material.attenuationColor = attenuationColor;
	#ifdef USE_TRANSMISSIONMAP
		material.transmission *= texture2D( transmissionMap, vTransmissionMapUv ).r;
	#endif
	#ifdef USE_THICKNESSMAP
		material.thickness *= texture2D( thicknessMap, vThicknessMapUv ).g;
	#endif
	vec3 pos = vWorldPosition;
	vec3 v = normalize( cameraPosition - pos );
	vec3 n = inverseTransformDirection( normal, viewMatrix );
	vec4 transmitted = getIBLVolumeRefraction(
		n, v, material.roughness, material.diffuseColor, material.specularColor, material.specularF90,
		pos, modelMatrix, viewMatrix, projectionMatrix, material.dispersion, material.ior, material.thickness,
		material.attenuationColor, material.attenuationDistance );
	material.transmissionAlpha = mix( material.transmissionAlpha, transmitted.a, material.transmission );
	totalDiffuse = mix( totalDiffuse, transmitted.rgb, material.transmission );
#endif`,cx=`#ifdef USE_TRANSMISSION
	uniform float transmission;
	uniform float thickness;
	uniform float attenuationDistance;
	uniform vec3 attenuationColor;
	#ifdef USE_TRANSMISSIONMAP
		uniform sampler2D transmissionMap;
	#endif
	#ifdef USE_THICKNESSMAP
		uniform sampler2D thicknessMap;
	#endif
	uniform vec2 transmissionSamplerSize;
	uniform sampler2D transmissionSamplerMap;
	uniform mat4 modelMatrix;
	uniform mat4 projectionMatrix;
	varying vec3 vWorldPosition;
	float w0( float a ) {
		return ( 1.0 / 6.0 ) * ( a * ( a * ( - a + 3.0 ) - 3.0 ) + 1.0 );
	}
	float w1( float a ) {
		return ( 1.0 / 6.0 ) * ( a *  a * ( 3.0 * a - 6.0 ) + 4.0 );
	}
	float w2( float a ){
		return ( 1.0 / 6.0 ) * ( a * ( a * ( - 3.0 * a + 3.0 ) + 3.0 ) + 1.0 );
	}
	float w3( float a ) {
		return ( 1.0 / 6.0 ) * ( a * a * a );
	}
	float g0( float a ) {
		return w0( a ) + w1( a );
	}
	float g1( float a ) {
		return w2( a ) + w3( a );
	}
	float h0( float a ) {
		return - 1.0 + w1( a ) / ( w0( a ) + w1( a ) );
	}
	float h1( float a ) {
		return 1.0 + w3( a ) / ( w2( a ) + w3( a ) );
	}
	vec4 bicubic( sampler2D tex, vec2 uv, vec4 texelSize, float lod ) {
		uv = uv * texelSize.zw + 0.5;
		vec2 iuv = floor( uv );
		vec2 fuv = fract( uv );
		float g0x = g0( fuv.x );
		float g1x = g1( fuv.x );
		float h0x = h0( fuv.x );
		float h1x = h1( fuv.x );
		float h0y = h0( fuv.y );
		float h1y = h1( fuv.y );
		vec2 p0 = ( vec2( iuv.x + h0x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;
		vec2 p1 = ( vec2( iuv.x + h1x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;
		vec2 p2 = ( vec2( iuv.x + h0x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;
		vec2 p3 = ( vec2( iuv.x + h1x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;
		return g0( fuv.y ) * ( g0x * textureLod( tex, p0, lod ) + g1x * textureLod( tex, p1, lod ) ) +
			g1( fuv.y ) * ( g0x * textureLod( tex, p2, lod ) + g1x * textureLod( tex, p3, lod ) );
	}
	vec4 textureBicubic( sampler2D sampler, vec2 uv, float lod ) {
		vec2 fLodSize = vec2( textureSize( sampler, int( lod ) ) );
		vec2 cLodSize = vec2( textureSize( sampler, int( lod + 1.0 ) ) );
		vec2 fLodSizeInv = 1.0 / fLodSize;
		vec2 cLodSizeInv = 1.0 / cLodSize;
		vec4 fSample = bicubic( sampler, uv, vec4( fLodSizeInv, fLodSize ), floor( lod ) );
		vec4 cSample = bicubic( sampler, uv, vec4( cLodSizeInv, cLodSize ), ceil( lod ) );
		return mix( fSample, cSample, fract( lod ) );
	}
	vec3 getVolumeTransmissionRay( const in vec3 n, const in vec3 v, const in float thickness, const in float ior, const in mat4 modelMatrix ) {
		vec3 refractionVector = refract( - v, normalize( n ), 1.0 / ior );
		vec3 modelScale;
		modelScale.x = length( vec3( modelMatrix[ 0 ].xyz ) );
		modelScale.y = length( vec3( modelMatrix[ 1 ].xyz ) );
		modelScale.z = length( vec3( modelMatrix[ 2 ].xyz ) );
		return normalize( refractionVector ) * thickness * modelScale;
	}
	float applyIorToRoughness( const in float roughness, const in float ior ) {
		return roughness * clamp( ior * 2.0 - 2.0, 0.0, 1.0 );
	}
	vec4 getTransmissionSample( const in vec2 fragCoord, const in float roughness, const in float ior ) {
		float lod = log2( transmissionSamplerSize.x ) * applyIorToRoughness( roughness, ior );
		return textureBicubic( transmissionSamplerMap, fragCoord.xy, lod );
	}
	vec3 volumeAttenuation( const in float transmissionDistance, const in vec3 attenuationColor, const in float attenuationDistance ) {
		if ( isinf( attenuationDistance ) ) {
			return vec3( 1.0 );
		} else {
			vec3 attenuationCoefficient = -log( attenuationColor ) / attenuationDistance;
			vec3 transmittance = exp( - attenuationCoefficient * transmissionDistance );			return transmittance;
		}
	}
	vec4 getIBLVolumeRefraction( const in vec3 n, const in vec3 v, const in float roughness, const in vec3 diffuseColor,
		const in vec3 specularColor, const in float specularF90, const in vec3 position, const in mat4 modelMatrix,
		const in mat4 viewMatrix, const in mat4 projMatrix, const in float dispersion, const in float ior, const in float thickness,
		const in vec3 attenuationColor, const in float attenuationDistance ) {
		vec4 transmittedLight;
		vec3 transmittance;
		#ifdef USE_DISPERSION
			float halfSpread = ( ior - 1.0 ) * 0.025 * dispersion;
			vec3 iors = vec3( ior - halfSpread, ior, ior + halfSpread );
			for ( int i = 0; i < 3; i ++ ) {
				vec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, iors[ i ], modelMatrix );
				vec3 refractedRayExit = position + transmissionRay;
				vec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );
				vec2 refractionCoords = ndcPos.xy / ndcPos.w;
				refractionCoords += 1.0;
				refractionCoords /= 2.0;
				vec4 transmissionSample = getTransmissionSample( refractionCoords, roughness, iors[ i ] );
				transmittedLight[ i ] = transmissionSample[ i ];
				transmittedLight.a += transmissionSample.a;
				transmittance[ i ] = diffuseColor[ i ] * volumeAttenuation( length( transmissionRay ), attenuationColor, attenuationDistance )[ i ];
			}
			transmittedLight.a /= 3.0;
		#else
			vec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, ior, modelMatrix );
			vec3 refractedRayExit = position + transmissionRay;
			vec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );
			vec2 refractionCoords = ndcPos.xy / ndcPos.w;
			refractionCoords += 1.0;
			refractionCoords /= 2.0;
			transmittedLight = getTransmissionSample( refractionCoords, roughness, ior );
			transmittance = diffuseColor * volumeAttenuation( length( transmissionRay ), attenuationColor, attenuationDistance );
		#endif
		vec3 attenuatedColor = transmittance * transmittedLight.rgb;
		vec3 F = EnvironmentBRDF( n, v, specularColor, specularF90, roughness );
		float transmittanceFactor = ( transmittance.r + transmittance.g + transmittance.b ) / 3.0;
		return vec4( ( 1.0 - F ) * attenuatedColor, 1.0 - ( 1.0 - transmittedLight.a ) * transmittanceFactor );
	}
#endif`,hx=`#if defined( USE_UV ) || defined( USE_ANISOTROPY )
	varying vec2 vUv;
#endif
#ifdef USE_MAP
	varying vec2 vMapUv;
#endif
#ifdef USE_ALPHAMAP
	varying vec2 vAlphaMapUv;
#endif
#ifdef USE_LIGHTMAP
	varying vec2 vLightMapUv;
#endif
#ifdef USE_AOMAP
	varying vec2 vAoMapUv;
#endif
#ifdef USE_BUMPMAP
	varying vec2 vBumpMapUv;
#endif
#ifdef USE_NORMALMAP
	varying vec2 vNormalMapUv;
#endif
#ifdef USE_EMISSIVEMAP
	varying vec2 vEmissiveMapUv;
#endif
#ifdef USE_METALNESSMAP
	varying vec2 vMetalnessMapUv;
#endif
#ifdef USE_ROUGHNESSMAP
	varying vec2 vRoughnessMapUv;
#endif
#ifdef USE_ANISOTROPYMAP
	varying vec2 vAnisotropyMapUv;
#endif
#ifdef USE_CLEARCOATMAP
	varying vec2 vClearcoatMapUv;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	varying vec2 vClearcoatNormalMapUv;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	varying vec2 vClearcoatRoughnessMapUv;
#endif
#ifdef USE_IRIDESCENCEMAP
	varying vec2 vIridescenceMapUv;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	varying vec2 vIridescenceThicknessMapUv;
#endif
#ifdef USE_SHEEN_COLORMAP
	varying vec2 vSheenColorMapUv;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	varying vec2 vSheenRoughnessMapUv;
#endif
#ifdef USE_SPECULARMAP
	varying vec2 vSpecularMapUv;
#endif
#ifdef USE_SPECULAR_COLORMAP
	varying vec2 vSpecularColorMapUv;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	varying vec2 vSpecularIntensityMapUv;
#endif
#ifdef USE_TRANSMISSIONMAP
	uniform mat3 transmissionMapTransform;
	varying vec2 vTransmissionMapUv;
#endif
#ifdef USE_THICKNESSMAP
	uniform mat3 thicknessMapTransform;
	varying vec2 vThicknessMapUv;
#endif`,ux=`#if defined( USE_UV ) || defined( USE_ANISOTROPY )
	varying vec2 vUv;
#endif
#ifdef USE_MAP
	uniform mat3 mapTransform;
	varying vec2 vMapUv;
#endif
#ifdef USE_ALPHAMAP
	uniform mat3 alphaMapTransform;
	varying vec2 vAlphaMapUv;
#endif
#ifdef USE_LIGHTMAP
	uniform mat3 lightMapTransform;
	varying vec2 vLightMapUv;
#endif
#ifdef USE_AOMAP
	uniform mat3 aoMapTransform;
	varying vec2 vAoMapUv;
#endif
#ifdef USE_BUMPMAP
	uniform mat3 bumpMapTransform;
	varying vec2 vBumpMapUv;
#endif
#ifdef USE_NORMALMAP
	uniform mat3 normalMapTransform;
	varying vec2 vNormalMapUv;
#endif
#ifdef USE_DISPLACEMENTMAP
	uniform mat3 displacementMapTransform;
	varying vec2 vDisplacementMapUv;
#endif
#ifdef USE_EMISSIVEMAP
	uniform mat3 emissiveMapTransform;
	varying vec2 vEmissiveMapUv;
#endif
#ifdef USE_METALNESSMAP
	uniform mat3 metalnessMapTransform;
	varying vec2 vMetalnessMapUv;
#endif
#ifdef USE_ROUGHNESSMAP
	uniform mat3 roughnessMapTransform;
	varying vec2 vRoughnessMapUv;
#endif
#ifdef USE_ANISOTROPYMAP
	uniform mat3 anisotropyMapTransform;
	varying vec2 vAnisotropyMapUv;
#endif
#ifdef USE_CLEARCOATMAP
	uniform mat3 clearcoatMapTransform;
	varying vec2 vClearcoatMapUv;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	uniform mat3 clearcoatNormalMapTransform;
	varying vec2 vClearcoatNormalMapUv;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	uniform mat3 clearcoatRoughnessMapTransform;
	varying vec2 vClearcoatRoughnessMapUv;
#endif
#ifdef USE_SHEEN_COLORMAP
	uniform mat3 sheenColorMapTransform;
	varying vec2 vSheenColorMapUv;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	uniform mat3 sheenRoughnessMapTransform;
	varying vec2 vSheenRoughnessMapUv;
#endif
#ifdef USE_IRIDESCENCEMAP
	uniform mat3 iridescenceMapTransform;
	varying vec2 vIridescenceMapUv;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	uniform mat3 iridescenceThicknessMapTransform;
	varying vec2 vIridescenceThicknessMapUv;
#endif
#ifdef USE_SPECULARMAP
	uniform mat3 specularMapTransform;
	varying vec2 vSpecularMapUv;
#endif
#ifdef USE_SPECULAR_COLORMAP
	uniform mat3 specularColorMapTransform;
	varying vec2 vSpecularColorMapUv;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	uniform mat3 specularIntensityMapTransform;
	varying vec2 vSpecularIntensityMapUv;
#endif
#ifdef USE_TRANSMISSIONMAP
	uniform mat3 transmissionMapTransform;
	varying vec2 vTransmissionMapUv;
#endif
#ifdef USE_THICKNESSMAP
	uniform mat3 thicknessMapTransform;
	varying vec2 vThicknessMapUv;
#endif`,dx=`#if defined( USE_UV ) || defined( USE_ANISOTROPY )
	vUv = vec3( uv, 1 ).xy;
#endif
#ifdef USE_MAP
	vMapUv = ( mapTransform * vec3( MAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ALPHAMAP
	vAlphaMapUv = ( alphaMapTransform * vec3( ALPHAMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_LIGHTMAP
	vLightMapUv = ( lightMapTransform * vec3( LIGHTMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_AOMAP
	vAoMapUv = ( aoMapTransform * vec3( AOMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_BUMPMAP
	vBumpMapUv = ( bumpMapTransform * vec3( BUMPMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_NORMALMAP
	vNormalMapUv = ( normalMapTransform * vec3( NORMALMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_DISPLACEMENTMAP
	vDisplacementMapUv = ( displacementMapTransform * vec3( DISPLACEMENTMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_EMISSIVEMAP
	vEmissiveMapUv = ( emissiveMapTransform * vec3( EMISSIVEMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_METALNESSMAP
	vMetalnessMapUv = ( metalnessMapTransform * vec3( METALNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ROUGHNESSMAP
	vRoughnessMapUv = ( roughnessMapTransform * vec3( ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ANISOTROPYMAP
	vAnisotropyMapUv = ( anisotropyMapTransform * vec3( ANISOTROPYMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOATMAP
	vClearcoatMapUv = ( clearcoatMapTransform * vec3( CLEARCOATMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	vClearcoatNormalMapUv = ( clearcoatNormalMapTransform * vec3( CLEARCOAT_NORMALMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	vClearcoatRoughnessMapUv = ( clearcoatRoughnessMapTransform * vec3( CLEARCOAT_ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_IRIDESCENCEMAP
	vIridescenceMapUv = ( iridescenceMapTransform * vec3( IRIDESCENCEMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	vIridescenceThicknessMapUv = ( iridescenceThicknessMapTransform * vec3( IRIDESCENCE_THICKNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SHEEN_COLORMAP
	vSheenColorMapUv = ( sheenColorMapTransform * vec3( SHEEN_COLORMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	vSheenRoughnessMapUv = ( sheenRoughnessMapTransform * vec3( SHEEN_ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULARMAP
	vSpecularMapUv = ( specularMapTransform * vec3( SPECULARMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULAR_COLORMAP
	vSpecularColorMapUv = ( specularColorMapTransform * vec3( SPECULAR_COLORMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	vSpecularIntensityMapUv = ( specularIntensityMapTransform * vec3( SPECULAR_INTENSITYMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_TRANSMISSIONMAP
	vTransmissionMapUv = ( transmissionMapTransform * vec3( TRANSMISSIONMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_THICKNESSMAP
	vThicknessMapUv = ( thicknessMapTransform * vec3( THICKNESSMAP_UV, 1 ) ).xy;
#endif`,fx=`#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP ) || defined ( USE_TRANSMISSION ) || NUM_SPOT_LIGHT_COORDS > 0
	vec4 worldPosition = vec4( transformed, 1.0 );
	#ifdef USE_BATCHING
		worldPosition = batchingMatrix * worldPosition;
	#endif
	#ifdef USE_INSTANCING
		worldPosition = instanceMatrix * worldPosition;
	#endif
	worldPosition = modelMatrix * worldPosition;
#endif`;const px=`varying vec2 vUv;
uniform mat3 uvTransform;
void main() {
	vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
	gl_Position = vec4( position.xy, 1.0, 1.0 );
}`,mx=`uniform sampler2D t2D;
uniform float backgroundIntensity;
varying vec2 vUv;
void main() {
	vec4 texColor = texture2D( t2D, vUv );
	#ifdef DECODE_VIDEO_TEXTURE
		texColor = vec4( mix( pow( texColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), texColor.rgb * 0.0773993808, vec3( lessThanEqual( texColor.rgb, vec3( 0.04045 ) ) ) ), texColor.w );
	#endif
	texColor.rgb *= backgroundIntensity;
	gl_FragColor = texColor;
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,gx=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
	gl_Position.z = gl_Position.w;
}`,Ex=`#ifdef ENVMAP_TYPE_CUBE
	uniform samplerCube envMap;
#elif defined( ENVMAP_TYPE_CUBE_UV )
	uniform sampler2D envMap;
#endif
uniform float flipEnvMap;
uniform float backgroundBlurriness;
uniform float backgroundIntensity;
uniform mat3 backgroundRotation;
varying vec3 vWorldDirection;
#include <cube_uv_reflection_fragment>
void main() {
	#ifdef ENVMAP_TYPE_CUBE
		vec4 texColor = textureCube( envMap, backgroundRotation * vec3( flipEnvMap * vWorldDirection.x, vWorldDirection.yz ) );
	#elif defined( ENVMAP_TYPE_CUBE_UV )
		vec4 texColor = textureCubeUV( envMap, backgroundRotation * vWorldDirection, backgroundBlurriness );
	#else
		vec4 texColor = vec4( 0.0, 0.0, 0.0, 1.0 );
	#endif
	texColor.rgb *= backgroundIntensity;
	gl_FragColor = texColor;
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,Ix=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
	gl_Position.z = gl_Position.w;
}`,_x=`uniform samplerCube tCube;
uniform float tFlip;
uniform float opacity;
varying vec3 vWorldDirection;
void main() {
	vec4 texColor = textureCube( tCube, vec3( tFlip * vWorldDirection.x, vWorldDirection.yz ) );
	gl_FragColor = texColor;
	gl_FragColor.a *= opacity;
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,vx=`#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
varying vec2 vHighPrecisionZW;
void main() {
	#include <uv_vertex>
	#include <batching_vertex>
	#include <skinbase_vertex>
	#include <morphinstance_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vHighPrecisionZW = gl_Position.zw;
}`,bx=`#if DEPTH_PACKING == 3200
	uniform float opacity;
#endif
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
varying vec2 vHighPrecisionZW;
void main() {
	vec4 diffuseColor = vec4( 1.0 );
	#include <clipping_planes_fragment>
	#if DEPTH_PACKING == 3200
		diffuseColor.a = opacity;
	#endif
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <logdepthbuf_fragment>
	float fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;
	#if DEPTH_PACKING == 3200
		gl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );
	#elif DEPTH_PACKING == 3201
		gl_FragColor = packDepthToRGBA( fragCoordZ );
	#elif DEPTH_PACKING == 3202
		gl_FragColor = vec4( packDepthToRGB( fragCoordZ ), 1.0 );
	#elif DEPTH_PACKING == 3203
		gl_FragColor = vec4( packDepthToRG( fragCoordZ ), 0.0, 1.0 );
	#endif
}`,yx=`#define DISTANCE
varying vec3 vWorldPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <batching_vertex>
	#include <skinbase_vertex>
	#include <morphinstance_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <worldpos_vertex>
	#include <clipping_planes_vertex>
	vWorldPosition = worldPosition.xyz;
}`,Tx=`#define DISTANCE
uniform vec3 referencePosition;
uniform float nearDistance;
uniform float farDistance;
varying vec3 vWorldPosition;
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <clipping_planes_pars_fragment>
void main () {
	vec4 diffuseColor = vec4( 1.0 );
	#include <clipping_planes_fragment>
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	float dist = length( vWorldPosition - referencePosition );
	dist = ( dist - nearDistance ) / ( farDistance - nearDistance );
	dist = saturate( dist );
	gl_FragColor = packDepthToRGBA( dist );
}`,Cx=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
}`,xx=`uniform sampler2D tEquirect;
varying vec3 vWorldDirection;
#include <common>
void main() {
	vec3 direction = normalize( vWorldDirection );
	vec2 sampleUV = equirectUv( direction );
	gl_FragColor = texture2D( tEquirect, sampleUV );
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,wx=`uniform float scale;
attribute float lineDistance;
varying float vLineDistance;
#include <common>
#include <uv_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	vLineDistance = scale * lineDistance;
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,Sx=`uniform vec3 diffuse;
uniform float opacity;
uniform float dashSize;
uniform float totalSize;
varying float vLineDistance;
#include <common>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	if ( mod( vLineDistance, totalSize ) > dashSize ) {
		discard;
	}
	vec3 outgoingLight = vec3( 0.0 );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,Ax=`#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#if defined ( USE_ENVMAP ) || defined ( USE_SKINNING )
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinbase_vertex>
		#include <skinnormal_vertex>
		#include <defaultnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <fog_vertex>
}`,Rx=`uniform vec3 diffuse;
uniform float opacity;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <specularmap_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel = texture2D( lightMap, vLightMapUv );
		reflectedLight.indirectDiffuse += lightMapTexel.rgb * lightMapIntensity * RECIPROCAL_PI;
	#else
		reflectedLight.indirectDiffuse += vec3( 1.0 );
	#endif
	#include <aomap_fragment>
	reflectedLight.indirectDiffuse *= diffuseColor.rgb;
	vec3 outgoingLight = reflectedLight.indirectDiffuse;
	#include <envmap_fragment>
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,Mx=`#define LAMBERT
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,Fx=`#define LAMBERT
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_lambert_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_lambert_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,Px=`#define MATCAP
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <color_pars_vertex>
#include <displacementmap_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
	vViewPosition = - mvPosition.xyz;
}`,Ox=`#define MATCAP
uniform vec3 diffuse;
uniform float opacity;
uniform sampler2D matcap;
varying vec3 vViewPosition;
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <fog_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	vec3 viewDir = normalize( vViewPosition );
	vec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );
	vec3 y = cross( viewDir, x );
	vec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;
	#ifdef USE_MATCAP
		vec4 matcapColor = texture2D( matcap, uv );
	#else
		vec4 matcapColor = vec4( vec3( mix( 0.2, 0.8, uv.y ) ), 1.0 );
	#endif
	vec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,Lx=`#define NORMAL
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	varying vec3 vViewPosition;
#endif
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphinstance_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	vViewPosition = - mvPosition.xyz;
#endif
}`,Dx=`#define NORMAL
uniform float opacity;
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	varying vec3 vViewPosition;
#endif
#include <packing>
#include <uv_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( 0.0, 0.0, 0.0, opacity );
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	gl_FragColor = vec4( packNormalToRGB( normal ), diffuseColor.a );
	#ifdef OPAQUE
		gl_FragColor.a = 1.0;
	#endif
}`,Nx=`#define PHONG
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphinstance_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,Ux=`#define PHONG
uniform vec3 diffuse;
uniform vec3 emissive;
uniform vec3 specular;
uniform float shininess;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_phong_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_phong_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,Bx=`#define STANDARD
varying vec3 vViewPosition;
#ifdef USE_TRANSMISSION
	varying vec3 vWorldPosition;
#endif
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
#ifdef USE_TRANSMISSION
	vWorldPosition = worldPosition.xyz;
#endif
}`,zx=`#define STANDARD
#ifdef PHYSICAL
	#define IOR
	#define USE_SPECULAR
#endif
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float roughness;
uniform float metalness;
uniform float opacity;
#ifdef IOR
	uniform float ior;
#endif
#ifdef USE_SPECULAR
	uniform float specularIntensity;
	uniform vec3 specularColor;
	#ifdef USE_SPECULAR_COLORMAP
		uniform sampler2D specularColorMap;
	#endif
	#ifdef USE_SPECULAR_INTENSITYMAP
		uniform sampler2D specularIntensityMap;
	#endif
#endif
#ifdef USE_CLEARCOAT
	uniform float clearcoat;
	uniform float clearcoatRoughness;
#endif
#ifdef USE_DISPERSION
	uniform float dispersion;
#endif
#ifdef USE_IRIDESCENCE
	uniform float iridescence;
	uniform float iridescenceIOR;
	uniform float iridescenceThicknessMinimum;
	uniform float iridescenceThicknessMaximum;
#endif
#ifdef USE_SHEEN
	uniform vec3 sheenColor;
	uniform float sheenRoughness;
	#ifdef USE_SHEEN_COLORMAP
		uniform sampler2D sheenColorMap;
	#endif
	#ifdef USE_SHEEN_ROUGHNESSMAP
		uniform sampler2D sheenRoughnessMap;
	#endif
#endif
#ifdef USE_ANISOTROPY
	uniform vec2 anisotropyVector;
	#ifdef USE_ANISOTROPYMAP
		uniform sampler2D anisotropyMap;
	#endif
#endif
varying vec3 vViewPosition;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <iridescence_fragment>
#include <cube_uv_reflection_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_physical_pars_fragment>
#include <fog_pars_fragment>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_physical_pars_fragment>
#include <transmission_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <clearcoat_pars_fragment>
#include <iridescence_pars_fragment>
#include <roughnessmap_pars_fragment>
#include <metalnessmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <roughnessmap_fragment>
	#include <metalnessmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <clearcoat_normal_fragment_begin>
	#include <clearcoat_normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_physical_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 totalDiffuse = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;
	vec3 totalSpecular = reflectedLight.directSpecular + reflectedLight.indirectSpecular;
	#include <transmission_fragment>
	vec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;
	#ifdef USE_SHEEN
		float sheenEnergyComp = 1.0 - 0.157 * max3( material.sheenColor );
		outgoingLight = outgoingLight * sheenEnergyComp + sheenSpecularDirect + sheenSpecularIndirect;
	#endif
	#ifdef USE_CLEARCOAT
		float dotNVcc = saturate( dot( geometryClearcoatNormal, geometryViewDir ) );
		vec3 Fcc = F_Schlick( material.clearcoatF0, material.clearcoatF90, dotNVcc );
		outgoingLight = outgoingLight * ( 1.0 - material.clearcoat * Fcc ) + ( clearcoatSpecularDirect + clearcoatSpecularIndirect ) * material.clearcoat;
	#endif
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,Vx=`#define TOON
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,kx=`#define TOON
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <gradientmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_toon_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_toon_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,Gx=`uniform float size;
uniform float scale;
#include <common>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
#ifdef USE_POINTS_UV
	varying vec2 vUv;
	uniform mat3 uvTransform;
#endif
void main() {
	#ifdef USE_POINTS_UV
		vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
	#endif
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	gl_PointSize = size;
	#ifdef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );
	#endif
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <fog_vertex>
}`,Hx=`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <color_pars_fragment>
#include <map_particle_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	#include <logdepthbuf_fragment>
	#include <map_particle_fragment>
	#include <color_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,Yx=`#include <common>
#include <batching_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <shadowmap_pars_vertex>
void main() {
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphinstance_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,Wx=`uniform vec3 color;
uniform float opacity;
#include <common>
#include <packing>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <logdepthbuf_pars_fragment>
#include <shadowmap_pars_fragment>
#include <shadowmask_pars_fragment>
void main() {
	#include <logdepthbuf_fragment>
	gl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
}`,Xx=`uniform float rotation;
uniform vec2 center;
#include <common>
#include <uv_pars_vertex>
#include <fog_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	vec4 mvPosition = modelViewMatrix[ 3 ];
	vec2 scale = vec2( length( modelMatrix[ 0 ].xyz ), length( modelMatrix[ 1 ].xyz ) );
	#ifndef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) scale *= - mvPosition.z;
	#endif
	vec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;
	vec2 rotatedPosition;
	rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;
	rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;
	mvPosition.xy += rotatedPosition;
	gl_Position = projectionMatrix * mvPosition;
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,Zx=`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
}`,st={alphahash_fragment:mC,alphahash_pars_fragment:gC,alphamap_fragment:EC,alphamap_pars_fragment:IC,alphatest_fragment:_C,alphatest_pars_fragment:vC,aomap_fragment:bC,aomap_pars_fragment:yC,batching_pars_vertex:TC,batching_vertex:CC,begin_vertex:xC,beginnormal_vertex:wC,bsdfs:SC,iridescence_fragment:AC,bumpmap_pars_fragment:RC,clipping_planes_fragment:MC,clipping_planes_pars_fragment:FC,clipping_planes_pars_vertex:PC,clipping_planes_vertex:OC,color_fragment:LC,color_pars_fragment:DC,color_pars_vertex:NC,color_vertex:UC,common:BC,cube_uv_reflection_fragment:zC,defaultnormal_vertex:VC,displacementmap_pars_vertex:kC,displacementmap_vertex:GC,emissivemap_fragment:HC,emissivemap_pars_fragment:YC,colorspace_fragment:WC,colorspace_pars_fragment:XC,envmap_fragment:ZC,envmap_common_pars_fragment:jC,envmap_pars_fragment:qC,envmap_pars_vertex:KC,envmap_physical_pars_fragment:a1,envmap_vertex:QC,fog_vertex:JC,fog_pars_vertex:$C,fog_fragment:e1,fog_pars_fragment:t1,gradientmap_pars_fragment:i1,lightmap_pars_fragment:n1,lights_lambert_fragment:s1,lights_lambert_pars_fragment:r1,lights_pars_begin:o1,lights_toon_fragment:l1,lights_toon_pars_fragment:c1,lights_phong_fragment:h1,lights_phong_pars_fragment:u1,lights_physical_fragment:d1,lights_physical_pars_fragment:f1,lights_fragment_begin:p1,lights_fragment_maps:m1,lights_fragment_end:g1,logdepthbuf_fragment:E1,logdepthbuf_pars_fragment:I1,logdepthbuf_pars_vertex:_1,logdepthbuf_vertex:v1,map_fragment:b1,map_pars_fragment:y1,map_particle_fragment:T1,map_particle_pars_fragment:C1,metalnessmap_fragment:x1,metalnessmap_pars_fragment:w1,morphinstance_vertex:S1,morphcolor_vertex:A1,morphnormal_vertex:R1,morphtarget_pars_vertex:M1,morphtarget_vertex:F1,normal_fragment_begin:P1,normal_fragment_maps:O1,normal_pars_fragment:L1,normal_pars_vertex:D1,normal_vertex:N1,normalmap_pars_fragment:U1,clearcoat_normal_fragment_begin:B1,clearcoat_normal_fragment_maps:z1,clearcoat_pars_fragment:V1,iridescence_pars_fragment:k1,opaque_fragment:G1,packing:H1,premultiplied_alpha_fragment:Y1,project_vertex:W1,dithering_fragment:X1,dithering_pars_fragment:Z1,roughnessmap_fragment:j1,roughnessmap_pars_fragment:q1,shadowmap_pars_fragment:K1,shadowmap_pars_vertex:Q1,shadowmap_vertex:J1,shadowmask_pars_fragment:$1,skinbase_vertex:ex,skinning_pars_vertex:tx,skinning_vertex:ix,skinnormal_vertex:nx,specularmap_fragment:sx,specularmap_pars_fragment:rx,tonemapping_fragment:ox,tonemapping_pars_fragment:ax,transmission_fragment:lx,transmission_pars_fragment:cx,uv_pars_fragment:hx,uv_pars_vertex:ux,uv_vertex:dx,worldpos_vertex:fx,background_vert:px,background_frag:mx,backgroundCube_vert:gx,backgroundCube_frag:Ex,cube_vert:Ix,cube_frag:_x,depth_vert:vx,depth_frag:bx,distanceRGBA_vert:yx,distanceRGBA_frag:Tx,equirect_vert:Cx,equirect_frag:xx,linedashed_vert:wx,linedashed_frag:Sx,meshbasic_vert:Ax,meshbasic_frag:Rx,meshlambert_vert:Mx,meshlambert_frag:Fx,meshmatcap_vert:Px,meshmatcap_frag:Ox,meshnormal_vert:Lx,meshnormal_frag:Dx,meshphong_vert:Nx,meshphong_frag:Ux,meshphysical_vert:Bx,meshphysical_frag:zx,meshtoon_vert:Vx,meshtoon_frag:kx,points_vert:Gx,points_frag:Hx,shadow_vert:Yx,shadow_frag:Wx,sprite_vert:Xx,sprite_frag:Zx},xe={common:{diffuse:{value:new Ne(16777215)},opacity:{value:1},map:{value:null},mapTransform:{value:new Xe},alphaMap:{value:null},alphaMapTransform:{value:new Xe},alphaTest:{value:0}},specularmap:{specularMap:{value:null},specularMapTransform:{value:new Xe}},envmap:{envMap:{value:null},envMapRotation:{value:new Xe},flipEnvMap:{value:-1},reflectivity:{value:1},ior:{value:1.5},refractionRatio:{value:.98}},aomap:{aoMap:{value:null},aoMapIntensity:{value:1},aoMapTransform:{value:new Xe}},lightmap:{lightMap:{value:null},lightMapIntensity:{value:1},lightMapTransform:{value:new Xe}},bumpmap:{bumpMap:{value:null},bumpMapTransform:{value:new Xe},bumpScale:{value:1}},normalmap:{normalMap:{value:null},normalMapTransform:{value:new Xe},normalScale:{value:new Oe(1,1)}},displacementmap:{displacementMap:{value:null},displacementMapTransform:{value:new Xe},displacementScale:{value:1},displacementBias:{value:0}},emissivemap:{emissiveMap:{value:null},emissiveMapTransform:{value:new Xe}},metalnessmap:{metalnessMap:{value:null},metalnessMapTransform:{value:new Xe}},roughnessmap:{roughnessMap:{value:null},roughnessMapTransform:{value:new Xe}},gradientmap:{gradientMap:{value:null}},fog:{fogDensity:{value:25e-5},fogNear:{value:1},fogFar:{value:2e3},fogColor:{value:new Ne(16777215)}},lights:{ambientLightColor:{value:[]},lightProbe:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{}}},directionalLightShadows:{value:[],properties:{shadowIntensity:1,shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},directionalShadowMatrix:{value:[]},spotLights:{value:[],properties:{color:{},position:{},direction:{},distance:{},coneCos:{},penumbraCos:{},decay:{}}},spotLightShadows:{value:[],properties:{shadowIntensity:1,shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},spotLightMap:{value:[]},spotShadowMap:{value:[]},spotLightMatrix:{value:[]},pointLights:{value:[],properties:{color:{},position:{},decay:{},distance:{}}},pointLightShadows:{value:[],properties:{shadowIntensity:1,shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{},shadowCameraNear:{},shadowCameraFar:{}}},pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},skyColor:{},groundColor:{}}},rectAreaLights:{value:[],properties:{color:{},position:{},width:{},height:{}}},ltc_1:{value:null},ltc_2:{value:null}},points:{diffuse:{value:new Ne(16777215)},opacity:{value:1},size:{value:1},scale:{value:1},map:{value:null},alphaMap:{value:null},alphaMapTransform:{value:new Xe},alphaTest:{value:0},uvTransform:{value:new Xe}},sprite:{diffuse:{value:new Ne(16777215)},opacity:{value:1},center:{value:new Oe(.5,.5)},rotation:{value:0},map:{value:null},mapTransform:{value:new Xe},alphaMap:{value:null},alphaMapTransform:{value:new Xe},alphaTest:{value:0}}},wi={basic:{uniforms:Ci([xe.common,xe.specularmap,xe.envmap,xe.aomap,xe.lightmap,xe.fog]),vertexShader:st.meshbasic_vert,fragmentShader:st.meshbasic_frag},lambert:{uniforms:Ci([xe.common,xe.specularmap,xe.envmap,xe.aomap,xe.lightmap,xe.emissivemap,xe.bumpmap,xe.normalmap,xe.displacementmap,xe.fog,xe.lights,{emissive:{value:new Ne(0)}}]),vertexShader:st.meshlambert_vert,fragmentShader:st.meshlambert_frag},phong:{uniforms:Ci([xe.common,xe.specularmap,xe.envmap,xe.aomap,xe.lightmap,xe.emissivemap,xe.bumpmap,xe.normalmap,xe.displacementmap,xe.fog,xe.lights,{emissive:{value:new Ne(0)},specular:{value:new Ne(1118481)},shininess:{value:30}}]),vertexShader:st.meshphong_vert,fragmentShader:st.meshphong_frag},standard:{uniforms:Ci([xe.common,xe.envmap,xe.aomap,xe.lightmap,xe.emissivemap,xe.bumpmap,xe.normalmap,xe.displacementmap,xe.roughnessmap,xe.metalnessmap,xe.fog,xe.lights,{emissive:{value:new Ne(0)},roughness:{value:1},metalness:{value:0},envMapIntensity:{value:1}}]),vertexShader:st.meshphysical_vert,fragmentShader:st.meshphysical_frag},toon:{uniforms:Ci([xe.common,xe.aomap,xe.lightmap,xe.emissivemap,xe.bumpmap,xe.normalmap,xe.displacementmap,xe.gradientmap,xe.fog,xe.lights,{emissive:{value:new Ne(0)}}]),vertexShader:st.meshtoon_vert,fragmentShader:st.meshtoon_frag},matcap:{uniforms:Ci([xe.common,xe.bumpmap,xe.normalmap,xe.displacementmap,xe.fog,{matcap:{value:null}}]),vertexShader:st.meshmatcap_vert,fragmentShader:st.meshmatcap_frag},points:{uniforms:Ci([xe.points,xe.fog]),vertexShader:st.points_vert,fragmentShader:st.points_frag},dashed:{uniforms:Ci([xe.common,xe.fog,{scale:{value:1},dashSize:{value:1},totalSize:{value:2}}]),vertexShader:st.linedashed_vert,fragmentShader:st.linedashed_frag},depth:{uniforms:Ci([xe.common,xe.displacementmap]),vertexShader:st.depth_vert,fragmentShader:st.depth_frag},normal:{uniforms:Ci([xe.common,xe.bumpmap,xe.normalmap,xe.displacementmap,{opacity:{value:1}}]),vertexShader:st.meshnormal_vert,fragmentShader:st.meshnormal_frag},sprite:{uniforms:Ci([xe.sprite,xe.fog]),vertexShader:st.sprite_vert,fragmentShader:st.sprite_frag},background:{uniforms:{uvTransform:{value:new Xe},t2D:{value:null},backgroundIntensity:{value:1}},vertexShader:st.background_vert,fragmentShader:st.background_frag},backgroundCube:{uniforms:{envMap:{value:null},flipEnvMap:{value:-1},backgroundBlurriness:{value:0},backgroundIntensity:{value:1},backgroundRotation:{value:new Xe}},vertexShader:st.backgroundCube_vert,fragmentShader:st.backgroundCube_frag},cube:{uniforms:{tCube:{value:null},tFlip:{value:-1},opacity:{value:1}},vertexShader:st.cube_vert,fragmentShader:st.cube_frag},equirect:{uniforms:{tEquirect:{value:null}},vertexShader:st.equirect_vert,fragmentShader:st.equirect_frag},distanceRGBA:{uniforms:Ci([xe.common,xe.displacementmap,{referencePosition:{value:new P},nearDistance:{value:1},farDistance:{value:1e3}}]),vertexShader:st.distanceRGBA_vert,fragmentShader:st.distanceRGBA_frag},shadow:{uniforms:Ci([xe.lights,xe.fog,{color:{value:new Ne(0)},opacity:{value:1}}]),vertexShader:st.shadow_vert,fragmentShader:st.shadow_frag}};wi.physical={uniforms:Ci([wi.standard.uniforms,{clearcoat:{value:0},clearcoatMap:{value:null},clearcoatMapTransform:{value:new Xe},clearcoatNormalMap:{value:null},clearcoatNormalMapTransform:{value:new Xe},clearcoatNormalScale:{value:new Oe(1,1)},clearcoatRoughness:{value:0},clearcoatRoughnessMap:{value:null},clearcoatRoughnessMapTransform:{value:new Xe},dispersion:{value:0},iridescence:{value:0},iridescenceMap:{value:null},iridescenceMapTransform:{value:new Xe},iridescenceIOR:{value:1.3},iridescenceThicknessMinimum:{value:100},iridescenceThicknessMaximum:{value:400},iridescenceThicknessMap:{value:null},iridescenceThicknessMapTransform:{value:new Xe},sheen:{value:0},sheenColor:{value:new Ne(0)},sheenColorMap:{value:null},sheenColorMapTransform:{value:new Xe},sheenRoughness:{value:1},sheenRoughnessMap:{value:null},sheenRoughnessMapTransform:{value:new Xe},transmission:{value:0},transmissionMap:{value:null},transmissionMapTransform:{value:new Xe},transmissionSamplerSize:{value:new Oe},transmissionSamplerMap:{value:null},thickness:{value:0},thicknessMap:{value:null},thicknessMapTransform:{value:new Xe},attenuationDistance:{value:0},attenuationColor:{value:new Ne(0)},specularColor:{value:new Ne(1,1,1)},specularColorMap:{value:null},specularColorMapTransform:{value:new Xe},specularIntensity:{value:1},specularIntensityMap:{value:null},specularIntensityMapTransform:{value:new Xe},anisotropyVector:{value:new Oe},anisotropyMap:{value:null},anisotropyMapTransform:{value:new Xe}}]),vertexShader:st.meshphysical_vert,fragmentShader:st.meshphysical_frag};const vc={r:0,b:0,g:0},lr=new Ki,jx=new _e;function qx(s,e,t,i,n,r,o){const a=new Ne(0);let l=r===!0?0:1,c,h,d=null,u=0,f=null;function m(I){let _=I.isScene===!0?I.background:null;return _&&_.isTexture&&(_=(I.backgroundBlurriness>0?t:e).get(_)),_}function g(I){let _=!1;const b=m(I);b===null?p(a,l):b&&b.isColor&&(p(b,1),_=!0);const T=s.xr.getEnvironmentBlendMode();T==="additive"?i.buffers.color.setClear(0,0,0,1,o):T==="alpha-blend"&&i.buffers.color.setClear(0,0,0,0,o),(s.autoClear||_)&&(i.buffers.depth.setTest(!0),i.buffers.depth.setMask(!0),i.buffers.color.setMask(!0),s.clear(s.autoClearColor,s.autoClearDepth,s.autoClearStencil))}function E(I,_){const b=m(_);b&&(b.isCubeTexture||b.mapping===Eu)?(h===void 0&&(h=new Te(new Ot(1,1,1),new Tt({name:"BackgroundCubeMaterial",uniforms:ra(wi.backgroundCube.uniforms),vertexShader:wi.backgroundCube.vertexShader,fragmentShader:wi.backgroundCube.fragmentShader,side:_i,depthTest:!1,depthWrite:!1,fog:!1,allowOverride:!1})),h.geometry.deleteAttribute("normal"),h.geometry.deleteAttribute("uv"),h.onBeforeRender=function(T,w,A){this.matrixWorld.copyPosition(A.matrixWorld)},Object.defineProperty(h.material,"envMap",{get:function(){return this.uniforms.envMap.value}}),n.update(h)),lr.copy(_.backgroundRotation),lr.x*=-1,lr.y*=-1,lr.z*=-1,b.isCubeTexture&&b.isRenderTargetTexture===!1&&(lr.y*=-1,lr.z*=-1),h.material.uniforms.envMap.value=b,h.material.uniforms.flipEnvMap.value=b.isCubeTexture&&b.isRenderTargetTexture===!1?-1:1,h.material.uniforms.backgroundBlurriness.value=_.backgroundBlurriness,h.material.uniforms.backgroundIntensity.value=_.backgroundIntensity,h.material.uniforms.backgroundRotation.value.setFromMatrix4(jx.makeRotationFromEuler(lr)),h.material.toneMapped=nt.getTransfer(b.colorSpace)!==vt,(d!==b||u!==b.version||f!==s.toneMapping)&&(h.material.needsUpdate=!0,d=b,u=b.version,f=s.toneMapping),h.layers.enableAll(),I.unshift(h,h.geometry,h.material,0,0,null)):b&&b.isTexture&&(c===void 0&&(c=new Te(new er(2,2),new Tt({name:"BackgroundMaterial",uniforms:ra(wi.background.uniforms),vertexShader:wi.background.vertexShader,fragmentShader:wi.background.fragmentShader,side:pn,depthTest:!1,depthWrite:!1,fog:!1,allowOverride:!1})),c.geometry.deleteAttribute("normal"),Object.defineProperty(c.material,"map",{get:function(){return this.uniforms.t2D.value}}),n.update(c)),c.material.uniforms.t2D.value=b,c.material.uniforms.backgroundIntensity.value=_.backgroundIntensity,c.material.toneMapped=nt.getTransfer(b.colorSpace)!==vt,b.matrixAutoUpdate===!0&&b.updateMatrix(),c.material.uniforms.uvTransform.value.copy(b.matrix),(d!==b||u!==b.version||f!==s.toneMapping)&&(c.material.needsUpdate=!0,d=b,u=b.version,f=s.toneMapping),c.layers.enableAll(),I.unshift(c,c.geometry,c.material,0,0,null))}function p(I,_){I.getRGB(vc,HI(s)),i.buffers.color.setClear(vc.r,vc.g,vc.b,_,o)}function v(){h!==void 0&&(h.geometry.dispose(),h.material.dispose(),h=void 0),c!==void 0&&(c.geometry.dispose(),c.material.dispose(),c=void 0)}return{getClearColor:function(){return a},setClearColor:function(I,_=1){a.set(I),l=_,p(a,l)},getClearAlpha:function(){return l},setClearAlpha:function(I){l=I,p(a,l)},render:g,addToRenderList:E,dispose:v}}function Kx(s,e){const t=s.getParameter(s.MAX_VERTEX_ATTRIBS),i={},n=u(null);let r=n,o=!1;function a(C,M,R,L,S){let U=!1;const z=d(L,R,M);r!==z&&(r=z,c(r.object)),U=f(C,L,R,S),U&&m(C,L,R,S),S!==null&&e.update(S,s.ELEMENT_ARRAY_BUFFER),(U||o)&&(o=!1,_(C,M,R,L),S!==null&&s.bindBuffer(s.ELEMENT_ARRAY_BUFFER,e.get(S).buffer))}function l(){return s.createVertexArray()}function c(C){return s.bindVertexArray(C)}function h(C){return s.deleteVertexArray(C)}function d(C,M,R){const L=R.wireframe===!0;let S=i[C.id];S===void 0&&(S={},i[C.id]=S);let U=S[M.id];U===void 0&&(U={},S[M.id]=U);let z=U[L];return z===void 0&&(z=u(l()),U[L]=z),z}function u(C){const M=[],R=[],L=[];for(let S=0;S<t;S++)M[S]=0,R[S]=0,L[S]=0;return{geometry:null,program:null,wireframe:!1,newAttributes:M,enabledAttributes:R,attributeDivisors:L,object:C,attributes:{},index:null}}function f(C,M,R,L){const S=r.attributes,U=M.attributes;let z=0;const k=R.getAttributes();for(const H in k)if(k[H].location>=0){const re=S[H];let j=U[H];if(j===void 0&&(H==="instanceMatrix"&&C.instanceMatrix&&(j=C.instanceMatrix),H==="instanceColor"&&C.instanceColor&&(j=C.instanceColor)),re===void 0||re.attribute!==j||j&&re.data!==j.data)return!0;z++}return r.attributesNum!==z||r.index!==L}function m(C,M,R,L){const S={},U=M.attributes;let z=0;const k=R.getAttributes();for(const H in k)if(k[H].location>=0){let re=U[H];re===void 0&&(H==="instanceMatrix"&&C.instanceMatrix&&(re=C.instanceMatrix),H==="instanceColor"&&C.instanceColor&&(re=C.instanceColor));const j={};j.attribute=re,re&&re.data&&(j.data=re.data),S[H]=j,z++}r.attributes=S,r.attributesNum=z,r.index=L}function g(){const C=r.newAttributes;for(let M=0,R=C.length;M<R;M++)C[M]=0}function E(C){p(C,0)}function p(C,M){const R=r.newAttributes,L=r.enabledAttributes,S=r.attributeDivisors;R[C]=1,L[C]===0&&(s.enableVertexAttribArray(C),L[C]=1),S[C]!==M&&(s.vertexAttribDivisor(C,M),S[C]=M)}function v(){const C=r.newAttributes,M=r.enabledAttributes;for(let R=0,L=M.length;R<L;R++)M[R]!==C[R]&&(s.disableVertexAttribArray(R),M[R]=0)}function I(C,M,R,L,S,U,z){z===!0?s.vertexAttribIPointer(C,M,R,S,U):s.vertexAttribPointer(C,M,R,L,S,U)}function _(C,M,R,L){g();const S=L.attributes,U=R.getAttributes(),z=M.defaultAttributeValues;for(const k in U){const H=U[k];if(H.location>=0){let Y=S[k];if(Y===void 0&&(k==="instanceMatrix"&&C.instanceMatrix&&(Y=C.instanceMatrix),k==="instanceColor"&&C.instanceColor&&(Y=C.instanceColor)),Y!==void 0){const re=Y.normalized,j=Y.itemSize,X=e.get(Y);if(X===void 0)continue;const ue=X.buffer,Z=X.type,K=X.bytesPerElement,Ie=Z===s.INT||Z===s.UNSIGNED_INT||Y.gpuType===bm;if(Y.isInterleavedBufferAttribute){const me=Y.data,ce=me.stride,ge=Y.offset;if(me.isInstancedInterleavedBuffer){for(let Ee=0;Ee<H.locationSize;Ee++)p(H.location+Ee,me.meshPerAttribute);C.isInstancedMesh!==!0&&L._maxInstanceCount===void 0&&(L._maxInstanceCount=me.meshPerAttribute*me.count)}else for(let Ee=0;Ee<H.locationSize;Ee++)E(H.location+Ee);s.bindBuffer(s.ARRAY_BUFFER,ue);for(let Ee=0;Ee<H.locationSize;Ee++)I(H.location+Ee,j/H.locationSize,Z,re,ce*K,(ge+j/H.locationSize*Ee)*K,Ie)}else{if(Y.isInstancedBufferAttribute){for(let me=0;me<H.locationSize;me++)p(H.location+me,Y.meshPerAttribute);C.isInstancedMesh!==!0&&L._maxInstanceCount===void 0&&(L._maxInstanceCount=Y.meshPerAttribute*Y.count)}else for(let me=0;me<H.locationSize;me++)E(H.location+me);s.bindBuffer(s.ARRAY_BUFFER,ue);for(let me=0;me<H.locationSize;me++)I(H.location+me,j/H.locationSize,Z,re,j*K,j/H.locationSize*me*K,Ie)}}else if(z!==void 0){const re=z[k];if(re!==void 0)switch(re.length){case 2:s.vertexAttrib2fv(H.location,re);break;case 3:s.vertexAttrib3fv(H.location,re);break;case 4:s.vertexAttrib4fv(H.location,re);break;default:s.vertexAttrib1fv(H.location,re)}}}}v()}function b(){A();for(const C in i){const M=i[C];for(const R in M){const L=M[R];for(const S in L)h(L[S].object),delete L[S];delete M[R]}delete i[C]}}function T(C){if(i[C.id]===void 0)return;const M=i[C.id];for(const R in M){const L=M[R];for(const S in L)h(L[S].object),delete L[S];delete M[R]}delete i[C.id]}function w(C){for(const M in i){const R=i[M];if(R[C.id]===void 0)continue;const L=R[C.id];for(const S in L)h(L[S].object),delete L[S];delete R[C.id]}}function A(){y(),o=!0,r!==n&&(r=n,c(r.object))}function y(){n.geometry=null,n.program=null,n.wireframe=!1}return{setup:a,reset:A,resetDefaultState:y,dispose:b,releaseStatesOfGeometry:T,releaseStatesOfProgram:w,initAttributes:g,enableAttribute:E,disableUnusedAttributes:v}}function Qx(s,e,t){let i;function n(c){i=c}function r(c,h){s.drawArrays(i,c,h),t.update(h,i,1)}function o(c,h,d){d!==0&&(s.drawArraysInstanced(i,c,h,d),t.update(h,i,d))}function a(c,h,d){if(d===0)return;e.get("WEBGL_multi_draw").multiDrawArraysWEBGL(i,c,0,h,0,d);let f=0;for(let m=0;m<d;m++)f+=h[m];t.update(f,i,1)}function l(c,h,d,u){if(d===0)return;const f=e.get("WEBGL_multi_draw");if(f===null)for(let m=0;m<c.length;m++)o(c[m],h[m],u[m]);else{f.multiDrawArraysInstancedWEBGL(i,c,0,h,0,u,0,d);let m=0;for(let g=0;g<d;g++)m+=h[g]*u[g];t.update(m,i,1)}}this.setMode=n,this.render=r,this.renderInstances=o,this.renderMultiDraw=a,this.renderMultiDrawInstances=l}function Jx(s,e,t,i){let n;function r(){if(n!==void 0)return n;if(e.has("EXT_texture_filter_anisotropic")===!0){const w=e.get("EXT_texture_filter_anisotropic");n=s.getParameter(w.MAX_TEXTURE_MAX_ANISOTROPY_EXT)}else n=0;return n}function o(w){return!(w!==Qt&&i.convert(w)!==s.getParameter(s.IMPLEMENTATION_COLOR_READ_FORMAT))}function a(w){const A=w===ki&&(e.has("EXT_color_buffer_half_float")||e.has("EXT_color_buffer_float"));return!(w!==Cs&&i.convert(w)!==s.getParameter(s.IMPLEMENTATION_COLOR_READ_TYPE)&&w!==Sn&&!A)}function l(w){if(w==="highp"){if(s.getShaderPrecisionFormat(s.VERTEX_SHADER,s.HIGH_FLOAT).precision>0&&s.getShaderPrecisionFormat(s.FRAGMENT_SHADER,s.HIGH_FLOAT).precision>0)return"highp";w="mediump"}return w==="mediump"&&s.getShaderPrecisionFormat(s.VERTEX_SHADER,s.MEDIUM_FLOAT).precision>0&&s.getShaderPrecisionFormat(s.FRAGMENT_SHADER,s.MEDIUM_FLOAT).precision>0?"mediump":"lowp"}let c=t.precision!==void 0?t.precision:"highp";const h=l(c);h!==c&&(console.warn("THREE.WebGLRenderer:",c,"not supported, using",h,"instead."),c=h);const d=t.logarithmicDepthBuffer===!0,u=t.reverseDepthBuffer===!0&&e.has("EXT_clip_control"),f=s.getParameter(s.MAX_TEXTURE_IMAGE_UNITS),m=s.getParameter(s.MAX_VERTEX_TEXTURE_IMAGE_UNITS),g=s.getParameter(s.MAX_TEXTURE_SIZE),E=s.getParameter(s.MAX_CUBE_MAP_TEXTURE_SIZE),p=s.getParameter(s.MAX_VERTEX_ATTRIBS),v=s.getParameter(s.MAX_VERTEX_UNIFORM_VECTORS),I=s.getParameter(s.MAX_VARYING_VECTORS),_=s.getParameter(s.MAX_FRAGMENT_UNIFORM_VECTORS),b=m>0,T=s.getParameter(s.MAX_SAMPLES);return{isWebGL2:!0,getMaxAnisotropy:r,getMaxPrecision:l,textureFormatReadable:o,textureTypeReadable:a,precision:c,logarithmicDepthBuffer:d,reverseDepthBuffer:u,maxTextures:f,maxVertexTextures:m,maxTextureSize:g,maxCubemapSize:E,maxAttributes:p,maxVertexUniforms:v,maxVaryings:I,maxFragmentUniforms:_,vertexTextures:b,maxSamples:T}}function $x(s){const e=this;let t=null,i=0,n=!1,r=!1;const o=new ri,a=new Xe,l={value:null,needsUpdate:!1};this.uniform=l,this.numPlanes=0,this.numIntersection=0,this.init=function(d,u){const f=d.length!==0||u||i!==0||n;return n=u,i=d.length,f},this.beginShadows=function(){r=!0,h(null)},this.endShadows=function(){r=!1},this.setGlobalState=function(d,u){t=h(d,u,0)},this.setState=function(d,u,f){const m=d.clippingPlanes,g=d.clipIntersection,E=d.clipShadows,p=s.get(d);if(!n||m===null||m.length===0||r&&!E)r?h(null):c();else{const v=r?0:i,I=v*4;let _=p.clippingState||null;l.value=_,_=h(m,u,I,f);for(let b=0;b!==I;++b)_[b]=t[b];p.clippingState=_,this.numIntersection=g?this.numPlanes:0,this.numPlanes+=v}};function c(){l.value!==t&&(l.value=t,l.needsUpdate=i>0),e.numPlanes=i,e.numIntersection=0}function h(d,u,f,m){const g=d!==null?d.length:0;let E=null;if(g!==0){if(E=l.value,m!==!0||E===null){const p=f+g*4,v=u.matrixWorldInverse;a.getNormalMatrix(v),(E===null||E.length<p)&&(E=new Float32Array(p));for(let I=0,_=f;I!==g;++I,_+=4)o.copy(d[I]).applyMatrix4(v,a),o.normal.toArray(E,_),E[_+3]=o.constant}l.value=E,l.needsUpdate=!0}return e.numPlanes=g,e.numIntersection=0,E}}function ew(s){let e=new WeakMap;function t(o,a){return a===xf?o.mapping=ea:a===wf&&(o.mapping=ta),o}function i(o){if(o&&o.isTexture){const a=o.mapping;if(a===xf||a===wf)if(e.has(o)){const l=e.get(o).texture;return t(l,o.mapping)}else{const l=o.image;if(l&&l.height>0){const c=new NT(l.height);return c.fromEquirectangularTexture(s,o),e.set(o,c),o.addEventListener("dispose",n),t(c.texture,o.mapping)}else return null}}return o}function n(o){const a=o.target;a.removeEventListener("dispose",n);const l=e.get(a);l!==void 0&&(e.delete(a),l.dispose())}function r(){e=new WeakMap}return{get:i,dispose:r}}const zo=4,e0=[.125,.215,.35,.446,.526,.582],Tr=20,ld=new Zn,t0=new Ne;let cd=null,hd=0,ud=0,dd=!1;const pr=(1+Math.sqrt(5))/2,oo=1/pr,i0=[new P(-pr,oo,0),new P(pr,oo,0),new P(-oo,0,pr),new P(oo,0,pr),new P(0,pr,-oo),new P(0,pr,oo),new P(-1,1,-1),new P(1,1,-1),new P(-1,1,1),new P(1,1,1)],tw=new P;class n0{constructor(e){this._renderer=e,this._pingPongRenderTarget=null,this._lodMax=0,this._cubeSize=0,this._lodPlanes=[],this._sizeLods=[],this._sigmas=[],this._blurMaterial=null,this._cubemapMaterial=null,this._equirectMaterial=null,this._compileMaterial(this._blurMaterial)}fromScene(e,t=0,i=.1,n=100,r={}){const{size:o=256,position:a=tw}=r;cd=this._renderer.getRenderTarget(),hd=this._renderer.getActiveCubeFace(),ud=this._renderer.getActiveMipmapLevel(),dd=this._renderer.xr.enabled,this._renderer.xr.enabled=!1,this._setSize(o);const l=this._allocateTargets();return l.depthBuffer=!0,this._sceneToCubeUV(e,i,n,l,a),t>0&&this._blur(l,0,0,t),this._applyPMREM(l),this._cleanup(l),l}fromEquirectangular(e,t=null){return this._fromTexture(e,t)}fromCubemap(e,t=null){return this._fromTexture(e,t)}compileCubemapShader(){this._cubemapMaterial===null&&(this._cubemapMaterial=o0(),this._compileMaterial(this._cubemapMaterial))}compileEquirectangularShader(){this._equirectMaterial===null&&(this._equirectMaterial=r0(),this._compileMaterial(this._equirectMaterial))}dispose(){this._dispose(),this._cubemapMaterial!==null&&this._cubemapMaterial.dispose(),this._equirectMaterial!==null&&this._equirectMaterial.dispose()}_setSize(e){this._lodMax=Math.floor(Math.log2(e)),this._cubeSize=Math.pow(2,this._lodMax)}_dispose(){this._blurMaterial!==null&&this._blurMaterial.dispose(),this._pingPongRenderTarget!==null&&this._pingPongRenderTarget.dispose();for(let e=0;e<this._lodPlanes.length;e++)this._lodPlanes[e].dispose()}_cleanup(e){this._renderer.setRenderTarget(cd,hd,ud),this._renderer.xr.enabled=dd,e.scissorTest=!1,bc(e,0,0,e.width,e.height)}_fromTexture(e,t){e.mapping===ea||e.mapping===ta?this._setSize(e.image.length===0?16:e.image[0].width||e.image[0].image.width):this._setSize(e.image.width/4),cd=this._renderer.getRenderTarget(),hd=this._renderer.getActiveCubeFace(),ud=this._renderer.getActiveMipmapLevel(),dd=this._renderer.xr.enabled,this._renderer.xr.enabled=!1;const i=t||this._allocateTargets();return this._textureToCubeUV(e,i),this._applyPMREM(i),this._cleanup(i),i}_allocateTargets(){const e=3*Math.max(this._cubeSize,112),t=4*this._cubeSize,i={magFilter:qt,minFilter:qt,generateMipmaps:!1,type:ki,format:Qt,colorSpace:sa,depthBuffer:!1},n=s0(e,t,i);if(this._pingPongRenderTarget===null||this._pingPongRenderTarget.width!==e||this._pingPongRenderTarget.height!==t){this._pingPongRenderTarget!==null&&this._dispose(),this._pingPongRenderTarget=s0(e,t,i);const{_lodMax:r}=this;({sizeLods:this._sizeLods,lodPlanes:this._lodPlanes,sigmas:this._sigmas}=iw(r)),this._blurMaterial=nw(r,e,t)}return n}_compileMaterial(e){const t=new Te(this._lodPlanes[0],e);this._renderer.compile(t,ld)}_sceneToCubeUV(e,t,i,n,r){const l=new Gi(90,1,t,i),c=[1,-1,1,1,1,1],h=[1,1,1,-1,-1,-1],d=this._renderer,u=d.autoClear,f=d.toneMapping;d.getClearColor(t0),d.toneMapping=Es,d.autoClear=!1;const m=new Mi({name:"PMREM.Background",side:_i,depthWrite:!1,depthTest:!1}),g=new Te(new Ot,m);let E=!1;const p=e.background;p?p.isColor&&(m.color.copy(p),e.background=null,E=!0):(m.color.copy(t0),E=!0);for(let v=0;v<6;v++){const I=v%3;I===0?(l.up.set(0,c[v],0),l.position.set(r.x,r.y,r.z),l.lookAt(r.x+h[v],r.y,r.z)):I===1?(l.up.set(0,0,c[v]),l.position.set(r.x,r.y,r.z),l.lookAt(r.x,r.y+h[v],r.z)):(l.up.set(0,c[v],0),l.position.set(r.x,r.y,r.z),l.lookAt(r.x,r.y,r.z+h[v]));const _=this._cubeSize;bc(n,I*_,v>2?_:0,_,_),d.setRenderTarget(n),E&&d.render(g,l),d.render(e,l)}g.geometry.dispose(),g.material.dispose(),d.toneMapping=f,d.autoClear=u,e.background=p}_textureToCubeUV(e,t){const i=this._renderer,n=e.mapping===ea||e.mapping===ta;n?(this._cubemapMaterial===null&&(this._cubemapMaterial=o0()),this._cubemapMaterial.uniforms.flipEnvMap.value=e.isRenderTargetTexture===!1?-1:1):this._equirectMaterial===null&&(this._equirectMaterial=r0());const r=n?this._cubemapMaterial:this._equirectMaterial,o=new Te(this._lodPlanes[0],r),a=r.uniforms;a.envMap.value=e;const l=this._cubeSize;bc(t,0,0,3*l,2*l),i.setRenderTarget(t),i.render(o,ld)}_applyPMREM(e){const t=this._renderer,i=t.autoClear;t.autoClear=!1;const n=this._lodPlanes.length;for(let r=1;r<n;r++){const o=Math.sqrt(this._sigmas[r]*this._sigmas[r]-this._sigmas[r-1]*this._sigmas[r-1]),a=i0[(n-r-1)%i0.length];this._blur(e,r-1,r,o,a)}t.autoClear=i}_blur(e,t,i,n,r){const o=this._pingPongRenderTarget;this._halfBlur(e,o,t,i,n,"latitudinal",r),this._halfBlur(o,e,i,i,n,"longitudinal",r)}_halfBlur(e,t,i,n,r,o,a){const l=this._renderer,c=this._blurMaterial;o!=="latitudinal"&&o!=="longitudinal"&&console.error("blur direction must be either latitudinal or longitudinal!");const h=3,d=new Te(this._lodPlanes[n],c),u=c.uniforms,f=this._sizeLods[i]-1,m=isFinite(r)?Math.PI/(2*f):2*Math.PI/(2*Tr-1),g=r/m,E=isFinite(r)?1+Math.floor(h*g):Tr;E>Tr&&console.warn(`sigmaRadians, ${r}, is too large and will clip, as it requested ${E} samples when the maximum is set to ${Tr}`);const p=[];let v=0;for(let w=0;w<Tr;++w){const A=w/g,y=Math.exp(-A*A/2);p.push(y),w===0?v+=y:w<E&&(v+=2*y)}for(let w=0;w<p.length;w++)p[w]=p[w]/v;u.envMap.value=e.texture,u.samples.value=E,u.weights.value=p,u.latitudinal.value=o==="latitudinal",a&&(u.poleAxis.value=a);const{_lodMax:I}=this;u.dTheta.value=m,u.mipInt.value=I-i;const _=this._sizeLods[n],b=3*_*(n>I-zo?n-I+zo:0),T=4*(this._cubeSize-_);bc(t,b,T,3*_,2*_),l.setRenderTarget(t),l.render(d,ld)}}function iw(s){const e=[],t=[],i=[];let n=s;const r=s-zo+1+e0.length;for(let o=0;o<r;o++){const a=Math.pow(2,n);t.push(a);let l=1/a;o>s-zo?l=e0[o-s+zo-1]:o===0&&(l=0),i.push(l);const c=1/(a-2),h=-c,d=1+c,u=[h,h,d,h,d,d,h,h,d,d,h,d],f=6,m=6,g=3,E=2,p=1,v=new Float32Array(g*m*f),I=new Float32Array(E*m*f),_=new Float32Array(p*m*f);for(let T=0;T<f;T++){const w=T%3*2/3-1,A=T>2?0:-1,y=[w,A,0,w+2/3,A,0,w+2/3,A+1,0,w,A,0,w+2/3,A+1,0,w,A+1,0];v.set(y,g*m*T),I.set(u,E*m*T);const C=[T,T,T,T,T,T];_.set(C,p*m*T)}const b=new We;b.setAttribute("position",new at(v,g)),b.setAttribute("uv",new at(I,E)),b.setAttribute("faceIndex",new at(_,p)),e.push(b),n>zo&&n--}return{lodPlanes:e,sizeLods:t,sigmas:i}}function s0(s,e,t){const i=new Nt(s,e,t);return i.texture.mapping=Eu,i.texture.name="PMREM.cubeUv",i.scissorTest=!0,i}function bc(s,e,t,i,n){s.viewport.set(e,t,i,n),s.scissor.set(e,t,i,n)}function nw(s,e,t){const i=new Float32Array(Tr),n=new P(0,1,0);return new Tt({name:"SphericalGaussianBlur",defines:{n:Tr,CUBEUV_TEXEL_WIDTH:1/e,CUBEUV_TEXEL_HEIGHT:1/t,CUBEUV_MAX_MIP:`${s}.0`},uniforms:{envMap:{value:null},samples:{value:1},weights:{value:i},latitudinal:{value:!1},dTheta:{value:0},mipInt:{value:0},poleAxis:{value:n}},vertexShader:Nm(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;
			uniform int samples;
			uniform float weights[ n ];
			uniform bool latitudinal;
			uniform float dTheta;
			uniform float mipInt;
			uniform vec3 poleAxis;

			#define ENVMAP_TYPE_CUBE_UV
			#include <cube_uv_reflection_fragment>

			vec3 getSample( float theta, vec3 axis ) {

				float cosTheta = cos( theta );
				// Rodrigues' axis-angle rotation
				vec3 sampleDirection = vOutputDirection * cosTheta
					+ cross( axis, vOutputDirection ) * sin( theta )
					+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );

				return bilinearCubeUV( envMap, sampleDirection, mipInt );

			}

			void main() {

				vec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );

				if ( all( equal( axis, vec3( 0.0 ) ) ) ) {

					axis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );

				}

				axis = normalize( axis );

				gl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );
				gl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );

				for ( int i = 1; i < n; i++ ) {

					if ( i >= samples ) {

						break;

					}

					float theta = dTheta * float( i );
					gl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );
					gl_FragColor.rgb += weights[ i ] * getSample( theta, axis );

				}

			}
		`,blending:gs,depthTest:!1,depthWrite:!1})}function r0(){return new Tt({name:"EquirectangularToCubeUV",uniforms:{envMap:{value:null}},vertexShader:Nm(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;

			#include <common>

			void main() {

				vec3 outputDirection = normalize( vOutputDirection );
				vec2 uv = equirectUv( outputDirection );

				gl_FragColor = vec4( texture2D ( envMap, uv ).rgb, 1.0 );

			}
		`,blending:gs,depthTest:!1,depthWrite:!1})}function o0(){return new Tt({name:"CubemapToCubeUV",uniforms:{envMap:{value:null},flipEnvMap:{value:-1}},vertexShader:Nm(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			uniform float flipEnvMap;

			varying vec3 vOutputDirection;

			uniform samplerCube envMap;

			void main() {

				gl_FragColor = textureCube( envMap, vec3( flipEnvMap * vOutputDirection.x, vOutputDirection.yz ) );

			}
		`,blending:gs,depthTest:!1,depthWrite:!1})}function Nm(){return`

		precision mediump float;
		precision mediump int;

		attribute float faceIndex;

		varying vec3 vOutputDirection;

		// RH coordinate system; PMREM face-indexing convention
		vec3 getDirection( vec2 uv, float face ) {

			uv = 2.0 * uv - 1.0;

			vec3 direction = vec3( uv, 1.0 );

			if ( face == 0.0 ) {

				direction = direction.zyx; // ( 1, v, u ) pos x

			} else if ( face == 1.0 ) {

				direction = direction.xzy;
				direction.xz *= -1.0; // ( -u, 1, -v ) pos y

			} else if ( face == 2.0 ) {

				direction.x *= -1.0; // ( -u, v, 1 ) pos z

			} else if ( face == 3.0 ) {

				direction = direction.zyx;
				direction.xz *= -1.0; // ( -1, v, -u ) neg x

			} else if ( face == 4.0 ) {

				direction = direction.xzy;
				direction.xy *= -1.0; // ( -u, -1, v ) neg y

			} else if ( face == 5.0 ) {

				direction.z *= -1.0; // ( u, v, -1 ) neg z

			}

			return direction;

		}

		void main() {

			vOutputDirection = getDirection( uv, faceIndex );
			gl_Position = vec4( position, 1.0 );

		}
	`}function sw(s){let e=new WeakMap,t=null;function i(a){if(a&&a.isTexture){const l=a.mapping,c=l===xf||l===wf,h=l===ea||l===ta;if(c||h){let d=e.get(a);const u=d!==void 0?d.texture.pmremVersion:0;if(a.isRenderTargetTexture&&a.pmremVersion!==u)return t===null&&(t=new n0(s)),d=c?t.fromEquirectangular(a,d):t.fromCubemap(a,d),d.texture.pmremVersion=a.pmremVersion,e.set(a,d),d.texture;if(d!==void 0)return d.texture;{const f=a.image;return c&&f&&f.height>0||h&&f&&n(f)?(t===null&&(t=new n0(s)),d=c?t.fromEquirectangular(a):t.fromCubemap(a),d.texture.pmremVersion=a.pmremVersion,e.set(a,d),a.addEventListener("dispose",r),d.texture):null}}}return a}function n(a){let l=0;const c=6;for(let h=0;h<c;h++)a[h]!==void 0&&l++;return l===c}function r(a){const l=a.target;l.removeEventListener("dispose",r);const c=e.get(l);c!==void 0&&(e.delete(l),c.dispose())}function o(){e=new WeakMap,t!==null&&(t.dispose(),t=null)}return{get:i,dispose:o}}function rw(s){const e={};function t(i){if(e[i]!==void 0)return e[i];let n;switch(i){case"WEBGL_depth_texture":n=s.getExtension("WEBGL_depth_texture")||s.getExtension("MOZ_WEBGL_depth_texture")||s.getExtension("WEBKIT_WEBGL_depth_texture");break;case"EXT_texture_filter_anisotropic":n=s.getExtension("EXT_texture_filter_anisotropic")||s.getExtension("MOZ_EXT_texture_filter_anisotropic")||s.getExtension("WEBKIT_EXT_texture_filter_anisotropic");break;case"WEBGL_compressed_texture_s3tc":n=s.getExtension("WEBGL_compressed_texture_s3tc")||s.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||s.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");break;case"WEBGL_compressed_texture_pvrtc":n=s.getExtension("WEBGL_compressed_texture_pvrtc")||s.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");break;default:n=s.getExtension(i)}return e[i]=n,n}return{has:function(i){return t(i)!==null},init:function(){t("EXT_color_buffer_float"),t("WEBGL_clip_cull_distance"),t("OES_texture_float_linear"),t("EXT_color_buffer_half_float"),t("WEBGL_multisampled_render_to_texture"),t("WEBGL_render_shared_exponent")},get:function(i){const n=t(i);return n===null&&Nh("THREE.WebGLRenderer: "+i+" extension not supported."),n}}}function ow(s,e,t,i){const n={},r=new WeakMap;function o(d){const u=d.target;u.index!==null&&e.remove(u.index);for(const m in u.attributes)e.remove(u.attributes[m]);u.removeEventListener("dispose",o),delete n[u.id];const f=r.get(u);f&&(e.remove(f),r.delete(u)),i.releaseStatesOfGeometry(u),u.isInstancedBufferGeometry===!0&&delete u._maxInstanceCount,t.memory.geometries--}function a(d,u){return n[u.id]===!0||(u.addEventListener("dispose",o),n[u.id]=!0,t.memory.geometries++),u}function l(d){const u=d.attributes;for(const f in u)e.update(u[f],s.ARRAY_BUFFER)}function c(d){const u=[],f=d.index,m=d.attributes.position;let g=0;if(f!==null){const v=f.array;g=f.version;for(let I=0,_=v.length;I<_;I+=3){const b=v[I+0],T=v[I+1],w=v[I+2];u.push(b,T,T,w,w,b)}}else if(m!==void 0){const v=m.array;g=m.version;for(let I=0,_=v.length/3-1;I<_;I+=3){const b=I+0,T=I+1,w=I+2;u.push(b,T,T,w,w,b)}}else return;const E=new(BI(u)?GI:kI)(u,1);E.version=g;const p=r.get(d);p&&e.remove(p),r.set(d,E)}function h(d){const u=r.get(d);if(u){const f=d.index;f!==null&&u.version<f.version&&c(d)}else c(d);return r.get(d)}return{get:a,update:l,getWireframeAttribute:h}}function aw(s,e,t){let i;function n(u){i=u}let r,o;function a(u){r=u.type,o=u.bytesPerElement}function l(u,f){s.drawElements(i,f,r,u*o),t.update(f,i,1)}function c(u,f,m){m!==0&&(s.drawElementsInstanced(i,f,r,u*o,m),t.update(f,i,m))}function h(u,f,m){if(m===0)return;e.get("WEBGL_multi_draw").multiDrawElementsWEBGL(i,f,0,r,u,0,m);let E=0;for(let p=0;p<m;p++)E+=f[p];t.update(E,i,1)}function d(u,f,m,g){if(m===0)return;const E=e.get("WEBGL_multi_draw");if(E===null)for(let p=0;p<u.length;p++)c(u[p]/o,f[p],g[p]);else{E.multiDrawElementsInstancedWEBGL(i,f,0,r,u,0,g,0,m);let p=0;for(let v=0;v<m;v++)p+=f[v]*g[v];t.update(p,i,1)}}this.setMode=n,this.setIndex=a,this.render=l,this.renderInstances=c,this.renderMultiDraw=h,this.renderMultiDrawInstances=d}function lw(s){const e={geometries:0,textures:0},t={frame:0,calls:0,triangles:0,points:0,lines:0};function i(r,o,a){switch(t.calls++,o){case s.TRIANGLES:t.triangles+=a*(r/3);break;case s.LINES:t.lines+=a*(r/2);break;case s.LINE_STRIP:t.lines+=a*(r-1);break;case s.LINE_LOOP:t.lines+=a*r;break;case s.POINTS:t.points+=a*r;break;default:console.error("THREE.WebGLInfo: Unknown draw mode:",o);break}}function n(){t.calls=0,t.triangles=0,t.points=0,t.lines=0}return{memory:e,render:t,programs:null,autoReset:!0,reset:n,update:i}}function cw(s,e,t){const i=new WeakMap,n=new ct;function r(o,a,l){const c=o.morphTargetInfluences,h=a.morphAttributes.position||a.morphAttributes.normal||a.morphAttributes.color,d=h!==void 0?h.length:0;let u=i.get(a);if(u===void 0||u.count!==d){let y=function(){w.dispose(),i.delete(a),a.removeEventListener("dispose",y)};u!==void 0&&u.texture.dispose();const f=a.morphAttributes.position!==void 0,m=a.morphAttributes.normal!==void 0,g=a.morphAttributes.color!==void 0,E=a.morphAttributes.position||[],p=a.morphAttributes.normal||[],v=a.morphAttributes.color||[];let I=0;f===!0&&(I=1),m===!0&&(I=2),g===!0&&(I=3);let _=a.attributes.position.count*I,b=1;_>e.maxTextureSize&&(b=Math.ceil(_/e.maxTextureSize),_=e.maxTextureSize);const T=new Float32Array(_*b*4*d),w=new zI(T,_,b,d);w.type=Sn,w.needsUpdate=!0;const A=I*4;for(let C=0;C<d;C++){const M=E[C],R=p[C],L=v[C],S=_*b*4*C;for(let U=0;U<M.count;U++){const z=U*A;f===!0&&(n.fromBufferAttribute(M,U),T[S+z+0]=n.x,T[S+z+1]=n.y,T[S+z+2]=n.z,T[S+z+3]=0),m===!0&&(n.fromBufferAttribute(R,U),T[S+z+4]=n.x,T[S+z+5]=n.y,T[S+z+6]=n.z,T[S+z+7]=0),g===!0&&(n.fromBufferAttribute(L,U),T[S+z+8]=n.x,T[S+z+9]=n.y,T[S+z+10]=n.z,T[S+z+11]=L.itemSize===4?n.w:1)}}u={count:d,texture:w,size:new Oe(_,b)},i.set(a,u),a.addEventListener("dispose",y)}if(o.isInstancedMesh===!0&&o.morphTexture!==null)l.getUniforms().setValue(s,"morphTexture",o.morphTexture,t);else{let f=0;for(let g=0;g<c.length;g++)f+=c[g];const m=a.morphTargetsRelative?1:1-f;l.getUniforms().setValue(s,"morphTargetBaseInfluence",m),l.getUniforms().setValue(s,"morphTargetInfluences",c)}l.getUniforms().setValue(s,"morphTargetsTexture",u.texture,t),l.getUniforms().setValue(s,"morphTargetsTextureSize",u.size)}return{update:r}}function hw(s,e,t,i){let n=new WeakMap;function r(l){const c=i.render.frame,h=l.geometry,d=e.get(l,h);if(n.get(d)!==c&&(e.update(d),n.set(d,c)),l.isInstancedMesh&&(l.hasEventListener("dispose",a)===!1&&l.addEventListener("dispose",a),n.get(l)!==c&&(t.update(l.instanceMatrix,s.ARRAY_BUFFER),l.instanceColor!==null&&t.update(l.instanceColor,s.ARRAY_BUFFER),n.set(l,c))),l.isSkinnedMesh){const u=l.skeleton;n.get(u)!==c&&(u.update(),n.set(u,c))}return d}function o(){n=new WeakMap}function a(l){const c=l.target;c.removeEventListener("dispose",a),t.remove(c.instanceMatrix),c.instanceColor!==null&&t.remove(c.instanceColor)}return{update:r,dispose:o}}const i_=new Ri,a0=new rl(1,1),n_=new zI,s_=new _T,r_=new WI,l0=[],c0=[],h0=new Float32Array(16),u0=new Float32Array(9),d0=new Float32Array(4);function pa(s,e,t){const i=s[0];if(i<=0||i>0)return s;const n=e*t;let r=l0[n];if(r===void 0&&(r=new Float32Array(n),l0[n]=r),e!==0){i.toArray(r,0);for(let o=1,a=0;o!==e;++o)a+=t,s[o].toArray(r,a)}return r}function ei(s,e){if(s.length!==e.length)return!1;for(let t=0,i=s.length;t<i;t++)if(s[t]!==e[t])return!1;return!0}function ti(s,e){for(let t=0,i=e.length;t<i;t++)s[t]=e[t]}function vu(s,e){let t=c0[e];t===void 0&&(t=new Int32Array(e),c0[e]=t);for(let i=0;i!==e;++i)t[i]=s.allocateTextureUnit();return t}function uw(s,e){const t=this.cache;t[0]!==e&&(s.uniform1f(this.addr,e),t[0]=e)}function dw(s,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y)&&(s.uniform2f(this.addr,e.x,e.y),t[0]=e.x,t[1]=e.y);else{if(ei(t,e))return;s.uniform2fv(this.addr,e),ti(t,e)}}function fw(s,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z)&&(s.uniform3f(this.addr,e.x,e.y,e.z),t[0]=e.x,t[1]=e.y,t[2]=e.z);else if(e.r!==void 0)(t[0]!==e.r||t[1]!==e.g||t[2]!==e.b)&&(s.uniform3f(this.addr,e.r,e.g,e.b),t[0]=e.r,t[1]=e.g,t[2]=e.b);else{if(ei(t,e))return;s.uniform3fv(this.addr,e),ti(t,e)}}function pw(s,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z||t[3]!==e.w)&&(s.uniform4f(this.addr,e.x,e.y,e.z,e.w),t[0]=e.x,t[1]=e.y,t[2]=e.z,t[3]=e.w);else{if(ei(t,e))return;s.uniform4fv(this.addr,e),ti(t,e)}}function mw(s,e){const t=this.cache,i=e.elements;if(i===void 0){if(ei(t,e))return;s.uniformMatrix2fv(this.addr,!1,e),ti(t,e)}else{if(ei(t,i))return;d0.set(i),s.uniformMatrix2fv(this.addr,!1,d0),ti(t,i)}}function gw(s,e){const t=this.cache,i=e.elements;if(i===void 0){if(ei(t,e))return;s.uniformMatrix3fv(this.addr,!1,e),ti(t,e)}else{if(ei(t,i))return;u0.set(i),s.uniformMatrix3fv(this.addr,!1,u0),ti(t,i)}}function Ew(s,e){const t=this.cache,i=e.elements;if(i===void 0){if(ei(t,e))return;s.uniformMatrix4fv(this.addr,!1,e),ti(t,e)}else{if(ei(t,i))return;h0.set(i),s.uniformMatrix4fv(this.addr,!1,h0),ti(t,i)}}function Iw(s,e){const t=this.cache;t[0]!==e&&(s.uniform1i(this.addr,e),t[0]=e)}function _w(s,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y)&&(s.uniform2i(this.addr,e.x,e.y),t[0]=e.x,t[1]=e.y);else{if(ei(t,e))return;s.uniform2iv(this.addr,e),ti(t,e)}}function vw(s,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z)&&(s.uniform3i(this.addr,e.x,e.y,e.z),t[0]=e.x,t[1]=e.y,t[2]=e.z);else{if(ei(t,e))return;s.uniform3iv(this.addr,e),ti(t,e)}}function bw(s,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z||t[3]!==e.w)&&(s.uniform4i(this.addr,e.x,e.y,e.z,e.w),t[0]=e.x,t[1]=e.y,t[2]=e.z,t[3]=e.w);else{if(ei(t,e))return;s.uniform4iv(this.addr,e),ti(t,e)}}function yw(s,e){const t=this.cache;t[0]!==e&&(s.uniform1ui(this.addr,e),t[0]=e)}function Tw(s,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y)&&(s.uniform2ui(this.addr,e.x,e.y),t[0]=e.x,t[1]=e.y);else{if(ei(t,e))return;s.uniform2uiv(this.addr,e),ti(t,e)}}function Cw(s,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z)&&(s.uniform3ui(this.addr,e.x,e.y,e.z),t[0]=e.x,t[1]=e.y,t[2]=e.z);else{if(ei(t,e))return;s.uniform3uiv(this.addr,e),ti(t,e)}}function xw(s,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z||t[3]!==e.w)&&(s.uniform4ui(this.addr,e.x,e.y,e.z,e.w),t[0]=e.x,t[1]=e.y,t[2]=e.z,t[3]=e.w);else{if(ei(t,e))return;s.uniform4uiv(this.addr,e),ti(t,e)}}function ww(s,e,t){const i=this.cache,n=t.allocateTextureUnit();i[0]!==n&&(s.uniform1i(this.addr,n),i[0]=n);let r;this.type===s.SAMPLER_2D_SHADOW?(a0.compareFunction=UI,r=a0):r=i_,t.setTexture2D(e||r,n)}function Sw(s,e,t){const i=this.cache,n=t.allocateTextureUnit();i[0]!==n&&(s.uniform1i(this.addr,n),i[0]=n),t.setTexture3D(e||s_,n)}function Aw(s,e,t){const i=this.cache,n=t.allocateTextureUnit();i[0]!==n&&(s.uniform1i(this.addr,n),i[0]=n),t.setTextureCube(e||r_,n)}function Rw(s,e,t){const i=this.cache,n=t.allocateTextureUnit();i[0]!==n&&(s.uniform1i(this.addr,n),i[0]=n),t.setTexture2DArray(e||n_,n)}function Mw(s){switch(s){case 5126:return uw;case 35664:return dw;case 35665:return fw;case 35666:return pw;case 35674:return mw;case 35675:return gw;case 35676:return Ew;case 5124:case 35670:return Iw;case 35667:case 35671:return _w;case 35668:case 35672:return vw;case 35669:case 35673:return bw;case 5125:return yw;case 36294:return Tw;case 36295:return Cw;case 36296:return xw;case 35678:case 36198:case 36298:case 36306:case 35682:return ww;case 35679:case 36299:case 36307:return Sw;case 35680:case 36300:case 36308:case 36293:return Aw;case 36289:case 36303:case 36311:case 36292:return Rw}}function Fw(s,e){s.uniform1fv(this.addr,e)}function Pw(s,e){const t=pa(e,this.size,2);s.uniform2fv(this.addr,t)}function Ow(s,e){const t=pa(e,this.size,3);s.uniform3fv(this.addr,t)}function Lw(s,e){const t=pa(e,this.size,4);s.uniform4fv(this.addr,t)}function Dw(s,e){const t=pa(e,this.size,4);s.uniformMatrix2fv(this.addr,!1,t)}function Nw(s,e){const t=pa(e,this.size,9);s.uniformMatrix3fv(this.addr,!1,t)}function Uw(s,e){const t=pa(e,this.size,16);s.uniformMatrix4fv(this.addr,!1,t)}function Bw(s,e){s.uniform1iv(this.addr,e)}function zw(s,e){s.uniform2iv(this.addr,e)}function Vw(s,e){s.uniform3iv(this.addr,e)}function kw(s,e){s.uniform4iv(this.addr,e)}function Gw(s,e){s.uniform1uiv(this.addr,e)}function Hw(s,e){s.uniform2uiv(this.addr,e)}function Yw(s,e){s.uniform3uiv(this.addr,e)}function Ww(s,e){s.uniform4uiv(this.addr,e)}function Xw(s,e,t){const i=this.cache,n=e.length,r=vu(t,n);ei(i,r)||(s.uniform1iv(this.addr,r),ti(i,r));for(let o=0;o!==n;++o)t.setTexture2D(e[o]||i_,r[o])}function Zw(s,e,t){const i=this.cache,n=e.length,r=vu(t,n);ei(i,r)||(s.uniform1iv(this.addr,r),ti(i,r));for(let o=0;o!==n;++o)t.setTexture3D(e[o]||s_,r[o])}function jw(s,e,t){const i=this.cache,n=e.length,r=vu(t,n);ei(i,r)||(s.uniform1iv(this.addr,r),ti(i,r));for(let o=0;o!==n;++o)t.setTextureCube(e[o]||r_,r[o])}function qw(s,e,t){const i=this.cache,n=e.length,r=vu(t,n);ei(i,r)||(s.uniform1iv(this.addr,r),ti(i,r));for(let o=0;o!==n;++o)t.setTexture2DArray(e[o]||n_,r[o])}function Kw(s){switch(s){case 5126:return Fw;case 35664:return Pw;case 35665:return Ow;case 35666:return Lw;case 35674:return Dw;case 35675:return Nw;case 35676:return Uw;case 5124:case 35670:return Bw;case 35667:case 35671:return zw;case 35668:case 35672:return Vw;case 35669:case 35673:return kw;case 5125:return Gw;case 36294:return Hw;case 36295:return Yw;case 36296:return Ww;case 35678:case 36198:case 36298:case 36306:case 35682:return Xw;case 35679:case 36299:case 36307:return Zw;case 35680:case 36300:case 36308:case 36293:return jw;case 36289:case 36303:case 36311:case 36292:return qw}}class Qw{constructor(e,t,i){this.id=e,this.addr=i,this.cache=[],this.type=t.type,this.setValue=Mw(t.type)}}class Jw{constructor(e,t,i){this.id=e,this.addr=i,this.cache=[],this.type=t.type,this.size=t.size,this.setValue=Kw(t.type)}}class $w{constructor(e){this.id=e,this.seq=[],this.map={}}setValue(e,t,i){const n=this.seq;for(let r=0,o=n.length;r!==o;++r){const a=n[r];a.setValue(e,t[a.id],i)}}}const fd=/(\w+)(\])?(\[|\.)?/g;function f0(s,e){s.seq.push(e),s.map[e.id]=e}function eS(s,e,t){const i=s.name,n=i.length;for(fd.lastIndex=0;;){const r=fd.exec(i),o=fd.lastIndex;let a=r[1];const l=r[2]==="]",c=r[3];if(l&&(a=a|0),c===void 0||c==="["&&o+2===n){f0(t,c===void 0?new Qw(a,s,e):new Jw(a,s,e));break}else{let d=t.map[a];d===void 0&&(d=new $w(a),f0(t,d)),t=d}}}class Uh{constructor(e,t){this.seq=[],this.map={};const i=e.getProgramParameter(t,e.ACTIVE_UNIFORMS);for(let n=0;n<i;++n){const r=e.getActiveUniform(t,n),o=e.getUniformLocation(t,r.name);eS(r,o,this)}}setValue(e,t,i,n){const r=this.map[t];r!==void 0&&r.setValue(e,i,n)}setOptional(e,t,i){const n=t[i];n!==void 0&&this.setValue(e,i,n)}static upload(e,t,i,n){for(let r=0,o=t.length;r!==o;++r){const a=t[r],l=i[a.id];l.needsUpdate!==!1&&a.setValue(e,l.value,n)}}static seqWithValue(e,t){const i=[];for(let n=0,r=e.length;n!==r;++n){const o=e[n];o.id in t&&i.push(o)}return i}}function p0(s,e,t){const i=s.createShader(e);return s.shaderSource(i,t),s.compileShader(i),i}const tS=37297;let iS=0;function nS(s,e){const t=s.split(`
`),i=[],n=Math.max(e-6,0),r=Math.min(e+6,t.length);for(let o=n;o<r;o++){const a=o+1;i.push(`${a===e?">":" "} ${a}: ${t[o]}`)}return i.join(`
`)}const m0=new Xe;function sS(s){nt._getMatrix(m0,nt.workingColorSpace,s);const e=`mat3( ${m0.elements.map(t=>t.toFixed(4))} )`;switch(nt.getTransfer(s)){case qh:return[e,"LinearTransferOETF"];case vt:return[e,"sRGBTransferOETF"];default:return console.warn("THREE.WebGLProgram: Unsupported color space: ",s),[e,"LinearTransferOETF"]}}function g0(s,e,t){const i=s.getShaderParameter(e,s.COMPILE_STATUS),n=s.getShaderInfoLog(e).trim();if(i&&n==="")return"";const r=/ERROR: 0:(\d+)/.exec(n);if(r){const o=parseInt(r[1]);return t.toUpperCase()+`

`+n+`

`+nS(s.getShaderSource(e),o)}else return n}function rS(s,e){const t=sS(e);return[`vec4 ${s}( vec4 value ) {`,`	return ${t[1]}( vec4( value.rgb * ${t[0]}, value.a ) );`,"}"].join(`
`)}function oS(s,e){let t;switch(e){case Ry:t="Linear";break;case My:t="Reinhard";break;case Fy:t="Cineon";break;case Py:t="ACESFilmic";break;case Ly:t="AgX";break;case Dy:t="Neutral";break;case Oy:t="Custom";break;default:console.warn("THREE.WebGLProgram: Unsupported toneMapping:",e),t="Linear"}return"vec3 "+s+"( vec3 color ) { return "+t+"ToneMapping( color ); }"}const yc=new P;function aS(){nt.getLuminanceCoefficients(yc);const s=yc.x.toFixed(4),e=yc.y.toFixed(4),t=yc.z.toFixed(4);return["float luminance( const in vec3 rgb ) {",`	const vec3 weights = vec3( ${s}, ${e}, ${t} );`,"	return dot( weights, rgb );","}"].join(`
`)}function lS(s){return[s.extensionClipCullDistance?"#extension GL_ANGLE_clip_cull_distance : require":"",s.extensionMultiDraw?"#extension GL_ANGLE_multi_draw : require":""].filter(Ka).join(`
`)}function cS(s){const e=[];for(const t in s){const i=s[t];i!==!1&&e.push("#define "+t+" "+i)}return e.join(`
`)}function hS(s,e){const t={},i=s.getProgramParameter(e,s.ACTIVE_ATTRIBUTES);for(let n=0;n<i;n++){const r=s.getActiveAttrib(e,n),o=r.name;let a=1;r.type===s.FLOAT_MAT2&&(a=2),r.type===s.FLOAT_MAT3&&(a=3),r.type===s.FLOAT_MAT4&&(a=4),t[o]={type:r.type,location:s.getAttribLocation(e,o),locationSize:a}}return t}function Ka(s){return s!==""}function E0(s,e){const t=e.numSpotLightShadows+e.numSpotLightMaps-e.numSpotLightShadowsWithMaps;return s.replace(/NUM_DIR_LIGHTS/g,e.numDirLights).replace(/NUM_SPOT_LIGHTS/g,e.numSpotLights).replace(/NUM_SPOT_LIGHT_MAPS/g,e.numSpotLightMaps).replace(/NUM_SPOT_LIGHT_COORDS/g,t).replace(/NUM_RECT_AREA_LIGHTS/g,e.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g,e.numPointLights).replace(/NUM_HEMI_LIGHTS/g,e.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g,e.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS/g,e.numSpotLightShadowsWithMaps).replace(/NUM_SPOT_LIGHT_SHADOWS/g,e.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g,e.numPointLightShadows)}function I0(s,e){return s.replace(/NUM_CLIPPING_PLANES/g,e.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g,e.numClippingPlanes-e.numClipIntersection)}const uS=/^[ \t]*#include +<([\w\d./]+)>/gm;function op(s){return s.replace(uS,fS)}const dS=new Map;function fS(s,e){let t=st[e];if(t===void 0){const i=dS.get(e);if(i!==void 0)t=st[i],console.warn('THREE.WebGLRenderer: Shader chunk "%s" has been deprecated. Use "%s" instead.',e,i);else throw new Error("Can not resolve #include <"+e+">")}return op(t)}const pS=/#pragma unroll_loop_start\s+for\s*\(\s*int\s+i\s*=\s*(\d+)\s*;\s*i\s*<\s*(\d+)\s*;\s*i\s*\+\+\s*\)\s*{([\s\S]+?)}\s+#pragma unroll_loop_end/g;function _0(s){return s.replace(pS,mS)}function mS(s,e,t,i){let n="";for(let r=parseInt(e);r<parseInt(t);r++)n+=i.replace(/\[\s*i\s*\]/g,"[ "+r+" ]").replace(/UNROLLED_LOOP_INDEX/g,r);return n}function v0(s){let e=`precision ${s.precision} float;
	precision ${s.precision} int;
	precision ${s.precision} sampler2D;
	precision ${s.precision} samplerCube;
	precision ${s.precision} sampler3D;
	precision ${s.precision} sampler2DArray;
	precision ${s.precision} sampler2DShadow;
	precision ${s.precision} samplerCubeShadow;
	precision ${s.precision} sampler2DArrayShadow;
	precision ${s.precision} isampler2D;
	precision ${s.precision} isampler3D;
	precision ${s.precision} isamplerCube;
	precision ${s.precision} isampler2DArray;
	precision ${s.precision} usampler2D;
	precision ${s.precision} usampler3D;
	precision ${s.precision} usamplerCube;
	precision ${s.precision} usampler2DArray;
	`;return s.precision==="highp"?e+=`
#define HIGH_PRECISION`:s.precision==="mediump"?e+=`
#define MEDIUM_PRECISION`:s.precision==="lowp"&&(e+=`
#define LOW_PRECISION`),e}function gS(s){let e="SHADOWMAP_TYPE_BASIC";return s.shadowMapType===wI?e="SHADOWMAP_TYPE_PCF":s.shadowMapType===ly?e="SHADOWMAP_TYPE_PCF_SOFT":s.shadowMapType===is&&(e="SHADOWMAP_TYPE_VSM"),e}function ES(s){let e="ENVMAP_TYPE_CUBE";if(s.envMap)switch(s.envMapMode){case ea:case ta:e="ENVMAP_TYPE_CUBE";break;case Eu:e="ENVMAP_TYPE_CUBE_UV";break}return e}function IS(s){let e="ENVMAP_MODE_REFLECTION";if(s.envMap)switch(s.envMapMode){case ta:e="ENVMAP_MODE_REFRACTION";break}return e}function _S(s){let e="ENVMAP_BLENDING_NONE";if(s.envMap)switch(s.combine){case vm:e="ENVMAP_BLENDING_MULTIPLY";break;case Sy:e="ENVMAP_BLENDING_MIX";break;case Ay:e="ENVMAP_BLENDING_ADD";break}return e}function vS(s){const e=s.envMapCubeUVHeight;if(e===null)return null;const t=Math.log2(e)-2,i=1/e;return{texelWidth:1/(3*Math.max(Math.pow(2,t),7*16)),texelHeight:i,maxMip:t}}function bS(s,e,t,i){const n=s.getContext(),r=t.defines;let o=t.vertexShader,a=t.fragmentShader;const l=gS(t),c=ES(t),h=IS(t),d=_S(t),u=vS(t),f=lS(t),m=cS(r),g=n.createProgram();let E,p,v=t.glslVersion?"#version "+t.glslVersion+`
`:"";t.isRawShaderMaterial?(E=["#define SHADER_TYPE "+t.shaderType,"#define SHADER_NAME "+t.shaderName,m].filter(Ka).join(`
`),E.length>0&&(E+=`
`),p=["#define SHADER_TYPE "+t.shaderType,"#define SHADER_NAME "+t.shaderName,m].filter(Ka).join(`
`),p.length>0&&(p+=`
`)):(E=[v0(t),"#define SHADER_TYPE "+t.shaderType,"#define SHADER_NAME "+t.shaderName,m,t.extensionClipCullDistance?"#define USE_CLIP_DISTANCE":"",t.batching?"#define USE_BATCHING":"",t.batchingColor?"#define USE_BATCHING_COLOR":"",t.instancing?"#define USE_INSTANCING":"",t.instancingColor?"#define USE_INSTANCING_COLOR":"",t.instancingMorph?"#define USE_INSTANCING_MORPH":"",t.useFog&&t.fog?"#define USE_FOG":"",t.useFog&&t.fogExp2?"#define FOG_EXP2":"",t.map?"#define USE_MAP":"",t.envMap?"#define USE_ENVMAP":"",t.envMap?"#define "+h:"",t.lightMap?"#define USE_LIGHTMAP":"",t.aoMap?"#define USE_AOMAP":"",t.bumpMap?"#define USE_BUMPMAP":"",t.normalMap?"#define USE_NORMALMAP":"",t.normalMapObjectSpace?"#define USE_NORMALMAP_OBJECTSPACE":"",t.normalMapTangentSpace?"#define USE_NORMALMAP_TANGENTSPACE":"",t.displacementMap?"#define USE_DISPLACEMENTMAP":"",t.emissiveMap?"#define USE_EMISSIVEMAP":"",t.anisotropy?"#define USE_ANISOTROPY":"",t.anisotropyMap?"#define USE_ANISOTROPYMAP":"",t.clearcoatMap?"#define USE_CLEARCOATMAP":"",t.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",t.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",t.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",t.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",t.specularMap?"#define USE_SPECULARMAP":"",t.specularColorMap?"#define USE_SPECULAR_COLORMAP":"",t.specularIntensityMap?"#define USE_SPECULAR_INTENSITYMAP":"",t.roughnessMap?"#define USE_ROUGHNESSMAP":"",t.metalnessMap?"#define USE_METALNESSMAP":"",t.alphaMap?"#define USE_ALPHAMAP":"",t.alphaHash?"#define USE_ALPHAHASH":"",t.transmission?"#define USE_TRANSMISSION":"",t.transmissionMap?"#define USE_TRANSMISSIONMAP":"",t.thicknessMap?"#define USE_THICKNESSMAP":"",t.sheenColorMap?"#define USE_SHEEN_COLORMAP":"",t.sheenRoughnessMap?"#define USE_SHEEN_ROUGHNESSMAP":"",t.mapUv?"#define MAP_UV "+t.mapUv:"",t.alphaMapUv?"#define ALPHAMAP_UV "+t.alphaMapUv:"",t.lightMapUv?"#define LIGHTMAP_UV "+t.lightMapUv:"",t.aoMapUv?"#define AOMAP_UV "+t.aoMapUv:"",t.emissiveMapUv?"#define EMISSIVEMAP_UV "+t.emissiveMapUv:"",t.bumpMapUv?"#define BUMPMAP_UV "+t.bumpMapUv:"",t.normalMapUv?"#define NORMALMAP_UV "+t.normalMapUv:"",t.displacementMapUv?"#define DISPLACEMENTMAP_UV "+t.displacementMapUv:"",t.metalnessMapUv?"#define METALNESSMAP_UV "+t.metalnessMapUv:"",t.roughnessMapUv?"#define ROUGHNESSMAP_UV "+t.roughnessMapUv:"",t.anisotropyMapUv?"#define ANISOTROPYMAP_UV "+t.anisotropyMapUv:"",t.clearcoatMapUv?"#define CLEARCOATMAP_UV "+t.clearcoatMapUv:"",t.clearcoatNormalMapUv?"#define CLEARCOAT_NORMALMAP_UV "+t.clearcoatNormalMapUv:"",t.clearcoatRoughnessMapUv?"#define CLEARCOAT_ROUGHNESSMAP_UV "+t.clearcoatRoughnessMapUv:"",t.iridescenceMapUv?"#define IRIDESCENCEMAP_UV "+t.iridescenceMapUv:"",t.iridescenceThicknessMapUv?"#define IRIDESCENCE_THICKNESSMAP_UV "+t.iridescenceThicknessMapUv:"",t.sheenColorMapUv?"#define SHEEN_COLORMAP_UV "+t.sheenColorMapUv:"",t.sheenRoughnessMapUv?"#define SHEEN_ROUGHNESSMAP_UV "+t.sheenRoughnessMapUv:"",t.specularMapUv?"#define SPECULARMAP_UV "+t.specularMapUv:"",t.specularColorMapUv?"#define SPECULAR_COLORMAP_UV "+t.specularColorMapUv:"",t.specularIntensityMapUv?"#define SPECULAR_INTENSITYMAP_UV "+t.specularIntensityMapUv:"",t.transmissionMapUv?"#define TRANSMISSIONMAP_UV "+t.transmissionMapUv:"",t.thicknessMapUv?"#define THICKNESSMAP_UV "+t.thicknessMapUv:"",t.vertexTangents&&t.flatShading===!1?"#define USE_TANGENT":"",t.vertexColors?"#define USE_COLOR":"",t.vertexAlphas?"#define USE_COLOR_ALPHA":"",t.vertexUv1s?"#define USE_UV1":"",t.vertexUv2s?"#define USE_UV2":"",t.vertexUv3s?"#define USE_UV3":"",t.pointsUvs?"#define USE_POINTS_UV":"",t.flatShading?"#define FLAT_SHADED":"",t.skinning?"#define USE_SKINNING":"",t.morphTargets?"#define USE_MORPHTARGETS":"",t.morphNormals&&t.flatShading===!1?"#define USE_MORPHNORMALS":"",t.morphColors?"#define USE_MORPHCOLORS":"",t.morphTargetsCount>0?"#define MORPHTARGETS_TEXTURE_STRIDE "+t.morphTextureStride:"",t.morphTargetsCount>0?"#define MORPHTARGETS_COUNT "+t.morphTargetsCount:"",t.doubleSided?"#define DOUBLE_SIDED":"",t.flipSided?"#define FLIP_SIDED":"",t.shadowMapEnabled?"#define USE_SHADOWMAP":"",t.shadowMapEnabled?"#define "+l:"",t.sizeAttenuation?"#define USE_SIZEATTENUATION":"",t.numLightProbes>0?"#define USE_LIGHT_PROBES":"",t.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",t.reverseDepthBuffer?"#define USE_REVERSEDEPTHBUF":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;","#ifdef USE_INSTANCING","	attribute mat4 instanceMatrix;","#endif","#ifdef USE_INSTANCING_COLOR","	attribute vec3 instanceColor;","#endif","#ifdef USE_INSTANCING_MORPH","	uniform sampler2D morphTexture;","#endif","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","#ifdef USE_UV1","	attribute vec2 uv1;","#endif","#ifdef USE_UV2","	attribute vec2 uv2;","#endif","#ifdef USE_UV3","	attribute vec2 uv3;","#endif","#ifdef USE_TANGENT","	attribute vec4 tangent;","#endif","#if defined( USE_COLOR_ALPHA )","	attribute vec4 color;","#elif defined( USE_COLOR )","	attribute vec3 color;","#endif","#ifdef USE_SKINNING","	attribute vec4 skinIndex;","	attribute vec4 skinWeight;","#endif",`
`].filter(Ka).join(`
`),p=[v0(t),"#define SHADER_TYPE "+t.shaderType,"#define SHADER_NAME "+t.shaderName,m,t.useFog&&t.fog?"#define USE_FOG":"",t.useFog&&t.fogExp2?"#define FOG_EXP2":"",t.alphaToCoverage?"#define ALPHA_TO_COVERAGE":"",t.map?"#define USE_MAP":"",t.matcap?"#define USE_MATCAP":"",t.envMap?"#define USE_ENVMAP":"",t.envMap?"#define "+c:"",t.envMap?"#define "+h:"",t.envMap?"#define "+d:"",u?"#define CUBEUV_TEXEL_WIDTH "+u.texelWidth:"",u?"#define CUBEUV_TEXEL_HEIGHT "+u.texelHeight:"",u?"#define CUBEUV_MAX_MIP "+u.maxMip+".0":"",t.lightMap?"#define USE_LIGHTMAP":"",t.aoMap?"#define USE_AOMAP":"",t.bumpMap?"#define USE_BUMPMAP":"",t.normalMap?"#define USE_NORMALMAP":"",t.normalMapObjectSpace?"#define USE_NORMALMAP_OBJECTSPACE":"",t.normalMapTangentSpace?"#define USE_NORMALMAP_TANGENTSPACE":"",t.emissiveMap?"#define USE_EMISSIVEMAP":"",t.anisotropy?"#define USE_ANISOTROPY":"",t.anisotropyMap?"#define USE_ANISOTROPYMAP":"",t.clearcoat?"#define USE_CLEARCOAT":"",t.clearcoatMap?"#define USE_CLEARCOATMAP":"",t.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",t.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",t.dispersion?"#define USE_DISPERSION":"",t.iridescence?"#define USE_IRIDESCENCE":"",t.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",t.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",t.specularMap?"#define USE_SPECULARMAP":"",t.specularColorMap?"#define USE_SPECULAR_COLORMAP":"",t.specularIntensityMap?"#define USE_SPECULAR_INTENSITYMAP":"",t.roughnessMap?"#define USE_ROUGHNESSMAP":"",t.metalnessMap?"#define USE_METALNESSMAP":"",t.alphaMap?"#define USE_ALPHAMAP":"",t.alphaTest?"#define USE_ALPHATEST":"",t.alphaHash?"#define USE_ALPHAHASH":"",t.sheen?"#define USE_SHEEN":"",t.sheenColorMap?"#define USE_SHEEN_COLORMAP":"",t.sheenRoughnessMap?"#define USE_SHEEN_ROUGHNESSMAP":"",t.transmission?"#define USE_TRANSMISSION":"",t.transmissionMap?"#define USE_TRANSMISSIONMAP":"",t.thicknessMap?"#define USE_THICKNESSMAP":"",t.vertexTangents&&t.flatShading===!1?"#define USE_TANGENT":"",t.vertexColors||t.instancingColor||t.batchingColor?"#define USE_COLOR":"",t.vertexAlphas?"#define USE_COLOR_ALPHA":"",t.vertexUv1s?"#define USE_UV1":"",t.vertexUv2s?"#define USE_UV2":"",t.vertexUv3s?"#define USE_UV3":"",t.pointsUvs?"#define USE_POINTS_UV":"",t.gradientMap?"#define USE_GRADIENTMAP":"",t.flatShading?"#define FLAT_SHADED":"",t.doubleSided?"#define DOUBLE_SIDED":"",t.flipSided?"#define FLIP_SIDED":"",t.shadowMapEnabled?"#define USE_SHADOWMAP":"",t.shadowMapEnabled?"#define "+l:"",t.premultipliedAlpha?"#define PREMULTIPLIED_ALPHA":"",t.numLightProbes>0?"#define USE_LIGHT_PROBES":"",t.decodeVideoTexture?"#define DECODE_VIDEO_TEXTURE":"",t.decodeVideoTextureEmissive?"#define DECODE_VIDEO_TEXTURE_EMISSIVE":"",t.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",t.reverseDepthBuffer?"#define USE_REVERSEDEPTHBUF":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;",t.toneMapping!==Es?"#define TONE_MAPPING":"",t.toneMapping!==Es?st.tonemapping_pars_fragment:"",t.toneMapping!==Es?oS("toneMapping",t.toneMapping):"",t.dithering?"#define DITHERING":"",t.opaque?"#define OPAQUE":"",st.colorspace_pars_fragment,rS("linearToOutputTexel",t.outputColorSpace),aS(),t.useDepthPacking?"#define DEPTH_PACKING "+t.depthPacking:"",`
`].filter(Ka).join(`
`)),o=op(o),o=E0(o,t),o=I0(o,t),a=op(a),a=E0(a,t),a=I0(a,t),o=_0(o),a=_0(a),t.isRawShaderMaterial!==!0&&(v=`#version 300 es
`,E=[f,"#define attribute in","#define varying out","#define texture2D texture"].join(`
`)+`
`+E,p=["#define varying in",t.glslVersion===Ig?"":"layout(location = 0) out highp vec4 pc_fragColor;",t.glslVersion===Ig?"":"#define gl_FragColor pc_fragColor","#define gl_FragDepthEXT gl_FragDepth","#define texture2D texture","#define textureCube texture","#define texture2DProj textureProj","#define texture2DLodEXT textureLod","#define texture2DProjLodEXT textureProjLod","#define textureCubeLodEXT textureLod","#define texture2DGradEXT textureGrad","#define texture2DProjGradEXT textureProjGrad","#define textureCubeGradEXT textureGrad"].join(`
`)+`
`+p);const I=v+E+o,_=v+p+a,b=p0(n,n.VERTEX_SHADER,I),T=p0(n,n.FRAGMENT_SHADER,_);n.attachShader(g,b),n.attachShader(g,T),t.index0AttributeName!==void 0?n.bindAttribLocation(g,0,t.index0AttributeName):t.morphTargets===!0&&n.bindAttribLocation(g,0,"position"),n.linkProgram(g);function w(M){if(s.debug.checkShaderErrors){const R=n.getProgramInfoLog(g).trim(),L=n.getShaderInfoLog(b).trim(),S=n.getShaderInfoLog(T).trim();let U=!0,z=!0;if(n.getProgramParameter(g,n.LINK_STATUS)===!1)if(U=!1,typeof s.debug.onShaderError=="function")s.debug.onShaderError(n,g,b,T);else{const k=g0(n,b,"vertex"),H=g0(n,T,"fragment");console.error("THREE.WebGLProgram: Shader Error "+n.getError()+" - VALIDATE_STATUS "+n.getProgramParameter(g,n.VALIDATE_STATUS)+`

Material Name: `+M.name+`
Material Type: `+M.type+`

Program Info Log: `+R+`
`+k+`
`+H)}else R!==""?console.warn("THREE.WebGLProgram: Program Info Log:",R):(L===""||S==="")&&(z=!1);z&&(M.diagnostics={runnable:U,programLog:R,vertexShader:{log:L,prefix:E},fragmentShader:{log:S,prefix:p}})}n.deleteShader(b),n.deleteShader(T),A=new Uh(n,g),y=hS(n,g)}let A;this.getUniforms=function(){return A===void 0&&w(this),A};let y;this.getAttributes=function(){return y===void 0&&w(this),y};let C=t.rendererExtensionParallelShaderCompile===!1;return this.isReady=function(){return C===!1&&(C=n.getProgramParameter(g,tS)),C},this.destroy=function(){i.releaseStatesOfProgram(this),n.deleteProgram(g),this.program=void 0},this.type=t.shaderType,this.name=t.shaderName,this.id=iS++,this.cacheKey=e,this.usedTimes=1,this.program=g,this.vertexShader=b,this.fragmentShader=T,this}let yS=0;class TS{constructor(){this.shaderCache=new Map,this.materialCache=new Map}update(e){const t=e.vertexShader,i=e.fragmentShader,n=this._getShaderStage(t),r=this._getShaderStage(i),o=this._getShaderCacheForMaterial(e);return o.has(n)===!1&&(o.add(n),n.usedTimes++),o.has(r)===!1&&(o.add(r),r.usedTimes++),this}remove(e){const t=this.materialCache.get(e);for(const i of t)i.usedTimes--,i.usedTimes===0&&this.shaderCache.delete(i.code);return this.materialCache.delete(e),this}getVertexShaderID(e){return this._getShaderStage(e.vertexShader).id}getFragmentShaderID(e){return this._getShaderStage(e.fragmentShader).id}dispose(){this.shaderCache.clear(),this.materialCache.clear()}_getShaderCacheForMaterial(e){const t=this.materialCache;let i=t.get(e);return i===void 0&&(i=new Set,t.set(e,i)),i}_getShaderStage(e){const t=this.shaderCache;let i=t.get(e);return i===void 0&&(i=new CS(e),t.set(e,i)),i}}class CS{constructor(e){this.id=yS++,this.code=e,this.usedTimes=0}}function xS(s,e,t,i,n,r,o){const a=new Mm,l=new TS,c=new Set,h=[],d=n.logarithmicDepthBuffer,u=n.vertexTextures;let f=n.precision;const m={MeshDepthMaterial:"depth",MeshDistanceMaterial:"distanceRGBA",MeshNormalMaterial:"normal",MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",MeshPhongMaterial:"phong",MeshToonMaterial:"toon",MeshStandardMaterial:"physical",MeshPhysicalMaterial:"physical",MeshMatcapMaterial:"matcap",LineBasicMaterial:"basic",LineDashedMaterial:"dashed",PointsMaterial:"points",ShadowMaterial:"shadow",SpriteMaterial:"sprite"};function g(y){return c.add(y),y===0?"uv":`uv${y}`}function E(y,C,M,R,L){const S=R.fog,U=L.geometry,z=y.isMeshStandardMaterial?R.environment:null,k=(y.isMeshStandardMaterial?t:e).get(y.envMap||z),H=k&&k.mapping===Eu?k.image.height:null,Y=m[y.type];y.precision!==null&&(f=n.getMaxPrecision(y.precision),f!==y.precision&&console.warn("THREE.WebGLProgram.getParameters:",y.precision,"not supported, using",f,"instead."));const re=U.morphAttributes.position||U.morphAttributes.normal||U.morphAttributes.color,j=re!==void 0?re.length:0;let X=0;U.morphAttributes.position!==void 0&&(X=1),U.morphAttributes.normal!==void 0&&(X=2),U.morphAttributes.color!==void 0&&(X=3);let ue,Z,K,Ie;if(Y){const Et=wi[Y];ue=Et.vertexShader,Z=Et.fragmentShader}else ue=y.vertexShader,Z=y.fragmentShader,l.update(y),K=l.getVertexShaderID(y),Ie=l.getFragmentShaderID(y);const me=s.getRenderTarget(),ce=s.state.buffers.depth.getReversed(),ge=L.isInstancedMesh===!0,Ee=L.isBatchedMesh===!0,Se=!!y.map,ke=!!y.matcap,Ue=!!k,x=!!y.aoMap,ae=!!y.lightMap,Q=!!y.bumpMap,G=!!y.normalMap,B=!!y.displacementMap,q=!!y.emissiveMap,se=!!y.metalnessMap,N=!!y.roughnessMap,O=y.anisotropy>0,W=y.clearcoat>0,te=y.dispersion>0,$=y.iridescence>0,ne=y.sheen>0,we=y.transmission>0,be=O&&!!y.anisotropyMap,Ae=W&&!!y.clearcoatMap,rt=W&&!!y.clearcoatNormalMap,ye=W&&!!y.clearcoatRoughnessMap,Le=$&&!!y.iridescenceMap,De=$&&!!y.iridescenceThicknessMap,Ye=ne&&!!y.sheenColorMap,Be=ne&&!!y.sheenRoughnessMap,Je=!!y.specularMap,et=!!y.specularColorMap,_t=!!y.specularIntensityMap,J=we&&!!y.transmissionMap,Me=we&&!!y.thicknessMap,de=!!y.gradientMap,ve=!!y.alphaMap,Re=y.alphaTest>0,Pe=!!y.alphaHash,tt=!!y.extensions;let kt=Es;y.toneMapped&&(me===null||me.isXRRenderTarget===!0)&&(kt=s.toneMapping);const pi={shaderID:Y,shaderType:y.type,shaderName:y.name,vertexShader:ue,fragmentShader:Z,defines:y.defines,customVertexShaderID:K,customFragmentShaderID:Ie,isRawShaderMaterial:y.isRawShaderMaterial===!0,glslVersion:y.glslVersion,precision:f,batching:Ee,batchingColor:Ee&&L._colorsTexture!==null,instancing:ge,instancingColor:ge&&L.instanceColor!==null,instancingMorph:ge&&L.morphTexture!==null,supportsVertexTextures:u,outputColorSpace:me===null?s.outputColorSpace:me.isXRRenderTarget===!0?me.texture.colorSpace:sa,alphaToCoverage:!!y.alphaToCoverage,map:Se,matcap:ke,envMap:Ue,envMapMode:Ue&&k.mapping,envMapCubeUVHeight:H,aoMap:x,lightMap:ae,bumpMap:Q,normalMap:G,displacementMap:u&&B,emissiveMap:q,normalMapObjectSpace:G&&y.normalMapType===zy,normalMapTangentSpace:G&&y.normalMapType===Sm,metalnessMap:se,roughnessMap:N,anisotropy:O,anisotropyMap:be,clearcoat:W,clearcoatMap:Ae,clearcoatNormalMap:rt,clearcoatRoughnessMap:ye,dispersion:te,iridescence:$,iridescenceMap:Le,iridescenceThicknessMap:De,sheen:ne,sheenColorMap:Ye,sheenRoughnessMap:Be,specularMap:Je,specularColorMap:et,specularIntensityMap:_t,transmission:we,transmissionMap:J,thicknessMap:Me,gradientMap:de,opaque:y.transparent===!1&&y.blending===Zo&&y.alphaToCoverage===!1,alphaMap:ve,alphaTest:Re,alphaHash:Pe,combine:y.combine,mapUv:Se&&g(y.map.channel),aoMapUv:x&&g(y.aoMap.channel),lightMapUv:ae&&g(y.lightMap.channel),bumpMapUv:Q&&g(y.bumpMap.channel),normalMapUv:G&&g(y.normalMap.channel),displacementMapUv:B&&g(y.displacementMap.channel),emissiveMapUv:q&&g(y.emissiveMap.channel),metalnessMapUv:se&&g(y.metalnessMap.channel),roughnessMapUv:N&&g(y.roughnessMap.channel),anisotropyMapUv:be&&g(y.anisotropyMap.channel),clearcoatMapUv:Ae&&g(y.clearcoatMap.channel),clearcoatNormalMapUv:rt&&g(y.clearcoatNormalMap.channel),clearcoatRoughnessMapUv:ye&&g(y.clearcoatRoughnessMap.channel),iridescenceMapUv:Le&&g(y.iridescenceMap.channel),iridescenceThicknessMapUv:De&&g(y.iridescenceThicknessMap.channel),sheenColorMapUv:Ye&&g(y.sheenColorMap.channel),sheenRoughnessMapUv:Be&&g(y.sheenRoughnessMap.channel),specularMapUv:Je&&g(y.specularMap.channel),specularColorMapUv:et&&g(y.specularColorMap.channel),specularIntensityMapUv:_t&&g(y.specularIntensityMap.channel),transmissionMapUv:J&&g(y.transmissionMap.channel),thicknessMapUv:Me&&g(y.thicknessMap.channel),alphaMapUv:ve&&g(y.alphaMap.channel),vertexTangents:!!U.attributes.tangent&&(G||O),vertexColors:y.vertexColors,vertexAlphas:y.vertexColors===!0&&!!U.attributes.color&&U.attributes.color.itemSize===4,pointsUvs:L.isPoints===!0&&!!U.attributes.uv&&(Se||ve),fog:!!S,useFog:y.fog===!0,fogExp2:!!S&&S.isFogExp2,flatShading:y.flatShading===!0,sizeAttenuation:y.sizeAttenuation===!0,logarithmicDepthBuffer:d,reverseDepthBuffer:ce,skinning:L.isSkinnedMesh===!0,morphTargets:U.morphAttributes.position!==void 0,morphNormals:U.morphAttributes.normal!==void 0,morphColors:U.morphAttributes.color!==void 0,morphTargetsCount:j,morphTextureStride:X,numDirLights:C.directional.length,numPointLights:C.point.length,numSpotLights:C.spot.length,numSpotLightMaps:C.spotLightMap.length,numRectAreaLights:C.rectArea.length,numHemiLights:C.hemi.length,numDirLightShadows:C.directionalShadowMap.length,numPointLightShadows:C.pointShadowMap.length,numSpotLightShadows:C.spotShadowMap.length,numSpotLightShadowsWithMaps:C.numSpotLightShadowsWithMaps,numLightProbes:C.numLightProbes,numClippingPlanes:o.numPlanes,numClipIntersection:o.numIntersection,dithering:y.dithering,shadowMapEnabled:s.shadowMap.enabled&&M.length>0,shadowMapType:s.shadowMap.type,toneMapping:kt,decodeVideoTexture:Se&&y.map.isVideoTexture===!0&&nt.getTransfer(y.map.colorSpace)===vt,decodeVideoTextureEmissive:q&&y.emissiveMap.isVideoTexture===!0&&nt.getTransfer(y.emissiveMap.colorSpace)===vt,premultipliedAlpha:y.premultipliedAlpha,doubleSided:y.side===Ai,flipSided:y.side===_i,useDepthPacking:y.depthPacking>=0,depthPacking:y.depthPacking||0,index0AttributeName:y.index0AttributeName,extensionClipCullDistance:tt&&y.extensions.clipCullDistance===!0&&i.has("WEBGL_clip_cull_distance"),extensionMultiDraw:(tt&&y.extensions.multiDraw===!0||Ee)&&i.has("WEBGL_multi_draw"),rendererExtensionParallelShaderCompile:i.has("KHR_parallel_shader_compile"),customProgramCacheKey:y.customProgramCacheKey()};return pi.vertexUv1s=c.has(1),pi.vertexUv2s=c.has(2),pi.vertexUv3s=c.has(3),c.clear(),pi}function p(y){const C=[];if(y.shaderID?C.push(y.shaderID):(C.push(y.customVertexShaderID),C.push(y.customFragmentShaderID)),y.defines!==void 0)for(const M in y.defines)C.push(M),C.push(y.defines[M]);return y.isRawShaderMaterial===!1&&(v(C,y),I(C,y),C.push(s.outputColorSpace)),C.push(y.customProgramCacheKey),C.join()}function v(y,C){y.push(C.precision),y.push(C.outputColorSpace),y.push(C.envMapMode),y.push(C.envMapCubeUVHeight),y.push(C.mapUv),y.push(C.alphaMapUv),y.push(C.lightMapUv),y.push(C.aoMapUv),y.push(C.bumpMapUv),y.push(C.normalMapUv),y.push(C.displacementMapUv),y.push(C.emissiveMapUv),y.push(C.metalnessMapUv),y.push(C.roughnessMapUv),y.push(C.anisotropyMapUv),y.push(C.clearcoatMapUv),y.push(C.clearcoatNormalMapUv),y.push(C.clearcoatRoughnessMapUv),y.push(C.iridescenceMapUv),y.push(C.iridescenceThicknessMapUv),y.push(C.sheenColorMapUv),y.push(C.sheenRoughnessMapUv),y.push(C.specularMapUv),y.push(C.specularColorMapUv),y.push(C.specularIntensityMapUv),y.push(C.transmissionMapUv),y.push(C.thicknessMapUv),y.push(C.combine),y.push(C.fogExp2),y.push(C.sizeAttenuation),y.push(C.morphTargetsCount),y.push(C.morphAttributeCount),y.push(C.numDirLights),y.push(C.numPointLights),y.push(C.numSpotLights),y.push(C.numSpotLightMaps),y.push(C.numHemiLights),y.push(C.numRectAreaLights),y.push(C.numDirLightShadows),y.push(C.numPointLightShadows),y.push(C.numSpotLightShadows),y.push(C.numSpotLightShadowsWithMaps),y.push(C.numLightProbes),y.push(C.shadowMapType),y.push(C.toneMapping),y.push(C.numClippingPlanes),y.push(C.numClipIntersection),y.push(C.depthPacking)}function I(y,C){a.disableAll(),C.supportsVertexTextures&&a.enable(0),C.instancing&&a.enable(1),C.instancingColor&&a.enable(2),C.instancingMorph&&a.enable(3),C.matcap&&a.enable(4),C.envMap&&a.enable(5),C.normalMapObjectSpace&&a.enable(6),C.normalMapTangentSpace&&a.enable(7),C.clearcoat&&a.enable(8),C.iridescence&&a.enable(9),C.alphaTest&&a.enable(10),C.vertexColors&&a.enable(11),C.vertexAlphas&&a.enable(12),C.vertexUv1s&&a.enable(13),C.vertexUv2s&&a.enable(14),C.vertexUv3s&&a.enable(15),C.vertexTangents&&a.enable(16),C.anisotropy&&a.enable(17),C.alphaHash&&a.enable(18),C.batching&&a.enable(19),C.dispersion&&a.enable(20),C.batchingColor&&a.enable(21),y.push(a.mask),a.disableAll(),C.fog&&a.enable(0),C.useFog&&a.enable(1),C.flatShading&&a.enable(2),C.logarithmicDepthBuffer&&a.enable(3),C.reverseDepthBuffer&&a.enable(4),C.skinning&&a.enable(5),C.morphTargets&&a.enable(6),C.morphNormals&&a.enable(7),C.morphColors&&a.enable(8),C.premultipliedAlpha&&a.enable(9),C.shadowMapEnabled&&a.enable(10),C.doubleSided&&a.enable(11),C.flipSided&&a.enable(12),C.useDepthPacking&&a.enable(13),C.dithering&&a.enable(14),C.transmission&&a.enable(15),C.sheen&&a.enable(16),C.opaque&&a.enable(17),C.pointsUvs&&a.enable(18),C.decodeVideoTexture&&a.enable(19),C.decodeVideoTextureEmissive&&a.enable(20),C.alphaToCoverage&&a.enable(21),y.push(a.mask)}function _(y){const C=m[y.type];let M;if(C){const R=wi[C];M=fa.clone(R.uniforms)}else M=y.uniforms;return M}function b(y,C){let M;for(let R=0,L=h.length;R<L;R++){const S=h[R];if(S.cacheKey===C){M=S,++M.usedTimes;break}}return M===void 0&&(M=new bS(s,C,y,r),h.push(M)),M}function T(y){if(--y.usedTimes===0){const C=h.indexOf(y);h[C]=h[h.length-1],h.pop(),y.destroy()}}function w(y){l.remove(y)}function A(){l.dispose()}return{getParameters:E,getProgramCacheKey:p,getUniforms:_,acquireProgram:b,releaseProgram:T,releaseShaderCache:w,programs:h,dispose:A}}function wS(){let s=new WeakMap;function e(o){return s.has(o)}function t(o){let a=s.get(o);return a===void 0&&(a={},s.set(o,a)),a}function i(o){s.delete(o)}function n(o,a,l){s.get(o)[a]=l}function r(){s=new WeakMap}return{has:e,get:t,remove:i,update:n,dispose:r}}function SS(s,e){return s.groupOrder!==e.groupOrder?s.groupOrder-e.groupOrder:s.renderOrder!==e.renderOrder?s.renderOrder-e.renderOrder:s.material.id!==e.material.id?s.material.id-e.material.id:s.z!==e.z?s.z-e.z:s.id-e.id}function b0(s,e){return s.groupOrder!==e.groupOrder?s.groupOrder-e.groupOrder:s.renderOrder!==e.renderOrder?s.renderOrder-e.renderOrder:s.z!==e.z?e.z-s.z:s.id-e.id}function y0(){const s=[];let e=0;const t=[],i=[],n=[];function r(){e=0,t.length=0,i.length=0,n.length=0}function o(d,u,f,m,g,E){let p=s[e];return p===void 0?(p={id:d.id,object:d,geometry:u,material:f,groupOrder:m,renderOrder:d.renderOrder,z:g,group:E},s[e]=p):(p.id=d.id,p.object=d,p.geometry=u,p.material=f,p.groupOrder=m,p.renderOrder=d.renderOrder,p.z=g,p.group=E),e++,p}function a(d,u,f,m,g,E){const p=o(d,u,f,m,g,E);f.transmission>0?i.push(p):f.transparent===!0?n.push(p):t.push(p)}function l(d,u,f,m,g,E){const p=o(d,u,f,m,g,E);f.transmission>0?i.unshift(p):f.transparent===!0?n.unshift(p):t.unshift(p)}function c(d,u){t.length>1&&t.sort(d||SS),i.length>1&&i.sort(u||b0),n.length>1&&n.sort(u||b0)}function h(){for(let d=e,u=s.length;d<u;d++){const f=s[d];if(f.id===null)break;f.id=null,f.object=null,f.geometry=null,f.material=null,f.group=null}}return{opaque:t,transmissive:i,transparent:n,init:r,push:a,unshift:l,finish:h,sort:c}}function AS(){let s=new WeakMap;function e(i,n){const r=s.get(i);let o;return r===void 0?(o=new y0,s.set(i,[o])):n>=r.length?(o=new y0,r.push(o)):o=r[n],o}function t(){s=new WeakMap}return{get:e,dispose:t}}function RS(){const s={};return{get:function(e){if(s[e.id]!==void 0)return s[e.id];let t;switch(e.type){case"DirectionalLight":t={direction:new P,color:new Ne};break;case"SpotLight":t={position:new P,direction:new P,color:new Ne,distance:0,coneCos:0,penumbraCos:0,decay:0};break;case"PointLight":t={position:new P,color:new Ne,distance:0,decay:0};break;case"HemisphereLight":t={direction:new P,skyColor:new Ne,groundColor:new Ne};break;case"RectAreaLight":t={color:new Ne,position:new P,halfWidth:new P,halfHeight:new P};break}return s[e.id]=t,t}}}function MS(){const s={};return{get:function(e){if(s[e.id]!==void 0)return s[e.id];let t;switch(e.type){case"DirectionalLight":t={shadowIntensity:1,shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new Oe};break;case"SpotLight":t={shadowIntensity:1,shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new Oe};break;case"PointLight":t={shadowIntensity:1,shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new Oe,shadowCameraNear:1,shadowCameraFar:1e3};break}return s[e.id]=t,t}}}let FS=0;function PS(s,e){return(e.castShadow?2:0)-(s.castShadow?2:0)+(e.map?1:0)-(s.map?1:0)}function OS(s){const e=new RS,t=MS(),i={version:0,hash:{directionalLength:-1,pointLength:-1,spotLength:-1,rectAreaLength:-1,hemiLength:-1,numDirectionalShadows:-1,numPointShadows:-1,numSpotShadows:-1,numSpotMaps:-1,numLightProbes:-1},ambient:[0,0,0],probe:[],directional:[],directionalShadow:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotLightMap:[],spotShadow:[],spotShadowMap:[],spotLightMatrix:[],rectArea:[],rectAreaLTC1:null,rectAreaLTC2:null,point:[],pointShadow:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[],numSpotLightShadowsWithMaps:0,numLightProbes:0};for(let c=0;c<9;c++)i.probe.push(new P);const n=new P,r=new _e,o=new _e;function a(c){let h=0,d=0,u=0;for(let y=0;y<9;y++)i.probe[y].set(0,0,0);let f=0,m=0,g=0,E=0,p=0,v=0,I=0,_=0,b=0,T=0,w=0;c.sort(PS);for(let y=0,C=c.length;y<C;y++){const M=c[y],R=M.color,L=M.intensity,S=M.distance,U=M.shadow&&M.shadow.map?M.shadow.map.texture:null;if(M.isAmbientLight)h+=R.r*L,d+=R.g*L,u+=R.b*L;else if(M.isLightProbe){for(let z=0;z<9;z++)i.probe[z].addScaledVector(M.sh.coefficients[z],L);w++}else if(M.isDirectionalLight){const z=e.get(M);if(z.color.copy(M.color).multiplyScalar(M.intensity),M.castShadow){const k=M.shadow,H=t.get(M);H.shadowIntensity=k.intensity,H.shadowBias=k.bias,H.shadowNormalBias=k.normalBias,H.shadowRadius=k.radius,H.shadowMapSize=k.mapSize,i.directionalShadow[f]=H,i.directionalShadowMap[f]=U,i.directionalShadowMatrix[f]=M.shadow.matrix,v++}i.directional[f]=z,f++}else if(M.isSpotLight){const z=e.get(M);z.position.setFromMatrixPosition(M.matrixWorld),z.color.copy(R).multiplyScalar(L),z.distance=S,z.coneCos=Math.cos(M.angle),z.penumbraCos=Math.cos(M.angle*(1-M.penumbra)),z.decay=M.decay,i.spot[g]=z;const k=M.shadow;if(M.map&&(i.spotLightMap[b]=M.map,b++,k.updateMatrices(M),M.castShadow&&T++),i.spotLightMatrix[g]=k.matrix,M.castShadow){const H=t.get(M);H.shadowIntensity=k.intensity,H.shadowBias=k.bias,H.shadowNormalBias=k.normalBias,H.shadowRadius=k.radius,H.shadowMapSize=k.mapSize,i.spotShadow[g]=H,i.spotShadowMap[g]=U,_++}g++}else if(M.isRectAreaLight){const z=e.get(M);z.color.copy(R).multiplyScalar(L),z.halfWidth.set(M.width*.5,0,0),z.halfHeight.set(0,M.height*.5,0),i.rectArea[E]=z,E++}else if(M.isPointLight){const z=e.get(M);if(z.color.copy(M.color).multiplyScalar(M.intensity),z.distance=M.distance,z.decay=M.decay,M.castShadow){const k=M.shadow,H=t.get(M);H.shadowIntensity=k.intensity,H.shadowBias=k.bias,H.shadowNormalBias=k.normalBias,H.shadowRadius=k.radius,H.shadowMapSize=k.mapSize,H.shadowCameraNear=k.camera.near,H.shadowCameraFar=k.camera.far,i.pointShadow[m]=H,i.pointShadowMap[m]=U,i.pointShadowMatrix[m]=M.shadow.matrix,I++}i.point[m]=z,m++}else if(M.isHemisphereLight){const z=e.get(M);z.skyColor.copy(M.color).multiplyScalar(L),z.groundColor.copy(M.groundColor).multiplyScalar(L),i.hemi[p]=z,p++}}E>0&&(s.has("OES_texture_float_linear")===!0?(i.rectAreaLTC1=xe.LTC_FLOAT_1,i.rectAreaLTC2=xe.LTC_FLOAT_2):(i.rectAreaLTC1=xe.LTC_HALF_1,i.rectAreaLTC2=xe.LTC_HALF_2)),i.ambient[0]=h,i.ambient[1]=d,i.ambient[2]=u;const A=i.hash;(A.directionalLength!==f||A.pointLength!==m||A.spotLength!==g||A.rectAreaLength!==E||A.hemiLength!==p||A.numDirectionalShadows!==v||A.numPointShadows!==I||A.numSpotShadows!==_||A.numSpotMaps!==b||A.numLightProbes!==w)&&(i.directional.length=f,i.spot.length=g,i.rectArea.length=E,i.point.length=m,i.hemi.length=p,i.directionalShadow.length=v,i.directionalShadowMap.length=v,i.pointShadow.length=I,i.pointShadowMap.length=I,i.spotShadow.length=_,i.spotShadowMap.length=_,i.directionalShadowMatrix.length=v,i.pointShadowMatrix.length=I,i.spotLightMatrix.length=_+b-T,i.spotLightMap.length=b,i.numSpotLightShadowsWithMaps=T,i.numLightProbes=w,A.directionalLength=f,A.pointLength=m,A.spotLength=g,A.rectAreaLength=E,A.hemiLength=p,A.numDirectionalShadows=v,A.numPointShadows=I,A.numSpotShadows=_,A.numSpotMaps=b,A.numLightProbes=w,i.version=FS++)}function l(c,h){let d=0,u=0,f=0,m=0,g=0;const E=h.matrixWorldInverse;for(let p=0,v=c.length;p<v;p++){const I=c[p];if(I.isDirectionalLight){const _=i.directional[d];_.direction.setFromMatrixPosition(I.matrixWorld),n.setFromMatrixPosition(I.target.matrixWorld),_.direction.sub(n),_.direction.transformDirection(E),d++}else if(I.isSpotLight){const _=i.spot[f];_.position.setFromMatrixPosition(I.matrixWorld),_.position.applyMatrix4(E),_.direction.setFromMatrixPosition(I.matrixWorld),n.setFromMatrixPosition(I.target.matrixWorld),_.direction.sub(n),_.direction.transformDirection(E),f++}else if(I.isRectAreaLight){const _=i.rectArea[m];_.position.setFromMatrixPosition(I.matrixWorld),_.position.applyMatrix4(E),o.identity(),r.copy(I.matrixWorld),r.premultiply(E),o.extractRotation(r),_.halfWidth.set(I.width*.5,0,0),_.halfHeight.set(0,I.height*.5,0),_.halfWidth.applyMatrix4(o),_.halfHeight.applyMatrix4(o),m++}else if(I.isPointLight){const _=i.point[u];_.position.setFromMatrixPosition(I.matrixWorld),_.position.applyMatrix4(E),u++}else if(I.isHemisphereLight){const _=i.hemi[g];_.direction.setFromMatrixPosition(I.matrixWorld),_.direction.transformDirection(E),g++}}}return{setup:a,setupView:l,state:i}}function T0(s){const e=new OS(s),t=[],i=[];function n(h){c.camera=h,t.length=0,i.length=0}function r(h){t.push(h)}function o(h){i.push(h)}function a(){e.setup(t)}function l(h){e.setupView(t,h)}const c={lightsArray:t,shadowsArray:i,camera:null,lights:e,transmissionRenderTarget:{}};return{init:n,state:c,setupLights:a,setupLightsView:l,pushLight:r,pushShadow:o}}function LS(s){let e=new WeakMap;function t(n,r=0){const o=e.get(n);let a;return o===void 0?(a=new T0(s),e.set(n,[a])):r>=o.length?(a=new T0(s),o.push(a)):a=o[r],a}function i(){e=new WeakMap}return{get:t,dispose:i}}const DS=`void main() {
	gl_Position = vec4( position, 1.0 );
}`,NS=`uniform sampler2D shadow_pass;
uniform vec2 resolution;
uniform float radius;
#include <packing>
void main() {
	const float samples = float( VSM_SAMPLES );
	float mean = 0.0;
	float squared_mean = 0.0;
	float uvStride = samples <= 1.0 ? 0.0 : 2.0 / ( samples - 1.0 );
	float uvStart = samples <= 1.0 ? 0.0 : - 1.0;
	for ( float i = 0.0; i < samples; i ++ ) {
		float uvOffset = uvStart + i * uvStride;
		#ifdef HORIZONTAL_PASS
			vec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( uvOffset, 0.0 ) * radius ) / resolution ) );
			mean += distribution.x;
			squared_mean += distribution.y * distribution.y + distribution.x * distribution.x;
		#else
			float depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, uvOffset ) * radius ) / resolution ) );
			mean += depth;
			squared_mean += depth * depth;
		#endif
	}
	mean = mean / samples;
	squared_mean = squared_mean / samples;
	float std_dev = sqrt( squared_mean - mean * mean );
	gl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );
}`;function US(s,e,t){let i=new ZI;const n=new Oe,r=new Oe,o=new ct,a=new Dm({depthPacking:By}),l=new lC,c={},h=t.maxTextureSize,d={[pn]:_i,[_i]:pn,[Ai]:Ai},u=new Tt({defines:{VSM_SAMPLES:8},uniforms:{shadow_pass:{value:null},resolution:{value:new Oe},radius:{value:4}},vertexShader:DS,fragmentShader:NS}),f=u.clone();f.defines.HORIZONTAL_PASS=1;const m=new We;m.setAttribute("position",new at(new Float32Array([-1,-1,.5,3,-1,.5,-1,3,.5]),3));const g=new Te(m,u),E=this;this.enabled=!1,this.autoUpdate=!0,this.needsUpdate=!1,this.type=wI;let p=this.type;this.render=function(T,w,A){if(E.enabled===!1||E.autoUpdate===!1&&E.needsUpdate===!1||T.length===0)return;const y=s.getRenderTarget(),C=s.getActiveCubeFace(),M=s.getActiveMipmapLevel(),R=s.state;R.setBlending(gs),R.buffers.color.setClear(1,1,1,1),R.buffers.depth.setTest(!0),R.setScissorTest(!1);const L=p!==is&&this.type===is,S=p===is&&this.type!==is;for(let U=0,z=T.length;U<z;U++){const k=T[U],H=k.shadow;if(H===void 0){console.warn("THREE.WebGLShadowMap:",k,"has no shadow.");continue}if(H.autoUpdate===!1&&H.needsUpdate===!1)continue;n.copy(H.mapSize);const Y=H.getFrameExtents();if(n.multiply(Y),r.copy(H.mapSize),(n.x>h||n.y>h)&&(n.x>h&&(r.x=Math.floor(h/Y.x),n.x=r.x*Y.x,H.mapSize.x=r.x),n.y>h&&(r.y=Math.floor(h/Y.y),n.y=r.y*Y.y,H.mapSize.y=r.y)),H.map===null||L===!0||S===!0){const j=this.type!==is?{minFilter:Ct,magFilter:Ct}:{};H.map!==null&&H.map.dispose(),H.map=new Nt(n.x,n.y,j),H.map.texture.name=k.name+".shadowMap",H.camera.updateProjectionMatrix()}s.setRenderTarget(H.map),s.clear();const re=H.getViewportCount();for(let j=0;j<re;j++){const X=H.getViewport(j);o.set(r.x*X.x,r.y*X.y,r.x*X.z,r.y*X.w),R.viewport(o),H.updateMatrices(k,j),i=H.getFrustum(),_(w,A,H.camera,k,this.type)}H.isPointLightShadow!==!0&&this.type===is&&v(H,A),H.needsUpdate=!1}p=this.type,E.needsUpdate=!1,s.setRenderTarget(y,C,M)};function v(T,w){const A=e.update(g);u.defines.VSM_SAMPLES!==T.blurSamples&&(u.defines.VSM_SAMPLES=T.blurSamples,f.defines.VSM_SAMPLES=T.blurSamples,u.needsUpdate=!0,f.needsUpdate=!0),T.mapPass===null&&(T.mapPass=new Nt(n.x,n.y)),u.uniforms.shadow_pass.value=T.map.texture,u.uniforms.resolution.value=T.mapSize,u.uniforms.radius.value=T.radius,s.setRenderTarget(T.mapPass),s.clear(),s.renderBufferDirect(w,null,A,u,g,null),f.uniforms.shadow_pass.value=T.mapPass.texture,f.uniforms.resolution.value=T.mapSize,f.uniforms.radius.value=T.radius,s.setRenderTarget(T.map),s.clear(),s.renderBufferDirect(w,null,A,f,g,null)}function I(T,w,A,y){let C=null;const M=A.isPointLight===!0?T.customDistanceMaterial:T.customDepthMaterial;if(M!==void 0)C=M;else if(C=A.isPointLight===!0?l:a,s.localClippingEnabled&&w.clipShadows===!0&&Array.isArray(w.clippingPlanes)&&w.clippingPlanes.length!==0||w.displacementMap&&w.displacementScale!==0||w.alphaMap&&w.alphaTest>0||w.map&&w.alphaTest>0){const R=C.uuid,L=w.uuid;let S=c[R];S===void 0&&(S={},c[R]=S);let U=S[L];U===void 0&&(U=C.clone(),S[L]=U,w.addEventListener("dispose",b)),C=U}if(C.visible=w.visible,C.wireframe=w.wireframe,y===is?C.side=w.shadowSide!==null?w.shadowSide:w.side:C.side=w.shadowSide!==null?w.shadowSide:d[w.side],C.alphaMap=w.alphaMap,C.alphaTest=w.alphaTest,C.map=w.map,C.clipShadows=w.clipShadows,C.clippingPlanes=w.clippingPlanes,C.clipIntersection=w.clipIntersection,C.displacementMap=w.displacementMap,C.displacementScale=w.displacementScale,C.displacementBias=w.displacementBias,C.wireframeLinewidth=w.wireframeLinewidth,C.linewidth=w.linewidth,A.isPointLight===!0&&C.isMeshDistanceMaterial===!0){const R=s.properties.get(C);R.light=A}return C}function _(T,w,A,y,C){if(T.visible===!1)return;if(T.layers.test(w.layers)&&(T.isMesh||T.isLine||T.isPoints)&&(T.castShadow||T.receiveShadow&&C===is)&&(!T.frustumCulled||i.intersectsObject(T))){T.modelViewMatrix.multiplyMatrices(A.matrixWorldInverse,T.matrixWorld);const L=e.update(T),S=T.material;if(Array.isArray(S)){const U=L.groups;for(let z=0,k=U.length;z<k;z++){const H=U[z],Y=S[H.materialIndex];if(Y&&Y.visible){const re=I(T,Y,y,C);T.onBeforeShadow(s,T,w,A,L,re,H),s.renderBufferDirect(A,null,L,re,T,H),T.onAfterShadow(s,T,w,A,L,re,H)}}}else if(S.visible){const U=I(T,S,y,C);T.onBeforeShadow(s,T,w,A,L,U,null),s.renderBufferDirect(A,null,L,U,T,null),T.onAfterShadow(s,T,w,A,L,U,null)}}const R=T.children;for(let L=0,S=R.length;L<S;L++)_(R[L],w,A,y,C)}function b(T){T.target.removeEventListener("dispose",b);for(const A in c){const y=c[A],C=T.target.uuid;C in y&&(y[C].dispose(),delete y[C])}}}const BS={[If]:_f,[vf]:Tf,[bf]:Cf,[$o]:yf,[_f]:If,[Tf]:vf,[Cf]:bf,[yf]:$o};function zS(s,e){function t(){let J=!1;const Me=new ct;let de=null;const ve=new ct(0,0,0,0);return{setMask:function(Re){de!==Re&&!J&&(s.colorMask(Re,Re,Re,Re),de=Re)},setLocked:function(Re){J=Re},setClear:function(Re,Pe,tt,kt,pi){pi===!0&&(Re*=kt,Pe*=kt,tt*=kt),Me.set(Re,Pe,tt,kt),ve.equals(Me)===!1&&(s.clearColor(Re,Pe,tt,kt),ve.copy(Me))},reset:function(){J=!1,de=null,ve.set(-1,0,0,0)}}}function i(){let J=!1,Me=!1,de=null,ve=null,Re=null;return{setReversed:function(Pe){if(Me!==Pe){const tt=e.get("EXT_clip_control");Pe?tt.clipControlEXT(tt.LOWER_LEFT_EXT,tt.ZERO_TO_ONE_EXT):tt.clipControlEXT(tt.LOWER_LEFT_EXT,tt.NEGATIVE_ONE_TO_ONE_EXT),Me=Pe;const kt=Re;Re=null,this.setClear(kt)}},getReversed:function(){return Me},setTest:function(Pe){Pe?me(s.DEPTH_TEST):ce(s.DEPTH_TEST)},setMask:function(Pe){de!==Pe&&!J&&(s.depthMask(Pe),de=Pe)},setFunc:function(Pe){if(Me&&(Pe=BS[Pe]),ve!==Pe){switch(Pe){case If:s.depthFunc(s.NEVER);break;case _f:s.depthFunc(s.ALWAYS);break;case vf:s.depthFunc(s.LESS);break;case $o:s.depthFunc(s.LEQUAL);break;case bf:s.depthFunc(s.EQUAL);break;case yf:s.depthFunc(s.GEQUAL);break;case Tf:s.depthFunc(s.GREATER);break;case Cf:s.depthFunc(s.NOTEQUAL);break;default:s.depthFunc(s.LEQUAL)}ve=Pe}},setLocked:function(Pe){J=Pe},setClear:function(Pe){Re!==Pe&&(Me&&(Pe=1-Pe),s.clearDepth(Pe),Re=Pe)},reset:function(){J=!1,de=null,ve=null,Re=null,Me=!1}}}function n(){let J=!1,Me=null,de=null,ve=null,Re=null,Pe=null,tt=null,kt=null,pi=null;return{setTest:function(Et){J||(Et?me(s.STENCIL_TEST):ce(s.STENCIL_TEST))},setMask:function(Et){Me!==Et&&!J&&(s.stencilMask(Et),Me=Et)},setFunc:function(Et,mn,jn){(de!==Et||ve!==mn||Re!==jn)&&(s.stencilFunc(Et,mn,jn),de=Et,ve=mn,Re=jn)},setOp:function(Et,mn,jn){(Pe!==Et||tt!==mn||kt!==jn)&&(s.stencilOp(Et,mn,jn),Pe=Et,tt=mn,kt=jn)},setLocked:function(Et){J=Et},setClear:function(Et){pi!==Et&&(s.clearStencil(Et),pi=Et)},reset:function(){J=!1,Me=null,de=null,ve=null,Re=null,Pe=null,tt=null,kt=null,pi=null}}}const r=new t,o=new i,a=new n,l=new WeakMap,c=new WeakMap;let h={},d={},u=new WeakMap,f=[],m=null,g=!1,E=null,p=null,v=null,I=null,_=null,b=null,T=null,w=new Ne(0,0,0),A=0,y=!1,C=null,M=null,R=null,L=null,S=null;const U=s.getParameter(s.MAX_COMBINED_TEXTURE_IMAGE_UNITS);let z=!1,k=0;const H=s.getParameter(s.VERSION);H.indexOf("WebGL")!==-1?(k=parseFloat(/^WebGL (\d)/.exec(H)[1]),z=k>=1):H.indexOf("OpenGL ES")!==-1&&(k=parseFloat(/^OpenGL ES (\d)/.exec(H)[1]),z=k>=2);let Y=null,re={};const j=s.getParameter(s.SCISSOR_BOX),X=s.getParameter(s.VIEWPORT),ue=new ct().fromArray(j),Z=new ct().fromArray(X);function K(J,Me,de,ve){const Re=new Uint8Array(4),Pe=s.createTexture();s.bindTexture(J,Pe),s.texParameteri(J,s.TEXTURE_MIN_FILTER,s.NEAREST),s.texParameteri(J,s.TEXTURE_MAG_FILTER,s.NEAREST);for(let tt=0;tt<de;tt++)J===s.TEXTURE_3D||J===s.TEXTURE_2D_ARRAY?s.texImage3D(Me,0,s.RGBA,1,1,ve,0,s.RGBA,s.UNSIGNED_BYTE,Re):s.texImage2D(Me+tt,0,s.RGBA,1,1,0,s.RGBA,s.UNSIGNED_BYTE,Re);return Pe}const Ie={};Ie[s.TEXTURE_2D]=K(s.TEXTURE_2D,s.TEXTURE_2D,1),Ie[s.TEXTURE_CUBE_MAP]=K(s.TEXTURE_CUBE_MAP,s.TEXTURE_CUBE_MAP_POSITIVE_X,6),Ie[s.TEXTURE_2D_ARRAY]=K(s.TEXTURE_2D_ARRAY,s.TEXTURE_2D_ARRAY,1,1),Ie[s.TEXTURE_3D]=K(s.TEXTURE_3D,s.TEXTURE_3D,1,1),r.setClear(0,0,0,1),o.setClear(1),a.setClear(0),me(s.DEPTH_TEST),o.setFunc($o),Q(!1),G(fg),me(s.CULL_FACE),x(gs);function me(J){h[J]!==!0&&(s.enable(J),h[J]=!0)}function ce(J){h[J]!==!1&&(s.disable(J),h[J]=!1)}function ge(J,Me){return d[J]!==Me?(s.bindFramebuffer(J,Me),d[J]=Me,J===s.DRAW_FRAMEBUFFER&&(d[s.FRAMEBUFFER]=Me),J===s.FRAMEBUFFER&&(d[s.DRAW_FRAMEBUFFER]=Me),!0):!1}function Ee(J,Me){let de=f,ve=!1;if(J){de=u.get(Me),de===void 0&&(de=[],u.set(Me,de));const Re=J.textures;if(de.length!==Re.length||de[0]!==s.COLOR_ATTACHMENT0){for(let Pe=0,tt=Re.length;Pe<tt;Pe++)de[Pe]=s.COLOR_ATTACHMENT0+Pe;de.length=Re.length,ve=!0}}else de[0]!==s.BACK&&(de[0]=s.BACK,ve=!0);ve&&s.drawBuffers(de)}function Se(J){return m!==J?(s.useProgram(J),m=J,!0):!1}const ke={[br]:s.FUNC_ADD,[hy]:s.FUNC_SUBTRACT,[uy]:s.FUNC_REVERSE_SUBTRACT};ke[dy]=s.MIN,ke[fy]=s.MAX;const Ue={[py]:s.ZERO,[my]:s.ONE,[gy]:s.SRC_COLOR,[gf]:s.SRC_ALPHA,[yy]:s.SRC_ALPHA_SATURATE,[vy]:s.DST_COLOR,[Iy]:s.DST_ALPHA,[Ey]:s.ONE_MINUS_SRC_COLOR,[Ef]:s.ONE_MINUS_SRC_ALPHA,[by]:s.ONE_MINUS_DST_COLOR,[_y]:s.ONE_MINUS_DST_ALPHA,[Ty]:s.CONSTANT_COLOR,[Cy]:s.ONE_MINUS_CONSTANT_COLOR,[xy]:s.CONSTANT_ALPHA,[wy]:s.ONE_MINUS_CONSTANT_ALPHA};function x(J,Me,de,ve,Re,Pe,tt,kt,pi,Et){if(J===gs){g===!0&&(ce(s.BLEND),g=!1);return}if(g===!1&&(me(s.BLEND),g=!0),J!==cy){if(J!==E||Et!==y){if((p!==br||_!==br)&&(s.blendEquation(s.FUNC_ADD),p=br,_=br),Et)switch(J){case Zo:s.blendFuncSeparate(s.ONE,s.ONE_MINUS_SRC_ALPHA,s.ONE,s.ONE_MINUS_SRC_ALPHA);break;case pg:s.blendFunc(s.ONE,s.ONE);break;case mg:s.blendFuncSeparate(s.ZERO,s.ONE_MINUS_SRC_COLOR,s.ZERO,s.ONE);break;case gg:s.blendFuncSeparate(s.ZERO,s.SRC_COLOR,s.ZERO,s.SRC_ALPHA);break;default:console.error("THREE.WebGLState: Invalid blending: ",J);break}else switch(J){case Zo:s.blendFuncSeparate(s.SRC_ALPHA,s.ONE_MINUS_SRC_ALPHA,s.ONE,s.ONE_MINUS_SRC_ALPHA);break;case pg:s.blendFunc(s.SRC_ALPHA,s.ONE);break;case mg:s.blendFuncSeparate(s.ZERO,s.ONE_MINUS_SRC_COLOR,s.ZERO,s.ONE);break;case gg:s.blendFunc(s.ZERO,s.SRC_COLOR);break;default:console.error("THREE.WebGLState: Invalid blending: ",J);break}v=null,I=null,b=null,T=null,w.set(0,0,0),A=0,E=J,y=Et}return}Re=Re||Me,Pe=Pe||de,tt=tt||ve,(Me!==p||Re!==_)&&(s.blendEquationSeparate(ke[Me],ke[Re]),p=Me,_=Re),(de!==v||ve!==I||Pe!==b||tt!==T)&&(s.blendFuncSeparate(Ue[de],Ue[ve],Ue[Pe],Ue[tt]),v=de,I=ve,b=Pe,T=tt),(kt.equals(w)===!1||pi!==A)&&(s.blendColor(kt.r,kt.g,kt.b,pi),w.copy(kt),A=pi),E=J,y=!1}function ae(J,Me){J.side===Ai?ce(s.CULL_FACE):me(s.CULL_FACE);let de=J.side===_i;Me&&(de=!de),Q(de),J.blending===Zo&&J.transparent===!1?x(gs):x(J.blending,J.blendEquation,J.blendSrc,J.blendDst,J.blendEquationAlpha,J.blendSrcAlpha,J.blendDstAlpha,J.blendColor,J.blendAlpha,J.premultipliedAlpha),o.setFunc(J.depthFunc),o.setTest(J.depthTest),o.setMask(J.depthWrite),r.setMask(J.colorWrite);const ve=J.stencilWrite;a.setTest(ve),ve&&(a.setMask(J.stencilWriteMask),a.setFunc(J.stencilFunc,J.stencilRef,J.stencilFuncMask),a.setOp(J.stencilFail,J.stencilZFail,J.stencilZPass)),q(J.polygonOffset,J.polygonOffsetFactor,J.polygonOffsetUnits),J.alphaToCoverage===!0?me(s.SAMPLE_ALPHA_TO_COVERAGE):ce(s.SAMPLE_ALPHA_TO_COVERAGE)}function Q(J){C!==J&&(J?s.frontFace(s.CW):s.frontFace(s.CCW),C=J)}function G(J){J!==oy?(me(s.CULL_FACE),J!==M&&(J===fg?s.cullFace(s.BACK):J===ay?s.cullFace(s.FRONT):s.cullFace(s.FRONT_AND_BACK))):ce(s.CULL_FACE),M=J}function B(J){J!==R&&(z&&s.lineWidth(J),R=J)}function q(J,Me,de){J?(me(s.POLYGON_OFFSET_FILL),(L!==Me||S!==de)&&(s.polygonOffset(Me,de),L=Me,S=de)):ce(s.POLYGON_OFFSET_FILL)}function se(J){J?me(s.SCISSOR_TEST):ce(s.SCISSOR_TEST)}function N(J){J===void 0&&(J=s.TEXTURE0+U-1),Y!==J&&(s.activeTexture(J),Y=J)}function O(J,Me,de){de===void 0&&(Y===null?de=s.TEXTURE0+U-1:de=Y);let ve=re[de];ve===void 0&&(ve={type:void 0,texture:void 0},re[de]=ve),(ve.type!==J||ve.texture!==Me)&&(Y!==de&&(s.activeTexture(de),Y=de),s.bindTexture(J,Me||Ie[J]),ve.type=J,ve.texture=Me)}function W(){const J=re[Y];J!==void 0&&J.type!==void 0&&(s.bindTexture(J.type,null),J.type=void 0,J.texture=void 0)}function te(){try{s.compressedTexImage2D(...arguments)}catch(J){console.error("THREE.WebGLState:",J)}}function $(){try{s.compressedTexImage3D(...arguments)}catch(J){console.error("THREE.WebGLState:",J)}}function ne(){try{s.texSubImage2D(...arguments)}catch(J){console.error("THREE.WebGLState:",J)}}function we(){try{s.texSubImage3D(...arguments)}catch(J){console.error("THREE.WebGLState:",J)}}function be(){try{s.compressedTexSubImage2D(...arguments)}catch(J){console.error("THREE.WebGLState:",J)}}function Ae(){try{s.compressedTexSubImage3D(...arguments)}catch(J){console.error("THREE.WebGLState:",J)}}function rt(){try{s.texStorage2D(...arguments)}catch(J){console.error("THREE.WebGLState:",J)}}function ye(){try{s.texStorage3D(...arguments)}catch(J){console.error("THREE.WebGLState:",J)}}function Le(){try{s.texImage2D(...arguments)}catch(J){console.error("THREE.WebGLState:",J)}}function De(){try{s.texImage3D(...arguments)}catch(J){console.error("THREE.WebGLState:",J)}}function Ye(J){ue.equals(J)===!1&&(s.scissor(J.x,J.y,J.z,J.w),ue.copy(J))}function Be(J){Z.equals(J)===!1&&(s.viewport(J.x,J.y,J.z,J.w),Z.copy(J))}function Je(J,Me){let de=c.get(Me);de===void 0&&(de=new WeakMap,c.set(Me,de));let ve=de.get(J);ve===void 0&&(ve=s.getUniformBlockIndex(Me,J.name),de.set(J,ve))}function et(J,Me){const ve=c.get(Me).get(J);l.get(Me)!==ve&&(s.uniformBlockBinding(Me,ve,J.__bindingPointIndex),l.set(Me,ve))}function _t(){s.disable(s.BLEND),s.disable(s.CULL_FACE),s.disable(s.DEPTH_TEST),s.disable(s.POLYGON_OFFSET_FILL),s.disable(s.SCISSOR_TEST),s.disable(s.STENCIL_TEST),s.disable(s.SAMPLE_ALPHA_TO_COVERAGE),s.blendEquation(s.FUNC_ADD),s.blendFunc(s.ONE,s.ZERO),s.blendFuncSeparate(s.ONE,s.ZERO,s.ONE,s.ZERO),s.blendColor(0,0,0,0),s.colorMask(!0,!0,!0,!0),s.clearColor(0,0,0,0),s.depthMask(!0),s.depthFunc(s.LESS),o.setReversed(!1),s.clearDepth(1),s.stencilMask(4294967295),s.stencilFunc(s.ALWAYS,0,4294967295),s.stencilOp(s.KEEP,s.KEEP,s.KEEP),s.clearStencil(0),s.cullFace(s.BACK),s.frontFace(s.CCW),s.polygonOffset(0,0),s.activeTexture(s.TEXTURE0),s.bindFramebuffer(s.FRAMEBUFFER,null),s.bindFramebuffer(s.DRAW_FRAMEBUFFER,null),s.bindFramebuffer(s.READ_FRAMEBUFFER,null),s.useProgram(null),s.lineWidth(1),s.scissor(0,0,s.canvas.width,s.canvas.height),s.viewport(0,0,s.canvas.width,s.canvas.height),h={},Y=null,re={},d={},u=new WeakMap,f=[],m=null,g=!1,E=null,p=null,v=null,I=null,_=null,b=null,T=null,w=new Ne(0,0,0),A=0,y=!1,C=null,M=null,R=null,L=null,S=null,ue.set(0,0,s.canvas.width,s.canvas.height),Z.set(0,0,s.canvas.width,s.canvas.height),r.reset(),o.reset(),a.reset()}return{buffers:{color:r,depth:o,stencil:a},enable:me,disable:ce,bindFramebuffer:ge,drawBuffers:Ee,useProgram:Se,setBlending:x,setMaterial:ae,setFlipSided:Q,setCullFace:G,setLineWidth:B,setPolygonOffset:q,setScissorTest:se,activeTexture:N,bindTexture:O,unbindTexture:W,compressedTexImage2D:te,compressedTexImage3D:$,texImage2D:Le,texImage3D:De,updateUBOMapping:Je,uniformBlockBinding:et,texStorage2D:rt,texStorage3D:ye,texSubImage2D:ne,texSubImage3D:we,compressedTexSubImage2D:be,compressedTexSubImage3D:Ae,scissor:Ye,viewport:Be,reset:_t}}function VS(s,e,t,i,n,r,o){const a=e.has("WEBGL_multisampled_render_to_texture")?e.get("WEBGL_multisampled_render_to_texture"):null,l=typeof navigator>"u"?!1:/OculusBrowser/g.test(navigator.userAgent),c=new Oe,h=new WeakMap;let d;const u=new WeakMap;let f=!1;try{f=typeof OffscreenCanvas<"u"&&new OffscreenCanvas(1,1).getContext("2d")!==null}catch{}function m(N,O){return f?new OffscreenCanvas(N,O):Qh("canvas")}function g(N,O,W){let te=1;const $=se(N);if(($.width>W||$.height>W)&&(te=W/Math.max($.width,$.height)),te<1)if(typeof HTMLImageElement<"u"&&N instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&N instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&N instanceof ImageBitmap||typeof VideoFrame<"u"&&N instanceof VideoFrame){const ne=Math.floor(te*$.width),we=Math.floor(te*$.height);d===void 0&&(d=m(ne,we));const be=O?m(ne,we):d;return be.width=ne,be.height=we,be.getContext("2d").drawImage(N,0,0,ne,we),console.warn("THREE.WebGLRenderer: Texture has been resized from ("+$.width+"x"+$.height+") to ("+ne+"x"+we+")."),be}else return"data"in N&&console.warn("THREE.WebGLRenderer: Image in DataTexture is too big ("+$.width+"x"+$.height+")."),N;return N}function E(N){return N.generateMipmaps}function p(N){s.generateMipmap(N)}function v(N){return N.isWebGLCubeRenderTarget?s.TEXTURE_CUBE_MAP:N.isWebGL3DRenderTarget?s.TEXTURE_3D:N.isWebGLArrayRenderTarget||N.isCompressedArrayTexture?s.TEXTURE_2D_ARRAY:s.TEXTURE_2D}function I(N,O,W,te,$=!1){if(N!==null){if(s[N]!==void 0)return s[N];console.warn("THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '"+N+"'")}let ne=O;if(O===s.RED&&(W===s.FLOAT&&(ne=s.R32F),W===s.HALF_FLOAT&&(ne=s.R16F),W===s.UNSIGNED_BYTE&&(ne=s.R8)),O===s.RED_INTEGER&&(W===s.UNSIGNED_BYTE&&(ne=s.R8UI),W===s.UNSIGNED_SHORT&&(ne=s.R16UI),W===s.UNSIGNED_INT&&(ne=s.R32UI),W===s.BYTE&&(ne=s.R8I),W===s.SHORT&&(ne=s.R16I),W===s.INT&&(ne=s.R32I)),O===s.RG&&(W===s.FLOAT&&(ne=s.RG32F),W===s.HALF_FLOAT&&(ne=s.RG16F),W===s.UNSIGNED_BYTE&&(ne=s.RG8)),O===s.RG_INTEGER&&(W===s.UNSIGNED_BYTE&&(ne=s.RG8UI),W===s.UNSIGNED_SHORT&&(ne=s.RG16UI),W===s.UNSIGNED_INT&&(ne=s.RG32UI),W===s.BYTE&&(ne=s.RG8I),W===s.SHORT&&(ne=s.RG16I),W===s.INT&&(ne=s.RG32I)),O===s.RGB_INTEGER&&(W===s.UNSIGNED_BYTE&&(ne=s.RGB8UI),W===s.UNSIGNED_SHORT&&(ne=s.RGB16UI),W===s.UNSIGNED_INT&&(ne=s.RGB32UI),W===s.BYTE&&(ne=s.RGB8I),W===s.SHORT&&(ne=s.RGB16I),W===s.INT&&(ne=s.RGB32I)),O===s.RGBA_INTEGER&&(W===s.UNSIGNED_BYTE&&(ne=s.RGBA8UI),W===s.UNSIGNED_SHORT&&(ne=s.RGBA16UI),W===s.UNSIGNED_INT&&(ne=s.RGBA32UI),W===s.BYTE&&(ne=s.RGBA8I),W===s.SHORT&&(ne=s.RGBA16I),W===s.INT&&(ne=s.RGBA32I)),O===s.RGB&&W===s.UNSIGNED_INT_5_9_9_9_REV&&(ne=s.RGB9_E5),O===s.RGBA){const we=$?qh:nt.getTransfer(te);W===s.FLOAT&&(ne=s.RGBA32F),W===s.HALF_FLOAT&&(ne=s.RGBA16F),W===s.UNSIGNED_BYTE&&(ne=we===vt?s.SRGB8_ALPHA8:s.RGBA8),W===s.UNSIGNED_SHORT_4_4_4_4&&(ne=s.RGBA4),W===s.UNSIGNED_SHORT_5_5_5_1&&(ne=s.RGB5_A1)}return(ne===s.R16F||ne===s.R32F||ne===s.RG16F||ne===s.RG32F||ne===s.RGBA16F||ne===s.RGBA32F)&&e.get("EXT_color_buffer_float"),ne}function _(N,O){let W;return N?O===null||O===Yn||O===ia?W=s.DEPTH24_STENCIL8:O===Sn?W=s.DEPTH32F_STENCIL8:O===El&&(W=s.DEPTH24_STENCIL8,console.warn("DepthTexture: 16 bit depth attachment is not supported with stencil. Using 24-bit attachment.")):O===null||O===Yn||O===ia?W=s.DEPTH_COMPONENT24:O===Sn?W=s.DEPTH_COMPONENT32F:O===El&&(W=s.DEPTH_COMPONENT16),W}function b(N,O){return E(N)===!0||N.isFramebufferTexture&&N.minFilter!==Ct&&N.minFilter!==qt?Math.log2(Math.max(O.width,O.height))+1:N.mipmaps!==void 0&&N.mipmaps.length>0?N.mipmaps.length:N.isCompressedTexture&&Array.isArray(N.image)?O.mipmaps.length:1}function T(N){const O=N.target;O.removeEventListener("dispose",T),A(O),O.isVideoTexture&&h.delete(O)}function w(N){const O=N.target;O.removeEventListener("dispose",w),C(O)}function A(N){const O=i.get(N);if(O.__webglInit===void 0)return;const W=N.source,te=u.get(W);if(te){const $=te[O.__cacheKey];$.usedTimes--,$.usedTimes===0&&y(N),Object.keys(te).length===0&&u.delete(W)}i.remove(N)}function y(N){const O=i.get(N);s.deleteTexture(O.__webglTexture);const W=N.source,te=u.get(W);delete te[O.__cacheKey],o.memory.textures--}function C(N){const O=i.get(N);if(N.depthTexture&&(N.depthTexture.dispose(),i.remove(N.depthTexture)),N.isWebGLCubeRenderTarget)for(let te=0;te<6;te++){if(Array.isArray(O.__webglFramebuffer[te]))for(let $=0;$<O.__webglFramebuffer[te].length;$++)s.deleteFramebuffer(O.__webglFramebuffer[te][$]);else s.deleteFramebuffer(O.__webglFramebuffer[te]);O.__webglDepthbuffer&&s.deleteRenderbuffer(O.__webglDepthbuffer[te])}else{if(Array.isArray(O.__webglFramebuffer))for(let te=0;te<O.__webglFramebuffer.length;te++)s.deleteFramebuffer(O.__webglFramebuffer[te]);else s.deleteFramebuffer(O.__webglFramebuffer);if(O.__webglDepthbuffer&&s.deleteRenderbuffer(O.__webglDepthbuffer),O.__webglMultisampledFramebuffer&&s.deleteFramebuffer(O.__webglMultisampledFramebuffer),O.__webglColorRenderbuffer)for(let te=0;te<O.__webglColorRenderbuffer.length;te++)O.__webglColorRenderbuffer[te]&&s.deleteRenderbuffer(O.__webglColorRenderbuffer[te]);O.__webglDepthRenderbuffer&&s.deleteRenderbuffer(O.__webglDepthRenderbuffer)}const W=N.textures;for(let te=0,$=W.length;te<$;te++){const ne=i.get(W[te]);ne.__webglTexture&&(s.deleteTexture(ne.__webglTexture),o.memory.textures--),i.remove(W[te])}i.remove(N)}let M=0;function R(){M=0}function L(){const N=M;return N>=n.maxTextures&&console.warn("THREE.WebGLTextures: Trying to use "+N+" texture units while this GPU supports only "+n.maxTextures),M+=1,N}function S(N){const O=[];return O.push(N.wrapS),O.push(N.wrapT),O.push(N.wrapR||0),O.push(N.magFilter),O.push(N.minFilter),O.push(N.anisotropy),O.push(N.internalFormat),O.push(N.format),O.push(N.type),O.push(N.generateMipmaps),O.push(N.premultiplyAlpha),O.push(N.flipY),O.push(N.unpackAlignment),O.push(N.colorSpace),O.join()}function U(N,O){const W=i.get(N);if(N.isVideoTexture&&B(N),N.isRenderTargetTexture===!1&&N.version>0&&W.__version!==N.version){const te=N.image;if(te===null)console.warn("THREE.WebGLRenderer: Texture marked for update but no image data found.");else if(te.complete===!1)console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete");else{Z(W,N,O);return}}t.bindTexture(s.TEXTURE_2D,W.__webglTexture,s.TEXTURE0+O)}function z(N,O){const W=i.get(N);if(N.version>0&&W.__version!==N.version){Z(W,N,O);return}t.bindTexture(s.TEXTURE_2D_ARRAY,W.__webglTexture,s.TEXTURE0+O)}function k(N,O){const W=i.get(N);if(N.version>0&&W.__version!==N.version){Z(W,N,O);return}t.bindTexture(s.TEXTURE_3D,W.__webglTexture,s.TEXTURE0+O)}function H(N,O){const W=i.get(N);if(N.version>0&&W.__version!==N.version){K(W,N,O);return}t.bindTexture(s.TEXTURE_CUBE_MAP,W.__webglTexture,s.TEXTURE0+O)}const Y={[gl]:s.REPEAT,[Sr]:s.CLAMP_TO_EDGE,[Sf]:s.MIRRORED_REPEAT},re={[Ct]:s.NEAREST,[Ny]:s.NEAREST_MIPMAP_NEAREST,[Wl]:s.NEAREST_MIPMAP_LINEAR,[qt]:s.LINEAR,[Bu]:s.LINEAR_MIPMAP_NEAREST,[Ar]:s.LINEAR_MIPMAP_LINEAR},j={[Vy]:s.NEVER,[Xy]:s.ALWAYS,[ky]:s.LESS,[UI]:s.LEQUAL,[Gy]:s.EQUAL,[Wy]:s.GEQUAL,[Hy]:s.GREATER,[Yy]:s.NOTEQUAL};function X(N,O){if(O.type===Sn&&e.has("OES_texture_float_linear")===!1&&(O.magFilter===qt||O.magFilter===Bu||O.magFilter===Wl||O.magFilter===Ar||O.minFilter===qt||O.minFilter===Bu||O.minFilter===Wl||O.minFilter===Ar)&&console.warn("THREE.WebGLRenderer: Unable to use linear filtering with floating point textures. OES_texture_float_linear not supported on this device."),s.texParameteri(N,s.TEXTURE_WRAP_S,Y[O.wrapS]),s.texParameteri(N,s.TEXTURE_WRAP_T,Y[O.wrapT]),(N===s.TEXTURE_3D||N===s.TEXTURE_2D_ARRAY)&&s.texParameteri(N,s.TEXTURE_WRAP_R,Y[O.wrapR]),s.texParameteri(N,s.TEXTURE_MAG_FILTER,re[O.magFilter]),s.texParameteri(N,s.TEXTURE_MIN_FILTER,re[O.minFilter]),O.compareFunction&&(s.texParameteri(N,s.TEXTURE_COMPARE_MODE,s.COMPARE_REF_TO_TEXTURE),s.texParameteri(N,s.TEXTURE_COMPARE_FUNC,j[O.compareFunction])),e.has("EXT_texture_filter_anisotropic")===!0){if(O.magFilter===Ct||O.minFilter!==Wl&&O.minFilter!==Ar||O.type===Sn&&e.has("OES_texture_float_linear")===!1)return;if(O.anisotropy>1||i.get(O).__currentAnisotropy){const W=e.get("EXT_texture_filter_anisotropic");s.texParameterf(N,W.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(O.anisotropy,n.getMaxAnisotropy())),i.get(O).__currentAnisotropy=O.anisotropy}}}function ue(N,O){let W=!1;N.__webglInit===void 0&&(N.__webglInit=!0,O.addEventListener("dispose",T));const te=O.source;let $=u.get(te);$===void 0&&($={},u.set(te,$));const ne=S(O);if(ne!==N.__cacheKey){$[ne]===void 0&&($[ne]={texture:s.createTexture(),usedTimes:0},o.memory.textures++,W=!0),$[ne].usedTimes++;const we=$[N.__cacheKey];we!==void 0&&($[N.__cacheKey].usedTimes--,we.usedTimes===0&&y(O)),N.__cacheKey=ne,N.__webglTexture=$[ne].texture}return W}function Z(N,O,W){let te=s.TEXTURE_2D;(O.isDataArrayTexture||O.isCompressedArrayTexture)&&(te=s.TEXTURE_2D_ARRAY),O.isData3DTexture&&(te=s.TEXTURE_3D);const $=ue(N,O),ne=O.source;t.bindTexture(te,N.__webglTexture,s.TEXTURE0+W);const we=i.get(ne);if(ne.version!==we.__version||$===!0){t.activeTexture(s.TEXTURE0+W);const be=nt.getPrimaries(nt.workingColorSpace),Ae=O.colorSpace===us?null:nt.getPrimaries(O.colorSpace),rt=O.colorSpace===us||be===Ae?s.NONE:s.BROWSER_DEFAULT_WEBGL;s.pixelStorei(s.UNPACK_FLIP_Y_WEBGL,O.flipY),s.pixelStorei(s.UNPACK_PREMULTIPLY_ALPHA_WEBGL,O.premultiplyAlpha),s.pixelStorei(s.UNPACK_ALIGNMENT,O.unpackAlignment),s.pixelStorei(s.UNPACK_COLORSPACE_CONVERSION_WEBGL,rt);let ye=g(O.image,!1,n.maxTextureSize);ye=q(O,ye);const Le=r.convert(O.format,O.colorSpace),De=r.convert(O.type);let Ye=I(O.internalFormat,Le,De,O.colorSpace,O.isVideoTexture);X(te,O);let Be;const Je=O.mipmaps,et=O.isVideoTexture!==!0,_t=we.__version===void 0||$===!0,J=ne.dataReady,Me=b(O,ye);if(O.isDepthTexture)Ye=_(O.format===na,O.type),_t&&(et?t.texStorage2D(s.TEXTURE_2D,1,Ye,ye.width,ye.height):t.texImage2D(s.TEXTURE_2D,0,Ye,ye.width,ye.height,0,Le,De,null));else if(O.isDataTexture)if(Je.length>0){et&&_t&&t.texStorage2D(s.TEXTURE_2D,Me,Ye,Je[0].width,Je[0].height);for(let de=0,ve=Je.length;de<ve;de++)Be=Je[de],et?J&&t.texSubImage2D(s.TEXTURE_2D,de,0,0,Be.width,Be.height,Le,De,Be.data):t.texImage2D(s.TEXTURE_2D,de,Ye,Be.width,Be.height,0,Le,De,Be.data);O.generateMipmaps=!1}else et?(_t&&t.texStorage2D(s.TEXTURE_2D,Me,Ye,ye.width,ye.height),J&&t.texSubImage2D(s.TEXTURE_2D,0,0,0,ye.width,ye.height,Le,De,ye.data)):t.texImage2D(s.TEXTURE_2D,0,Ye,ye.width,ye.height,0,Le,De,ye.data);else if(O.isCompressedTexture)if(O.isCompressedArrayTexture){et&&_t&&t.texStorage3D(s.TEXTURE_2D_ARRAY,Me,Ye,Je[0].width,Je[0].height,ye.depth);for(let de=0,ve=Je.length;de<ve;de++)if(Be=Je[de],O.format!==Qt)if(Le!==null)if(et){if(J)if(O.layerUpdates.size>0){const Re=$g(Be.width,Be.height,O.format,O.type);for(const Pe of O.layerUpdates){const tt=Be.data.subarray(Pe*Re/Be.data.BYTES_PER_ELEMENT,(Pe+1)*Re/Be.data.BYTES_PER_ELEMENT);t.compressedTexSubImage3D(s.TEXTURE_2D_ARRAY,de,0,0,Pe,Be.width,Be.height,1,Le,tt)}O.clearLayerUpdates()}else t.compressedTexSubImage3D(s.TEXTURE_2D_ARRAY,de,0,0,0,Be.width,Be.height,ye.depth,Le,Be.data)}else t.compressedTexImage3D(s.TEXTURE_2D_ARRAY,de,Ye,Be.width,Be.height,ye.depth,0,Be.data,0,0);else console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()");else et?J&&t.texSubImage3D(s.TEXTURE_2D_ARRAY,de,0,0,0,Be.width,Be.height,ye.depth,Le,De,Be.data):t.texImage3D(s.TEXTURE_2D_ARRAY,de,Ye,Be.width,Be.height,ye.depth,0,Le,De,Be.data)}else{et&&_t&&t.texStorage2D(s.TEXTURE_2D,Me,Ye,Je[0].width,Je[0].height);for(let de=0,ve=Je.length;de<ve;de++)Be=Je[de],O.format!==Qt?Le!==null?et?J&&t.compressedTexSubImage2D(s.TEXTURE_2D,de,0,0,Be.width,Be.height,Le,Be.data):t.compressedTexImage2D(s.TEXTURE_2D,de,Ye,Be.width,Be.height,0,Be.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):et?J&&t.texSubImage2D(s.TEXTURE_2D,de,0,0,Be.width,Be.height,Le,De,Be.data):t.texImage2D(s.TEXTURE_2D,de,Ye,Be.width,Be.height,0,Le,De,Be.data)}else if(O.isDataArrayTexture)if(et){if(_t&&t.texStorage3D(s.TEXTURE_2D_ARRAY,Me,Ye,ye.width,ye.height,ye.depth),J)if(O.layerUpdates.size>0){const de=$g(ye.width,ye.height,O.format,O.type);for(const ve of O.layerUpdates){const Re=ye.data.subarray(ve*de/ye.data.BYTES_PER_ELEMENT,(ve+1)*de/ye.data.BYTES_PER_ELEMENT);t.texSubImage3D(s.TEXTURE_2D_ARRAY,0,0,0,ve,ye.width,ye.height,1,Le,De,Re)}O.clearLayerUpdates()}else t.texSubImage3D(s.TEXTURE_2D_ARRAY,0,0,0,0,ye.width,ye.height,ye.depth,Le,De,ye.data)}else t.texImage3D(s.TEXTURE_2D_ARRAY,0,Ye,ye.width,ye.height,ye.depth,0,Le,De,ye.data);else if(O.isData3DTexture)et?(_t&&t.texStorage3D(s.TEXTURE_3D,Me,Ye,ye.width,ye.height,ye.depth),J&&t.texSubImage3D(s.TEXTURE_3D,0,0,0,0,ye.width,ye.height,ye.depth,Le,De,ye.data)):t.texImage3D(s.TEXTURE_3D,0,Ye,ye.width,ye.height,ye.depth,0,Le,De,ye.data);else if(O.isFramebufferTexture){if(_t)if(et)t.texStorage2D(s.TEXTURE_2D,Me,Ye,ye.width,ye.height);else{let de=ye.width,ve=ye.height;for(let Re=0;Re<Me;Re++)t.texImage2D(s.TEXTURE_2D,Re,Ye,de,ve,0,Le,De,null),de>>=1,ve>>=1}}else if(Je.length>0){if(et&&_t){const de=se(Je[0]);t.texStorage2D(s.TEXTURE_2D,Me,Ye,de.width,de.height)}for(let de=0,ve=Je.length;de<ve;de++)Be=Je[de],et?J&&t.texSubImage2D(s.TEXTURE_2D,de,0,0,Le,De,Be):t.texImage2D(s.TEXTURE_2D,de,Ye,Le,De,Be);O.generateMipmaps=!1}else if(et){if(_t){const de=se(ye);t.texStorage2D(s.TEXTURE_2D,Me,Ye,de.width,de.height)}J&&t.texSubImage2D(s.TEXTURE_2D,0,0,0,Le,De,ye)}else t.texImage2D(s.TEXTURE_2D,0,Ye,Le,De,ye);E(O)&&p(te),we.__version=ne.version,O.onUpdate&&O.onUpdate(O)}N.__version=O.version}function K(N,O,W){if(O.image.length!==6)return;const te=ue(N,O),$=O.source;t.bindTexture(s.TEXTURE_CUBE_MAP,N.__webglTexture,s.TEXTURE0+W);const ne=i.get($);if($.version!==ne.__version||te===!0){t.activeTexture(s.TEXTURE0+W);const we=nt.getPrimaries(nt.workingColorSpace),be=O.colorSpace===us?null:nt.getPrimaries(O.colorSpace),Ae=O.colorSpace===us||we===be?s.NONE:s.BROWSER_DEFAULT_WEBGL;s.pixelStorei(s.UNPACK_FLIP_Y_WEBGL,O.flipY),s.pixelStorei(s.UNPACK_PREMULTIPLY_ALPHA_WEBGL,O.premultiplyAlpha),s.pixelStorei(s.UNPACK_ALIGNMENT,O.unpackAlignment),s.pixelStorei(s.UNPACK_COLORSPACE_CONVERSION_WEBGL,Ae);const rt=O.isCompressedTexture||O.image[0].isCompressedTexture,ye=O.image[0]&&O.image[0].isDataTexture,Le=[];for(let ve=0;ve<6;ve++)!rt&&!ye?Le[ve]=g(O.image[ve],!0,n.maxCubemapSize):Le[ve]=ye?O.image[ve].image:O.image[ve],Le[ve]=q(O,Le[ve]);const De=Le[0],Ye=r.convert(O.format,O.colorSpace),Be=r.convert(O.type),Je=I(O.internalFormat,Ye,Be,O.colorSpace),et=O.isVideoTexture!==!0,_t=ne.__version===void 0||te===!0,J=$.dataReady;let Me=b(O,De);X(s.TEXTURE_CUBE_MAP,O);let de;if(rt){et&&_t&&t.texStorage2D(s.TEXTURE_CUBE_MAP,Me,Je,De.width,De.height);for(let ve=0;ve<6;ve++){de=Le[ve].mipmaps;for(let Re=0;Re<de.length;Re++){const Pe=de[Re];O.format!==Qt?Ye!==null?et?J&&t.compressedTexSubImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+ve,Re,0,0,Pe.width,Pe.height,Ye,Pe.data):t.compressedTexImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+ve,Re,Je,Pe.width,Pe.height,0,Pe.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()"):et?J&&t.texSubImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+ve,Re,0,0,Pe.width,Pe.height,Ye,Be,Pe.data):t.texImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+ve,Re,Je,Pe.width,Pe.height,0,Ye,Be,Pe.data)}}}else{if(de=O.mipmaps,et&&_t){de.length>0&&Me++;const ve=se(Le[0]);t.texStorage2D(s.TEXTURE_CUBE_MAP,Me,Je,ve.width,ve.height)}for(let ve=0;ve<6;ve++)if(ye){et?J&&t.texSubImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+ve,0,0,0,Le[ve].width,Le[ve].height,Ye,Be,Le[ve].data):t.texImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+ve,0,Je,Le[ve].width,Le[ve].height,0,Ye,Be,Le[ve].data);for(let Re=0;Re<de.length;Re++){const tt=de[Re].image[ve].image;et?J&&t.texSubImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+ve,Re+1,0,0,tt.width,tt.height,Ye,Be,tt.data):t.texImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+ve,Re+1,Je,tt.width,tt.height,0,Ye,Be,tt.data)}}else{et?J&&t.texSubImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+ve,0,0,0,Ye,Be,Le[ve]):t.texImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+ve,0,Je,Ye,Be,Le[ve]);for(let Re=0;Re<de.length;Re++){const Pe=de[Re];et?J&&t.texSubImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+ve,Re+1,0,0,Ye,Be,Pe.image[ve]):t.texImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+ve,Re+1,Je,Ye,Be,Pe.image[ve])}}}E(O)&&p(s.TEXTURE_CUBE_MAP),ne.__version=$.version,O.onUpdate&&O.onUpdate(O)}N.__version=O.version}function Ie(N,O,W,te,$,ne){const we=r.convert(W.format,W.colorSpace),be=r.convert(W.type),Ae=I(W.internalFormat,we,be,W.colorSpace),rt=i.get(O),ye=i.get(W);if(ye.__renderTarget=O,!rt.__hasExternalTextures){const Le=Math.max(1,O.width>>ne),De=Math.max(1,O.height>>ne);$===s.TEXTURE_3D||$===s.TEXTURE_2D_ARRAY?t.texImage3D($,ne,Ae,Le,De,O.depth,0,we,be,null):t.texImage2D($,ne,Ae,Le,De,0,we,be,null)}t.bindFramebuffer(s.FRAMEBUFFER,N),G(O)?a.framebufferTexture2DMultisampleEXT(s.FRAMEBUFFER,te,$,ye.__webglTexture,0,Q(O)):($===s.TEXTURE_2D||$>=s.TEXTURE_CUBE_MAP_POSITIVE_X&&$<=s.TEXTURE_CUBE_MAP_NEGATIVE_Z)&&s.framebufferTexture2D(s.FRAMEBUFFER,te,$,ye.__webglTexture,ne),t.bindFramebuffer(s.FRAMEBUFFER,null)}function me(N,O,W){if(s.bindRenderbuffer(s.RENDERBUFFER,N),O.depthBuffer){const te=O.depthTexture,$=te&&te.isDepthTexture?te.type:null,ne=_(O.stencilBuffer,$),we=O.stencilBuffer?s.DEPTH_STENCIL_ATTACHMENT:s.DEPTH_ATTACHMENT,be=Q(O);G(O)?a.renderbufferStorageMultisampleEXT(s.RENDERBUFFER,be,ne,O.width,O.height):W?s.renderbufferStorageMultisample(s.RENDERBUFFER,be,ne,O.width,O.height):s.renderbufferStorage(s.RENDERBUFFER,ne,O.width,O.height),s.framebufferRenderbuffer(s.FRAMEBUFFER,we,s.RENDERBUFFER,N)}else{const te=O.textures;for(let $=0;$<te.length;$++){const ne=te[$],we=r.convert(ne.format,ne.colorSpace),be=r.convert(ne.type),Ae=I(ne.internalFormat,we,be,ne.colorSpace),rt=Q(O);W&&G(O)===!1?s.renderbufferStorageMultisample(s.RENDERBUFFER,rt,Ae,O.width,O.height):G(O)?a.renderbufferStorageMultisampleEXT(s.RENDERBUFFER,rt,Ae,O.width,O.height):s.renderbufferStorage(s.RENDERBUFFER,Ae,O.width,O.height)}}s.bindRenderbuffer(s.RENDERBUFFER,null)}function ce(N,O){if(O&&O.isWebGLCubeRenderTarget)throw new Error("Depth Texture with cube render targets is not supported");if(t.bindFramebuffer(s.FRAMEBUFFER,N),!(O.depthTexture&&O.depthTexture.isDepthTexture))throw new Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");const te=i.get(O.depthTexture);te.__renderTarget=O,(!te.__webglTexture||O.depthTexture.image.width!==O.width||O.depthTexture.image.height!==O.height)&&(O.depthTexture.image.width=O.width,O.depthTexture.image.height=O.height,O.depthTexture.needsUpdate=!0),U(O.depthTexture,0);const $=te.__webglTexture,ne=Q(O);if(O.depthTexture.format===Dr)G(O)?a.framebufferTexture2DMultisampleEXT(s.FRAMEBUFFER,s.DEPTH_ATTACHMENT,s.TEXTURE_2D,$,0,ne):s.framebufferTexture2D(s.FRAMEBUFFER,s.DEPTH_ATTACHMENT,s.TEXTURE_2D,$,0);else if(O.depthTexture.format===na)G(O)?a.framebufferTexture2DMultisampleEXT(s.FRAMEBUFFER,s.DEPTH_STENCIL_ATTACHMENT,s.TEXTURE_2D,$,0,ne):s.framebufferTexture2D(s.FRAMEBUFFER,s.DEPTH_STENCIL_ATTACHMENT,s.TEXTURE_2D,$,0);else throw new Error("Unknown depthTexture format")}function ge(N){const O=i.get(N),W=N.isWebGLCubeRenderTarget===!0;if(O.__boundDepthTexture!==N.depthTexture){const te=N.depthTexture;if(O.__depthDisposeCallback&&O.__depthDisposeCallback(),te){const $=()=>{delete O.__boundDepthTexture,delete O.__depthDisposeCallback,te.removeEventListener("dispose",$)};te.addEventListener("dispose",$),O.__depthDisposeCallback=$}O.__boundDepthTexture=te}if(N.depthTexture&&!O.__autoAllocateDepthBuffer){if(W)throw new Error("target.depthTexture not supported in Cube render targets");ce(O.__webglFramebuffer,N)}else if(W){O.__webglDepthbuffer=[];for(let te=0;te<6;te++)if(t.bindFramebuffer(s.FRAMEBUFFER,O.__webglFramebuffer[te]),O.__webglDepthbuffer[te]===void 0)O.__webglDepthbuffer[te]=s.createRenderbuffer(),me(O.__webglDepthbuffer[te],N,!1);else{const $=N.stencilBuffer?s.DEPTH_STENCIL_ATTACHMENT:s.DEPTH_ATTACHMENT,ne=O.__webglDepthbuffer[te];s.bindRenderbuffer(s.RENDERBUFFER,ne),s.framebufferRenderbuffer(s.FRAMEBUFFER,$,s.RENDERBUFFER,ne)}}else if(t.bindFramebuffer(s.FRAMEBUFFER,O.__webglFramebuffer),O.__webglDepthbuffer===void 0)O.__webglDepthbuffer=s.createRenderbuffer(),me(O.__webglDepthbuffer,N,!1);else{const te=N.stencilBuffer?s.DEPTH_STENCIL_ATTACHMENT:s.DEPTH_ATTACHMENT,$=O.__webglDepthbuffer;s.bindRenderbuffer(s.RENDERBUFFER,$),s.framebufferRenderbuffer(s.FRAMEBUFFER,te,s.RENDERBUFFER,$)}t.bindFramebuffer(s.FRAMEBUFFER,null)}function Ee(N,O,W){const te=i.get(N);O!==void 0&&Ie(te.__webglFramebuffer,N,N.texture,s.COLOR_ATTACHMENT0,s.TEXTURE_2D,0),W!==void 0&&ge(N)}function Se(N){const O=N.texture,W=i.get(N),te=i.get(O);N.addEventListener("dispose",w);const $=N.textures,ne=N.isWebGLCubeRenderTarget===!0,we=$.length>1;if(we||(te.__webglTexture===void 0&&(te.__webglTexture=s.createTexture()),te.__version=O.version,o.memory.textures++),ne){W.__webglFramebuffer=[];for(let be=0;be<6;be++)if(O.mipmaps&&O.mipmaps.length>0){W.__webglFramebuffer[be]=[];for(let Ae=0;Ae<O.mipmaps.length;Ae++)W.__webglFramebuffer[be][Ae]=s.createFramebuffer()}else W.__webglFramebuffer[be]=s.createFramebuffer()}else{if(O.mipmaps&&O.mipmaps.length>0){W.__webglFramebuffer=[];for(let be=0;be<O.mipmaps.length;be++)W.__webglFramebuffer[be]=s.createFramebuffer()}else W.__webglFramebuffer=s.createFramebuffer();if(we)for(let be=0,Ae=$.length;be<Ae;be++){const rt=i.get($[be]);rt.__webglTexture===void 0&&(rt.__webglTexture=s.createTexture(),o.memory.textures++)}if(N.samples>0&&G(N)===!1){W.__webglMultisampledFramebuffer=s.createFramebuffer(),W.__webglColorRenderbuffer=[],t.bindFramebuffer(s.FRAMEBUFFER,W.__webglMultisampledFramebuffer);for(let be=0;be<$.length;be++){const Ae=$[be];W.__webglColorRenderbuffer[be]=s.createRenderbuffer(),s.bindRenderbuffer(s.RENDERBUFFER,W.__webglColorRenderbuffer[be]);const rt=r.convert(Ae.format,Ae.colorSpace),ye=r.convert(Ae.type),Le=I(Ae.internalFormat,rt,ye,Ae.colorSpace,N.isXRRenderTarget===!0),De=Q(N);s.renderbufferStorageMultisample(s.RENDERBUFFER,De,Le,N.width,N.height),s.framebufferRenderbuffer(s.FRAMEBUFFER,s.COLOR_ATTACHMENT0+be,s.RENDERBUFFER,W.__webglColorRenderbuffer[be])}s.bindRenderbuffer(s.RENDERBUFFER,null),N.depthBuffer&&(W.__webglDepthRenderbuffer=s.createRenderbuffer(),me(W.__webglDepthRenderbuffer,N,!0)),t.bindFramebuffer(s.FRAMEBUFFER,null)}}if(ne){t.bindTexture(s.TEXTURE_CUBE_MAP,te.__webglTexture),X(s.TEXTURE_CUBE_MAP,O);for(let be=0;be<6;be++)if(O.mipmaps&&O.mipmaps.length>0)for(let Ae=0;Ae<O.mipmaps.length;Ae++)Ie(W.__webglFramebuffer[be][Ae],N,O,s.COLOR_ATTACHMENT0,s.TEXTURE_CUBE_MAP_POSITIVE_X+be,Ae);else Ie(W.__webglFramebuffer[be],N,O,s.COLOR_ATTACHMENT0,s.TEXTURE_CUBE_MAP_POSITIVE_X+be,0);E(O)&&p(s.TEXTURE_CUBE_MAP),t.unbindTexture()}else if(we){for(let be=0,Ae=$.length;be<Ae;be++){const rt=$[be],ye=i.get(rt);t.bindTexture(s.TEXTURE_2D,ye.__webglTexture),X(s.TEXTURE_2D,rt),Ie(W.__webglFramebuffer,N,rt,s.COLOR_ATTACHMENT0+be,s.TEXTURE_2D,0),E(rt)&&p(s.TEXTURE_2D)}t.unbindTexture()}else{let be=s.TEXTURE_2D;if((N.isWebGL3DRenderTarget||N.isWebGLArrayRenderTarget)&&(be=N.isWebGL3DRenderTarget?s.TEXTURE_3D:s.TEXTURE_2D_ARRAY),t.bindTexture(be,te.__webglTexture),X(be,O),O.mipmaps&&O.mipmaps.length>0)for(let Ae=0;Ae<O.mipmaps.length;Ae++)Ie(W.__webglFramebuffer[Ae],N,O,s.COLOR_ATTACHMENT0,be,Ae);else Ie(W.__webglFramebuffer,N,O,s.COLOR_ATTACHMENT0,be,0);E(O)&&p(be),t.unbindTexture()}N.depthBuffer&&ge(N)}function ke(N){const O=N.textures;for(let W=0,te=O.length;W<te;W++){const $=O[W];if(E($)){const ne=v(N),we=i.get($).__webglTexture;t.bindTexture(ne,we),p(ne),t.unbindTexture()}}}const Ue=[],x=[];function ae(N){if(N.samples>0){if(G(N)===!1){const O=N.textures,W=N.width,te=N.height;let $=s.COLOR_BUFFER_BIT;const ne=N.stencilBuffer?s.DEPTH_STENCIL_ATTACHMENT:s.DEPTH_ATTACHMENT,we=i.get(N),be=O.length>1;if(be)for(let Ae=0;Ae<O.length;Ae++)t.bindFramebuffer(s.FRAMEBUFFER,we.__webglMultisampledFramebuffer),s.framebufferRenderbuffer(s.FRAMEBUFFER,s.COLOR_ATTACHMENT0+Ae,s.RENDERBUFFER,null),t.bindFramebuffer(s.FRAMEBUFFER,we.__webglFramebuffer),s.framebufferTexture2D(s.DRAW_FRAMEBUFFER,s.COLOR_ATTACHMENT0+Ae,s.TEXTURE_2D,null,0);t.bindFramebuffer(s.READ_FRAMEBUFFER,we.__webglMultisampledFramebuffer),t.bindFramebuffer(s.DRAW_FRAMEBUFFER,we.__webglFramebuffer);for(let Ae=0;Ae<O.length;Ae++){if(N.resolveDepthBuffer&&(N.depthBuffer&&($|=s.DEPTH_BUFFER_BIT),N.stencilBuffer&&N.resolveStencilBuffer&&($|=s.STENCIL_BUFFER_BIT)),be){s.framebufferRenderbuffer(s.READ_FRAMEBUFFER,s.COLOR_ATTACHMENT0,s.RENDERBUFFER,we.__webglColorRenderbuffer[Ae]);const rt=i.get(O[Ae]).__webglTexture;s.framebufferTexture2D(s.DRAW_FRAMEBUFFER,s.COLOR_ATTACHMENT0,s.TEXTURE_2D,rt,0)}s.blitFramebuffer(0,0,W,te,0,0,W,te,$,s.NEAREST),l===!0&&(Ue.length=0,x.length=0,Ue.push(s.COLOR_ATTACHMENT0+Ae),N.depthBuffer&&N.resolveDepthBuffer===!1&&(Ue.push(ne),x.push(ne),s.invalidateFramebuffer(s.DRAW_FRAMEBUFFER,x)),s.invalidateFramebuffer(s.READ_FRAMEBUFFER,Ue))}if(t.bindFramebuffer(s.READ_FRAMEBUFFER,null),t.bindFramebuffer(s.DRAW_FRAMEBUFFER,null),be)for(let Ae=0;Ae<O.length;Ae++){t.bindFramebuffer(s.FRAMEBUFFER,we.__webglMultisampledFramebuffer),s.framebufferRenderbuffer(s.FRAMEBUFFER,s.COLOR_ATTACHMENT0+Ae,s.RENDERBUFFER,we.__webglColorRenderbuffer[Ae]);const rt=i.get(O[Ae]).__webglTexture;t.bindFramebuffer(s.FRAMEBUFFER,we.__webglFramebuffer),s.framebufferTexture2D(s.DRAW_FRAMEBUFFER,s.COLOR_ATTACHMENT0+Ae,s.TEXTURE_2D,rt,0)}t.bindFramebuffer(s.DRAW_FRAMEBUFFER,we.__webglMultisampledFramebuffer)}else if(N.depthBuffer&&N.resolveDepthBuffer===!1&&l){const O=N.stencilBuffer?s.DEPTH_STENCIL_ATTACHMENT:s.DEPTH_ATTACHMENT;s.invalidateFramebuffer(s.DRAW_FRAMEBUFFER,[O])}}}function Q(N){return Math.min(n.maxSamples,N.samples)}function G(N){const O=i.get(N);return N.samples>0&&e.has("WEBGL_multisampled_render_to_texture")===!0&&O.__useRenderToTexture!==!1}function B(N){const O=o.render.frame;h.get(N)!==O&&(h.set(N,O),N.update())}function q(N,O){const W=N.colorSpace,te=N.format,$=N.type;return N.isCompressedTexture===!0||N.isVideoTexture===!0||W!==sa&&W!==us&&(nt.getTransfer(W)===vt?(te!==Qt||$!==Cs)&&console.warn("THREE.WebGLTextures: sRGB encoded textures have to use RGBAFormat and UnsignedByteType."):console.error("THREE.WebGLTextures: Unsupported texture color space:",W)),O}function se(N){return typeof HTMLImageElement<"u"&&N instanceof HTMLImageElement?(c.width=N.naturalWidth||N.width,c.height=N.naturalHeight||N.height):typeof VideoFrame<"u"&&N instanceof VideoFrame?(c.width=N.displayWidth,c.height=N.displayHeight):(c.width=N.width,c.height=N.height),c}this.allocateTextureUnit=L,this.resetTextureUnits=R,this.setTexture2D=U,this.setTexture2DArray=z,this.setTexture3D=k,this.setTextureCube=H,this.rebindTextures=Ee,this.setupRenderTarget=Se,this.updateRenderTargetMipmap=ke,this.updateMultisampleRenderTarget=ae,this.setupDepthRenderbuffer=ge,this.setupFrameBufferTexture=Ie,this.useMultisampledRTT=G}function kS(s,e){function t(i,n=us){let r;const o=nt.getTransfer(n);if(i===Cs)return s.UNSIGNED_BYTE;if(i===ym)return s.UNSIGNED_SHORT_4_4_4_4;if(i===Tm)return s.UNSIGNED_SHORT_5_5_5_1;if(i===MI)return s.UNSIGNED_INT_5_9_9_9_REV;if(i===AI)return s.BYTE;if(i===RI)return s.SHORT;if(i===El)return s.UNSIGNED_SHORT;if(i===bm)return s.INT;if(i===Yn)return s.UNSIGNED_INT;if(i===Sn)return s.FLOAT;if(i===ki)return s.HALF_FLOAT;if(i===FI)return s.ALPHA;if(i===PI)return s.RGB;if(i===Qt)return s.RGBA;if(i===OI)return s.LUMINANCE;if(i===LI)return s.LUMINANCE_ALPHA;if(i===Dr)return s.DEPTH_COMPONENT;if(i===na)return s.DEPTH_STENCIL;if(i===Iu)return s.RED;if(i===Cm)return s.RED_INTEGER;if(i===DI)return s.RG;if(i===xm)return s.RG_INTEGER;if(i===wm)return s.RGBA_INTEGER;if(i===Fh||i===Ph||i===Oh||i===Lh)if(o===vt)if(r=e.get("WEBGL_compressed_texture_s3tc_srgb"),r!==null){if(i===Fh)return r.COMPRESSED_SRGB_S3TC_DXT1_EXT;if(i===Ph)return r.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT;if(i===Oh)return r.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT;if(i===Lh)return r.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT}else return null;else if(r=e.get("WEBGL_compressed_texture_s3tc"),r!==null){if(i===Fh)return r.COMPRESSED_RGB_S3TC_DXT1_EXT;if(i===Ph)return r.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(i===Oh)return r.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(i===Lh)return r.COMPRESSED_RGBA_S3TC_DXT5_EXT}else return null;if(i===Af||i===Rf||i===Mf||i===Ff)if(r=e.get("WEBGL_compressed_texture_pvrtc"),r!==null){if(i===Af)return r.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(i===Rf)return r.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(i===Mf)return r.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(i===Ff)return r.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}else return null;if(i===Pf||i===Of||i===Lf)if(r=e.get("WEBGL_compressed_texture_etc"),r!==null){if(i===Pf||i===Of)return o===vt?r.COMPRESSED_SRGB8_ETC2:r.COMPRESSED_RGB8_ETC2;if(i===Lf)return o===vt?r.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC:r.COMPRESSED_RGBA8_ETC2_EAC}else return null;if(i===Df||i===Nf||i===Uf||i===Bf||i===zf||i===Vf||i===kf||i===Gf||i===Hf||i===Yf||i===Wf||i===Xf||i===Zf||i===jf)if(r=e.get("WEBGL_compressed_texture_astc"),r!==null){if(i===Df)return o===vt?r.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR:r.COMPRESSED_RGBA_ASTC_4x4_KHR;if(i===Nf)return o===vt?r.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR:r.COMPRESSED_RGBA_ASTC_5x4_KHR;if(i===Uf)return o===vt?r.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR:r.COMPRESSED_RGBA_ASTC_5x5_KHR;if(i===Bf)return o===vt?r.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR:r.COMPRESSED_RGBA_ASTC_6x5_KHR;if(i===zf)return o===vt?r.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR:r.COMPRESSED_RGBA_ASTC_6x6_KHR;if(i===Vf)return o===vt?r.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR:r.COMPRESSED_RGBA_ASTC_8x5_KHR;if(i===kf)return o===vt?r.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR:r.COMPRESSED_RGBA_ASTC_8x6_KHR;if(i===Gf)return o===vt?r.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR:r.COMPRESSED_RGBA_ASTC_8x8_KHR;if(i===Hf)return o===vt?r.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR:r.COMPRESSED_RGBA_ASTC_10x5_KHR;if(i===Yf)return o===vt?r.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR:r.COMPRESSED_RGBA_ASTC_10x6_KHR;if(i===Wf)return o===vt?r.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR:r.COMPRESSED_RGBA_ASTC_10x8_KHR;if(i===Xf)return o===vt?r.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR:r.COMPRESSED_RGBA_ASTC_10x10_KHR;if(i===Zf)return o===vt?r.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR:r.COMPRESSED_RGBA_ASTC_12x10_KHR;if(i===jf)return o===vt?r.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR:r.COMPRESSED_RGBA_ASTC_12x12_KHR}else return null;if(i===Dh||i===qf||i===Kf)if(r=e.get("EXT_texture_compression_bptc"),r!==null){if(i===Dh)return o===vt?r.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT:r.COMPRESSED_RGBA_BPTC_UNORM_EXT;if(i===qf)return r.COMPRESSED_RGB_BPTC_SIGNED_FLOAT_EXT;if(i===Kf)return r.COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_EXT}else return null;if(i===NI||i===Qf||i===Jf||i===$f)if(r=e.get("EXT_texture_compression_rgtc"),r!==null){if(i===Dh)return r.COMPRESSED_RED_RGTC1_EXT;if(i===Qf)return r.COMPRESSED_SIGNED_RED_RGTC1_EXT;if(i===Jf)return r.COMPRESSED_RED_GREEN_RGTC2_EXT;if(i===$f)return r.COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT}else return null;return i===ia?s.UNSIGNED_INT_24_8:s[i]!==void 0?s[i]:null}return{convert:t}}const GS=`
void main() {

	gl_Position = vec4( position, 1.0 );

}`,HS=`
uniform sampler2DArray depthColor;
uniform float depthWidth;
uniform float depthHeight;

void main() {

	vec2 coord = vec2( gl_FragCoord.x / depthWidth, gl_FragCoord.y / depthHeight );

	if ( coord.x >= 1.0 ) {

		gl_FragDepth = texture( depthColor, vec3( coord.x - 1.0, coord.y, 1 ) ).r;

	} else {

		gl_FragDepth = texture( depthColor, vec3( coord.x, coord.y, 0 ) ).r;

	}

}`;class YS{constructor(){this.texture=null,this.mesh=null,this.depthNear=0,this.depthFar=0}init(e,t,i){if(this.texture===null){const n=new Ri,r=e.properties.get(n);r.__webglTexture=t.texture,(t.depthNear!==i.depthNear||t.depthFar!==i.depthFar)&&(this.depthNear=t.depthNear,this.depthFar=t.depthFar),this.texture=n}}getMesh(e){if(this.texture!==null&&this.mesh===null){const t=e.cameras[0].viewport,i=new Tt({vertexShader:GS,fragmentShader:HS,uniforms:{depthColor:{value:this.texture},depthWidth:{value:t.z},depthHeight:{value:t.w}}});this.mesh=new Te(new er(20,20),i)}return this.mesh}reset(){this.texture=null,this.mesh=null}getDepthTexture(){return this.texture}}class WS extends Gr{constructor(e,t){super();const i=this;let n=null,r=1,o=null,a="local-floor",l=1,c=null,h=null,d=null,u=null,f=null,m=null;const g=new YS,E=t.getContextAttributes();let p=null,v=null;const I=[],_=[],b=new Oe;let T=null;const w=new Gi;w.viewport=new ct;const A=new Gi;A.viewport=new ct;const y=[w,A],C=new hC;let M=null,R=null;this.cameraAutoUpdate=!0,this.enabled=!1,this.isPresenting=!1,this.getController=function(Z){let K=I[Z];return K===void 0&&(K=new sd,I[Z]=K),K.getTargetRaySpace()},this.getControllerGrip=function(Z){let K=I[Z];return K===void 0&&(K=new sd,I[Z]=K),K.getGripSpace()},this.getHand=function(Z){let K=I[Z];return K===void 0&&(K=new sd,I[Z]=K),K.getHandSpace()};function L(Z){const K=_.indexOf(Z.inputSource);if(K===-1)return;const Ie=I[K];Ie!==void 0&&(Ie.update(Z.inputSource,Z.frame,c||o),Ie.dispatchEvent({type:Z.type,data:Z.inputSource}))}function S(){n.removeEventListener("select",L),n.removeEventListener("selectstart",L),n.removeEventListener("selectend",L),n.removeEventListener("squeeze",L),n.removeEventListener("squeezestart",L),n.removeEventListener("squeezeend",L),n.removeEventListener("end",S),n.removeEventListener("inputsourceschange",U);for(let Z=0;Z<I.length;Z++){const K=_[Z];K!==null&&(_[Z]=null,I[Z].disconnect(K))}M=null,R=null,g.reset(),e.setRenderTarget(p),f=null,u=null,d=null,n=null,v=null,ue.stop(),i.isPresenting=!1,e.setPixelRatio(T),e.setSize(b.width,b.height,!1),i.dispatchEvent({type:"sessionend"})}this.setFramebufferScaleFactor=function(Z){r=Z,i.isPresenting===!0&&console.warn("THREE.WebXRManager: Cannot change framebuffer scale while presenting.")},this.setReferenceSpaceType=function(Z){a=Z,i.isPresenting===!0&&console.warn("THREE.WebXRManager: Cannot change reference space type while presenting.")},this.getReferenceSpace=function(){return c||o},this.setReferenceSpace=function(Z){c=Z},this.getBaseLayer=function(){return u!==null?u:f},this.getBinding=function(){return d},this.getFrame=function(){return m},this.getSession=function(){return n},this.setSession=async function(Z){if(n=Z,n!==null){if(p=e.getRenderTarget(),n.addEventListener("select",L),n.addEventListener("selectstart",L),n.addEventListener("selectend",L),n.addEventListener("squeeze",L),n.addEventListener("squeezestart",L),n.addEventListener("squeezeend",L),n.addEventListener("end",S),n.addEventListener("inputsourceschange",U),E.xrCompatible!==!0&&await t.makeXRCompatible(),T=e.getPixelRatio(),e.getSize(b),typeof XRWebGLBinding<"u"&&"createProjectionLayer"in XRWebGLBinding.prototype){let Ie=null,me=null,ce=null;E.depth&&(ce=E.stencil?t.DEPTH24_STENCIL8:t.DEPTH_COMPONENT24,Ie=E.stencil?na:Dr,me=E.stencil?ia:Yn);const ge={colorFormat:t.RGBA8,depthFormat:ce,scaleFactor:r};d=new XRWebGLBinding(n,t),u=d.createProjectionLayer(ge),n.updateRenderState({layers:[u]}),e.setPixelRatio(1),e.setSize(u.textureWidth,u.textureHeight,!1),v=new Nt(u.textureWidth,u.textureHeight,{format:Qt,type:Cs,depthTexture:new rl(u.textureWidth,u.textureHeight,me,void 0,void 0,void 0,void 0,void 0,void 0,Ie),stencilBuffer:E.stencil,colorSpace:e.outputColorSpace,samples:E.antialias?4:0,resolveDepthBuffer:u.ignoreDepthValues===!1,resolveStencilBuffer:u.ignoreDepthValues===!1})}else{const Ie={antialias:E.antialias,alpha:!0,depth:E.depth,stencil:E.stencil,framebufferScaleFactor:r};f=new XRWebGLLayer(n,t,Ie),n.updateRenderState({baseLayer:f}),e.setPixelRatio(1),e.setSize(f.framebufferWidth,f.framebufferHeight,!1),v=new Nt(f.framebufferWidth,f.framebufferHeight,{format:Qt,type:Cs,colorSpace:e.outputColorSpace,stencilBuffer:E.stencil,resolveDepthBuffer:f.ignoreDepthValues===!1,resolveStencilBuffer:f.ignoreDepthValues===!1})}v.isXRRenderTarget=!0,this.setFoveation(l),c=null,o=await n.requestReferenceSpace(a),ue.setContext(n),ue.start(),i.isPresenting=!0,i.dispatchEvent({type:"sessionstart"})}},this.getEnvironmentBlendMode=function(){if(n!==null)return n.environmentBlendMode},this.getDepthTexture=function(){return g.getDepthTexture()};function U(Z){for(let K=0;K<Z.removed.length;K++){const Ie=Z.removed[K],me=_.indexOf(Ie);me>=0&&(_[me]=null,I[me].disconnect(Ie))}for(let K=0;K<Z.added.length;K++){const Ie=Z.added[K];let me=_.indexOf(Ie);if(me===-1){for(let ge=0;ge<I.length;ge++)if(ge>=_.length){_.push(Ie),me=ge;break}else if(_[ge]===null){_[ge]=Ie,me=ge;break}if(me===-1)break}const ce=I[me];ce&&ce.connect(Ie)}}const z=new P,k=new P;function H(Z,K,Ie){z.setFromMatrixPosition(K.matrixWorld),k.setFromMatrixPosition(Ie.matrixWorld);const me=z.distanceTo(k),ce=K.projectionMatrix.elements,ge=Ie.projectionMatrix.elements,Ee=ce[14]/(ce[10]-1),Se=ce[14]/(ce[10]+1),ke=(ce[9]+1)/ce[5],Ue=(ce[9]-1)/ce[5],x=(ce[8]-1)/ce[0],ae=(ge[8]+1)/ge[0],Q=Ee*x,G=Ee*ae,B=me/(-x+ae),q=B*-x;if(K.matrixWorld.decompose(Z.position,Z.quaternion,Z.scale),Z.translateX(q),Z.translateZ(B),Z.matrixWorld.compose(Z.position,Z.quaternion,Z.scale),Z.matrixWorldInverse.copy(Z.matrixWorld).invert(),ce[10]===-1)Z.projectionMatrix.copy(K.projectionMatrix),Z.projectionMatrixInverse.copy(K.projectionMatrixInverse);else{const se=Ee+B,N=Se+B,O=Q-q,W=G+(me-q),te=ke*Se/N*se,$=Ue*Se/N*se;Z.projectionMatrix.makePerspective(O,W,te,$,se,N),Z.projectionMatrixInverse.copy(Z.projectionMatrix).invert()}}function Y(Z,K){K===null?Z.matrixWorld.copy(Z.matrix):Z.matrixWorld.multiplyMatrices(K.matrixWorld,Z.matrix),Z.matrixWorldInverse.copy(Z.matrixWorld).invert()}this.updateCamera=function(Z){if(n===null)return;let K=Z.near,Ie=Z.far;g.texture!==null&&(g.depthNear>0&&(K=g.depthNear),g.depthFar>0&&(Ie=g.depthFar)),C.near=A.near=w.near=K,C.far=A.far=w.far=Ie,(M!==C.near||R!==C.far)&&(n.updateRenderState({depthNear:C.near,depthFar:C.far}),M=C.near,R=C.far),w.layers.mask=Z.layers.mask|2,A.layers.mask=Z.layers.mask|4,C.layers.mask=w.layers.mask|A.layers.mask;const me=Z.parent,ce=C.cameras;Y(C,me);for(let ge=0;ge<ce.length;ge++)Y(ce[ge],me);ce.length===2?H(C,w,A):C.projectionMatrix.copy(w.projectionMatrix),re(Z,C,me)};function re(Z,K,Ie){Ie===null?Z.matrix.copy(K.matrixWorld):(Z.matrix.copy(Ie.matrixWorld),Z.matrix.invert(),Z.matrix.multiply(K.matrixWorld)),Z.matrix.decompose(Z.position,Z.quaternion,Z.scale),Z.updateMatrixWorld(!0),Z.projectionMatrix.copy(K.projectionMatrix),Z.projectionMatrixInverse.copy(K.projectionMatrixInverse),Z.isPerspectiveCamera&&(Z.fov=Il*2*Math.atan(1/Z.projectionMatrix.elements[5]),Z.zoom=1)}this.getCamera=function(){return C},this.getFoveation=function(){if(!(u===null&&f===null))return l},this.setFoveation=function(Z){l=Z,u!==null&&(u.fixedFoveation=Z),f!==null&&f.fixedFoveation!==void 0&&(f.fixedFoveation=Z)},this.hasDepthSensing=function(){return g.texture!==null},this.getDepthSensingMesh=function(){return g.getMesh(C)};let j=null;function X(Z,K){if(h=K.getViewerPose(c||o),m=K,h!==null){const Ie=h.views;f!==null&&(e.setRenderTargetFramebuffer(v,f.framebuffer),e.setRenderTarget(v));let me=!1;Ie.length!==C.cameras.length&&(C.cameras.length=0,me=!0);for(let Ee=0;Ee<Ie.length;Ee++){const Se=Ie[Ee];let ke=null;if(f!==null)ke=f.getViewport(Se);else{const x=d.getViewSubImage(u,Se);ke=x.viewport,Ee===0&&(e.setRenderTargetTextures(v,x.colorTexture,x.depthStencilTexture),e.setRenderTarget(v))}let Ue=y[Ee];Ue===void 0&&(Ue=new Gi,Ue.layers.enable(Ee),Ue.viewport=new ct,y[Ee]=Ue),Ue.matrix.fromArray(Se.transform.matrix),Ue.matrix.decompose(Ue.position,Ue.quaternion,Ue.scale),Ue.projectionMatrix.fromArray(Se.projectionMatrix),Ue.projectionMatrixInverse.copy(Ue.projectionMatrix).invert(),Ue.viewport.set(ke.x,ke.y,ke.width,ke.height),Ee===0&&(C.matrix.copy(Ue.matrix),C.matrix.decompose(C.position,C.quaternion,C.scale)),me===!0&&C.cameras.push(Ue)}const ce=n.enabledFeatures;if(ce&&ce.includes("depth-sensing")&&n.depthUsage=="gpu-optimized"&&d){const Ee=d.getDepthInformation(Ie[0]);Ee&&Ee.isValid&&Ee.texture&&g.init(e,Ee,n.renderState)}}for(let Ie=0;Ie<I.length;Ie++){const me=_[Ie],ce=I[Ie];me!==null&&ce!==void 0&&ce.update(me,K,c||o)}j&&j(Z,K),K.detectedPlanes&&i.dispatchEvent({type:"planesdetected",data:K}),m=null}const ue=new t_;ue.setAnimationLoop(X),this.setAnimationLoop=function(Z){j=Z},this.dispose=function(){}}}const cr=new Ki,XS=new _e;function ZS(s,e){function t(E,p){E.matrixAutoUpdate===!0&&E.updateMatrix(),p.value.copy(E.matrix)}function i(E,p){p.color.getRGB(E.fogColor.value,HI(s)),p.isFog?(E.fogNear.value=p.near,E.fogFar.value=p.far):p.isFogExp2&&(E.fogDensity.value=p.density)}function n(E,p,v,I,_){p.isMeshBasicMaterial||p.isMeshLambertMaterial?r(E,p):p.isMeshToonMaterial?(r(E,p),d(E,p)):p.isMeshPhongMaterial?(r(E,p),h(E,p)):p.isMeshStandardMaterial?(r(E,p),u(E,p),p.isMeshPhysicalMaterial&&f(E,p,_)):p.isMeshMatcapMaterial?(r(E,p),m(E,p)):p.isMeshDepthMaterial?r(E,p):p.isMeshDistanceMaterial?(r(E,p),g(E,p)):p.isMeshNormalMaterial?r(E,p):p.isLineBasicMaterial?(o(E,p),p.isLineDashedMaterial&&a(E,p)):p.isPointsMaterial?l(E,p,v,I):p.isSpriteMaterial?c(E,p):p.isShadowMaterial?(E.color.value.copy(p.color),E.opacity.value=p.opacity):p.isShaderMaterial&&(p.uniformsNeedUpdate=!1)}function r(E,p){E.opacity.value=p.opacity,p.color&&E.diffuse.value.copy(p.color),p.emissive&&E.emissive.value.copy(p.emissive).multiplyScalar(p.emissiveIntensity),p.map&&(E.map.value=p.map,t(p.map,E.mapTransform)),p.alphaMap&&(E.alphaMap.value=p.alphaMap,t(p.alphaMap,E.alphaMapTransform)),p.bumpMap&&(E.bumpMap.value=p.bumpMap,t(p.bumpMap,E.bumpMapTransform),E.bumpScale.value=p.bumpScale,p.side===_i&&(E.bumpScale.value*=-1)),p.normalMap&&(E.normalMap.value=p.normalMap,t(p.normalMap,E.normalMapTransform),E.normalScale.value.copy(p.normalScale),p.side===_i&&E.normalScale.value.negate()),p.displacementMap&&(E.displacementMap.value=p.displacementMap,t(p.displacementMap,E.displacementMapTransform),E.displacementScale.value=p.displacementScale,E.displacementBias.value=p.displacementBias),p.emissiveMap&&(E.emissiveMap.value=p.emissiveMap,t(p.emissiveMap,E.emissiveMapTransform)),p.specularMap&&(E.specularMap.value=p.specularMap,t(p.specularMap,E.specularMapTransform)),p.alphaTest>0&&(E.alphaTest.value=p.alphaTest);const v=e.get(p),I=v.envMap,_=v.envMapRotation;I&&(E.envMap.value=I,cr.copy(_),cr.x*=-1,cr.y*=-1,cr.z*=-1,I.isCubeTexture&&I.isRenderTargetTexture===!1&&(cr.y*=-1,cr.z*=-1),E.envMapRotation.value.setFromMatrix4(XS.makeRotationFromEuler(cr)),E.flipEnvMap.value=I.isCubeTexture&&I.isRenderTargetTexture===!1?-1:1,E.reflectivity.value=p.reflectivity,E.ior.value=p.ior,E.refractionRatio.value=p.refractionRatio),p.lightMap&&(E.lightMap.value=p.lightMap,E.lightMapIntensity.value=p.lightMapIntensity,t(p.lightMap,E.lightMapTransform)),p.aoMap&&(E.aoMap.value=p.aoMap,E.aoMapIntensity.value=p.aoMapIntensity,t(p.aoMap,E.aoMapTransform))}function o(E,p){E.diffuse.value.copy(p.color),E.opacity.value=p.opacity,p.map&&(E.map.value=p.map,t(p.map,E.mapTransform))}function a(E,p){E.dashSize.value=p.dashSize,E.totalSize.value=p.dashSize+p.gapSize,E.scale.value=p.scale}function l(E,p,v,I){E.diffuse.value.copy(p.color),E.opacity.value=p.opacity,E.size.value=p.size*v,E.scale.value=I*.5,p.map&&(E.map.value=p.map,t(p.map,E.uvTransform)),p.alphaMap&&(E.alphaMap.value=p.alphaMap,t(p.alphaMap,E.alphaMapTransform)),p.alphaTest>0&&(E.alphaTest.value=p.alphaTest)}function c(E,p){E.diffuse.value.copy(p.color),E.opacity.value=p.opacity,E.rotation.value=p.rotation,p.map&&(E.map.value=p.map,t(p.map,E.mapTransform)),p.alphaMap&&(E.alphaMap.value=p.alphaMap,t(p.alphaMap,E.alphaMapTransform)),p.alphaTest>0&&(E.alphaTest.value=p.alphaTest)}function h(E,p){E.specular.value.copy(p.specular),E.shininess.value=Math.max(p.shininess,1e-4)}function d(E,p){p.gradientMap&&(E.gradientMap.value=p.gradientMap)}function u(E,p){E.metalness.value=p.metalness,p.metalnessMap&&(E.metalnessMap.value=p.metalnessMap,t(p.metalnessMap,E.metalnessMapTransform)),E.roughness.value=p.roughness,p.roughnessMap&&(E.roughnessMap.value=p.roughnessMap,t(p.roughnessMap,E.roughnessMapTransform)),p.envMap&&(E.envMapIntensity.value=p.envMapIntensity)}function f(E,p,v){E.ior.value=p.ior,p.sheen>0&&(E.sheenColor.value.copy(p.sheenColor).multiplyScalar(p.sheen),E.sheenRoughness.value=p.sheenRoughness,p.sheenColorMap&&(E.sheenColorMap.value=p.sheenColorMap,t(p.sheenColorMap,E.sheenColorMapTransform)),p.sheenRoughnessMap&&(E.sheenRoughnessMap.value=p.sheenRoughnessMap,t(p.sheenRoughnessMap,E.sheenRoughnessMapTransform))),p.clearcoat>0&&(E.clearcoat.value=p.clearcoat,E.clearcoatRoughness.value=p.clearcoatRoughness,p.clearcoatMap&&(E.clearcoatMap.value=p.clearcoatMap,t(p.clearcoatMap,E.clearcoatMapTransform)),p.clearcoatRoughnessMap&&(E.clearcoatRoughnessMap.value=p.clearcoatRoughnessMap,t(p.clearcoatRoughnessMap,E.clearcoatRoughnessMapTransform)),p.clearcoatNormalMap&&(E.clearcoatNormalMap.value=p.clearcoatNormalMap,t(p.clearcoatNormalMap,E.clearcoatNormalMapTransform),E.clearcoatNormalScale.value.copy(p.clearcoatNormalScale),p.side===_i&&E.clearcoatNormalScale.value.negate())),p.dispersion>0&&(E.dispersion.value=p.dispersion),p.iridescence>0&&(E.iridescence.value=p.iridescence,E.iridescenceIOR.value=p.iridescenceIOR,E.iridescenceThicknessMinimum.value=p.iridescenceThicknessRange[0],E.iridescenceThicknessMaximum.value=p.iridescenceThicknessRange[1],p.iridescenceMap&&(E.iridescenceMap.value=p.iridescenceMap,t(p.iridescenceMap,E.iridescenceMapTransform)),p.iridescenceThicknessMap&&(E.iridescenceThicknessMap.value=p.iridescenceThicknessMap,t(p.iridescenceThicknessMap,E.iridescenceThicknessMapTransform))),p.transmission>0&&(E.transmission.value=p.transmission,E.transmissionSamplerMap.value=v.texture,E.transmissionSamplerSize.value.set(v.width,v.height),p.transmissionMap&&(E.transmissionMap.value=p.transmissionMap,t(p.transmissionMap,E.transmissionMapTransform)),E.thickness.value=p.thickness,p.thicknessMap&&(E.thicknessMap.value=p.thicknessMap,t(p.thicknessMap,E.thicknessMapTransform)),E.attenuationDistance.value=p.attenuationDistance,E.attenuationColor.value.copy(p.attenuationColor)),p.anisotropy>0&&(E.anisotropyVector.value.set(p.anisotropy*Math.cos(p.anisotropyRotation),p.anisotropy*Math.sin(p.anisotropyRotation)),p.anisotropyMap&&(E.anisotropyMap.value=p.anisotropyMap,t(p.anisotropyMap,E.anisotropyMapTransform))),E.specularIntensity.value=p.specularIntensity,E.specularColor.value.copy(p.specularColor),p.specularColorMap&&(E.specularColorMap.value=p.specularColorMap,t(p.specularColorMap,E.specularColorMapTransform)),p.specularIntensityMap&&(E.specularIntensityMap.value=p.specularIntensityMap,t(p.specularIntensityMap,E.specularIntensityMapTransform))}function m(E,p){p.matcap&&(E.matcap.value=p.matcap)}function g(E,p){const v=e.get(p).light;E.referencePosition.value.setFromMatrixPosition(v.matrixWorld),E.nearDistance.value=v.shadow.camera.near,E.farDistance.value=v.shadow.camera.far}return{refreshFogUniforms:i,refreshMaterialUniforms:n}}function jS(s,e,t,i){let n={},r={},o=[];const a=s.getParameter(s.MAX_UNIFORM_BUFFER_BINDINGS);function l(v,I){const _=I.program;i.uniformBlockBinding(v,_)}function c(v,I){let _=n[v.id];_===void 0&&(m(v),_=h(v),n[v.id]=_,v.addEventListener("dispose",E));const b=I.program;i.updateUBOMapping(v,b);const T=e.render.frame;r[v.id]!==T&&(u(v),r[v.id]=T)}function h(v){const I=d();v.__bindingPointIndex=I;const _=s.createBuffer(),b=v.__size,T=v.usage;return s.bindBuffer(s.UNIFORM_BUFFER,_),s.bufferData(s.UNIFORM_BUFFER,b,T),s.bindBuffer(s.UNIFORM_BUFFER,null),s.bindBufferBase(s.UNIFORM_BUFFER,I,_),_}function d(){for(let v=0;v<a;v++)if(o.indexOf(v)===-1)return o.push(v),v;return console.error("THREE.WebGLRenderer: Maximum number of simultaneously usable uniforms groups reached."),0}function u(v){const I=n[v.id],_=v.uniforms,b=v.__cache;s.bindBuffer(s.UNIFORM_BUFFER,I);for(let T=0,w=_.length;T<w;T++){const A=Array.isArray(_[T])?_[T]:[_[T]];for(let y=0,C=A.length;y<C;y++){const M=A[y];if(f(M,T,y,b)===!0){const R=M.__offset,L=Array.isArray(M.value)?M.value:[M.value];let S=0;for(let U=0;U<L.length;U++){const z=L[U],k=g(z);typeof z=="number"||typeof z=="boolean"?(M.__data[0]=z,s.bufferSubData(s.UNIFORM_BUFFER,R+S,M.__data)):z.isMatrix3?(M.__data[0]=z.elements[0],M.__data[1]=z.elements[1],M.__data[2]=z.elements[2],M.__data[3]=0,M.__data[4]=z.elements[3],M.__data[5]=z.elements[4],M.__data[6]=z.elements[5],M.__data[7]=0,M.__data[8]=z.elements[6],M.__data[9]=z.elements[7],M.__data[10]=z.elements[8],M.__data[11]=0):(z.toArray(M.__data,S),S+=k.storage/Float32Array.BYTES_PER_ELEMENT)}s.bufferSubData(s.UNIFORM_BUFFER,R,M.__data)}}}s.bindBuffer(s.UNIFORM_BUFFER,null)}function f(v,I,_,b){const T=v.value,w=I+"_"+_;if(b[w]===void 0)return typeof T=="number"||typeof T=="boolean"?b[w]=T:b[w]=T.clone(),!0;{const A=b[w];if(typeof T=="number"||typeof T=="boolean"){if(A!==T)return b[w]=T,!0}else if(A.equals(T)===!1)return A.copy(T),!0}return!1}function m(v){const I=v.uniforms;let _=0;const b=16;for(let w=0,A=I.length;w<A;w++){const y=Array.isArray(I[w])?I[w]:[I[w]];for(let C=0,M=y.length;C<M;C++){const R=y[C],L=Array.isArray(R.value)?R.value:[R.value];for(let S=0,U=L.length;S<U;S++){const z=L[S],k=g(z),H=_%b,Y=H%k.boundary,re=H+Y;_+=Y,re!==0&&b-re<k.storage&&(_+=b-re),R.__data=new Float32Array(k.storage/Float32Array.BYTES_PER_ELEMENT),R.__offset=_,_+=k.storage}}}const T=_%b;return T>0&&(_+=b-T),v.__size=_,v.__cache={},this}function g(v){const I={boundary:0,storage:0};return typeof v=="number"||typeof v=="boolean"?(I.boundary=4,I.storage=4):v.isVector2?(I.boundary=8,I.storage=8):v.isVector3||v.isColor?(I.boundary=16,I.storage=12):v.isVector4?(I.boundary=16,I.storage=16):v.isMatrix3?(I.boundary=48,I.storage=48):v.isMatrix4?(I.boundary=64,I.storage=64):v.isTexture?console.warn("THREE.WebGLRenderer: Texture samplers can not be part of an uniforms group."):console.warn("THREE.WebGLRenderer: Unsupported uniform value type.",v),I}function E(v){const I=v.target;I.removeEventListener("dispose",E);const _=o.indexOf(I.__bindingPointIndex);o.splice(_,1),s.deleteBuffer(n[I.id]),delete n[I.id],delete r[I.id]}function p(){for(const v in n)s.deleteBuffer(n[v]);o=[],n={},r={}}return{bind:l,update:c,dispose:p}}class tu{constructor(e={}){const{canvas:t=hT(),context:i=null,depth:n=!0,stencil:r=!1,alpha:o=!1,antialias:a=!1,premultipliedAlpha:l=!0,preserveDrawingBuffer:c=!1,powerPreference:h="default",failIfMajorPerformanceCaveat:d=!1,reverseDepthBuffer:u=!1}=e;this.isWebGLRenderer=!0;let f;if(i!==null){if(typeof WebGLRenderingContext<"u"&&i instanceof WebGLRenderingContext)throw new Error("THREE.WebGLRenderer: WebGL 1 is not supported since r163.");f=i.getContextAttributes().alpha}else f=o;const m=new Uint32Array(4),g=new Int32Array(4);let E=null,p=null;const v=[],I=[];this.domElement=t,this.debug={checkShaderErrors:!0,onShaderError:null},this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.sortObjects=!0,this.clippingPlanes=[],this.localClippingEnabled=!1,this.toneMapping=Es,this.toneMappingExposure=1,this.transmissionResolutionScale=1;const _=this;let b=!1;this._outputColorSpace=tn;let T=0,w=0,A=null,y=-1,C=null;const M=new ct,R=new ct;let L=null;const S=new Ne(0);let U=0,z=t.width,k=t.height,H=1,Y=null,re=null;const j=new ct(0,0,z,k),X=new ct(0,0,z,k);let ue=!1;const Z=new ZI;let K=!1,Ie=!1;const me=new _e,ce=new _e,ge=new P,Ee=new ct,Se={background:null,fog:null,environment:null,overrideMaterial:null,isScene:!0};let ke=!1;function Ue(){return A===null?H:1}let x=i;function ae(V,ee){return t.getContext(V,ee)}try{const V={alpha:!0,depth:n,stencil:r,antialias:a,premultipliedAlpha:l,preserveDrawingBuffer:c,powerPreference:h,failIfMajorPerformanceCaveat:d};if("setAttribute"in t&&t.setAttribute("data-engine",`three.js r${gu}`),t.addEventListener("webglcontextlost",ve,!1),t.addEventListener("webglcontextrestored",Re,!1),t.addEventListener("webglcontextcreationerror",Pe,!1),x===null){const ee="webgl2";if(x=ae(ee,V),x===null)throw ae(ee)?new Error("Error creating WebGL context with your selected attributes."):new Error("Error creating WebGL context.")}}catch(V){throw console.error("THREE.WebGLRenderer: "+V.message),V}let Q,G,B,q,se,N,O,W,te,$,ne,we,be,Ae,rt,ye,Le,De,Ye,Be,Je,et,_t,J;function Me(){Q=new rw(x),Q.init(),et=new kS(x,Q),G=new Jx(x,Q,e,et),B=new zS(x,Q),G.reverseDepthBuffer&&u&&B.buffers.depth.setReversed(!0),q=new lw(x),se=new wS,N=new VS(x,Q,B,se,G,et,q),O=new ew(_),W=new sw(_),te=new pC(x),_t=new Kx(x,te),$=new ow(x,te,q,_t),ne=new hw(x,$,te,q),Ye=new cw(x,G,N),ye=new $x(se),we=new xS(_,O,W,Q,G,_t,ye),be=new ZS(_,se),Ae=new AS,rt=new LS(Q),De=new qx(_,O,W,B,ne,f,l),Le=new US(_,ne,G),J=new jS(x,q,G,B),Be=new Qx(x,Q,q),Je=new aw(x,Q,q),q.programs=we.programs,_.capabilities=G,_.extensions=Q,_.properties=se,_.renderLists=Ae,_.shadowMap=Le,_.state=B,_.info=q}Me();const de=new WS(_,x);this.xr=de,this.getContext=function(){return x},this.getContextAttributes=function(){return x.getContextAttributes()},this.forceContextLoss=function(){const V=Q.get("WEBGL_lose_context");V&&V.loseContext()},this.forceContextRestore=function(){const V=Q.get("WEBGL_lose_context");V&&V.restoreContext()},this.getPixelRatio=function(){return H},this.setPixelRatio=function(V){V!==void 0&&(H=V,this.setSize(z,k,!1))},this.getSize=function(V){return V.set(z,k)},this.setSize=function(V,ee,le=!0){if(de.isPresenting){console.warn("THREE.WebGLRenderer: Can't change size while VR device is presenting.");return}z=V,k=ee,t.width=Math.floor(V*H),t.height=Math.floor(ee*H),le===!0&&(t.style.width=V+"px",t.style.height=ee+"px"),this.setViewport(0,0,V,ee)},this.getDrawingBufferSize=function(V){return V.set(z*H,k*H).floor()},this.setDrawingBufferSize=function(V,ee,le){z=V,k=ee,H=le,t.width=Math.floor(V*le),t.height=Math.floor(ee*le),this.setViewport(0,0,V,ee)},this.getCurrentViewport=function(V){return V.copy(M)},this.getViewport=function(V){return V.copy(j)},this.setViewport=function(V,ee,le,he){V.isVector4?j.set(V.x,V.y,V.z,V.w):j.set(V,ee,le,he),B.viewport(M.copy(j).multiplyScalar(H).round())},this.getScissor=function(V){return V.copy(X)},this.setScissor=function(V,ee,le,he){V.isVector4?X.set(V.x,V.y,V.z,V.w):X.set(V,ee,le,he),B.scissor(R.copy(X).multiplyScalar(H).round())},this.getScissorTest=function(){return ue},this.setScissorTest=function(V){B.setScissorTest(ue=V)},this.setOpaqueSort=function(V){Y=V},this.setTransparentSort=function(V){re=V},this.getClearColor=function(V){return V.copy(De.getClearColor())},this.setClearColor=function(){De.setClearColor(...arguments)},this.getClearAlpha=function(){return De.getClearAlpha()},this.setClearAlpha=function(){De.setClearAlpha(...arguments)},this.clear=function(V=!0,ee=!0,le=!0){let he=0;if(V){let ie=!1;if(A!==null){const Ce=A.texture.format;ie=Ce===wm||Ce===xm||Ce===Cm}if(ie){const Ce=A.texture.type,Fe=Ce===Cs||Ce===Yn||Ce===El||Ce===ia||Ce===ym||Ce===Tm,ze=De.getClearColor(),Ve=De.getClearAlpha(),Qe=ze.r,qe=ze.g,Ge=ze.b;Fe?(m[0]=Qe,m[1]=qe,m[2]=Ge,m[3]=Ve,x.clearBufferuiv(x.COLOR,0,m)):(g[0]=Qe,g[1]=qe,g[2]=Ge,g[3]=Ve,x.clearBufferiv(x.COLOR,0,g))}else he|=x.COLOR_BUFFER_BIT}ee&&(he|=x.DEPTH_BUFFER_BIT),le&&(he|=x.STENCIL_BUFFER_BIT,this.state.buffers.stencil.setMask(4294967295)),x.clear(he)},this.clearColor=function(){this.clear(!0,!1,!1)},this.clearDepth=function(){this.clear(!1,!0,!1)},this.clearStencil=function(){this.clear(!1,!1,!0)},this.dispose=function(){t.removeEventListener("webglcontextlost",ve,!1),t.removeEventListener("webglcontextrestored",Re,!1),t.removeEventListener("webglcontextcreationerror",Pe,!1),De.dispose(),Ae.dispose(),rt.dispose(),se.dispose(),O.dispose(),W.dispose(),ne.dispose(),_t.dispose(),J.dispose(),we.dispose(),de.dispose(),de.removeEventListener("sessionstart",sg),de.removeEventListener("sessionend",rg),ir.stop()};function ve(V){V.preventDefault(),console.log("THREE.WebGLRenderer: Context Lost."),b=!0}function Re(){console.log("THREE.WebGLRenderer: Context Restored."),b=!1;const V=q.autoReset,ee=Le.enabled,le=Le.autoUpdate,he=Le.needsUpdate,ie=Le.type;Me(),q.autoReset=V,Le.enabled=ee,Le.autoUpdate=le,Le.needsUpdate=he,Le.type=ie}function Pe(V){console.error("THREE.WebGLRenderer: A WebGL context could not be created. Reason: ",V.statusMessage)}function tt(V){const ee=V.target;ee.removeEventListener("dispose",tt),kt(ee)}function kt(V){pi(V),se.remove(V)}function pi(V){const ee=se.get(V).programs;ee!==void 0&&(ee.forEach(function(le){we.releaseProgram(le)}),V.isShaderMaterial&&we.releaseShaderCache(V))}this.renderBufferDirect=function(V,ee,le,he,ie,Ce){ee===null&&(ee=Se);const Fe=ie.isMesh&&ie.matrixWorld.determinant()<0,ze=Vb(V,ee,le,he,ie);B.setMaterial(he,Fe);let Ve=le.index,Qe=1;if(he.wireframe===!0){if(Ve=$.getWireframeAttribute(le),Ve===void 0)return;Qe=2}const qe=le.drawRange,Ge=le.attributes.position;let lt=qe.start*Qe,pt=(qe.start+qe.count)*Qe;Ce!==null&&(lt=Math.max(lt,Ce.start*Qe),pt=Math.min(pt,(Ce.start+Ce.count)*Qe)),Ve!==null?(lt=Math.max(lt,0),pt=Math.min(pt,Ve.count)):Ge!=null&&(lt=Math.max(lt,0),pt=Math.min(pt,Ge.count));const Xt=pt-lt;if(Xt<0||Xt===1/0)return;_t.setup(ie,he,ze,le,Ve);let Gt,ht=Be;if(Ve!==null&&(Gt=te.get(Ve),ht=Je,ht.setIndex(Gt)),ie.isMesh)he.wireframe===!0?(B.setLineWidth(he.wireframeLinewidth*Ue()),ht.setMode(x.LINES)):ht.setMode(x.TRIANGLES);else if(ie.isLine){let He=he.linewidth;He===void 0&&(He=1),B.setLineWidth(He*Ue()),ie.isLineSegments?ht.setMode(x.LINES):ie.isLineLoop?ht.setMode(x.LINE_LOOP):ht.setMode(x.LINE_STRIP)}else ie.isPoints?ht.setMode(x.POINTS):ie.isSprite&&ht.setMode(x.TRIANGLES);if(ie.isBatchedMesh)if(ie._multiDrawInstances!==null)Nh("THREE.WebGLRenderer: renderMultiDrawInstances has been deprecated and will be removed in r184. Append to renderMultiDraw arguments and use indirection."),ht.renderMultiDrawInstances(ie._multiDrawStarts,ie._multiDrawCounts,ie._multiDrawCount,ie._multiDrawInstances);else if(Q.get("WEBGL_multi_draw"))ht.renderMultiDraw(ie._multiDrawStarts,ie._multiDrawCounts,ie._multiDrawCount);else{const He=ie._multiDrawStarts,oi=ie._multiDrawCounts,mt=ie._multiDrawCount,gn=Ve?te.get(Ve).bytesPerElement:1,Yr=se.get(he).currentProgram.getUniforms();for(let Ni=0;Ni<mt;Ni++)Yr.setValue(x,"_gl_DrawID",Ni),ht.render(He[Ni]/gn,oi[Ni])}else if(ie.isInstancedMesh)ht.renderInstances(lt,Xt,ie.count);else if(le.isInstancedBufferGeometry){const He=le._maxInstanceCount!==void 0?le._maxInstanceCount:1/0,oi=Math.min(le.instanceCount,He);ht.renderInstances(lt,Xt,oi)}else ht.render(lt,Xt)};function Et(V,ee,le){V.transparent===!0&&V.side===Ai&&V.forceSinglePass===!1?(V.side=_i,V.needsUpdate=!0,Yl(V,ee,le),V.side=pn,V.needsUpdate=!0,Yl(V,ee,le),V.side=Ai):Yl(V,ee,le)}this.compile=function(V,ee,le=null){le===null&&(le=V),p=rt.get(le),p.init(ee),I.push(p),le.traverseVisible(function(ie){ie.isLight&&ie.layers.test(ee.layers)&&(p.pushLight(ie),ie.castShadow&&p.pushShadow(ie))}),V!==le&&V.traverseVisible(function(ie){ie.isLight&&ie.layers.test(ee.layers)&&(p.pushLight(ie),ie.castShadow&&p.pushShadow(ie))}),p.setupLights();const he=new Set;return V.traverse(function(ie){if(!(ie.isMesh||ie.isPoints||ie.isLine||ie.isSprite))return;const Ce=ie.material;if(Ce)if(Array.isArray(Ce))for(let Fe=0;Fe<Ce.length;Fe++){const ze=Ce[Fe];Et(ze,le,ie),he.add(ze)}else Et(Ce,le,ie),he.add(Ce)}),p=I.pop(),he},this.compileAsync=function(V,ee,le=null){const he=this.compile(V,ee,le);return new Promise(ie=>{function Ce(){if(he.forEach(function(Fe){se.get(Fe).currentProgram.isReady()&&he.delete(Fe)}),he.size===0){ie(V);return}setTimeout(Ce,10)}Q.get("KHR_parallel_shader_compile")!==null?Ce():setTimeout(Ce,10)})};let mn=null;function jn(V){mn&&mn(V)}function sg(){ir.stop()}function rg(){ir.start()}const ir=new t_;ir.setAnimationLoop(jn),typeof self<"u"&&ir.setContext(self),this.setAnimationLoop=function(V){mn=V,de.setAnimationLoop(V),V===null?ir.stop():ir.start()},de.addEventListener("sessionstart",sg),de.addEventListener("sessionend",rg),this.render=function(V,ee){if(ee!==void 0&&ee.isCamera!==!0){console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");return}if(b===!0)return;if(V.matrixWorldAutoUpdate===!0&&V.updateMatrixWorld(),ee.parent===null&&ee.matrixWorldAutoUpdate===!0&&ee.updateMatrixWorld(),de.enabled===!0&&de.isPresenting===!0&&(de.cameraAutoUpdate===!0&&de.updateCamera(ee),ee=de.getCamera()),V.isScene===!0&&V.onBeforeRender(_,V,ee,A),p=rt.get(V,I.length),p.init(ee),I.push(p),ce.multiplyMatrices(ee.projectionMatrix,ee.matrixWorldInverse),Z.setFromProjectionMatrix(ce),Ie=this.localClippingEnabled,K=ye.init(this.clippingPlanes,Ie),E=Ae.get(V,v.length),E.init(),v.push(E),de.enabled===!0&&de.isPresenting===!0){const Ce=_.xr.getDepthSensingMesh();Ce!==null&&Nu(Ce,ee,-1/0,_.sortObjects)}Nu(V,ee,0,_.sortObjects),E.finish(),_.sortObjects===!0&&E.sort(Y,re),ke=de.enabled===!1||de.isPresenting===!1||de.hasDepthSensing()===!1,ke&&De.addToRenderList(E,V),this.info.render.frame++,K===!0&&ye.beginShadows();const le=p.state.shadowsArray;Le.render(le,V,ee),K===!0&&ye.endShadows(),this.info.autoReset===!0&&this.info.reset();const he=E.opaque,ie=E.transmissive;if(p.setupLights(),ee.isArrayCamera){const Ce=ee.cameras;if(ie.length>0)for(let Fe=0,ze=Ce.length;Fe<ze;Fe++){const Ve=Ce[Fe];ag(he,ie,V,Ve)}ke&&De.render(V);for(let Fe=0,ze=Ce.length;Fe<ze;Fe++){const Ve=Ce[Fe];og(E,V,Ve,Ve.viewport)}}else ie.length>0&&ag(he,ie,V,ee),ke&&De.render(V),og(E,V,ee);A!==null&&w===0&&(N.updateMultisampleRenderTarget(A),N.updateRenderTargetMipmap(A)),V.isScene===!0&&V.onAfterRender(_,V,ee),_t.resetDefaultState(),y=-1,C=null,I.pop(),I.length>0?(p=I[I.length-1],K===!0&&ye.setGlobalState(_.clippingPlanes,p.state.camera)):p=null,v.pop(),v.length>0?E=v[v.length-1]:E=null};function Nu(V,ee,le,he){if(V.visible===!1)return;if(V.layers.test(ee.layers)){if(V.isGroup)le=V.renderOrder;else if(V.isLOD)V.autoUpdate===!0&&V.update(ee);else if(V.isLight)p.pushLight(V),V.castShadow&&p.pushShadow(V);else if(V.isSprite){if(!V.frustumCulled||Z.intersectsSprite(V)){he&&Ee.setFromMatrixPosition(V.matrixWorld).applyMatrix4(ce);const Fe=ne.update(V),ze=V.material;ze.visible&&E.push(V,Fe,ze,le,Ee.z,null)}}else if((V.isMesh||V.isLine||V.isPoints)&&(!V.frustumCulled||Z.intersectsObject(V))){const Fe=ne.update(V),ze=V.material;if(he&&(V.boundingSphere!==void 0?(V.boundingSphere===null&&V.computeBoundingSphere(),Ee.copy(V.boundingSphere.center)):(Fe.boundingSphere===null&&Fe.computeBoundingSphere(),Ee.copy(Fe.boundingSphere.center)),Ee.applyMatrix4(V.matrixWorld).applyMatrix4(ce)),Array.isArray(ze)){const Ve=Fe.groups;for(let Qe=0,qe=Ve.length;Qe<qe;Qe++){const Ge=Ve[Qe],lt=ze[Ge.materialIndex];lt&&lt.visible&&E.push(V,Fe,lt,le,Ee.z,Ge)}}else ze.visible&&E.push(V,Fe,ze,le,Ee.z,null)}}const Ce=V.children;for(let Fe=0,ze=Ce.length;Fe<ze;Fe++)Nu(Ce[Fe],ee,le,he)}function og(V,ee,le,he){const ie=V.opaque,Ce=V.transmissive,Fe=V.transparent;p.setupLightsView(le),K===!0&&ye.setGlobalState(_.clippingPlanes,le),he&&B.viewport(M.copy(he)),ie.length>0&&Hl(ie,ee,le),Ce.length>0&&Hl(Ce,ee,le),Fe.length>0&&Hl(Fe,ee,le),B.buffers.depth.setTest(!0),B.buffers.depth.setMask(!0),B.buffers.color.setMask(!0),B.setPolygonOffset(!1)}function ag(V,ee,le,he){if((le.isScene===!0?le.overrideMaterial:null)!==null)return;p.state.transmissionRenderTarget[he.id]===void 0&&(p.state.transmissionRenderTarget[he.id]=new Nt(1,1,{generateMipmaps:!0,type:Q.has("EXT_color_buffer_half_float")||Q.has("EXT_color_buffer_float")?ki:Cs,minFilter:Ar,samples:4,stencilBuffer:r,resolveDepthBuffer:!1,resolveStencilBuffer:!1,colorSpace:nt.workingColorSpace}));const Ce=p.state.transmissionRenderTarget[he.id],Fe=he.viewport||M;Ce.setSize(Fe.z*_.transmissionResolutionScale,Fe.w*_.transmissionResolutionScale);const ze=_.getRenderTarget();_.setRenderTarget(Ce),_.getClearColor(S),U=_.getClearAlpha(),U<1&&_.setClearColor(16777215,.5),_.clear(),ke&&De.render(le);const Ve=_.toneMapping;_.toneMapping=Es;const Qe=he.viewport;if(he.viewport!==void 0&&(he.viewport=void 0),p.setupLightsView(he),K===!0&&ye.setGlobalState(_.clippingPlanes,he),Hl(V,le,he),N.updateMultisampleRenderTarget(Ce),N.updateRenderTargetMipmap(Ce),Q.has("WEBGL_multisampled_render_to_texture")===!1){let qe=!1;for(let Ge=0,lt=ee.length;Ge<lt;Ge++){const pt=ee[Ge],Xt=pt.object,Gt=pt.geometry,ht=pt.material,He=pt.group;if(ht.side===Ai&&Xt.layers.test(he.layers)){const oi=ht.side;ht.side=_i,ht.needsUpdate=!0,lg(Xt,le,he,Gt,ht,He),ht.side=oi,ht.needsUpdate=!0,qe=!0}}qe===!0&&(N.updateMultisampleRenderTarget(Ce),N.updateRenderTargetMipmap(Ce))}_.setRenderTarget(ze),_.setClearColor(S,U),Qe!==void 0&&(he.viewport=Qe),_.toneMapping=Ve}function Hl(V,ee,le){const he=ee.isScene===!0?ee.overrideMaterial:null;for(let ie=0,Ce=V.length;ie<Ce;ie++){const Fe=V[ie],ze=Fe.object,Ve=Fe.geometry,Qe=Fe.group;let qe=Fe.material;qe.allowOverride===!0&&he!==null&&(qe=he),ze.layers.test(le.layers)&&lg(ze,ee,le,Ve,qe,Qe)}}function lg(V,ee,le,he,ie,Ce){V.onBeforeRender(_,ee,le,he,ie,Ce),V.modelViewMatrix.multiplyMatrices(le.matrixWorldInverse,V.matrixWorld),V.normalMatrix.getNormalMatrix(V.modelViewMatrix),ie.onBeforeRender(_,ee,le,he,V,Ce),ie.transparent===!0&&ie.side===Ai&&ie.forceSinglePass===!1?(ie.side=_i,ie.needsUpdate=!0,_.renderBufferDirect(le,ee,he,ie,V,Ce),ie.side=pn,ie.needsUpdate=!0,_.renderBufferDirect(le,ee,he,ie,V,Ce),ie.side=Ai):_.renderBufferDirect(le,ee,he,ie,V,Ce),V.onAfterRender(_,ee,le,he,ie,Ce)}function Yl(V,ee,le){ee.isScene!==!0&&(ee=Se);const he=se.get(V),ie=p.state.lights,Ce=p.state.shadowsArray,Fe=ie.state.version,ze=we.getParameters(V,ie.state,Ce,ee,le),Ve=we.getProgramCacheKey(ze);let Qe=he.programs;he.environment=V.isMeshStandardMaterial?ee.environment:null,he.fog=ee.fog,he.envMap=(V.isMeshStandardMaterial?W:O).get(V.envMap||he.environment),he.envMapRotation=he.environment!==null&&V.envMap===null?ee.environmentRotation:V.envMapRotation,Qe===void 0&&(V.addEventListener("dispose",tt),Qe=new Map,he.programs=Qe);let qe=Qe.get(Ve);if(qe!==void 0){if(he.currentProgram===qe&&he.lightsStateVersion===Fe)return hg(V,ze),qe}else ze.uniforms=we.getUniforms(V),V.onBeforeCompile(ze,_),qe=we.acquireProgram(ze,Ve),Qe.set(Ve,qe),he.uniforms=ze.uniforms;const Ge=he.uniforms;return(!V.isShaderMaterial&&!V.isRawShaderMaterial||V.clipping===!0)&&(Ge.clippingPlanes=ye.uniform),hg(V,ze),he.needsLights=Gb(V),he.lightsStateVersion=Fe,he.needsLights&&(Ge.ambientLightColor.value=ie.state.ambient,Ge.lightProbe.value=ie.state.probe,Ge.directionalLights.value=ie.state.directional,Ge.directionalLightShadows.value=ie.state.directionalShadow,Ge.spotLights.value=ie.state.spot,Ge.spotLightShadows.value=ie.state.spotShadow,Ge.rectAreaLights.value=ie.state.rectArea,Ge.ltc_1.value=ie.state.rectAreaLTC1,Ge.ltc_2.value=ie.state.rectAreaLTC2,Ge.pointLights.value=ie.state.point,Ge.pointLightShadows.value=ie.state.pointShadow,Ge.hemisphereLights.value=ie.state.hemi,Ge.directionalShadowMap.value=ie.state.directionalShadowMap,Ge.directionalShadowMatrix.value=ie.state.directionalShadowMatrix,Ge.spotShadowMap.value=ie.state.spotShadowMap,Ge.spotLightMatrix.value=ie.state.spotLightMatrix,Ge.spotLightMap.value=ie.state.spotLightMap,Ge.pointShadowMap.value=ie.state.pointShadowMap,Ge.pointShadowMatrix.value=ie.state.pointShadowMatrix),he.currentProgram=qe,he.uniformsList=null,qe}function cg(V){if(V.uniformsList===null){const ee=V.currentProgram.getUniforms();V.uniformsList=Uh.seqWithValue(ee.seq,V.uniforms)}return V.uniformsList}function hg(V,ee){const le=se.get(V);le.outputColorSpace=ee.outputColorSpace,le.batching=ee.batching,le.batchingColor=ee.batchingColor,le.instancing=ee.instancing,le.instancingColor=ee.instancingColor,le.instancingMorph=ee.instancingMorph,le.skinning=ee.skinning,le.morphTargets=ee.morphTargets,le.morphNormals=ee.morphNormals,le.morphColors=ee.morphColors,le.morphTargetsCount=ee.morphTargetsCount,le.numClippingPlanes=ee.numClippingPlanes,le.numIntersection=ee.numClipIntersection,le.vertexAlphas=ee.vertexAlphas,le.vertexTangents=ee.vertexTangents,le.toneMapping=ee.toneMapping}function Vb(V,ee,le,he,ie){ee.isScene!==!0&&(ee=Se),N.resetTextureUnits();const Ce=ee.fog,Fe=he.isMeshStandardMaterial?ee.environment:null,ze=A===null?_.outputColorSpace:A.isXRRenderTarget===!0?A.texture.colorSpace:sa,Ve=(he.isMeshStandardMaterial?W:O).get(he.envMap||Fe),Qe=he.vertexColors===!0&&!!le.attributes.color&&le.attributes.color.itemSize===4,qe=!!le.attributes.tangent&&(!!he.normalMap||he.anisotropy>0),Ge=!!le.morphAttributes.position,lt=!!le.morphAttributes.normal,pt=!!le.morphAttributes.color;let Xt=Es;he.toneMapped&&(A===null||A.isXRRenderTarget===!0)&&(Xt=_.toneMapping);const Gt=le.morphAttributes.position||le.morphAttributes.normal||le.morphAttributes.color,ht=Gt!==void 0?Gt.length:0,He=se.get(he),oi=p.state.lights;if(K===!0&&(Ie===!0||V!==C)){const bi=V===C&&he.id===y;ye.setState(he,V,bi)}let mt=!1;he.version===He.__version?(He.needsLights&&He.lightsStateVersion!==oi.state.version||He.outputColorSpace!==ze||ie.isBatchedMesh&&He.batching===!1||!ie.isBatchedMesh&&He.batching===!0||ie.isBatchedMesh&&He.batchingColor===!0&&ie.colorTexture===null||ie.isBatchedMesh&&He.batchingColor===!1&&ie.colorTexture!==null||ie.isInstancedMesh&&He.instancing===!1||!ie.isInstancedMesh&&He.instancing===!0||ie.isSkinnedMesh&&He.skinning===!1||!ie.isSkinnedMesh&&He.skinning===!0||ie.isInstancedMesh&&He.instancingColor===!0&&ie.instanceColor===null||ie.isInstancedMesh&&He.instancingColor===!1&&ie.instanceColor!==null||ie.isInstancedMesh&&He.instancingMorph===!0&&ie.morphTexture===null||ie.isInstancedMesh&&He.instancingMorph===!1&&ie.morphTexture!==null||He.envMap!==Ve||he.fog===!0&&He.fog!==Ce||He.numClippingPlanes!==void 0&&(He.numClippingPlanes!==ye.numPlanes||He.numIntersection!==ye.numIntersection)||He.vertexAlphas!==Qe||He.vertexTangents!==qe||He.morphTargets!==Ge||He.morphNormals!==lt||He.morphColors!==pt||He.toneMapping!==Xt||He.morphTargetsCount!==ht)&&(mt=!0):(mt=!0,He.__version=he.version);let gn=He.currentProgram;mt===!0&&(gn=Yl(he,ee,ie));let Yr=!1,Ni=!1,Ia=!1;const At=gn.getUniforms(),Qi=He.uniforms;if(B.useProgram(gn.program)&&(Yr=!0,Ni=!0,Ia=!0),he.id!==y&&(y=he.id,Ni=!0),Yr||C!==V){B.buffers.depth.getReversed()?(me.copy(V.projectionMatrix),dT(me),fT(me),At.setValue(x,"projectionMatrix",me)):At.setValue(x,"projectionMatrix",V.projectionMatrix),At.setValue(x,"viewMatrix",V.matrixWorldInverse);const Pi=At.map.cameraPosition;Pi!==void 0&&Pi.setValue(x,ge.setFromMatrixPosition(V.matrixWorld)),G.logarithmicDepthBuffer&&At.setValue(x,"logDepthBufFC",2/(Math.log(V.far+1)/Math.LN2)),(he.isMeshPhongMaterial||he.isMeshToonMaterial||he.isMeshLambertMaterial||he.isMeshBasicMaterial||he.isMeshStandardMaterial||he.isShaderMaterial)&&At.setValue(x,"isOrthographic",V.isOrthographicCamera===!0),C!==V&&(C=V,Ni=!0,Ia=!0)}if(ie.isSkinnedMesh){At.setOptional(x,ie,"bindMatrix"),At.setOptional(x,ie,"bindMatrixInverse");const bi=ie.skeleton;bi&&(bi.boneTexture===null&&bi.computeBoneTexture(),At.setValue(x,"boneTexture",bi.boneTexture,N))}ie.isBatchedMesh&&(At.setOptional(x,ie,"batchingTexture"),At.setValue(x,"batchingTexture",ie._matricesTexture,N),At.setOptional(x,ie,"batchingIdTexture"),At.setValue(x,"batchingIdTexture",ie._indirectTexture,N),At.setOptional(x,ie,"batchingColorTexture"),ie._colorsTexture!==null&&At.setValue(x,"batchingColorTexture",ie._colorsTexture,N));const Ji=le.morphAttributes;if((Ji.position!==void 0||Ji.normal!==void 0||Ji.color!==void 0)&&Ye.update(ie,le,gn),(Ni||He.receiveShadow!==ie.receiveShadow)&&(He.receiveShadow=ie.receiveShadow,At.setValue(x,"receiveShadow",ie.receiveShadow)),he.isMeshGouraudMaterial&&he.envMap!==null&&(Qi.envMap.value=Ve,Qi.flipEnvMap.value=Ve.isCubeTexture&&Ve.isRenderTargetTexture===!1?-1:1),he.isMeshStandardMaterial&&he.envMap===null&&ee.environment!==null&&(Qi.envMapIntensity.value=ee.environmentIntensity),Ni&&(At.setValue(x,"toneMappingExposure",_.toneMappingExposure),He.needsLights&&kb(Qi,Ia),Ce&&he.fog===!0&&be.refreshFogUniforms(Qi,Ce),be.refreshMaterialUniforms(Qi,he,H,k,p.state.transmissionRenderTarget[V.id]),Uh.upload(x,cg(He),Qi,N)),he.isShaderMaterial&&he.uniformsNeedUpdate===!0&&(Uh.upload(x,cg(He),Qi,N),he.uniformsNeedUpdate=!1),he.isSpriteMaterial&&At.setValue(x,"center",ie.center),At.setValue(x,"modelViewMatrix",ie.modelViewMatrix),At.setValue(x,"normalMatrix",ie.normalMatrix),At.setValue(x,"modelMatrix",ie.matrixWorld),he.isShaderMaterial||he.isRawShaderMaterial){const bi=he.uniformsGroups;for(let Pi=0,Uu=bi.length;Pi<Uu;Pi++){const nr=bi[Pi];J.update(nr,gn),J.bind(nr,gn)}}return gn}function kb(V,ee){V.ambientLightColor.needsUpdate=ee,V.lightProbe.needsUpdate=ee,V.directionalLights.needsUpdate=ee,V.directionalLightShadows.needsUpdate=ee,V.pointLights.needsUpdate=ee,V.pointLightShadows.needsUpdate=ee,V.spotLights.needsUpdate=ee,V.spotLightShadows.needsUpdate=ee,V.rectAreaLights.needsUpdate=ee,V.hemisphereLights.needsUpdate=ee}function Gb(V){return V.isMeshLambertMaterial||V.isMeshToonMaterial||V.isMeshPhongMaterial||V.isMeshStandardMaterial||V.isShadowMaterial||V.isShaderMaterial&&V.lights===!0}this.getActiveCubeFace=function(){return T},this.getActiveMipmapLevel=function(){return w},this.getRenderTarget=function(){return A},this.setRenderTargetTextures=function(V,ee,le){const he=se.get(V);he.__autoAllocateDepthBuffer=V.resolveDepthBuffer===!1,he.__autoAllocateDepthBuffer===!1&&(he.__useRenderToTexture=!1),se.get(V.texture).__webglTexture=ee,se.get(V.depthTexture).__webglTexture=he.__autoAllocateDepthBuffer?void 0:le,he.__hasExternalTextures=!0},this.setRenderTargetFramebuffer=function(V,ee){const le=se.get(V);le.__webglFramebuffer=ee,le.__useDefaultFramebuffer=ee===void 0};const Hb=x.createFramebuffer();this.setRenderTarget=function(V,ee=0,le=0){A=V,T=ee,w=le;let he=!0,ie=null,Ce=!1,Fe=!1;if(V){const Ve=se.get(V);if(Ve.__useDefaultFramebuffer!==void 0)B.bindFramebuffer(x.FRAMEBUFFER,null),he=!1;else if(Ve.__webglFramebuffer===void 0)N.setupRenderTarget(V);else if(Ve.__hasExternalTextures)N.rebindTextures(V,se.get(V.texture).__webglTexture,se.get(V.depthTexture).__webglTexture);else if(V.depthBuffer){const Ge=V.depthTexture;if(Ve.__boundDepthTexture!==Ge){if(Ge!==null&&se.has(Ge)&&(V.width!==Ge.image.width||V.height!==Ge.image.height))throw new Error("WebGLRenderTarget: Attached DepthTexture is initialized to the incorrect size.");N.setupDepthRenderbuffer(V)}}const Qe=V.texture;(Qe.isData3DTexture||Qe.isDataArrayTexture||Qe.isCompressedArrayTexture)&&(Fe=!0);const qe=se.get(V).__webglFramebuffer;V.isWebGLCubeRenderTarget?(Array.isArray(qe[ee])?ie=qe[ee][le]:ie=qe[ee],Ce=!0):V.samples>0&&N.useMultisampledRTT(V)===!1?ie=se.get(V).__webglMultisampledFramebuffer:Array.isArray(qe)?ie=qe[le]:ie=qe,M.copy(V.viewport),R.copy(V.scissor),L=V.scissorTest}else M.copy(j).multiplyScalar(H).floor(),R.copy(X).multiplyScalar(H).floor(),L=ue;if(le!==0&&(ie=Hb),B.bindFramebuffer(x.FRAMEBUFFER,ie)&&he&&B.drawBuffers(V,ie),B.viewport(M),B.scissor(R),B.setScissorTest(L),Ce){const Ve=se.get(V.texture);x.framebufferTexture2D(x.FRAMEBUFFER,x.COLOR_ATTACHMENT0,x.TEXTURE_CUBE_MAP_POSITIVE_X+ee,Ve.__webglTexture,le)}else if(Fe){const Ve=se.get(V.texture),Qe=ee;x.framebufferTextureLayer(x.FRAMEBUFFER,x.COLOR_ATTACHMENT0,Ve.__webglTexture,le,Qe)}else if(V!==null&&le!==0){const Ve=se.get(V.texture);x.framebufferTexture2D(x.FRAMEBUFFER,x.COLOR_ATTACHMENT0,x.TEXTURE_2D,Ve.__webglTexture,le)}y=-1},this.readRenderTargetPixels=function(V,ee,le,he,ie,Ce,Fe){if(!(V&&V.isWebGLRenderTarget)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");return}let ze=se.get(V).__webglFramebuffer;if(V.isWebGLCubeRenderTarget&&Fe!==void 0&&(ze=ze[Fe]),ze){B.bindFramebuffer(x.FRAMEBUFFER,ze);try{const Ve=V.texture,Qe=Ve.format,qe=Ve.type;if(!G.textureFormatReadable(Qe)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");return}if(!G.textureTypeReadable(qe)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");return}ee>=0&&ee<=V.width-he&&le>=0&&le<=V.height-ie&&x.readPixels(ee,le,he,ie,et.convert(Qe),et.convert(qe),Ce)}finally{const Ve=A!==null?se.get(A).__webglFramebuffer:null;B.bindFramebuffer(x.FRAMEBUFFER,Ve)}}},this.readRenderTargetPixelsAsync=async function(V,ee,le,he,ie,Ce,Fe){if(!(V&&V.isWebGLRenderTarget))throw new Error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");let ze=se.get(V).__webglFramebuffer;if(V.isWebGLCubeRenderTarget&&Fe!==void 0&&(ze=ze[Fe]),ze)if(ee>=0&&ee<=V.width-he&&le>=0&&le<=V.height-ie){B.bindFramebuffer(x.FRAMEBUFFER,ze);const Ve=V.texture,Qe=Ve.format,qe=Ve.type;if(!G.textureFormatReadable(Qe))throw new Error("THREE.WebGLRenderer.readRenderTargetPixelsAsync: renderTarget is not in RGBA or implementation defined format.");if(!G.textureTypeReadable(qe))throw new Error("THREE.WebGLRenderer.readRenderTargetPixelsAsync: renderTarget is not in UnsignedByteType or implementation defined type.");const Ge=x.createBuffer();x.bindBuffer(x.PIXEL_PACK_BUFFER,Ge),x.bufferData(x.PIXEL_PACK_BUFFER,Ce.byteLength,x.STREAM_READ),x.readPixels(ee,le,he,ie,et.convert(Qe),et.convert(qe),0);const lt=A!==null?se.get(A).__webglFramebuffer:null;B.bindFramebuffer(x.FRAMEBUFFER,lt);const pt=x.fenceSync(x.SYNC_GPU_COMMANDS_COMPLETE,0);return x.flush(),await uT(x,pt,4),x.bindBuffer(x.PIXEL_PACK_BUFFER,Ge),x.getBufferSubData(x.PIXEL_PACK_BUFFER,0,Ce),x.deleteBuffer(Ge),x.deleteSync(pt),Ce}else throw new Error("THREE.WebGLRenderer.readRenderTargetPixelsAsync: requested read bounds are out of range.")},this.copyFramebufferToTexture=function(V,ee=null,le=0){const he=Math.pow(2,-le),ie=Math.floor(V.image.width*he),Ce=Math.floor(V.image.height*he),Fe=ee!==null?ee.x:0,ze=ee!==null?ee.y:0;N.setTexture2D(V,0),x.copyTexSubImage2D(x.TEXTURE_2D,le,0,0,Fe,ze,ie,Ce),B.unbindTexture()};const Yb=x.createFramebuffer(),Wb=x.createFramebuffer();this.copyTextureToTexture=function(V,ee,le=null,he=null,ie=0,Ce=null){Ce===null&&(ie!==0?(Nh("WebGLRenderer: copyTextureToTexture function signature has changed to support src and dst mipmap levels."),Ce=ie,ie=0):Ce=0);let Fe,ze,Ve,Qe,qe,Ge,lt,pt,Xt;const Gt=V.isCompressedTexture?V.mipmaps[Ce]:V.image;if(le!==null)Fe=le.max.x-le.min.x,ze=le.max.y-le.min.y,Ve=le.isBox3?le.max.z-le.min.z:1,Qe=le.min.x,qe=le.min.y,Ge=le.isBox3?le.min.z:0;else{const Ji=Math.pow(2,-ie);Fe=Math.floor(Gt.width*Ji),ze=Math.floor(Gt.height*Ji),V.isDataArrayTexture?Ve=Gt.depth:V.isData3DTexture?Ve=Math.floor(Gt.depth*Ji):Ve=1,Qe=0,qe=0,Ge=0}he!==null?(lt=he.x,pt=he.y,Xt=he.z):(lt=0,pt=0,Xt=0);const ht=et.convert(ee.format),He=et.convert(ee.type);let oi;ee.isData3DTexture?(N.setTexture3D(ee,0),oi=x.TEXTURE_3D):ee.isDataArrayTexture||ee.isCompressedArrayTexture?(N.setTexture2DArray(ee,0),oi=x.TEXTURE_2D_ARRAY):(N.setTexture2D(ee,0),oi=x.TEXTURE_2D),x.pixelStorei(x.UNPACK_FLIP_Y_WEBGL,ee.flipY),x.pixelStorei(x.UNPACK_PREMULTIPLY_ALPHA_WEBGL,ee.premultiplyAlpha),x.pixelStorei(x.UNPACK_ALIGNMENT,ee.unpackAlignment);const mt=x.getParameter(x.UNPACK_ROW_LENGTH),gn=x.getParameter(x.UNPACK_IMAGE_HEIGHT),Yr=x.getParameter(x.UNPACK_SKIP_PIXELS),Ni=x.getParameter(x.UNPACK_SKIP_ROWS),Ia=x.getParameter(x.UNPACK_SKIP_IMAGES);x.pixelStorei(x.UNPACK_ROW_LENGTH,Gt.width),x.pixelStorei(x.UNPACK_IMAGE_HEIGHT,Gt.height),x.pixelStorei(x.UNPACK_SKIP_PIXELS,Qe),x.pixelStorei(x.UNPACK_SKIP_ROWS,qe),x.pixelStorei(x.UNPACK_SKIP_IMAGES,Ge);const At=V.isDataArrayTexture||V.isData3DTexture,Qi=ee.isDataArrayTexture||ee.isData3DTexture;if(V.isDepthTexture){const Ji=se.get(V),bi=se.get(ee),Pi=se.get(Ji.__renderTarget),Uu=se.get(bi.__renderTarget);B.bindFramebuffer(x.READ_FRAMEBUFFER,Pi.__webglFramebuffer),B.bindFramebuffer(x.DRAW_FRAMEBUFFER,Uu.__webglFramebuffer);for(let nr=0;nr<Ve;nr++)At&&(x.framebufferTextureLayer(x.READ_FRAMEBUFFER,x.COLOR_ATTACHMENT0,se.get(V).__webglTexture,ie,Ge+nr),x.framebufferTextureLayer(x.DRAW_FRAMEBUFFER,x.COLOR_ATTACHMENT0,se.get(ee).__webglTexture,Ce,Xt+nr)),x.blitFramebuffer(Qe,qe,Fe,ze,lt,pt,Fe,ze,x.DEPTH_BUFFER_BIT,x.NEAREST);B.bindFramebuffer(x.READ_FRAMEBUFFER,null),B.bindFramebuffer(x.DRAW_FRAMEBUFFER,null)}else if(ie!==0||V.isRenderTargetTexture||se.has(V)){const Ji=se.get(V),bi=se.get(ee);B.bindFramebuffer(x.READ_FRAMEBUFFER,Yb),B.bindFramebuffer(x.DRAW_FRAMEBUFFER,Wb);for(let Pi=0;Pi<Ve;Pi++)At?x.framebufferTextureLayer(x.READ_FRAMEBUFFER,x.COLOR_ATTACHMENT0,Ji.__webglTexture,ie,Ge+Pi):x.framebufferTexture2D(x.READ_FRAMEBUFFER,x.COLOR_ATTACHMENT0,x.TEXTURE_2D,Ji.__webglTexture,ie),Qi?x.framebufferTextureLayer(x.DRAW_FRAMEBUFFER,x.COLOR_ATTACHMENT0,bi.__webglTexture,Ce,Xt+Pi):x.framebufferTexture2D(x.DRAW_FRAMEBUFFER,x.COLOR_ATTACHMENT0,x.TEXTURE_2D,bi.__webglTexture,Ce),ie!==0?x.blitFramebuffer(Qe,qe,Fe,ze,lt,pt,Fe,ze,x.COLOR_BUFFER_BIT,x.NEAREST):Qi?x.copyTexSubImage3D(oi,Ce,lt,pt,Xt+Pi,Qe,qe,Fe,ze):x.copyTexSubImage2D(oi,Ce,lt,pt,Qe,qe,Fe,ze);B.bindFramebuffer(x.READ_FRAMEBUFFER,null),B.bindFramebuffer(x.DRAW_FRAMEBUFFER,null)}else Qi?V.isDataTexture||V.isData3DTexture?x.texSubImage3D(oi,Ce,lt,pt,Xt,Fe,ze,Ve,ht,He,Gt.data):ee.isCompressedArrayTexture?x.compressedTexSubImage3D(oi,Ce,lt,pt,Xt,Fe,ze,Ve,ht,Gt.data):x.texSubImage3D(oi,Ce,lt,pt,Xt,Fe,ze,Ve,ht,He,Gt):V.isDataTexture?x.texSubImage2D(x.TEXTURE_2D,Ce,lt,pt,Fe,ze,ht,He,Gt.data):V.isCompressedTexture?x.compressedTexSubImage2D(x.TEXTURE_2D,Ce,lt,pt,Gt.width,Gt.height,ht,Gt.data):x.texSubImage2D(x.TEXTURE_2D,Ce,lt,pt,Fe,ze,ht,He,Gt);x.pixelStorei(x.UNPACK_ROW_LENGTH,mt),x.pixelStorei(x.UNPACK_IMAGE_HEIGHT,gn),x.pixelStorei(x.UNPACK_SKIP_PIXELS,Yr),x.pixelStorei(x.UNPACK_SKIP_ROWS,Ni),x.pixelStorei(x.UNPACK_SKIP_IMAGES,Ia),Ce===0&&ee.generateMipmaps&&x.generateMipmap(oi),B.unbindTexture()},this.copyTextureToTexture3D=function(V,ee,le=null,he=null,ie=0){return Nh('WebGLRenderer: copyTextureToTexture3D function has been deprecated. Use "copyTextureToTexture" instead.'),this.copyTextureToTexture(V,ee,le,he,ie)},this.initRenderTarget=function(V){se.get(V).__webglFramebuffer===void 0&&N.setupRenderTarget(V)},this.initTexture=function(V){V.isCubeTexture?N.setTextureCube(V,0):V.isData3DTexture?N.setTexture3D(V,0):V.isDataArrayTexture||V.isCompressedArrayTexture?N.setTexture2DArray(V,0):N.setTexture2D(V,0),B.unbindTexture()},this.resetState=function(){T=0,w=0,A=null,B.reset(),_t.reset()},typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}get coordinateSystem(){return ds}get outputColorSpace(){return this._outputColorSpace}set outputColorSpace(e){this._outputColorSpace=e;const t=this.getContext();t.drawingBufferColorSpace=nt._getDrawingBufferColorSpace(e),t.unpackColorSpace=nt._getUnpackColorSpace()}}var qS=Object.defineProperty,fe=(s,e,t)=>(((i,n,r)=>{n in i?qS(i,n,{enumerable:!0,configurable:!0,writable:!0,value:r}):i[n]=r})(s,typeof e!="symbol"?e+"":e,t),t);const Vs=new Int32Array(2),C0=new Float32Array(Vs.buffer),x0=new Float64Array(Vs.buffer),Tc=new Uint16Array(new Uint8Array([1,0]).buffer)[0]===1;var ap,Cc;(Cc=ap||(ap={}))[Cc.UTF8_BYTES=1]="UTF8_BYTES",Cc[Cc.UTF16_STRING=2]="UTF16_STRING";let yl=class o_{constructor(e){this.bytes_=e,this.position_=0,this.text_decoder_=new TextDecoder}static allocate(e){return new o_(new Uint8Array(e))}clear(){this.position_=0}bytes(){return this.bytes_}position(){return this.position_}setPosition(e){this.position_=e}capacity(){return this.bytes_.length}readInt8(e){return this.readUint8(e)<<24>>24}readUint8(e){return this.bytes_[e]}readInt16(e){return this.readUint16(e)<<16>>16}readUint16(e){return this.bytes_[e]|this.bytes_[e+1]<<8}readInt32(e){return this.bytes_[e]|this.bytes_[e+1]<<8|this.bytes_[e+2]<<16|this.bytes_[e+3]<<24}readUint32(e){return this.readInt32(e)>>>0}readInt64(e){return BigInt.asIntN(64,BigInt(this.readUint32(e))+(BigInt(this.readUint32(e+4))<<BigInt(32)))}readUint64(e){return BigInt.asUintN(64,BigInt(this.readUint32(e))+(BigInt(this.readUint32(e+4))<<BigInt(32)))}readFloat32(e){return Vs[0]=this.readInt32(e),C0[0]}readFloat64(e){return Vs[Tc?0:1]=this.readInt32(e),Vs[Tc?1:0]=this.readInt32(e+4),x0[0]}writeInt8(e,t){this.bytes_[e]=t}writeUint8(e,t){this.bytes_[e]=t}writeInt16(e,t){this.bytes_[e]=t,this.bytes_[e+1]=t>>8}writeUint16(e,t){this.bytes_[e]=t,this.bytes_[e+1]=t>>8}writeInt32(e,t){this.bytes_[e]=t,this.bytes_[e+1]=t>>8,this.bytes_[e+2]=t>>16,this.bytes_[e+3]=t>>24}writeUint32(e,t){this.bytes_[e]=t,this.bytes_[e+1]=t>>8,this.bytes_[e+2]=t>>16,this.bytes_[e+3]=t>>24}writeInt64(e,t){this.writeInt32(e,Number(BigInt.asIntN(32,t))),this.writeInt32(e+4,Number(BigInt.asIntN(32,t>>BigInt(32))))}writeUint64(e,t){this.writeUint32(e,Number(BigInt.asUintN(32,t))),this.writeUint32(e+4,Number(BigInt.asUintN(32,t>>BigInt(32))))}writeFloat32(e,t){C0[0]=t,this.writeInt32(e,Vs[0])}writeFloat64(e,t){x0[0]=t,this.writeInt32(e,Vs[Tc?0:1]),this.writeInt32(e+4,Vs[Tc?1:0])}getBufferIdentifier(){if(this.bytes_.length<this.position_+4+4)throw new Error("FlatBuffers: ByteBuffer is too short to contain an identifier.");let e="";for(let t=0;t<4;t++)e+=String.fromCharCode(this.readInt8(this.position_+4+t));return e}__offset(e,t){const i=e-this.readInt32(e);return t<this.readInt16(i)?this.readInt16(i+t):0}__union(e,t){return e.bb_pos=t+this.readInt32(t),e.bb=this,e}__string(e,t){e+=this.readInt32(e);const i=this.readInt32(e);e+=4;const n=this.bytes_.subarray(e,e+i);return t===ap.UTF8_BYTES?n:this.text_decoder_.decode(n)}__union_with_string(e,t){return typeof e=="string"?this.__string(t):this.__union(e,t)}__indirect(e){return e+this.readInt32(e)}__vector(e){return e+this.readInt32(e)+4}__vector_len(e){return this.readInt32(e+this.readInt32(e))}__has_identifier(e){if(e.length!=4)throw new Error("FlatBuffers: file identifier must be length 4");for(let t=0;t<4;t++)if(e.charCodeAt(t)!=this.readInt8(this.position()+4+t))return!1;return!0}createScalarList(e,t){const i=[];for(let n=0;n<t;++n){const r=e(n);r!==null&&i.push(r)}return i}createObjList(e,t){const i=[];for(let n=0;n<t;++n){const r=e(n);r!==null&&i.push(r.unpack())}return i}};class zl{constructor(e){let t;this.minalign=1,this.vtable=null,this.vtable_in_use=0,this.isNested=!1,this.object_start=0,this.vtables=[],this.vector_num_elems=0,this.force_defaults=!1,this.string_maps=null,this.text_encoder=new TextEncoder,t=e||1024,this.bb=yl.allocate(t),this.space=t}clear(){this.bb.clear(),this.space=this.bb.capacity(),this.minalign=1,this.vtable=null,this.vtable_in_use=0,this.isNested=!1,this.object_start=0,this.vtables=[],this.vector_num_elems=0,this.force_defaults=!1,this.string_maps=null}forceDefaults(e){this.force_defaults=e}dataBuffer(){return this.bb}asUint8Array(){return this.bb.bytes().subarray(this.bb.position(),this.bb.position()+this.offset())}prep(e,t){e>this.minalign&&(this.minalign=e);const i=1+~(this.bb.capacity()-this.space+t)&e-1;for(;this.space<i+e+t;){const n=this.bb.capacity();this.bb=zl.growByteBuffer(this.bb),this.space+=this.bb.capacity()-n}this.pad(i)}pad(e){for(let t=0;t<e;t++)this.bb.writeInt8(--this.space,0)}writeInt8(e){this.bb.writeInt8(this.space-=1,e)}writeInt16(e){this.bb.writeInt16(this.space-=2,e)}writeInt32(e){this.bb.writeInt32(this.space-=4,e)}writeInt64(e){this.bb.writeInt64(this.space-=8,e)}writeFloat32(e){this.bb.writeFloat32(this.space-=4,e)}writeFloat64(e){this.bb.writeFloat64(this.space-=8,e)}addInt8(e){this.prep(1,0),this.writeInt8(e)}addInt16(e){this.prep(2,0),this.writeInt16(e)}addInt32(e){this.prep(4,0),this.writeInt32(e)}addInt64(e){this.prep(8,0),this.writeInt64(e)}addFloat32(e){this.prep(4,0),this.writeFloat32(e)}addFloat64(e){this.prep(8,0),this.writeFloat64(e)}addFieldInt8(e,t,i){(this.force_defaults||t!=i)&&(this.addInt8(t),this.slot(e))}addFieldInt16(e,t,i){(this.force_defaults||t!=i)&&(this.addInt16(t),this.slot(e))}addFieldInt32(e,t,i){(this.force_defaults||t!=i)&&(this.addInt32(t),this.slot(e))}addFieldInt64(e,t,i){(this.force_defaults||t!==i)&&(this.addInt64(t),this.slot(e))}addFieldFloat32(e,t,i){(this.force_defaults||t!=i)&&(this.addFloat32(t),this.slot(e))}addFieldFloat64(e,t,i){(this.force_defaults||t!=i)&&(this.addFloat64(t),this.slot(e))}addFieldOffset(e,t,i){(this.force_defaults||t!=i)&&(this.addOffset(t),this.slot(e))}addFieldStruct(e,t,i){t!=i&&(this.nested(t),this.slot(e))}nested(e){if(e!=this.offset())throw new TypeError("FlatBuffers: struct must be serialized inline.")}notNested(){if(this.isNested)throw new TypeError("FlatBuffers: object serialization must not be nested.")}slot(e){this.vtable!==null&&(this.vtable[e]=this.offset())}offset(){return this.bb.capacity()-this.space}static growByteBuffer(e){const t=e.capacity();if(3221225472&t)throw new Error("FlatBuffers: cannot grow buffer beyond 2 gigabytes.");const i=t<<1,n=yl.allocate(i);return n.setPosition(i-t),n.bytes().set(e.bytes(),i-t),n}addOffset(e){this.prep(4,0),this.writeInt32(this.offset()-e+4)}startObject(e){this.notNested(),this.vtable==null&&(this.vtable=[]),this.vtable_in_use=e;for(let t=0;t<e;t++)this.vtable[t]=0;this.isNested=!0,this.object_start=this.offset()}endObject(){if(this.vtable==null||!this.isNested)throw new Error("FlatBuffers: endObject called without startObject");this.addInt32(0);const e=this.offset();let t=this.vtable_in_use-1;for(;t>=0&&this.vtable[t]==0;t--);const i=t+1;for(;t>=0;t--)this.addInt16(this.vtable[t]!=0?e-this.vtable[t]:0);this.addInt16(e-this.object_start);const n=2*(i+2);this.addInt16(n);let r=0;const o=this.space;e:for(t=0;t<this.vtables.length;t++){const a=this.bb.capacity()-this.vtables[t];if(n==this.bb.readInt16(a)){for(let l=2;l<n;l+=2)if(this.bb.readInt16(o+l)!=this.bb.readInt16(a+l))continue e;r=this.vtables[t];break}}return r?(this.space=this.bb.capacity()-e,this.bb.writeInt32(this.space,r-e)):(this.vtables.push(this.offset()),this.bb.writeInt32(this.bb.capacity()-e,this.offset()-e)),this.isNested=!1,e}finish(e,t,i){const n=i?4:0;if(t){const r=t;if(this.prep(this.minalign,8+n),r.length!=4)throw new TypeError("FlatBuffers: file identifier must be length 4");for(let o=3;o>=0;o--)this.writeInt8(r.charCodeAt(o))}this.prep(this.minalign,4+n),this.addOffset(e),n&&this.addInt32(this.bb.capacity()-this.space),this.bb.setPosition(this.space)}finishSizePrefixed(e,t){this.finish(e,t,!0)}requiredField(e,t){const i=this.bb.capacity()-e,n=i-this.bb.readInt32(i);if(!(t<this.bb.readInt16(n)&&this.bb.readInt16(n+t)!=0))throw new TypeError("FlatBuffers: field "+t+" must be set")}startVector(e,t,i){this.notNested(),this.vector_num_elems=t,this.prep(4,e*t),this.prep(i,e*t)}endVector(){return this.writeInt32(this.vector_num_elems),this.offset()}createSharedString(e){if(!e)return 0;if(this.string_maps||(this.string_maps=new Map),this.string_maps.has(e))return this.string_maps.get(e);const t=this.createString(e);return this.string_maps.set(e,t),t}createString(e){if(e==null)return 0;let t;return t=e instanceof Uint8Array?e:this.text_encoder.encode(e),this.addInt8(0),this.startVector(1,t.length,1),this.bb.setPosition(this.space-=t.length),this.bb.bytes().set(t,this.space),this.endVector()}createByteVector(e){return e==null?0:(this.startVector(1,e.length,1),this.bb.setPosition(this.space-=e.length),this.bb.bytes().set(e,this.space),this.endVector())}createObjectOffset(e){return e===null?0:typeof e=="string"?this.createString(e):e.pack(this)}createObjectOffsetList(e){const t=[];for(let i=0;i<e.length;++i){const n=e[i];if(n===null)throw new TypeError("FlatBuffers: Argument for createObjectOffsetList cannot contain null.");t.push(this.createObjectOffset(n))}return t}createStructOffsetList(e,t){return t(this,e.length),this.createObjectOffsetList(e.slice().reverse()),this.endVector()}}let Tl=class{constructor(){fe(this,"bb",null),fe(this,"bb_pos",0)}__init(e,t){return this.bb_pos=e,this.bb=t,this}x(){return this.bb.readFloat32(this.bb_pos)}mutate_x(e){return this.bb.writeFloat32(this.bb_pos+0,e),!0}y(){return this.bb.readFloat32(this.bb_pos+4)}mutate_y(e){return this.bb.writeFloat32(this.bb_pos+4,e),!0}z(){return this.bb.readFloat32(this.bb_pos+8)}mutate_z(e){return this.bb.writeFloat32(this.bb_pos+8,e),!0}static sizeOf(){return 12}static createFloatVector(e,t,i,n){return e.prep(4,12),e.writeFloat32(n),e.writeFloat32(i),e.writeFloat32(t),e.offset()}};var KS=(s=>(s[s.NONE=0]="NONE",s[s.WIRE=1]="WIRE",s[s.WIRE_SET=2]="WIRE_SET",s[s.CIRCLE_CURVE=3]="CIRCLE_CURVE",s))(KS||{});class QS{constructor(){fe(this,"bb",null),fe(this,"bb_pos",0)}__init(e,t){return this.bb_pos=e,this.bb=t,this}min(e){return(e||new Tl).__init(this.bb_pos,this.bb)}max(e){return(e||new Tl).__init(this.bb_pos+12,this.bb)}static sizeOf(){return 24}static createBoundingBox(e,t,i,n,r,o,a){return e.prep(4,24),e.prep(4,12),e.writeFloat32(a),e.writeFloat32(o),e.writeFloat32(r),e.prep(4,12),e.writeFloat32(n),e.writeFloat32(i),e.writeFloat32(t),e.offset()}}class a_{constructor(){fe(this,"bb",null),fe(this,"bb_pos",0)}__init(e,t){return this.bb_pos=e,this.bb=t,this}x(){return this.bb.readFloat64(this.bb_pos)}mutate_x(e){return this.bb.writeFloat64(this.bb_pos+0,e),!0}y(){return this.bb.readFloat64(this.bb_pos+8)}mutate_y(e){return this.bb.writeFloat64(this.bb_pos+8,e),!0}z(){return this.bb.readFloat64(this.bb_pos+16)}mutate_z(e){return this.bb.writeFloat64(this.bb_pos+16,e),!0}static sizeOf(){return 24}static createDoubleVector(e,t,i,n){return e.prep(8,24),e.writeFloat64(n),e.writeFloat64(i),e.writeFloat64(t),e.offset()}}let JS=class{constructor(){fe(this,"bb",null),fe(this,"bb_pos",0)}__init(e,t){return this.bb_pos=e,this.bb=t,this}position(e){return(e||new a_).__init(this.bb_pos,this.bb)}xDirection(e){return(e||new Tl).__init(this.bb_pos+24,this.bb)}yDirection(e){return(e||new Tl).__init(this.bb_pos+36,this.bb)}static sizeOf(){return 48}static createTransform(e,t,i,n,r,o,a,l,c,h){return e.prep(8,48),e.prep(4,12),e.writeFloat32(h),e.writeFloat32(c),e.writeFloat32(l),e.prep(4,12),e.writeFloat32(a),e.writeFloat32(o),e.writeFloat32(r),e.prep(8,24),e.writeFloat64(n),e.writeFloat64(i),e.writeFloat64(t),e.offset()}};var $S=(s=>(s[s.NONE=0]="NONE",s[s.LINES=1]="LINES",s[s.ELLIPSE_ARC=2]="ELLIPSE_ARC",s[s.CLOTHOID=3]="CLOTHOID",s[s.PARABOLA=4]="PARABOLA",s))($S||{}),eA=(s=>(s[s.ONE=0]="ONE",s[s.TWO=1]="TWO",s))(eA||{}),tA=(s=>(s[s.NONE=0]="NONE",s[s.SHELL=1]="SHELL",s[s.CIRCLE_EXTRUSION=2]="CIRCLE_EXTRUSION",s))(tA||{}),iA=(s=>(s[s.DEFAULT=0]="DEFAULT",s))(iA||{}),nA=(s=>(s[s.LINE=0]="LINE",s[s.SHELL=1]="SHELL",s))(nA||{}),sA=(s=>(s[s.UPDATE=0]="UPDATE",s[s.CREATE=1]="CREATE",s[s.DELETE=2]="DELETE",s[s.FINISH=3]="FINISH",s))(sA||{}),rA=(s=>(s[s.GEOMETRY=0]="GEOMETRY",s[s.WIRES=1]="WIRES",s[s.INVISIBLE=2]="INVISIBLE",s))(rA||{}),oA=(s=>(s[s.CREATE_MODEL=0]="CREATE_MODEL",s[s.DELETE_MODEL=1]="DELETE_MODEL",s[s.EXECUTE=2]="EXECUTE",s[s.RAYCAST=3]="RAYCAST",s[s.FETCH_BOXES=4]="FETCH_BOXES",s[s.REFRESH_VIEW=5]="REFRESH_VIEW",s[s.RECOMPUTE_MESHES=6]="RECOMPUTE_MESHES",s[s.CREATE_MATERIAL=7]="CREATE_MATERIAL",s[s.THROW_ERROR=8]="THROW_ERROR",s))(oA||{}),aA=(s=>(s[s.VISIBLE=0]="VISIBLE",s))(aA||{}),lA=(s=>(s[s.POINT=0]="POINT",s[s.LINE=1]="LINE",s[s.FACE=2]="FACE",s))(lA||{});let w0=class{static containedInParallelPlanes(e,t){let i=!0;for(const n of e){const r=n.distanceToPoint(t);i=i&&r>=0}return i}static collides(e,t,i){for(const n of t)if(this.getPointDistance(n,i,e)<0)return!1;return!0}static getPointDistance(e,t,i){const n=e.normal;for(const r of this.dimensions){const o=n[r]>=0!==t;this.tempPoint[r]=o?i.max[r]:i.min[r]}return e.distanceToPoint(this.tempPoint)}};fe(w0,"tempPoint",new P),fe(w0,"dimensions",["x","y","z"]);var S0={exports:{}};function xc(s,e,t){t=t||2;var i,n,r,o,a,l,c,h=e&&e.length,d=h?e[0]*t:s.length,u=A0(s,0,d,t,!0),f=[];if(!u||u.next===u.prev)return f;if(h&&(u=function(g,E,p,v){var I,_,b,T=[];for(I=0,_=E.length;I<_;I++)(b=A0(g,E[I]*v,I<_-1?E[I+1]*v:g.length,v,!1))===b.next&&(b.steiner=!0),T.push(gA(b));for(T.sort(fA),I=0;I<T.length;I++)p=pA(T[I],p);return p}(s,e,u,t)),s.length>80*t){i=r=s[0],n=o=s[1];for(var m=t;m<d;m+=t)(a=s[m])<i&&(i=a),(l=s[m+1])<n&&(n=l),a>r&&(r=a),l>o&&(o=l);c=(c=Math.max(r-i,o-n))!==0?32767/c:0}return Cl(u,f,t,i,n,c,0),f}function A0(s,e,t,i,n){var r,o;if(n===hp(s,e,t,i)>0)for(r=e;r<t;r+=i)o=R0(r,s[r],s[r+1],o);else for(r=t-i;r>=e;r-=i)o=R0(r,s[r],s[r+1],o);return o&&bu(o,o.next)&&(wl(o),o=o.next),o}function Br(s,e){if(!s)return s;e||(e=s);var t,i=s;do if(t=!1,i.steiner||!bu(i,i.next)&&Bt(i.prev,i,i.next)!==0)i=i.next;else{if(wl(i),(i=e=i.prev)===i.next)break;t=!0}while(t||i!==e);return e}function Cl(s,e,t,i,n,r,o){if(s){!o&&r&&function(h,d,u,f){var m=h;do m.z===0&&(m.z=lp(m.x,m.y,d,u,f)),m.prevZ=m.prev,m.nextZ=m.next,m=m.next;while(m!==h);m.prevZ.nextZ=null,m.prevZ=null,function(g){var E,p,v,I,_,b,T,w,A=1;do{for(p=g,g=null,_=null,b=0;p;){for(b++,v=p,T=0,E=0;E<A&&(T++,v=v.nextZ);E++);for(w=A;T>0||w>0&&v;)T!==0&&(w===0||!v||p.z<=v.z)?(I=p,p=p.nextZ,T--):(I=v,v=v.nextZ,w--),_?_.nextZ=I:g=I,I.prevZ=_,_=I;p=v}_.nextZ=null,A*=2}while(b>1)}(m)}(s,i,n,r);for(var a,l,c=s;s.prev!==s.next;)if(a=s.prev,l=s.next,r?hA(s,i,n,r):cA(s))e.push(a.i/t|0),e.push(s.i/t|0),e.push(l.i/t|0),wl(s),s=l.next,c=l.next;else if((s=l)===c){o?o===1?Cl(s=uA(Br(s),e,t),e,t,i,n,r,2):o===2&&dA(s,e,t,i,n,r):Cl(Br(s),e,t,i,n,r,1);break}}}function cA(s){var e=s.prev,t=s,i=s.next;if(Bt(e,t,i)>=0)return!1;for(var n=e.x,r=t.x,o=i.x,a=e.y,l=t.y,c=i.y,h=n<r?n<o?n:o:r<o?r:o,d=a<l?a<c?a:c:l<c?l:c,u=n>r?n>o?n:o:r>o?r:o,f=a>l?a>c?a:c:l>c?l:c,m=i.next;m!==e;){if(m.x>=h&&m.x<=u&&m.y>=d&&m.y<=f&&Vo(n,a,r,l,o,c,m.x,m.y)&&Bt(m.prev,m,m.next)>=0)return!1;m=m.next}return!0}function hA(s,e,t,i){var n=s.prev,r=s,o=s.next;if(Bt(n,r,o)>=0)return!1;for(var a=n.x,l=r.x,c=o.x,h=n.y,d=r.y,u=o.y,f=a<l?a<c?a:c:l<c?l:c,m=h<d?h<u?h:u:d<u?d:u,g=a>l?a>c?a:c:l>c?l:c,E=h>d?h>u?h:u:d>u?d:u,p=lp(f,m,e,t,i),v=lp(g,E,e,t,i),I=s.prevZ,_=s.nextZ;I&&I.z>=p&&_&&_.z<=v;){if(I.x>=f&&I.x<=g&&I.y>=m&&I.y<=E&&I!==n&&I!==o&&Vo(a,h,l,d,c,u,I.x,I.y)&&Bt(I.prev,I,I.next)>=0||(I=I.prevZ,_.x>=f&&_.x<=g&&_.y>=m&&_.y<=E&&_!==n&&_!==o&&Vo(a,h,l,d,c,u,_.x,_.y)&&Bt(_.prev,_,_.next)>=0))return!1;_=_.nextZ}for(;I&&I.z>=p;){if(I.x>=f&&I.x<=g&&I.y>=m&&I.y<=E&&I!==n&&I!==o&&Vo(a,h,l,d,c,u,I.x,I.y)&&Bt(I.prev,I,I.next)>=0)return!1;I=I.prevZ}for(;_&&_.z<=v;){if(_.x>=f&&_.x<=g&&_.y>=m&&_.y<=E&&_!==n&&_!==o&&Vo(a,h,l,d,c,u,_.x,_.y)&&Bt(_.prev,_,_.next)>=0)return!1;_=_.nextZ}return!0}function uA(s,e,t){var i=s;do{var n=i.prev,r=i.next.next;!bu(n,r)&&l_(n,i,i.next,r)&&xl(n,r)&&xl(r,n)&&(e.push(n.i/t|0),e.push(i.i/t|0),e.push(r.i/t|0),wl(i),wl(i.next),i=s=r),i=i.next}while(i!==s);return Br(i)}function dA(s,e,t,i,n,r){var o=s;do{for(var a=o.next.next;a!==o.prev;){if(o.i!==a.i&&EA(o,a)){var l=c_(o,a);return o=Br(o,o.next),l=Br(l,l.next),Cl(o,e,t,i,n,r,0),void Cl(l,e,t,i,n,r,0)}a=a.next}o=o.next}while(o!==s)}function fA(s,e){return s.x-e.x}function pA(s,e){var t=function(n,r){var o,a=r,l=n.x,c=n.y,h=-1/0;do{if(c<=a.y&&c>=a.next.y&&a.next.y!==a.y){var d=a.x+(c-a.y)*(a.next.x-a.x)/(a.next.y-a.y);if(d<=l&&d>h&&(h=d,o=a.x<a.next.x?a:a.next,d===l))return o}a=a.next}while(a!==r);if(!o)return null;var u,f=o,m=o.x,g=o.y,E=1/0;a=o;do l>=a.x&&a.x>=m&&l!==a.x&&Vo(c<g?l:h,c,m,g,c<g?h:l,c,a.x,a.y)&&(u=Math.abs(c-a.y)/(l-a.x),xl(a,n)&&(u<E||u===E&&(a.x>o.x||a.x===o.x&&mA(o,a)))&&(o=a,E=u)),a=a.next;while(a!==f);return o}(s,e);if(!t)return e;var i=c_(t,s);return Br(i,i.next),Br(t,t.next)}function mA(s,e){return Bt(s.prev,s,e.prev)<0&&Bt(e.next,s,s.next)<0}function lp(s,e,t,i,n){return(s=1431655765&((s=858993459&((s=252645135&((s=16711935&((s=(s-t)*n|0)|s<<8))|s<<4))|s<<2))|s<<1))|(e=1431655765&((e=858993459&((e=252645135&((e=16711935&((e=(e-i)*n|0)|e<<8))|e<<4))|e<<2))|e<<1))<<1}function gA(s){var e=s,t=s;do(e.x<t.x||e.x===t.x&&e.y<t.y)&&(t=e),e=e.next;while(e!==s);return t}function Vo(s,e,t,i,n,r,o,a){return(n-o)*(e-a)>=(s-o)*(r-a)&&(s-o)*(i-a)>=(t-o)*(e-a)&&(t-o)*(r-a)>=(n-o)*(i-a)}function EA(s,e){return s.next.i!==e.i&&s.prev.i!==e.i&&!function(t,i){var n=t;do{if(n.i!==t.i&&n.next.i!==t.i&&n.i!==i.i&&n.next.i!==i.i&&l_(n,n.next,t,i))return!0;n=n.next}while(n!==t);return!1}(s,e)&&(xl(s,e)&&xl(e,s)&&function(t,i){var n=t,r=!1,o=(t.x+i.x)/2,a=(t.y+i.y)/2;do n.y>a!=n.next.y>a&&n.next.y!==n.y&&o<(n.next.x-n.x)*(a-n.y)/(n.next.y-n.y)+n.x&&(r=!r),n=n.next;while(n!==t);return r}(s,e)&&(Bt(s.prev,s,e.prev)||Bt(s,e.prev,e))||bu(s,e)&&Bt(s.prev,s,s.next)>0&&Bt(e.prev,e,e.next)>0)}function Bt(s,e,t){return(e.y-s.y)*(t.x-e.x)-(e.x-s.x)*(t.y-e.y)}function bu(s,e){return s.x===e.x&&s.y===e.y}function l_(s,e,t,i){var n=Sc(Bt(s,e,t)),r=Sc(Bt(s,e,i)),o=Sc(Bt(t,i,s)),a=Sc(Bt(t,i,e));return n!==r&&o!==a||!(n!==0||!wc(s,t,e))||!(r!==0||!wc(s,i,e))||!(o!==0||!wc(t,s,i))||!(a!==0||!wc(t,e,i))}function wc(s,e,t){return e.x<=Math.max(s.x,t.x)&&e.x>=Math.min(s.x,t.x)&&e.y<=Math.max(s.y,t.y)&&e.y>=Math.min(s.y,t.y)}function Sc(s){return s>0?1:s<0?-1:0}function xl(s,e){return Bt(s.prev,s,s.next)<0?Bt(s,e,s.next)>=0&&Bt(s,s.prev,e)>=0:Bt(s,e,s.prev)<0||Bt(s,s.next,e)<0}function c_(s,e){var t=new cp(s.i,s.x,s.y),i=new cp(e.i,e.x,e.y),n=s.next,r=e.prev;return s.next=e,e.prev=s,t.next=n,n.prev=t,i.next=t,t.prev=i,r.next=i,i.prev=r,i}function R0(s,e,t,i){var n=new cp(s,e,t);return i?(n.next=i.next,n.prev=i,i.next.prev=n,i.next=n):(n.prev=n,n.next=n),n}function wl(s){s.next.prev=s.prev,s.prev.next=s.next,s.prevZ&&(s.prevZ.nextZ=s.nextZ),s.nextZ&&(s.nextZ.prevZ=s.prevZ)}function cp(s,e,t){this.i=s,this.x=e,this.y=t,this.prev=null,this.next=null,this.z=0,this.prevZ=null,this.nextZ=null,this.steiner=!1}function hp(s,e,t,i){for(var n=0,r=e,o=t-i;r<t;r+=i)n+=(s[o]-s[r])*(s[r+1]+s[o+1]),o=r;return n}S0.exports=xc,S0.exports.default=xc,xc.deviation=function(s,e,t,i){var n=e&&e.length,r=n?e[0]*t:s.length,o=Math.abs(hp(s,0,r,t));if(n)for(var a=0,l=e.length;a<l;a++){var c=e[a]*t,h=a<l-1?e[a+1]*t:s.length;o-=Math.abs(hp(s,c,h,t))}var d=0;for(a=0;a<i.length;a+=3){var u=i[a]*t,f=i[a+1]*t,m=i[a+2]*t;d+=Math.abs((s[u]-s[m])*(s[f+1]-s[u+1])-(s[u]-s[f])*(s[m+1]-s[u+1]))}return o===0&&d===0?0:Math.abs((d-o)/o)},xc.flatten=function(s){for(var e=s[0][0].length,t={vertices:[],holes:[],dimensions:e},i=0,n=0;n<s.length;n++){for(var r=0;r<s[n].length;r++)for(var o=0;o<e;o++)t.vertices.push(s[n][r][o]);n>0&&(i+=s[n-1].length,t.holes.push(i))}return t};class IA{constructor(){fe(this,"int"),fe(this,"float"),fe(this,"buffer"),fe(this,"s1",4),fe(this,"s2",8);const{intBuffer:e,floatBuffer:t,buffer:i}=this.newBuffers();this.int=e,this.float=t,this.buffer=i}newBuffers(){const e=new Int32Array(1),t=e.buffer;return{intBuffer:e,floatBuffer:new Float32Array(t),buffer:new Uint8Array(t)}}}class up{static check(e){const t=Number.isInteger(e),i=e<this._max,n=e>this._min;return t&&i&&n}}fe(up,"_max",2147483647),fe(up,"_min",-2147483648);const _A=class h_{constructor(){fe(this,"_core",new IA),fe(this,"_handlers"),fe(this,"_result",-1),fe(this,"handleObject",e=>{const t=Object.keys(e);for(const i of t)e.hasOwnProperty(i)&&this.compute(e[i])}),fe(this,"handleString",e=>{const t=e.length;for(let i=0;i<t;++i){const n=e.codePointAt(i);this._core.int[0]=n,this.update()}}),fe(this,"handleBoolean",e=>{this._core.int[0]=e?1:0,this.update()}),fe(this,"handleNumber",e=>{(up.check(e)?this._core.int:this._core.float)[0]=e,this.update()}),this._handlers=this.newHandlers()}get value(){return~this._result}fromMaterialData(e){const{modelId:t,objectClass:i,currentLod:n,templateId:r,...o}=e;this.reset(),this.compute(t),this.compute(i),this.compute(o),this.compute(n),this.compute(r!==void 0)}generate(e){this.reset();for(const t of e)this.compute(t);return this.value}compute(e){return this.getHandler(e)(e),this}reset(){return this._result=-1,this}getHandler(e){const t=typeof e,i=this._handlers[t];if(!i)throw new Error("Fragments: Unsupported input type");return i}newHandlers(){return{number:this.handleNumber,boolean:this.handleBoolean,string:this.handleString,object:this.handleObject}}update(){for(let e=0;e<this._core.s1;++e){this._result^=this._core.buffer[e];for(let t=0;t<this._core.s2;++t)1&this._result?this._result=this._result>>1^h_._polynomial:this._result>>=1}}};fe(_A,"_polynomial",2197175160);const pd=class Bh{constructor(e,t){fe(this,"_first"),this._first=this.newData(e,t)}static getComplementary(e,t){let i=0;const n=e.position.length;i=this.makeBufferComplementary(n,e,i,t),i!==1/0&&t(i,1/0)}static get(e,t,i,n){const{filtered:r,position:o,size:a}=this.getData(e,i);return this.setAllBufferData(r,t,o,a,n),{position:o,size:a}}fullOf(e){const t=this._first.following,i=this._first.data;return t===null&&i===e}update(e,t){const i=this.getBufferData(e);if(i.data!==t){const{a:n,c:r,b:o}=this.newBuffers(e,i,t);this.setupInputData(i,n,r),this.setupUpdateBuffers(n,o,r)}}size(e){let t=0,i=this._first;for(;i!==null;)this.doesFilterPass(e,i)&&t++,i=i.following;return t}static setAllBufferData(e,t,i,n,r){for(let o=0;o<e.length;++o){const a=e[o];this.transform(a,t),this.setBuffers(i,n,o),r&&r(o,a.data)}}static makeBufferComplementary(e,t,i,n){for(let r=0;r<e;++r){const o=this.getBuffers(t,r),{position:a,size:l}=o;a>i&&n(i,a-i),i=a+l}return i}static setBuffers(e,t,i){e[i]=this._tempData.position;const n=this._tempData.size===1/0;t[i]=n?this._inf:this._tempData.size}add(e,t,i){if(!Bh._stash.length)return this.newData(t,i,e);const n=Bh._stash.pop();if(!n)throw new Error("Fragments: No stash found");return n.position=e,n.size=t,n.data=i,n}remove(e){e&&(e.following=null,e.past=null,Bh._stash.push(e))}static getData(e,t){const i=e.filter(t),n=i.length;return{filtered:i,position:new Uint32Array(n),size:new Uint32Array(n)}}filter(e){const t=[];let i=this._first;for(;i!==null;)this.doesFilterPass(e,i)&&t.push(i),i=i.following;return t}static transform(e,t){const i=this.getTempData(),n=e.position+e.size,r=n===t.length;if(i.position=t[e.position],r)i.size=1/0;else{const o=t[n];i.size=o-i.position}return i}static getBuffers(e,t){const i=e.position[t];let n;return n=e.size[t]===this._inf?1/0:e.size[t],{position:i,size:n}}static getTempData(){return this._tempData?this._tempData:{position:0,size:0}}doesFilterPass(e,t){return!e||e(t.data)}setupUpdateBuffers(e,t,i){this.chainBuffers(e,t,i),this.setupFirstBuffer(e,t),this.setupLastBuffer(i,t),this.setupMiddleBufferStart(t),this.setupMiddleBufferEnd(t)}setupMiddleBufferEnd(e){var t;if(((t=e.following)==null?void 0:t.data)===e.data){if(!e.following)return;const i=e.following.size+e.size,n=e.following.following;e.size=i,this.remove(e.following),e.following=n,e.following&&(e.following.past=e)}}setupFirstBuffer(e,t){e.size||(e.past?e.past.following=t:this._first=t,t.past=e.past,this.remove(e))}setupMiddleBufferStart(e){var t;if(((t=e.past)==null?void 0:t.data)===e.data){if(!e.past)return;e.size=e.past.size+e.size,e.position=e.past.position;const i=e.past.past;this.remove(e.past),e.past=i,e.past?e.past.following=e:this._first=e}}chainBuffers(e,t,i){e.following=t,t.past=e,t.following=i,i.past=t}setupLastBuffer(e,t){e.size||(e.following&&(e.following.past=t),t.following=e.following,this.remove(e))}newBuffers(e,t,i){const n=e-t.position,r=this.add(t.position,n,t.data),o=this.add(e,1,i),a=t.size-r.size-1;return{a:r,c:this.add(e+1,a,t.data),b:o}}setupInputData(e,t,i){e.past?(e.past.following=t,t.past=e.past):this._first=t,e.following&&(e.following.past=i,i.following=e.following),this.remove(e)}newData(e,t,i=0){return{position:i,size:e,past:null,following:null,data:t}}getBufferData(e){let t=this._first;for(;;){const i=t===null,n=t.position<=e,r=e<t.position+t.size;if(i||n&&r)return t;t=t.following}}};fe(pd,"_stash",[]),fe(pd,"_tempData",{position:0,size:0}),fe(pd,"_inf",4294967295);class ao{static fixNumber(e){return Number.isNaN(e)?0:Number.isFinite(e)?e:0}static forEach(e,t){if(Array.isArray(e)){let i=0;for(const n of e)t(n,i++)}else t(e,0)}}class vA{static estimateCapacity(){const e=this.capacityFactor,t=window.screen.width,i=window.screen.height,n=window.devicePixelRatio;return Math.trunc(t*i*n*n*e)}}fe(vA,"capacityFactor",200);let Ko=class{static parseMaterial(e){const t=e.r()/255,i=e.g()/255,n=e.b()/255,r=e.a()/255,o=e.a()<255;return{color:new Ne(t,i,n),renderedFaces:e.renderedFaces(),opacity:r,transparent:o}}static parseBox(e,t){this.getBox(e,t,"min"),this.getBox(e,t,"max")}static parseTransform(e,t){return this.getVector(e,"position",this._doubleVector),this.getVector(e,"xDirection",this._floatVector),this.getVector(e,"yDirection",this._floatVector),this.computeZVector(),this.setTransform(t),t}static setTransform(e){const{x:t,y:i,z:n}=this._temp.xDirection,{x:r,y:o,z:a}=this._temp.yDirection,{x:l,y:c,z:h}=this._temp.zDirection,{x:d,y:u,z:f}=this._temp.position;e.set(t,r,l,d,i,o,c,u,n,a,h,f,0,0,0,1)}static getBox(e,t,i){e[i](this._floatVector);const n=this._floatVector.x(),r=this._floatVector.y(),o=this._floatVector.z();t[i].x=ao.fixNumber(n),t[i].y=ao.fixNumber(r),t[i].z=ao.fixNumber(o)}static getVector(e,t,i){e[t](i);const n=this._temp[t],r=i.x(),o=i.y(),a=i.z();n.x=ao.fixNumber(r),n.y=ao.fixNumber(o),n.z=ao.fixNumber(a)}static computeZVector(){this._temp.zDirection.crossVectors(this._temp.xDirection,this._temp.yDirection)}};fe(Ko,"_temp",{position:new P,xDirection:new P,yDirection:new P,zDirection:new P}),fe(Ko,"_doubleVector",new a_),fe(Ko,"_floatVector",new Tl);const zi=class{static get(s,e,t){this.fetchSampleTransform(s,e),this.fetchItemTransform(s,e),t.multiplyMatrices(this._item,this._sample)}static getBox(s,e){s.bbox(this._box),Ko.parseBox(this._box,e)}static getBoxData(s){this._min.copy(s.min),this._max.copy(s.max),this._center.addVectors(this._min,this._max),this._center.divideScalar(2),s.getSize(this._distance)}static boxSize(s){return this.getBoxData(s),this.applyTransformer(),this._edge.start=this._min.clone(),this._edge.end=this._max.clone(),this._edge}static applyTransformer(){const{x:s,y:e,z:t}=this._distance,i=Math.max(s,e,t);s===i?this._transformers.x():e===i?this._transformers.y():this._transformers.z()}static fetchItemTransform(s,e){const t=s.item();e.globalTransforms(t,this._transform),Ko.parseTransform(this._transform,this._item)}static fetchSampleTransform(s,e){const t=s.localTransform();e.localTransforms(t,this._transform),Ko.parseTransform(this._transform,this._sample)}static setBoxZ(){this._min.set(this._center.x,this._center.y,this._min.z),this._max.set(this._center.x,this._center.y,this._max.z)}static setBoxY(){this._min.set(this._center.x,this._min.y,this._center.z),this._max.set(this._center.x,this._max.y,this._center.z)}static setBoxX(){this._min.set(this._min.x,this._center.y,this._center.z),this._max.set(this._max.x,this._center.y,this._center.z)}};fe(zi,"_transform",new JS),fe(zi,"_min",new P),fe(zi,"_max",new P),fe(zi,"_center",new P),fe(zi,"_distance",new P),fe(zi,"_edge",new xt),fe(zi,"_item",new _e),fe(zi,"_sample",new _e),fe(zi,"_box",new QS),fe(zi,"_transformers",{x:()=>zi.setBoxX(),y:()=>zi.setBoxY(),z:()=>zi.setBoxZ()});fe(class{static getWidth(s){return s.getSize(this._temp.vector),this._temp.vector.x>this._temp.vector.y&&this._temp.vector.set(this._temp.vector.y,this._temp.vector.x,this._temp.vector.z),this._temp.vector.y>this._temp.vector.z&&this._temp.vector.set(this._temp.vector.x,this._temp.vector.z,this._temp.vector.y),this._temp.vector.x>this._temp.vector.y&&this._temp.vector.set(this._temp.vector.y,this._temp.vector.x,this._temp.vector.z),this._temp.vector.y}},"_temp",{vector:new P});new je;new P;xe.line={worldUnits:{value:1},linewidth:{value:1},resolution:{value:new Oe(1,1)},dashOffset:{value:0},dashScale:{value:1},dashSize:{value:1},gapSize:{value:1}},wi.line={uniforms:fa.merge([xe.common,xe.fog,xe.line]),vertexShader:`
		#include <common>
		#include <color_pars_vertex>
		#include <fog_pars_vertex>
		#include <logdepthbuf_pars_vertex>
		#include <clipping_planes_pars_vertex>

		uniform float linewidth;
		uniform vec2 resolution;

		attribute vec3 instanceStart;
		attribute vec3 instanceEnd;

		attribute vec3 instanceColorStart;
		attribute vec3 instanceColorEnd;

		#ifdef WORLD_UNITS

			varying vec4 worldPos;
			varying vec3 worldStart;
			varying vec3 worldEnd;

			#ifdef USE_DASH

				varying vec2 vUv;

			#endif

		#else

			varying vec2 vUv;

		#endif

		#ifdef USE_DASH

			uniform float dashScale;
			attribute float instanceDistanceStart;
			attribute float instanceDistanceEnd;
			varying float vLineDistance;

		#endif

		void trimSegment( const in vec4 start, inout vec4 end ) {

			// trim end segment so it terminates between the camera plane and the near plane

			// conservative estimate of the near plane
			float a = projectionMatrix[ 2 ][ 2 ]; // 3nd entry in 3th column
			float b = projectionMatrix[ 3 ][ 2 ]; // 3nd entry in 4th column
			float nearEstimate = - 0.5 * b / a;

			float alpha = ( nearEstimate - start.z ) / ( end.z - start.z );

			end.xyz = mix( start.xyz, end.xyz, alpha );

		}

		void main() {

			#ifdef USE_COLOR

				vColor.xyz = ( position.y < 0.5 ) ? instanceColorStart : instanceColorEnd;

			#endif

			#ifdef USE_DASH

				vLineDistance = ( position.y < 0.5 ) ? dashScale * instanceDistanceStart : dashScale * instanceDistanceEnd;
				vUv = uv;

			#endif

			float aspect = resolution.x / resolution.y;

			// camera space
			vec4 start = modelViewMatrix * vec4( instanceStart, 1.0 );
			vec4 end = modelViewMatrix * vec4( instanceEnd, 1.0 );

			#ifdef WORLD_UNITS

				worldStart = start.xyz;
				worldEnd = end.xyz;

			#else

				vUv = uv;

			#endif

			// special case for perspective projection, and segments that terminate either in, or behind, the camera plane
			// clearly the gpu firmware has a way of addressing this issue when projecting into ndc space
			// but we need to perform ndc-space calculations in the shader, so we must address this issue directly
			// perhaps there is a more elegant solution -- WestLangley

			bool perspective = ( projectionMatrix[ 2 ][ 3 ] == - 1.0 ); // 4th entry in the 3rd column

			if ( perspective ) {

				if ( start.z < 0.0 && end.z >= 0.0 ) {

					trimSegment( start, end );

				} else if ( end.z < 0.0 && start.z >= 0.0 ) {

					trimSegment( end, start );

				}

			}

			// clip space
			vec4 clipStart = projectionMatrix * start;
			vec4 clipEnd = projectionMatrix * end;

			// ndc space
			vec3 ndcStart = clipStart.xyz / clipStart.w;
			vec3 ndcEnd = clipEnd.xyz / clipEnd.w;

			// direction
			vec2 dir = ndcEnd.xy - ndcStart.xy;

			// account for clip-space aspect ratio
			dir.x *= aspect;
			dir = normalize( dir );

			#ifdef WORLD_UNITS

				vec3 worldDir = normalize( end.xyz - start.xyz );
				vec3 tmpFwd = normalize( mix( start.xyz, end.xyz, 0.5 ) );
				vec3 worldUp = normalize( cross( worldDir, tmpFwd ) );
				vec3 worldFwd = cross( worldDir, worldUp );
				worldPos = position.y < 0.5 ? start: end;

				// height offset
				float hw = linewidth * 0.5;
				worldPos.xyz += position.x < 0.0 ? hw * worldUp : - hw * worldUp;

				// don't extend the line if we're rendering dashes because we
				// won't be rendering the endcaps
				#ifndef USE_DASH

					// cap extension
					worldPos.xyz += position.y < 0.5 ? - hw * worldDir : hw * worldDir;

					// add width to the box
					worldPos.xyz += worldFwd * hw;

					// endcaps
					if ( position.y > 1.0 || position.y < 0.0 ) {

						worldPos.xyz -= worldFwd * 2.0 * hw;

					}

				#endif

				// project the worldpos
				vec4 clip = projectionMatrix * worldPos;

				// shift the depth of the projected points so the line
				// segments overlap neatly
				vec3 clipPose = ( position.y < 0.5 ) ? ndcStart : ndcEnd;
				clip.z = clipPose.z * clip.w;

			#else

				vec2 offset = vec2( dir.y, - dir.x );
				// undo aspect ratio adjustment
				dir.x /= aspect;
				offset.x /= aspect;

				// sign flip
				if ( position.x < 0.0 ) offset *= - 1.0;

				// endcaps
				if ( position.y < 0.0 ) {

					offset += - dir;

				} else if ( position.y > 1.0 ) {

					offset += dir;

				}

				// adjust for linewidth
				offset *= linewidth;

				// adjust for clip-space to screen-space conversion // maybe resolution should be based on viewport ...
				offset /= resolution.y;

				// select end
				vec4 clip = ( position.y < 0.5 ) ? clipStart : clipEnd;

				// back to clip space
				offset *= clip.w;

				clip.xy += offset;

			#endif

			gl_Position = clip;

			vec4 mvPosition = ( position.y < 0.5 ) ? start : end; // this is an approximation

			#include <logdepthbuf_vertex>
			#include <clipping_planes_vertex>
			#include <fog_vertex>

		}
		`,fragmentShader:`
		uniform vec3 diffuse;
		uniform float opacity;
		uniform float linewidth;

		#ifdef USE_DASH

			uniform float dashOffset;
			uniform float dashSize;
			uniform float gapSize;

		#endif

		varying float vLineDistance;

		#ifdef WORLD_UNITS

			varying vec4 worldPos;
			varying vec3 worldStart;
			varying vec3 worldEnd;

			#ifdef USE_DASH

				varying vec2 vUv;

			#endif

		#else

			varying vec2 vUv;

		#endif

		#include <common>
		#include <color_pars_fragment>
		#include <fog_pars_fragment>
		#include <logdepthbuf_pars_fragment>
		#include <clipping_planes_pars_fragment>

		vec2 closestLineToLine(vec3 p1, vec3 p2, vec3 p3, vec3 p4) {

			float mua;
			float mub;

			vec3 p13 = p1 - p3;
			vec3 p43 = p4 - p3;

			vec3 p21 = p2 - p1;

			float d1343 = dot( p13, p43 );
			float d4321 = dot( p43, p21 );
			float d1321 = dot( p13, p21 );
			float d4343 = dot( p43, p43 );
			float d2121 = dot( p21, p21 );

			float denom = d2121 * d4343 - d4321 * d4321;

			float numer = d1343 * d4321 - d1321 * d4343;

			mua = numer / denom;
			mua = clamp( mua, 0.0, 1.0 );
			mub = ( d1343 + d4321 * ( mua ) ) / d4343;
			mub = clamp( mub, 0.0, 1.0 );

			return vec2( mua, mub );

		}

		void main() {

			#include <clipping_planes_fragment>

			#ifdef USE_DASH

				if ( vUv.y < - 1.0 || vUv.y > 1.0 ) discard; // discard endcaps

				if ( mod( vLineDistance + dashOffset, dashSize + gapSize ) > dashSize ) discard; // todo - FIX

			#endif

			float alpha = opacity;

			#ifdef WORLD_UNITS

				// Find the closest points on the view ray and the line segment
				vec3 rayEnd = normalize( worldPos.xyz ) * 1e5;
				vec3 lineDir = worldEnd - worldStart;
				vec2 params = closestLineToLine( worldStart, worldEnd, vec3( 0.0, 0.0, 0.0 ), rayEnd );

				vec3 p1 = worldStart + lineDir * params.x;
				vec3 p2 = rayEnd * params.y;
				vec3 delta = p1 - p2;
				float len = length( delta );
				float norm = len / linewidth;

				#ifndef USE_DASH

					#ifdef USE_ALPHA_TO_COVERAGE

						float dnorm = fwidth( norm );
						alpha = 1.0 - smoothstep( 0.5 - dnorm, 0.5 + dnorm, norm );

					#else

						if ( norm > 0.5 ) {

							discard;

						}

					#endif

				#endif

			#else

				#ifdef USE_ALPHA_TO_COVERAGE

					// artifacts appear on some hardware if a derivative is taken within a conditional
					float a = vUv.x;
					float b = ( vUv.y > 0.0 ) ? vUv.y - 1.0 : vUv.y + 1.0;
					float len2 = a * a + b * b;
					float dlen = fwidth( len2 );

					if ( abs( vUv.y ) > 1.0 ) {

						alpha = 1.0 - smoothstep( 1.0 - dlen, 1.0 + dlen, len2 );

					}

				#else

					if ( abs( vUv.y ) > 1.0 ) {

						float a = vUv.x;
						float b = ( vUv.y > 0.0 ) ? vUv.y - 1.0 : vUv.y + 1.0;
						float len2 = a * a + b * b;

						if ( len2 > 1.0 ) discard;

					}

				#endif

			#endif

			vec4 diffuseColor = vec4( diffuse, alpha );

			#include <logdepthbuf_fragment>
			#include <color_fragment>

			gl_FragColor = vec4( diffuseColor.rgb, alpha );

			#include <tonemapping_fragment>
			#include <colorspace_fragment>
			#include <fog_fragment>
			#include <premultiplied_alpha_fragment>

		}
		`};new ct;new P;new P;new ct;new ct;new ct;new P;new _e;new xt;new P;new je;new vi;new ct;class iu{}fe(iu,"vertex",`
            #include <common>
            #include <clipping_planes_pars_vertex>

            attribute float itemFilter;
            uniform vec2 lodSize;
            attribute vec3 itemFirst;
            attribute vec3 itemLast;

            float lodWidth = 2.0;
            
            void cutLodLine(const in vec4 first, inout vec4 second ) {
                float projValue1 = projectionMatrix[2][2];
                float projValue2 = projectionMatrix[3][2];
                float approxResult = -(projValue2 / projValue1) / 2.0;
                float diff1 = approxResult - first.z;
                float diff2 = second.z - first.z;
                float cutFilter = diff1 / diff2;
                second.xyz = mix(first.xyz, second.xyz, cutFilter);
            }
                
            void main() {
                if (itemFilter == 0.0) {
                    gl_Position = vec4(0,0,0,0);
                    return;
                }

                vec4 rawFirst = vec4(itemFirst, 1.0);
                vec4 rawLast = vec4(itemLast, 1.0);
                vec4 first = modelViewMatrix * rawFirst;
                vec4 last = modelViewMatrix * rawLast;
                
                bool lodPerspective = projectionMatrix[2][3] == -1.0;
                if (lodPerspective) {
                    bool firstCut = first.z < 0.0 && last.z >= 0.0;
                    bool lastCut = last.z < 0.0 && first.z >= 0.0;
                    if (firstCut) {
                        cutLodLine( first, last );
                    } else if (lastCut) {
                        cutLodLine( last, first );
                    }
                }

                vec4 firstCut = projectionMatrix * first;
                vec4 lastCut = projectionMatrix * last;
                vec3 firstNdc = firstCut.xyz / firstCut.w;
                vec3 lastNdc = lastCut.xyz / lastCut.w;

                vec2 lodOrientation = lastNdc.xy - firstNdc.xy;

                float lodRatio = lodSize.x / lodSize.y;
                lodOrientation.x *= lodRatio;
                lodOrientation = normalize(lodOrientation);
                
                vec2 lodDistance = vec2(lodOrientation.y, - lodOrientation.x);
                lodOrientation.x /= lodRatio;
                lodDistance.x /= lodRatio;

                if (position.x < 0.0) { 
                    lodDistance *= - 1.0;
                }

                if (position.y < 0.0) {
                    lodDistance += -lodOrientation;
                } else if (position.y > 1.0) {
                    lodDistance += lodOrientation;
                }

                lodDistance *= lodWidth;
                lodDistance /= lodSize.y;

                bool isFirst = position.y < 0.5;
                vec4 lodPosition = isFirst ? firstCut : lastCut;
                lodDistance *= lodPosition.w;
                lodPosition.xy += lodDistance;
                gl_Position = lodPosition;

                vec4 mvPosition = isFirst ? first : last;
                #include <clipping_planes_vertex>
            }
    `),fe(iu,"fragment",`
            #include <common>
            #include <clipping_planes_pars_fragment>

            uniform vec3 lodColor;
            uniform float lodOpacity;

            void main() {
                #include <clipping_planes_fragment>
                gl_FragColor = vec4(lodColor, lodOpacity);
                #include <colorspace_fragment>
            }
    `);const Ac=class Ns{static setupLodMeshResize(e){e.onBeforeRender=t=>{t.getSize(e.material[0].lodSize)}}static setupLodAttributes(e){e.setIndex(Ns.indices),e.setAttribute("position",Ns.vertices)}static setLodBuffer(e,t,i){let n=e.getItemFirst(),r=e.getItemLast(),o=this.setItemFirst(e,n,t,r);({itemFirst:n,dataBuffer:o,itemLast:r}=this.resetAttributes(n,o,t,r)),this.setupFinish(i,o),e.setAttribute("itemFirst",n),e.setAttribute("itemLast",r)}static setLodVisibility(e,t){const i=this.setupItemFilter(e);this.applyVisibilityState(e,t,i),i.needsUpdate=!0}static getInterAttribute(e,t){return e.getAttribute(t)}static computeLodSphere(e){if(!e.boundingSphere)return;const t=e.getItemFirst();if(t){const i=Ns.getLodMidPoint(e,t),n=Ns.getLodRadius(i,t);e.boundingSphere.radius=n}}static newLodMaterialParams(e){const t={lodColor:{value:new Ne(e.color)},lodSize:{value:new Oe(1,1)},lodOpacity:{value:e.opacity??1}};return{uniforms:fa.merge([xe.common,t]),transparent:e.transparent??!1,vertexShader:iu.vertex,fragmentShader:iu.fragment}}static setLodFilter(e,t){const i=e.getItemFilter(),n=i.array;for(let r=0;r<t.position.length;++r){const o=t.position[r]/2,a=t.size[r]/2;a===4294967295?n.fill(1,o):n.fill(1,o,o+a)}i.needsUpdate=!0}static getInstancedAttribute(e,t){return e.getAttribute(t)}static computeLodBox(e){if(!e.boundingBox)return;const t=e.getItemFirst();if(t){const i=t.data.array;e.boundingBox.setFromArray(i)}else e.boundingBox.makeEmpty()}static setDataBuffer(e,t,i){return(e=t.data).array=i,e.needsUpdate=!0,e}static disposeAllData(e){delete e.attributes.itemFilter,delete e.attributes.position,e.index=null,e.dispose(),Ns.setupLodAttributes(e)}static setItemFirst(e,t,i,n){let r=null;return t&&(i.length===t.data.array.length?r=this.setDataBuffer(r,t,i):(t=void 0,this.disposeAllData(e))),r}static setupFinish(e,t){e&&(t.onUploadCallback=e)}static resetAttributes(e,t,i,n){return e||(t=new eu(i,6,1),e=new Hn(t,3,0),n=new Hn(t,3,3)),{itemFirst:e,dataBuffer:t,itemLast:n}}static setupItemFilter(e){const t=e.getItemFirst().count;let i=e.getItemFilter();return i?i.array.fill(0):(i=new tp(new Uint8Array(t),1),e.setAttribute("itemFilter",i)),i}static applyVisibilityState(e,t,i){t!==!0?t&&this.setLodFilter(e,t):i.array.fill(1)}static getLodMidPoint(e,t){const i=e.boundingSphere.center;return this.tempBox.setFromArray(t.data.array),this.tempBox.getCenter(i),i}static getLodRadius(e,t){let i=0;const n=t.data.array.length;for(let r=0;r<n;r+=3){const o=t.data.array;Ns.tempVec.fromArray(o,r);const a=e.distanceToSquared(Ns.tempVec);i=Math.max(i,a)}return Math.sqrt(i)}};fe(Ac,"tempVec",new P),fe(Ac,"tempBox",new je),fe(Ac,"vertices",new dt([-1,2,0,1,2,0,-1,1,0,1,1,0,-1,0,0,1,0,0,-1,-1,0,1,-1,0],3)),fe(Ac,"indices",new RT([0,2,1,2,3,1,2,4,3,4,5,3,4,6,5,6,7,5],1));/*! pako 2.1.0 https://github.com/nodeca/pako @license (MIT AND Zlib) */function ma(s){let e=s.length;for(;--e>=0;)s[e]=0}const dp=256,u_=286,ol=30,al=15,fp=new Uint8Array([0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0]),zh=new Uint8Array([0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13]),bA=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,3,7]),M0=new Uint8Array([16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15]),ns=new Array(576);ma(ns);const Qa=new Array(60);ma(Qa);const Sl=new Array(512);ma(Sl);const ll=new Array(256);ma(ll);const Um=new Array(29);ma(Um);const nu=new Array(ol);function md(s,e,t,i,n){this.static_tree=s,this.extra_bits=e,this.extra_base=t,this.elems=i,this.max_length=n,this.has_stree=s&&s.length}let F0,P0,O0;function gd(s,e){this.dyn_tree=s,this.max_code=0,this.stat_desc=e}ma(nu);const d_=s=>s<256?Sl[s]:Sl[256+(s>>>7)],Al=(s,e)=>{s.pending_buf[s.pending++]=255&e,s.pending_buf[s.pending++]=e>>>8&255},Li=(s,e,t)=>{s.bi_valid>16-t?(s.bi_buf|=e<<s.bi_valid&65535,Al(s,s.bi_buf),s.bi_buf=e>>16-s.bi_valid,s.bi_valid+=t-16):(s.bi_buf|=e<<s.bi_valid&65535,s.bi_valid+=t)},kn=(s,e,t)=>{Li(s,t[2*e],t[2*e+1])},f_=(s,e)=>{let t=0;do t|=1&s,s>>>=1,t<<=1;while(--e>0);return t>>>1},p_=(s,e,t)=>{const i=new Array(16);let n,r,o=0;for(n=1;n<=al;n++)o=o+t[n-1]<<1,i[n]=o;for(r=0;r<=e;r++){let a=s[2*r+1];a!==0&&(s[2*r]=f_(i[a]++,a))}},L0=s=>{let e;for(e=0;e<u_;e++)s.dyn_ltree[2*e]=0;for(e=0;e<ol;e++)s.dyn_dtree[2*e]=0;for(e=0;e<19;e++)s.bl_tree[2*e]=0;s.dyn_ltree[512]=1,s.opt_len=s.static_len=0,s.sym_next=s.matches=0},m_=s=>{s.bi_valid>8?Al(s,s.bi_buf):s.bi_valid>0&&(s.pending_buf[s.pending++]=s.bi_buf),s.bi_buf=0,s.bi_valid=0},D0=(s,e,t,i)=>{const n=2*e,r=2*t;return s[n]<s[r]||s[n]===s[r]&&i[e]<=i[t]},Ed=(s,e,t)=>{const i=s.heap[t];let n=t<<1;for(;n<=s.heap_len&&(n<s.heap_len&&D0(e,s.heap[n+1],s.heap[n],s.depth)&&n++,!D0(e,i,s.heap[n],s.depth));)s.heap[t]=s.heap[n],t=n,n<<=1;s.heap[t]=i},N0=(s,e,t)=>{let i,n,r,o,a=0;if(s.sym_next!==0)do i=255&s.pending_buf[s.sym_buf+a++],i+=(255&s.pending_buf[s.sym_buf+a++])<<8,n=s.pending_buf[s.sym_buf+a++],i===0?kn(s,n,e):(r=ll[n],kn(s,r+dp+1,e),o=fp[r],o!==0&&(n-=Um[r],Li(s,n,o)),i--,r=d_(i),kn(s,r,t),o=zh[r],o!==0&&(i-=nu[r],Li(s,i,o)));while(a<s.sym_next);kn(s,256,e)},Id=(s,e)=>{const t=e.dyn_tree,i=e.stat_desc.static_tree,n=e.stat_desc.has_stree,r=e.stat_desc.elems;let o,a,l,c=-1;for(s.heap_len=0,s.heap_max=573,o=0;o<r;o++)t[2*o]!==0?(s.heap[++s.heap_len]=c=o,s.depth[o]=0):t[2*o+1]=0;for(;s.heap_len<2;)l=s.heap[++s.heap_len]=c<2?++c:0,t[2*l]=1,s.depth[l]=0,s.opt_len--,n&&(s.static_len-=i[2*l+1]);for(e.max_code=c,o=s.heap_len>>1;o>=1;o--)Ed(s,t,o);l=r;do o=s.heap[1],s.heap[1]=s.heap[s.heap_len--],Ed(s,t,1),a=s.heap[1],s.heap[--s.heap_max]=o,s.heap[--s.heap_max]=a,t[2*l]=t[2*o]+t[2*a],s.depth[l]=(s.depth[o]>=s.depth[a]?s.depth[o]:s.depth[a])+1,t[2*o+1]=t[2*a+1]=l,s.heap[1]=l++,Ed(s,t,1);while(s.heap_len>=2);s.heap[--s.heap_max]=s.heap[1],((h,d)=>{const u=d.dyn_tree,f=d.max_code,m=d.stat_desc.static_tree,g=d.stat_desc.has_stree,E=d.stat_desc.extra_bits,p=d.stat_desc.extra_base,v=d.stat_desc.max_length;let I,_,b,T,w,A,y=0;for(T=0;T<=al;T++)h.bl_count[T]=0;for(u[2*h.heap[h.heap_max]+1]=0,I=h.heap_max+1;I<573;I++)_=h.heap[I],T=u[2*u[2*_+1]+1]+1,T>v&&(T=v,y++),u[2*_+1]=T,_>f||(h.bl_count[T]++,w=0,_>=p&&(w=E[_-p]),A=u[2*_],h.opt_len+=A*(T+w),g&&(h.static_len+=A*(m[2*_+1]+w)));if(y!==0){do{for(T=v-1;h.bl_count[T]===0;)T--;h.bl_count[T]--,h.bl_count[T+1]+=2,h.bl_count[v]--,y-=2}while(y>0);for(T=v;T!==0;T--)for(_=h.bl_count[T];_!==0;)b=h.heap[--I],b>f||(u[2*b+1]!==T&&(h.opt_len+=(T-u[2*b+1])*u[2*b],u[2*b+1]=T),_--)}})(s,e),p_(t,c,s.bl_count)},U0=(s,e,t)=>{let i,n,r=-1,o=e[1],a=0,l=7,c=4;for(o===0&&(l=138,c=3),e[2*(t+1)+1]=65535,i=0;i<=t;i++)n=o,o=e[2*(i+1)+1],++a<l&&n===o||(a<c?s.bl_tree[2*n]+=a:n!==0?(n!==r&&s.bl_tree[2*n]++,s.bl_tree[32]++):a<=10?s.bl_tree[34]++:s.bl_tree[36]++,a=0,r=n,o===0?(l=138,c=3):n===o?(l=6,c=3):(l=7,c=4))},B0=(s,e,t)=>{let i,n,r=-1,o=e[1],a=0,l=7,c=4;for(o===0&&(l=138,c=3),i=0;i<=t;i++)if(n=o,o=e[2*(i+1)+1],!(++a<l&&n===o)){if(a<c)do kn(s,n,s.bl_tree);while(--a!=0);else n!==0?(n!==r&&(kn(s,n,s.bl_tree),a--),kn(s,16,s.bl_tree),Li(s,a-3,2)):a<=10?(kn(s,17,s.bl_tree),Li(s,a-3,3)):(kn(s,18,s.bl_tree),Li(s,a-11,7));a=0,r=n,o===0?(l=138,c=3):n===o?(l=6,c=3):(l=7,c=4)}};let z0=!1;const V0=(s,e,t,i)=>{Li(s,0+(i?1:0),3),m_(s),Al(s,t),Al(s,~t),t&&s.pending_buf.set(s.window.subarray(e,e+t),s.pending),s.pending+=t};var yA={_tr_init:s=>{z0||((()=>{let e,t,i,n,r;const o=new Array(16);for(i=0,n=0;n<28;n++)for(Um[n]=i,e=0;e<1<<fp[n];e++)ll[i++]=n;for(ll[i-1]=n,r=0,n=0;n<16;n++)for(nu[n]=r,e=0;e<1<<zh[n];e++)Sl[r++]=n;for(r>>=7;n<ol;n++)for(nu[n]=r<<7,e=0;e<1<<zh[n]-7;e++)Sl[256+r++]=n;for(t=0;t<=al;t++)o[t]=0;for(e=0;e<=143;)ns[2*e+1]=8,e++,o[8]++;for(;e<=255;)ns[2*e+1]=9,e++,o[9]++;for(;e<=279;)ns[2*e+1]=7,e++,o[7]++;for(;e<=287;)ns[2*e+1]=8,e++,o[8]++;for(p_(ns,287,o),e=0;e<ol;e++)Qa[2*e+1]=5,Qa[2*e]=f_(e,5);F0=new md(ns,fp,257,u_,al),P0=new md(Qa,zh,0,ol,al),O0=new md(new Array(0),bA,0,19,7)})(),z0=!0),s.l_desc=new gd(s.dyn_ltree,F0),s.d_desc=new gd(s.dyn_dtree,P0),s.bl_desc=new gd(s.bl_tree,O0),s.bi_buf=0,s.bi_valid=0,L0(s)},_tr_stored_block:V0,_tr_flush_block:(s,e,t,i)=>{let n,r,o=0;s.level>0?(s.strm.data_type===2&&(s.strm.data_type=(a=>{let l,c=4093624447;for(l=0;l<=31;l++,c>>>=1)if(1&c&&a.dyn_ltree[2*l]!==0)return 0;if(a.dyn_ltree[18]!==0||a.dyn_ltree[20]!==0||a.dyn_ltree[26]!==0)return 1;for(l=32;l<dp;l++)if(a.dyn_ltree[2*l]!==0)return 1;return 0})(s)),Id(s,s.l_desc),Id(s,s.d_desc),o=(a=>{let l;for(U0(a,a.dyn_ltree,a.l_desc.max_code),U0(a,a.dyn_dtree,a.d_desc.max_code),Id(a,a.bl_desc),l=18;l>=3&&a.bl_tree[2*M0[l]+1]===0;l--);return a.opt_len+=3*(l+1)+5+5+4,l})(s),n=s.opt_len+3+7>>>3,r=s.static_len+3+7>>>3,r<=n&&(n=r)):n=r=t+5,t+4<=n&&e!==-1?V0(s,e,t,i):s.strategy===4||r===n?(Li(s,2+(i?1:0),3),N0(s,ns,Qa)):(Li(s,4+(i?1:0),3),((a,l,c,h)=>{let d;for(Li(a,l-257,5),Li(a,c-1,5),Li(a,h-4,4),d=0;d<h;d++)Li(a,a.bl_tree[2*M0[d]+1],3);B0(a,a.dyn_ltree,l-1),B0(a,a.dyn_dtree,c-1)})(s,s.l_desc.max_code+1,s.d_desc.max_code+1,o+1),N0(s,s.dyn_ltree,s.dyn_dtree)),L0(s),i&&m_(s)},_tr_tally:(s,e,t)=>(s.pending_buf[s.sym_buf+s.sym_next++]=e,s.pending_buf[s.sym_buf+s.sym_next++]=e>>8,s.pending_buf[s.sym_buf+s.sym_next++]=t,e===0?s.dyn_ltree[2*t]++:(s.matches++,e--,s.dyn_ltree[2*(ll[t]+dp+1)]++,s.dyn_dtree[2*d_(e)]++),s.sym_next===s.sym_end),_tr_align:s=>{Li(s,2,3),kn(s,256,ns),(e=>{e.bi_valid===16?(Al(e,e.bi_buf),e.bi_buf=0,e.bi_valid=0):e.bi_valid>=8&&(e.pending_buf[e.pending++]=255&e.bi_buf,e.bi_buf>>=8,e.bi_valid-=8)})(s)}},cl=(s,e,t,i)=>{let n=65535&s,r=s>>>16&65535,o=0;for(;t!==0;){o=t>2e3?2e3:t,t-=o;do n=n+e[i++]|0,r=r+n|0;while(--o);n%=65521,r%=65521}return n|r<<16};const TA=new Uint32Array((()=>{let s,e=[];for(var t=0;t<256;t++){s=t;for(var i=0;i<8;i++)s=1&s?3988292384^s>>>1:s>>>1;e[t]=s}return e})());var si=(s,e,t,i)=>{const n=TA,r=i+t;s^=-1;for(let o=i;o<r;o++)s=s>>>8^n[255&(s^e[o])];return~s},Rl={2:"need dictionary",1:"stream end",0:"","-1":"file error","-2":"stream error","-3":"data error","-4":"insufficient memory","-5":"buffer error","-6":"incompatible version"},yu={Z_NO_FLUSH:0,Z_PARTIAL_FLUSH:1,Z_SYNC_FLUSH:2,Z_FULL_FLUSH:3,Z_FINISH:4,Z_BLOCK:5,Z_TREES:6,Z_OK:0,Z_STREAM_END:1,Z_NEED_DICT:2,Z_ERRNO:-1,Z_STREAM_ERROR:-2,Z_DATA_ERROR:-3,Z_MEM_ERROR:-4,Z_BUF_ERROR:-5,Z_NO_COMPRESSION:0,Z_BEST_SPEED:1,Z_BEST_COMPRESSION:9,Z_DEFAULT_COMPRESSION:-1,Z_FILTERED:1,Z_HUFFMAN_ONLY:2,Z_RLE:3,Z_FIXED:4,Z_DEFAULT_STRATEGY:0,Z_BINARY:0,Z_TEXT:1,Z_UNKNOWN:2,Z_DEFLATED:8};const{_tr_init:CA,_tr_stored_block:pp,_tr_flush_block:xA,_tr_tally:Xs,_tr_align:wA}=yA,{Z_NO_FLUSH:Zs,Z_PARTIAL_FLUSH:SA,Z_FULL_FLUSH:AA,Z_FINISH:sn,Z_BLOCK:k0,Z_OK:hi,Z_STREAM_END:G0,Z_STREAM_ERROR:Vn,Z_DATA_ERROR:RA,Z_BUF_ERROR:_d,Z_DEFAULT_COMPRESSION:MA,Z_FILTERED:FA,Z_HUFFMAN_ONLY:Rc,Z_RLE:PA,Z_FIXED:OA,Z_DEFAULT_STRATEGY:LA,Z_UNKNOWN:DA,Z_DEFLATED:su}=yu,Rr=258,Wn=262,Qo=42,Cr=113,Ja=666,xr=(s,e)=>(s.msg=Rl[e],e),H0=s=>2*s-(s>4?9:0),Hs=s=>{let e=s.length;for(;--e>=0;)s[e]=0},NA=s=>{let e,t,i,n=s.w_size;e=s.hash_size,i=e;do t=s.head[--i],s.head[i]=t>=n?t-n:0;while(--e);e=n,i=e;do t=s.prev[--i],s.prev[i]=t>=n?t-n:0;while(--e)};let js=(s,e,t)=>(e<<s.hash_shift^t)&s.hash_mask;const Vi=s=>{const e=s.state;let t=e.pending;t>s.avail_out&&(t=s.avail_out),t!==0&&(s.output.set(e.pending_buf.subarray(e.pending_out,e.pending_out+t),s.next_out),s.next_out+=t,e.pending_out+=t,s.total_out+=t,s.avail_out-=t,e.pending-=t,e.pending===0&&(e.pending_out=0))},Hi=(s,e)=>{xA(s,s.block_start>=0?s.block_start:-1,s.strstart-s.block_start,e),s.block_start=s.strstart,Vi(s.strm)},ft=(s,e)=>{s.pending_buf[s.pending++]=e},wa=(s,e)=>{s.pending_buf[s.pending++]=e>>>8&255,s.pending_buf[s.pending++]=255&e},mp=(s,e,t,i)=>{let n=s.avail_in;return n>i&&(n=i),n===0?0:(s.avail_in-=n,e.set(s.input.subarray(s.next_in,s.next_in+n),t),s.state.wrap===1?s.adler=cl(s.adler,e,n,t):s.state.wrap===2&&(s.adler=si(s.adler,e,n,t)),s.next_in+=n,s.total_in+=n,n)},g_=(s,e)=>{let t,i,n=s.max_chain_length,r=s.strstart,o=s.prev_length,a=s.nice_match;const l=s.strstart>s.w_size-Wn?s.strstart-(s.w_size-Wn):0,c=s.window,h=s.w_mask,d=s.prev,u=s.strstart+Rr;let f=c[r+o-1],m=c[r+o];s.prev_length>=s.good_match&&(n>>=2),a>s.lookahead&&(a=s.lookahead);do if(t=e,c[t+o]===m&&c[t+o-1]===f&&c[t]===c[r]&&c[++t]===c[r+1]){r+=2,t++;do;while(c[++r]===c[++t]&&c[++r]===c[++t]&&c[++r]===c[++t]&&c[++r]===c[++t]&&c[++r]===c[++t]&&c[++r]===c[++t]&&c[++r]===c[++t]&&c[++r]===c[++t]&&r<u);if(i=Rr-(u-r),r=u-Rr,i>o){if(s.match_start=e,o=i,i>=a)break;f=c[r+o-1],m=c[r+o]}}while((e=d[e&h])>l&&--n!=0);return o<=s.lookahead?o:s.lookahead},ko=s=>{const e=s.w_size;let t,i,n;do{if(i=s.window_size-s.lookahead-s.strstart,s.strstart>=e+(e-Wn)&&(s.window.set(s.window.subarray(e,e+e-i),0),s.match_start-=e,s.strstart-=e,s.block_start-=e,s.insert>s.strstart&&(s.insert=s.strstart),NA(s),i+=e),s.strm.avail_in===0)break;if(t=mp(s.strm,s.window,s.strstart+s.lookahead,i),s.lookahead+=t,s.lookahead+s.insert>=3)for(n=s.strstart-s.insert,s.ins_h=s.window[n],s.ins_h=js(s,s.ins_h,s.window[n+1]);s.insert&&(s.ins_h=js(s,s.ins_h,s.window[n+3-1]),s.prev[n&s.w_mask]=s.head[s.ins_h],s.head[s.ins_h]=n,n++,s.insert--,!(s.lookahead+s.insert<3)););}while(s.lookahead<Wn&&s.strm.avail_in!==0)},E_=(s,e)=>{let t,i,n,r=s.pending_buf_size-5>s.w_size?s.w_size:s.pending_buf_size-5,o=0,a=s.strm.avail_in;do{if(t=65535,n=s.bi_valid+42>>3,s.strm.avail_out<n||(n=s.strm.avail_out-n,i=s.strstart-s.block_start,t>i+s.strm.avail_in&&(t=i+s.strm.avail_in),t>n&&(t=n),t<r&&(t===0&&e!==sn||e===Zs||t!==i+s.strm.avail_in)))break;o=e===sn&&t===i+s.strm.avail_in?1:0,pp(s,0,0,o),s.pending_buf[s.pending-4]=t,s.pending_buf[s.pending-3]=t>>8,s.pending_buf[s.pending-2]=~t,s.pending_buf[s.pending-1]=~t>>8,Vi(s.strm),i&&(i>t&&(i=t),s.strm.output.set(s.window.subarray(s.block_start,s.block_start+i),s.strm.next_out),s.strm.next_out+=i,s.strm.avail_out-=i,s.strm.total_out+=i,s.block_start+=i,t-=i),t&&(mp(s.strm,s.strm.output,s.strm.next_out,t),s.strm.next_out+=t,s.strm.avail_out-=t,s.strm.total_out+=t)}while(o===0);return a-=s.strm.avail_in,a&&(a>=s.w_size?(s.matches=2,s.window.set(s.strm.input.subarray(s.strm.next_in-s.w_size,s.strm.next_in),0),s.strstart=s.w_size,s.insert=s.strstart):(s.window_size-s.strstart<=a&&(s.strstart-=s.w_size,s.window.set(s.window.subarray(s.w_size,s.w_size+s.strstart),0),s.matches<2&&s.matches++,s.insert>s.strstart&&(s.insert=s.strstart)),s.window.set(s.strm.input.subarray(s.strm.next_in-a,s.strm.next_in),s.strstart),s.strstart+=a,s.insert+=a>s.w_size-s.insert?s.w_size-s.insert:a),s.block_start=s.strstart),s.high_water<s.strstart&&(s.high_water=s.strstart),o?4:e!==Zs&&e!==sn&&s.strm.avail_in===0&&s.strstart===s.block_start?2:(n=s.window_size-s.strstart,s.strm.avail_in>n&&s.block_start>=s.w_size&&(s.block_start-=s.w_size,s.strstart-=s.w_size,s.window.set(s.window.subarray(s.w_size,s.w_size+s.strstart),0),s.matches<2&&s.matches++,n+=s.w_size,s.insert>s.strstart&&(s.insert=s.strstart)),n>s.strm.avail_in&&(n=s.strm.avail_in),n&&(mp(s.strm,s.window,s.strstart,n),s.strstart+=n,s.insert+=n>s.w_size-s.insert?s.w_size-s.insert:n),s.high_water<s.strstart&&(s.high_water=s.strstart),n=s.bi_valid+42>>3,n=s.pending_buf_size-n>65535?65535:s.pending_buf_size-n,r=n>s.w_size?s.w_size:n,i=s.strstart-s.block_start,(i>=r||(i||e===sn)&&e!==Zs&&s.strm.avail_in===0&&i<=n)&&(t=i>n?n:i,o=e===sn&&s.strm.avail_in===0&&t===i?1:0,pp(s,s.block_start,t,o),s.block_start+=t,Vi(s.strm)),o?3:1)},vd=(s,e)=>{let t,i;for(;;){if(s.lookahead<Wn){if(ko(s),s.lookahead<Wn&&e===Zs)return 1;if(s.lookahead===0)break}if(t=0,s.lookahead>=3&&(s.ins_h=js(s,s.ins_h,s.window[s.strstart+3-1]),t=s.prev[s.strstart&s.w_mask]=s.head[s.ins_h],s.head[s.ins_h]=s.strstart),t!==0&&s.strstart-t<=s.w_size-Wn&&(s.match_length=g_(s,t)),s.match_length>=3)if(i=Xs(s,s.strstart-s.match_start,s.match_length-3),s.lookahead-=s.match_length,s.match_length<=s.max_lazy_match&&s.lookahead>=3){s.match_length--;do s.strstart++,s.ins_h=js(s,s.ins_h,s.window[s.strstart+3-1]),t=s.prev[s.strstart&s.w_mask]=s.head[s.ins_h],s.head[s.ins_h]=s.strstart;while(--s.match_length!=0);s.strstart++}else s.strstart+=s.match_length,s.match_length=0,s.ins_h=s.window[s.strstart],s.ins_h=js(s,s.ins_h,s.window[s.strstart+1]);else i=Xs(s,0,s.window[s.strstart]),s.lookahead--,s.strstart++;if(i&&(Hi(s,!1),s.strm.avail_out===0))return 1}return s.insert=s.strstart<2?s.strstart:2,e===sn?(Hi(s,!0),s.strm.avail_out===0?3:4):s.sym_next&&(Hi(s,!1),s.strm.avail_out===0)?1:2},lo=(s,e)=>{let t,i,n;for(;;){if(s.lookahead<Wn){if(ko(s),s.lookahead<Wn&&e===Zs)return 1;if(s.lookahead===0)break}if(t=0,s.lookahead>=3&&(s.ins_h=js(s,s.ins_h,s.window[s.strstart+3-1]),t=s.prev[s.strstart&s.w_mask]=s.head[s.ins_h],s.head[s.ins_h]=s.strstart),s.prev_length=s.match_length,s.prev_match=s.match_start,s.match_length=2,t!==0&&s.prev_length<s.max_lazy_match&&s.strstart-t<=s.w_size-Wn&&(s.match_length=g_(s,t),s.match_length<=5&&(s.strategy===FA||s.match_length===3&&s.strstart-s.match_start>4096)&&(s.match_length=2)),s.prev_length>=3&&s.match_length<=s.prev_length){n=s.strstart+s.lookahead-3,i=Xs(s,s.strstart-1-s.prev_match,s.prev_length-3),s.lookahead-=s.prev_length-1,s.prev_length-=2;do++s.strstart<=n&&(s.ins_h=js(s,s.ins_h,s.window[s.strstart+3-1]),t=s.prev[s.strstart&s.w_mask]=s.head[s.ins_h],s.head[s.ins_h]=s.strstart);while(--s.prev_length!=0);if(s.match_available=0,s.match_length=2,s.strstart++,i&&(Hi(s,!1),s.strm.avail_out===0))return 1}else if(s.match_available){if(i=Xs(s,0,s.window[s.strstart-1]),i&&Hi(s,!1),s.strstart++,s.lookahead--,s.strm.avail_out===0)return 1}else s.match_available=1,s.strstart++,s.lookahead--}return s.match_available&&(i=Xs(s,0,s.window[s.strstart-1]),s.match_available=0),s.insert=s.strstart<2?s.strstart:2,e===sn?(Hi(s,!0),s.strm.avail_out===0?3:4):s.sym_next&&(Hi(s,!1),s.strm.avail_out===0)?1:2};function Pn(s,e,t,i,n){this.good_length=s,this.max_lazy=e,this.nice_length=t,this.max_chain=i,this.func=n}const $a=[new Pn(0,0,0,0,E_),new Pn(4,4,8,4,vd),new Pn(4,5,16,8,vd),new Pn(4,6,32,32,vd),new Pn(4,4,16,16,lo),new Pn(8,16,32,32,lo),new Pn(8,16,128,128,lo),new Pn(8,32,128,256,lo),new Pn(32,128,258,1024,lo),new Pn(32,258,258,4096,lo)];function UA(){this.strm=null,this.status=0,this.pending_buf=null,this.pending_buf_size=0,this.pending_out=0,this.pending=0,this.wrap=0,this.gzhead=null,this.gzindex=0,this.method=su,this.last_flush=-1,this.w_size=0,this.w_bits=0,this.w_mask=0,this.window=null,this.window_size=0,this.prev=null,this.head=null,this.ins_h=0,this.hash_size=0,this.hash_bits=0,this.hash_mask=0,this.hash_shift=0,this.block_start=0,this.match_length=0,this.prev_match=0,this.match_available=0,this.strstart=0,this.match_start=0,this.lookahead=0,this.prev_length=0,this.max_chain_length=0,this.max_lazy_match=0,this.level=0,this.strategy=0,this.good_match=0,this.nice_match=0,this.dyn_ltree=new Uint16Array(1146),this.dyn_dtree=new Uint16Array(122),this.bl_tree=new Uint16Array(78),Hs(this.dyn_ltree),Hs(this.dyn_dtree),Hs(this.bl_tree),this.l_desc=null,this.d_desc=null,this.bl_desc=null,this.bl_count=new Uint16Array(16),this.heap=new Uint16Array(573),Hs(this.heap),this.heap_len=0,this.heap_max=0,this.depth=new Uint16Array(573),Hs(this.depth),this.sym_buf=0,this.lit_bufsize=0,this.sym_next=0,this.sym_end=0,this.opt_len=0,this.static_len=0,this.matches=0,this.insert=0,this.bi_buf=0,this.bi_valid=0}const el=s=>{if(!s)return 1;const e=s.state;return!e||e.strm!==s||e.status!==Qo&&e.status!==57&&e.status!==69&&e.status!==73&&e.status!==91&&e.status!==103&&e.status!==Cr&&e.status!==Ja?1:0},I_=s=>{if(el(s))return xr(s,Vn);s.total_in=s.total_out=0,s.data_type=DA;const e=s.state;return e.pending=0,e.pending_out=0,e.wrap<0&&(e.wrap=-e.wrap),e.status=e.wrap===2?57:e.wrap?Qo:Cr,s.adler=e.wrap===2?0:1,e.last_flush=-2,CA(e),hi},__=s=>{const e=I_(s);var t;return e===hi&&((t=s.state).window_size=2*t.w_size,Hs(t.head),t.max_lazy_match=$a[t.level].max_lazy,t.good_match=$a[t.level].good_length,t.nice_match=$a[t.level].nice_length,t.max_chain_length=$a[t.level].max_chain,t.strstart=0,t.block_start=0,t.lookahead=0,t.insert=0,t.match_length=t.prev_length=2,t.match_available=0,t.ins_h=0),e},Y0=(s,e,t,i,n,r)=>{if(!s)return Vn;let o=1;if(e===MA&&(e=6),i<0?(o=0,i=-i):i>15&&(o=2,i-=16),n<1||n>9||t!==su||i<8||i>15||e<0||e>9||r<0||r>OA||i===8&&o!==1)return xr(s,Vn);i===8&&(i=9);const a=new UA;return s.state=a,a.strm=s,a.status=Qo,a.wrap=o,a.gzhead=null,a.w_bits=i,a.w_size=1<<a.w_bits,a.w_mask=a.w_size-1,a.hash_bits=n+7,a.hash_size=1<<a.hash_bits,a.hash_mask=a.hash_size-1,a.hash_shift=~~((a.hash_bits+3-1)/3),a.window=new Uint8Array(2*a.w_size),a.head=new Uint16Array(a.hash_size),a.prev=new Uint16Array(a.w_size),a.lit_bufsize=1<<n+6,a.pending_buf_size=4*a.lit_bufsize,a.pending_buf=new Uint8Array(a.pending_buf_size),a.sym_buf=a.lit_bufsize,a.sym_end=3*(a.lit_bufsize-1),a.level=e,a.strategy=r,a.method=t,__(s)};var hl={deflateInit:(s,e)=>Y0(s,e,su,15,8,LA),deflateInit2:Y0,deflateReset:__,deflateResetKeep:I_,deflateSetHeader:(s,e)=>el(s)||s.state.wrap!==2?Vn:(s.state.gzhead=e,hi),deflate:(s,e)=>{if(el(s)||e>k0||e<0)return s?xr(s,Vn):Vn;const t=s.state;if(!s.output||s.avail_in!==0&&!s.input||t.status===Ja&&e!==sn)return xr(s,s.avail_out===0?_d:Vn);const i=t.last_flush;if(t.last_flush=e,t.pending!==0){if(Vi(s),s.avail_out===0)return t.last_flush=-1,hi}else if(s.avail_in===0&&H0(e)<=H0(i)&&e!==sn)return xr(s,_d);if(t.status===Ja&&s.avail_in!==0)return xr(s,_d);if(t.status===Qo&&t.wrap===0&&(t.status=Cr),t.status===Qo){let n=su+(t.w_bits-8<<4)<<8,r=-1;if(r=t.strategy>=Rc||t.level<2?0:t.level<6?1:t.level===6?2:3,n|=r<<6,t.strstart!==0&&(n|=32),n+=31-n%31,wa(t,n),t.strstart!==0&&(wa(t,s.adler>>>16),wa(t,65535&s.adler)),s.adler=1,t.status=Cr,Vi(s),t.pending!==0)return t.last_flush=-1,hi}if(t.status===57){if(s.adler=0,ft(t,31),ft(t,139),ft(t,8),t.gzhead)ft(t,(t.gzhead.text?1:0)+(t.gzhead.hcrc?2:0)+(t.gzhead.extra?4:0)+(t.gzhead.name?8:0)+(t.gzhead.comment?16:0)),ft(t,255&t.gzhead.time),ft(t,t.gzhead.time>>8&255),ft(t,t.gzhead.time>>16&255),ft(t,t.gzhead.time>>24&255),ft(t,t.level===9?2:t.strategy>=Rc||t.level<2?4:0),ft(t,255&t.gzhead.os),t.gzhead.extra&&t.gzhead.extra.length&&(ft(t,255&t.gzhead.extra.length),ft(t,t.gzhead.extra.length>>8&255)),t.gzhead.hcrc&&(s.adler=si(s.adler,t.pending_buf,t.pending,0)),t.gzindex=0,t.status=69;else if(ft(t,0),ft(t,0),ft(t,0),ft(t,0),ft(t,0),ft(t,t.level===9?2:t.strategy>=Rc||t.level<2?4:0),ft(t,3),t.status=Cr,Vi(s),t.pending!==0)return t.last_flush=-1,hi}if(t.status===69){if(t.gzhead.extra){let n=t.pending,r=(65535&t.gzhead.extra.length)-t.gzindex;for(;t.pending+r>t.pending_buf_size;){let a=t.pending_buf_size-t.pending;if(t.pending_buf.set(t.gzhead.extra.subarray(t.gzindex,t.gzindex+a),t.pending),t.pending=t.pending_buf_size,t.gzhead.hcrc&&t.pending>n&&(s.adler=si(s.adler,t.pending_buf,t.pending-n,n)),t.gzindex+=a,Vi(s),t.pending!==0)return t.last_flush=-1,hi;n=0,r-=a}let o=new Uint8Array(t.gzhead.extra);t.pending_buf.set(o.subarray(t.gzindex,t.gzindex+r),t.pending),t.pending+=r,t.gzhead.hcrc&&t.pending>n&&(s.adler=si(s.adler,t.pending_buf,t.pending-n,n)),t.gzindex=0}t.status=73}if(t.status===73){if(t.gzhead.name){let n,r=t.pending;do{if(t.pending===t.pending_buf_size){if(t.gzhead.hcrc&&t.pending>r&&(s.adler=si(s.adler,t.pending_buf,t.pending-r,r)),Vi(s),t.pending!==0)return t.last_flush=-1,hi;r=0}n=t.gzindex<t.gzhead.name.length?255&t.gzhead.name.charCodeAt(t.gzindex++):0,ft(t,n)}while(n!==0);t.gzhead.hcrc&&t.pending>r&&(s.adler=si(s.adler,t.pending_buf,t.pending-r,r)),t.gzindex=0}t.status=91}if(t.status===91){if(t.gzhead.comment){let n,r=t.pending;do{if(t.pending===t.pending_buf_size){if(t.gzhead.hcrc&&t.pending>r&&(s.adler=si(s.adler,t.pending_buf,t.pending-r,r)),Vi(s),t.pending!==0)return t.last_flush=-1,hi;r=0}n=t.gzindex<t.gzhead.comment.length?255&t.gzhead.comment.charCodeAt(t.gzindex++):0,ft(t,n)}while(n!==0);t.gzhead.hcrc&&t.pending>r&&(s.adler=si(s.adler,t.pending_buf,t.pending-r,r))}t.status=103}if(t.status===103){if(t.gzhead.hcrc){if(t.pending+2>t.pending_buf_size&&(Vi(s),t.pending!==0))return t.last_flush=-1,hi;ft(t,255&s.adler),ft(t,s.adler>>8&255),s.adler=0}if(t.status=Cr,Vi(s),t.pending!==0)return t.last_flush=-1,hi}if(s.avail_in!==0||t.lookahead!==0||e!==Zs&&t.status!==Ja){let n=t.level===0?E_(t,e):t.strategy===Rc?((r,o)=>{let a;for(;;){if(r.lookahead===0&&(ko(r),r.lookahead===0)){if(o===Zs)return 1;break}if(r.match_length=0,a=Xs(r,0,r.window[r.strstart]),r.lookahead--,r.strstart++,a&&(Hi(r,!1),r.strm.avail_out===0))return 1}return r.insert=0,o===sn?(Hi(r,!0),r.strm.avail_out===0?3:4):r.sym_next&&(Hi(r,!1),r.strm.avail_out===0)?1:2})(t,e):t.strategy===PA?((r,o)=>{let a,l,c,h;const d=r.window;for(;;){if(r.lookahead<=Rr){if(ko(r),r.lookahead<=Rr&&o===Zs)return 1;if(r.lookahead===0)break}if(r.match_length=0,r.lookahead>=3&&r.strstart>0&&(c=r.strstart-1,l=d[c],l===d[++c]&&l===d[++c]&&l===d[++c])){h=r.strstart+Rr;do;while(l===d[++c]&&l===d[++c]&&l===d[++c]&&l===d[++c]&&l===d[++c]&&l===d[++c]&&l===d[++c]&&l===d[++c]&&c<h);r.match_length=Rr-(h-c),r.match_length>r.lookahead&&(r.match_length=r.lookahead)}if(r.match_length>=3?(a=Xs(r,1,r.match_length-3),r.lookahead-=r.match_length,r.strstart+=r.match_length,r.match_length=0):(a=Xs(r,0,r.window[r.strstart]),r.lookahead--,r.strstart++),a&&(Hi(r,!1),r.strm.avail_out===0))return 1}return r.insert=0,o===sn?(Hi(r,!0),r.strm.avail_out===0?3:4):r.sym_next&&(Hi(r,!1),r.strm.avail_out===0)?1:2})(t,e):$a[t.level].func(t,e);if(n!==3&&n!==4||(t.status=Ja),n===1||n===3)return s.avail_out===0&&(t.last_flush=-1),hi;if(n===2&&(e===SA?wA(t):e!==k0&&(pp(t,0,0,!1),e===AA&&(Hs(t.head),t.lookahead===0&&(t.strstart=0,t.block_start=0,t.insert=0))),Vi(s),s.avail_out===0))return t.last_flush=-1,hi}return e!==sn?hi:t.wrap<=0?G0:(t.wrap===2?(ft(t,255&s.adler),ft(t,s.adler>>8&255),ft(t,s.adler>>16&255),ft(t,s.adler>>24&255),ft(t,255&s.total_in),ft(t,s.total_in>>8&255),ft(t,s.total_in>>16&255),ft(t,s.total_in>>24&255)):(wa(t,s.adler>>>16),wa(t,65535&s.adler)),Vi(s),t.wrap>0&&(t.wrap=-t.wrap),t.pending!==0?hi:G0)},deflateEnd:s=>{if(el(s))return Vn;const e=s.state.status;return s.state=null,e===Cr?xr(s,RA):hi},deflateSetDictionary:(s,e)=>{let t=e.length;if(el(s))return Vn;const i=s.state,n=i.wrap;if(n===2||n===1&&i.status!==Qo||i.lookahead)return Vn;if(n===1&&(s.adler=cl(s.adler,e,t,0)),i.wrap=0,t>=i.w_size){n===0&&(Hs(i.head),i.strstart=0,i.block_start=0,i.insert=0);let l=new Uint8Array(i.w_size);l.set(e.subarray(t-i.w_size,t),0),e=l,t=i.w_size}const r=s.avail_in,o=s.next_in,a=s.input;for(s.avail_in=t,s.next_in=0,s.input=e,ko(i);i.lookahead>=3;){let l=i.strstart,c=i.lookahead-2;do i.ins_h=js(i,i.ins_h,i.window[l+3-1]),i.prev[l&i.w_mask]=i.head[i.ins_h],i.head[i.ins_h]=l,l++;while(--c);i.strstart=l,i.lookahead=2,ko(i)}return i.strstart+=i.lookahead,i.block_start=i.strstart,i.insert=i.lookahead,i.lookahead=0,i.match_length=i.prev_length=2,i.match_available=0,s.next_in=o,s.input=a,s.avail_in=r,i.wrap=n,hi},deflateInfo:"pako deflate (from Nodeca project)"};const BA=(s,e)=>Object.prototype.hasOwnProperty.call(s,e);var v_=function(s){const e=Array.prototype.slice.call(arguments,1);for(;e.length;){const t=e.shift();if(t){if(typeof t!="object")throw new TypeError(t+"must be non-object");for(const i in t)BA(t,i)&&(s[i]=t[i])}}return s},b_=s=>{let e=0;for(let i=0,n=s.length;i<n;i++)e+=s[i].length;const t=new Uint8Array(e);for(let i=0,n=0,r=s.length;i<r;i++){let o=s[i];t.set(o,n),n+=o.length}return t};let y_=!0;try{String.fromCharCode.apply(null,new Uint8Array(1))}catch{y_=!1}const Ml=new Uint8Array(256);for(let s=0;s<256;s++)Ml[s]=s>=252?6:s>=248?5:s>=240?4:s>=224?3:s>=192?2:1;Ml[254]=Ml[254]=1;var Bm=s=>{if(typeof TextEncoder=="function"&&TextEncoder.prototype.encode)return new TextEncoder().encode(s);let e,t,i,n,r,o=s.length,a=0;for(n=0;n<o;n++)t=s.charCodeAt(n),(64512&t)==55296&&n+1<o&&(i=s.charCodeAt(n+1),(64512&i)==56320&&(t=65536+(t-55296<<10)+(i-56320),n++)),a+=t<128?1:t<2048?2:t<65536?3:4;for(e=new Uint8Array(a),r=0,n=0;r<a;n++)t=s.charCodeAt(n),(64512&t)==55296&&n+1<o&&(i=s.charCodeAt(n+1),(64512&i)==56320&&(t=65536+(t-55296<<10)+(i-56320),n++)),t<128?e[r++]=t:t<2048?(e[r++]=192|t>>>6,e[r++]=128|63&t):t<65536?(e[r++]=224|t>>>12,e[r++]=128|t>>>6&63,e[r++]=128|63&t):(e[r++]=240|t>>>18,e[r++]=128|t>>>12&63,e[r++]=128|t>>>6&63,e[r++]=128|63&t);return e},zA=(s,e)=>{const t=e||s.length;if(typeof TextDecoder=="function"&&TextDecoder.prototype.decode)return new TextDecoder().decode(s.subarray(0,e));let i,n;const r=new Array(2*t);for(n=0,i=0;i<t;){let o=s[i++];if(o<128){r[n++]=o;continue}let a=Ml[o];if(a>4)r[n++]=65533,i+=a-1;else{for(o&=a===2?31:a===3?15:7;a>1&&i<t;)o=o<<6|63&s[i++],a--;a>1?r[n++]=65533:o<65536?r[n++]=o:(o-=65536,r[n++]=55296|o>>10&1023,r[n++]=56320|1023&o)}}return((o,a)=>{if(a<65534&&o.subarray&&y_)return String.fromCharCode.apply(null,o.length===a?o:o.subarray(0,a));let l="";for(let c=0;c<a;c++)l+=String.fromCharCode(o[c]);return l})(r,n)},VA=(s,e)=>{(e=e||s.length)>s.length&&(e=s.length);let t=e-1;for(;t>=0&&(192&s[t])==128;)t--;return t<0||t===0?e:t+Ml[s[t]]>e?t:e},T_=function(){this.input=null,this.next_in=0,this.avail_in=0,this.total_in=0,this.output=null,this.next_out=0,this.avail_out=0,this.total_out=0,this.msg="",this.state=null,this.data_type=2,this.adler=0};const C_=Object.prototype.toString,{Z_NO_FLUSH:kA,Z_SYNC_FLUSH:GA,Z_FULL_FLUSH:HA,Z_FINISH:YA,Z_OK:ru,Z_STREAM_END:WA,Z_DEFAULT_COMPRESSION:XA,Z_DEFAULT_STRATEGY:ZA,Z_DEFLATED:jA}=yu;function bd(s){this.options=v_({level:XA,method:jA,chunkSize:16384,windowBits:15,memLevel:8,strategy:ZA},s||{});let e=this.options;e.raw&&e.windowBits>0?e.windowBits=-e.windowBits:e.gzip&&e.windowBits>0&&e.windowBits<16&&(e.windowBits+=16),this.err=0,this.msg="",this.ended=!1,this.chunks=[],this.strm=new T_,this.strm.avail_out=0;let t=hl.deflateInit2(this.strm,e.level,e.method,e.windowBits,e.memLevel,e.strategy);if(t!==ru)throw new Error(Rl[t]);if(e.header&&hl.deflateSetHeader(this.strm,e.header),e.dictionary){let i;if(i=typeof e.dictionary=="string"?Bm(e.dictionary):C_.call(e.dictionary)==="[object ArrayBuffer]"?new Uint8Array(e.dictionary):e.dictionary,t=hl.deflateSetDictionary(this.strm,i),t!==ru)throw new Error(Rl[t]);this._dict_set=!0}}bd.prototype.push=function(s,e){const t=this.strm,i=this.options.chunkSize;let n,r;if(this.ended)return!1;for(r=e===~~e?e:e===!0?YA:kA,typeof s=="string"?t.input=Bm(s):C_.call(s)==="[object ArrayBuffer]"?t.input=new Uint8Array(s):t.input=s,t.next_in=0,t.avail_in=t.input.length;;)if(t.avail_out===0&&(t.output=new Uint8Array(i),t.next_out=0,t.avail_out=i),(r===GA||r===HA)&&t.avail_out<=6)this.onData(t.output.subarray(0,t.next_out)),t.avail_out=0;else{if(n=hl.deflate(t,r),n===WA)return t.next_out>0&&this.onData(t.output.subarray(0,t.next_out)),n=hl.deflateEnd(this.strm),this.onEnd(n),this.ended=!0,n===ru;if(t.avail_out!==0){if(r>0&&t.next_out>0)this.onData(t.output.subarray(0,t.next_out)),t.avail_out=0;else if(t.avail_in===0)break}else this.onData(t.output)}return!0},bd.prototype.onData=function(s){this.chunks.push(s)},bd.prototype.onEnd=function(s){s===ru&&(this.result=b_(this.chunks)),this.chunks=[],this.err=s,this.msg=this.strm.msg};const Mc=16209;var qA=function(s,e){let t,i,n,r,o,a,l,c,h,d,u,f,m,g,E,p,v,I,_,b,T,w,A,y;const C=s.state;t=s.next_in,A=s.input,i=t+(s.avail_in-5),n=s.next_out,y=s.output,r=n-(e-s.avail_out),o=n+(s.avail_out-257),a=C.dmax,l=C.wsize,c=C.whave,h=C.wnext,d=C.window,u=C.hold,f=C.bits,m=C.lencode,g=C.distcode,E=(1<<C.lenbits)-1,p=(1<<C.distbits)-1;e:do{f<15&&(u+=A[t++]<<f,f+=8,u+=A[t++]<<f,f+=8),v=m[u&E];t:for(;;){if(I=v>>>24,u>>>=I,f-=I,I=v>>>16&255,I===0)y[n++]=65535&v;else{if(!(16&I)){if(64&I){if(32&I){C.mode=16191;break e}s.msg="invalid literal/length code",C.mode=Mc;break e}v=m[(65535&v)+(u&(1<<I)-1)];continue t}for(_=65535&v,I&=15,I&&(f<I&&(u+=A[t++]<<f,f+=8),_+=u&(1<<I)-1,u>>>=I,f-=I),f<15&&(u+=A[t++]<<f,f+=8,u+=A[t++]<<f,f+=8),v=g[u&p];;){if(I=v>>>24,u>>>=I,f-=I,I=v>>>16&255,16&I){if(b=65535&v,I&=15,f<I&&(u+=A[t++]<<f,f+=8,f<I&&(u+=A[t++]<<f,f+=8)),b+=u&(1<<I)-1,b>a){s.msg="invalid distance too far back",C.mode=Mc;break e}if(u>>>=I,f-=I,I=n-r,b>I){if(I=b-I,I>c&&C.sane){s.msg="invalid distance too far back",C.mode=Mc;break e}if(T=0,w=d,h===0){if(T+=l-I,I<_){_-=I;do y[n++]=d[T++];while(--I);T=n-b,w=y}}else if(h<I){if(T+=l+h-I,I-=h,I<_){_-=I;do y[n++]=d[T++];while(--I);if(T=0,h<_){I=h,_-=I;do y[n++]=d[T++];while(--I);T=n-b,w=y}}}else if(T+=h-I,I<_){_-=I;do y[n++]=d[T++];while(--I);T=n-b,w=y}for(;_>2;)y[n++]=w[T++],y[n++]=w[T++],y[n++]=w[T++],_-=3;_&&(y[n++]=w[T++],_>1&&(y[n++]=w[T++]))}else{T=n-b;do y[n++]=y[T++],y[n++]=y[T++],y[n++]=y[T++],_-=3;while(_>2);_&&(y[n++]=y[T++],_>1&&(y[n++]=y[T++]))}break}if(64&I){s.msg="invalid distance code",C.mode=Mc;break e}v=g[(65535&v)+(u&(1<<I)-1)]}}break}}while(t<i&&n<o);_=f>>3,t-=_,f-=_<<3,u&=(1<<f)-1,s.next_in=t,s.next_out=n,s.avail_in=t<i?i-t+5:5-(t-i),s.avail_out=n<o?o-n+257:257-(n-o),C.hold=u,C.bits=f};const Fc=15,KA=new Uint16Array([3,4,5,6,7,8,9,10,11,13,15,17,19,23,27,31,35,43,51,59,67,83,99,115,131,163,195,227,258,0,0]),QA=new Uint8Array([16,16,16,16,16,16,16,16,17,17,17,17,18,18,18,18,19,19,19,19,20,20,20,20,21,21,21,21,16,72,78]),JA=new Uint16Array([1,2,3,4,5,7,9,13,17,25,33,49,65,97,129,193,257,385,513,769,1025,1537,2049,3073,4097,6145,8193,12289,16385,24577,0,0]),$A=new Uint8Array([16,16,16,16,17,17,18,18,19,19,20,20,21,21,22,22,23,23,24,24,25,25,26,26,27,27,28,28,29,29,64,64]);var ul=(s,e,t,i,n,r,o,a)=>{const l=a.bits;let c,h,d,u,f,m,g=0,E=0,p=0,v=0,I=0,_=0,b=0,T=0,w=0,A=0,y=null;const C=new Uint16Array(16),M=new Uint16Array(16);let R,L,S,U=null;for(g=0;g<=Fc;g++)C[g]=0;for(E=0;E<i;E++)C[e[t+E]]++;for(I=l,v=Fc;v>=1&&C[v]===0;v--);if(I>v&&(I=v),v===0)return n[r++]=20971520,n[r++]=20971520,a.bits=1,0;for(p=1;p<v&&C[p]===0;p++);for(I<p&&(I=p),T=1,g=1;g<=Fc;g++)if(T<<=1,T-=C[g],T<0)return-1;if(T>0&&(s===0||v!==1))return-1;for(M[1]=0,g=1;g<Fc;g++)M[g+1]=M[g]+C[g];for(E=0;E<i;E++)e[t+E]!==0&&(o[M[e[t+E]]++]=E);if(s===0?(y=U=o,m=20):s===1?(y=KA,U=QA,m=257):(y=JA,U=$A,m=0),A=0,E=0,g=p,f=r,_=I,b=0,d=-1,w=1<<I,u=w-1,s===1&&w>852||s===2&&w>592)return 1;for(;;){R=g-b,o[E]+1<m?(L=0,S=o[E]):o[E]>=m?(L=U[o[E]-m],S=y[o[E]-m]):(L=96,S=0),c=1<<g-b,h=1<<_,p=h;do h-=c,n[f+(A>>b)+h]=R<<24|L<<16|S;while(h!==0);for(c=1<<g-1;A&c;)c>>=1;if(c!==0?(A&=c-1,A+=c):A=0,E++,--C[g]==0){if(g===v)break;g=e[t+o[E]]}if(g>I&&(A&u)!==d){for(b===0&&(b=I),f+=p,_=g-b,T=1<<_;_+b<v&&(T-=C[_+b],!(T<=0));)_++,T<<=1;if(w+=1<<_,s===1&&w>852||s===2&&w>592)return 1;d=A&u,n[d]=I<<24|_<<16|f-r}}return A!==0&&(n[f+A]=g-b<<24|64<<16),a.bits=I,0};const{Z_FINISH:W0,Z_BLOCK:eR,Z_TREES:Pc,Z_OK:wr,Z_STREAM_END:tR,Z_NEED_DICT:iR,Z_STREAM_ERROR:nn,Z_DATA_ERROR:X0,Z_MEM_ERROR:Z0,Z_BUF_ERROR:nR,Z_DEFLATED:j0}=yu,Tu=16180,Oc=16190,ts=16191,yd=16192,Td=16194,Lc=16199,Dc=16200,Cd=16206,Rt=16209,q0=s=>(s>>>24&255)+(s>>>8&65280)+((65280&s)<<8)+((255&s)<<24);function sR(){this.strm=null,this.mode=0,this.last=!1,this.wrap=0,this.havedict=!1,this.flags=0,this.dmax=0,this.check=0,this.total=0,this.head=null,this.wbits=0,this.wsize=0,this.whave=0,this.wnext=0,this.window=null,this.hold=0,this.bits=0,this.length=0,this.offset=0,this.extra=0,this.lencode=null,this.distcode=null,this.lenbits=0,this.distbits=0,this.ncode=0,this.nlen=0,this.ndist=0,this.have=0,this.next=null,this.lens=new Uint16Array(320),this.work=new Uint16Array(288),this.lendyn=null,this.distdyn=null,this.sane=0,this.back=0,this.was=0}const Mr=s=>{if(!s)return 1;const e=s.state;return!e||e.strm!==s||e.mode<Tu||e.mode>16211?1:0},x_=s=>{if(Mr(s))return nn;const e=s.state;return s.total_in=s.total_out=e.total=0,s.msg="",e.wrap&&(s.adler=1&e.wrap),e.mode=Tu,e.last=0,e.havedict=0,e.flags=-1,e.dmax=32768,e.head=null,e.hold=0,e.bits=0,e.lencode=e.lendyn=new Int32Array(852),e.distcode=e.distdyn=new Int32Array(592),e.sane=1,e.back=-1,wr},w_=s=>{if(Mr(s))return nn;const e=s.state;return e.wsize=0,e.whave=0,e.wnext=0,x_(s)},S_=(s,e)=>{let t;if(Mr(s))return nn;const i=s.state;return e<0?(t=0,e=-e):(t=5+(e>>4),e<48&&(e&=15)),e&&(e<8||e>15)?nn:(i.window!==null&&i.wbits!==e&&(i.window=null),i.wrap=t,i.wbits=e,w_(s))},K0=(s,e)=>{if(!s)return nn;const t=new sR;s.state=t,t.strm=s,t.window=null,t.mode=Tu;const i=S_(s,e);return i!==wr&&(s.state=null),i};let xd,wd,Q0=!0;const rR=s=>{if(Q0){xd=new Int32Array(512),wd=new Int32Array(32);let e=0;for(;e<144;)s.lens[e++]=8;for(;e<256;)s.lens[e++]=9;for(;e<280;)s.lens[e++]=7;for(;e<288;)s.lens[e++]=8;for(ul(1,s.lens,0,288,xd,0,s.work,{bits:9}),e=0;e<32;)s.lens[e++]=5;ul(2,s.lens,0,32,wd,0,s.work,{bits:5}),Q0=!1}s.lencode=xd,s.lenbits=9,s.distcode=wd,s.distbits=5},J0=(s,e,t,i)=>{let n;const r=s.state;return r.window===null&&(r.wsize=1<<r.wbits,r.wnext=0,r.whave=0,r.window=new Uint8Array(r.wsize)),i>=r.wsize?(r.window.set(e.subarray(t-r.wsize,t),0),r.wnext=0,r.whave=r.wsize):(n=r.wsize-r.wnext,n>i&&(n=i),r.window.set(e.subarray(t-i,t-i+n),r.wnext),(i-=n)?(r.window.set(e.subarray(t-i,t),0),r.wnext=i,r.whave=r.wsize):(r.wnext+=n,r.wnext===r.wsize&&(r.wnext=0),r.whave<r.wsize&&(r.whave+=n))),0};var cs={inflateReset:w_,inflateReset2:S_,inflateResetKeep:x_,inflateInit:s=>K0(s,15),inflateInit2:K0,inflate:(s,e)=>{let t,i,n,r,o,a,l,c,h,d,u,f,m,g,E,p,v,I,_,b,T,w,A=0;const y=new Uint8Array(4);let C,M;const R=new Uint8Array([16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15]);if(Mr(s)||!s.output||!s.input&&s.avail_in!==0)return nn;t=s.state,t.mode===ts&&(t.mode=yd),o=s.next_out,n=s.output,l=s.avail_out,r=s.next_in,i=s.input,a=s.avail_in,c=t.hold,h=t.bits,d=a,u=l,w=wr;e:for(;;)switch(t.mode){case Tu:if(t.wrap===0){t.mode=yd;break}for(;h<16;){if(a===0)break e;a--,c+=i[r++]<<h,h+=8}if(2&t.wrap&&c===35615){t.wbits===0&&(t.wbits=15),t.check=0,y[0]=255&c,y[1]=c>>>8&255,t.check=si(t.check,y,2,0),c=0,h=0,t.mode=16181;break}if(t.head&&(t.head.done=!1),!(1&t.wrap)||(((255&c)<<8)+(c>>8))%31){s.msg="incorrect header check",t.mode=Rt;break}if((15&c)!==j0){s.msg="unknown compression method",t.mode=Rt;break}if(c>>>=4,h-=4,T=8+(15&c),t.wbits===0&&(t.wbits=T),T>15||T>t.wbits){s.msg="invalid window size",t.mode=Rt;break}t.dmax=1<<t.wbits,t.flags=0,s.adler=t.check=1,t.mode=512&c?16189:ts,c=0,h=0;break;case 16181:for(;h<16;){if(a===0)break e;a--,c+=i[r++]<<h,h+=8}if(t.flags=c,(255&t.flags)!==j0){s.msg="unknown compression method",t.mode=Rt;break}if(57344&t.flags){s.msg="unknown header flags set",t.mode=Rt;break}t.head&&(t.head.text=c>>8&1),512&t.flags&&4&t.wrap&&(y[0]=255&c,y[1]=c>>>8&255,t.check=si(t.check,y,2,0)),c=0,h=0,t.mode=16182;case 16182:for(;h<32;){if(a===0)break e;a--,c+=i[r++]<<h,h+=8}t.head&&(t.head.time=c),512&t.flags&&4&t.wrap&&(y[0]=255&c,y[1]=c>>>8&255,y[2]=c>>>16&255,y[3]=c>>>24&255,t.check=si(t.check,y,4,0)),c=0,h=0,t.mode=16183;case 16183:for(;h<16;){if(a===0)break e;a--,c+=i[r++]<<h,h+=8}t.head&&(t.head.xflags=255&c,t.head.os=c>>8),512&t.flags&&4&t.wrap&&(y[0]=255&c,y[1]=c>>>8&255,t.check=si(t.check,y,2,0)),c=0,h=0,t.mode=16184;case 16184:if(1024&t.flags){for(;h<16;){if(a===0)break e;a--,c+=i[r++]<<h,h+=8}t.length=c,t.head&&(t.head.extra_len=c),512&t.flags&&4&t.wrap&&(y[0]=255&c,y[1]=c>>>8&255,t.check=si(t.check,y,2,0)),c=0,h=0}else t.head&&(t.head.extra=null);t.mode=16185;case 16185:if(1024&t.flags&&(f=t.length,f>a&&(f=a),f&&(t.head&&(T=t.head.extra_len-t.length,t.head.extra||(t.head.extra=new Uint8Array(t.head.extra_len)),t.head.extra.set(i.subarray(r,r+f),T)),512&t.flags&&4&t.wrap&&(t.check=si(t.check,i,f,r)),a-=f,r+=f,t.length-=f),t.length))break e;t.length=0,t.mode=16186;case 16186:if(2048&t.flags){if(a===0)break e;f=0;do T=i[r+f++],t.head&&T&&t.length<65536&&(t.head.name+=String.fromCharCode(T));while(T&&f<a);if(512&t.flags&&4&t.wrap&&(t.check=si(t.check,i,f,r)),a-=f,r+=f,T)break e}else t.head&&(t.head.name=null);t.length=0,t.mode=16187;case 16187:if(4096&t.flags){if(a===0)break e;f=0;do T=i[r+f++],t.head&&T&&t.length<65536&&(t.head.comment+=String.fromCharCode(T));while(T&&f<a);if(512&t.flags&&4&t.wrap&&(t.check=si(t.check,i,f,r)),a-=f,r+=f,T)break e}else t.head&&(t.head.comment=null);t.mode=16188;case 16188:if(512&t.flags){for(;h<16;){if(a===0)break e;a--,c+=i[r++]<<h,h+=8}if(4&t.wrap&&c!==(65535&t.check)){s.msg="header crc mismatch",t.mode=Rt;break}c=0,h=0}t.head&&(t.head.hcrc=t.flags>>9&1,t.head.done=!0),s.adler=t.check=0,t.mode=ts;break;case 16189:for(;h<32;){if(a===0)break e;a--,c+=i[r++]<<h,h+=8}s.adler=t.check=q0(c),c=0,h=0,t.mode=Oc;case Oc:if(t.havedict===0)return s.next_out=o,s.avail_out=l,s.next_in=r,s.avail_in=a,t.hold=c,t.bits=h,iR;s.adler=t.check=1,t.mode=ts;case ts:if(e===eR||e===Pc)break e;case yd:if(t.last){c>>>=7&h,h-=7&h,t.mode=Cd;break}for(;h<3;){if(a===0)break e;a--,c+=i[r++]<<h,h+=8}switch(t.last=1&c,c>>>=1,h-=1,3&c){case 0:t.mode=16193;break;case 1:if(rR(t),t.mode=Lc,e===Pc){c>>>=2,h-=2;break e}break;case 2:t.mode=16196;break;case 3:s.msg="invalid block type",t.mode=Rt}c>>>=2,h-=2;break;case 16193:for(c>>>=7&h,h-=7&h;h<32;){if(a===0)break e;a--,c+=i[r++]<<h,h+=8}if((65535&c)!=(c>>>16^65535)){s.msg="invalid stored block lengths",t.mode=Rt;break}if(t.length=65535&c,c=0,h=0,t.mode=Td,e===Pc)break e;case Td:t.mode=16195;case 16195:if(f=t.length,f){if(f>a&&(f=a),f>l&&(f=l),f===0)break e;n.set(i.subarray(r,r+f),o),a-=f,r+=f,l-=f,o+=f,t.length-=f;break}t.mode=ts;break;case 16196:for(;h<14;){if(a===0)break e;a--,c+=i[r++]<<h,h+=8}if(t.nlen=257+(31&c),c>>>=5,h-=5,t.ndist=1+(31&c),c>>>=5,h-=5,t.ncode=4+(15&c),c>>>=4,h-=4,t.nlen>286||t.ndist>30){s.msg="too many length or distance symbols",t.mode=Rt;break}t.have=0,t.mode=16197;case 16197:for(;t.have<t.ncode;){for(;h<3;){if(a===0)break e;a--,c+=i[r++]<<h,h+=8}t.lens[R[t.have++]]=7&c,c>>>=3,h-=3}for(;t.have<19;)t.lens[R[t.have++]]=0;if(t.lencode=t.lendyn,t.lenbits=7,C={bits:t.lenbits},w=ul(0,t.lens,0,19,t.lencode,0,t.work,C),t.lenbits=C.bits,w){s.msg="invalid code lengths set",t.mode=Rt;break}t.have=0,t.mode=16198;case 16198:for(;t.have<t.nlen+t.ndist;){for(;A=t.lencode[c&(1<<t.lenbits)-1],E=A>>>24,p=A>>>16&255,v=65535&A,!(E<=h);){if(a===0)break e;a--,c+=i[r++]<<h,h+=8}if(v<16)c>>>=E,h-=E,t.lens[t.have++]=v;else{if(v===16){for(M=E+2;h<M;){if(a===0)break e;a--,c+=i[r++]<<h,h+=8}if(c>>>=E,h-=E,t.have===0){s.msg="invalid bit length repeat",t.mode=Rt;break}T=t.lens[t.have-1],f=3+(3&c),c>>>=2,h-=2}else if(v===17){for(M=E+3;h<M;){if(a===0)break e;a--,c+=i[r++]<<h,h+=8}c>>>=E,h-=E,T=0,f=3+(7&c),c>>>=3,h-=3}else{for(M=E+7;h<M;){if(a===0)break e;a--,c+=i[r++]<<h,h+=8}c>>>=E,h-=E,T=0,f=11+(127&c),c>>>=7,h-=7}if(t.have+f>t.nlen+t.ndist){s.msg="invalid bit length repeat",t.mode=Rt;break}for(;f--;)t.lens[t.have++]=T}}if(t.mode===Rt)break;if(t.lens[256]===0){s.msg="invalid code -- missing end-of-block",t.mode=Rt;break}if(t.lenbits=9,C={bits:t.lenbits},w=ul(1,t.lens,0,t.nlen,t.lencode,0,t.work,C),t.lenbits=C.bits,w){s.msg="invalid literal/lengths set",t.mode=Rt;break}if(t.distbits=6,t.distcode=t.distdyn,C={bits:t.distbits},w=ul(2,t.lens,t.nlen,t.ndist,t.distcode,0,t.work,C),t.distbits=C.bits,w){s.msg="invalid distances set",t.mode=Rt;break}if(t.mode=Lc,e===Pc)break e;case Lc:t.mode=Dc;case Dc:if(a>=6&&l>=258){s.next_out=o,s.avail_out=l,s.next_in=r,s.avail_in=a,t.hold=c,t.bits=h,qA(s,u),o=s.next_out,n=s.output,l=s.avail_out,r=s.next_in,i=s.input,a=s.avail_in,c=t.hold,h=t.bits,t.mode===ts&&(t.back=-1);break}for(t.back=0;A=t.lencode[c&(1<<t.lenbits)-1],E=A>>>24,p=A>>>16&255,v=65535&A,!(E<=h);){if(a===0)break e;a--,c+=i[r++]<<h,h+=8}if(p&&!(240&p)){for(I=E,_=p,b=v;A=t.lencode[b+((c&(1<<I+_)-1)>>I)],E=A>>>24,p=A>>>16&255,v=65535&A,!(I+E<=h);){if(a===0)break e;a--,c+=i[r++]<<h,h+=8}c>>>=I,h-=I,t.back+=I}if(c>>>=E,h-=E,t.back+=E,t.length=v,p===0){t.mode=16205;break}if(32&p){t.back=-1,t.mode=ts;break}if(64&p){s.msg="invalid literal/length code",t.mode=Rt;break}t.extra=15&p,t.mode=16201;case 16201:if(t.extra){for(M=t.extra;h<M;){if(a===0)break e;a--,c+=i[r++]<<h,h+=8}t.length+=c&(1<<t.extra)-1,c>>>=t.extra,h-=t.extra,t.back+=t.extra}t.was=t.length,t.mode=16202;case 16202:for(;A=t.distcode[c&(1<<t.distbits)-1],E=A>>>24,p=A>>>16&255,v=65535&A,!(E<=h);){if(a===0)break e;a--,c+=i[r++]<<h,h+=8}if(!(240&p)){for(I=E,_=p,b=v;A=t.distcode[b+((c&(1<<I+_)-1)>>I)],E=A>>>24,p=A>>>16&255,v=65535&A,!(I+E<=h);){if(a===0)break e;a--,c+=i[r++]<<h,h+=8}c>>>=I,h-=I,t.back+=I}if(c>>>=E,h-=E,t.back+=E,64&p){s.msg="invalid distance code",t.mode=Rt;break}t.offset=v,t.extra=15&p,t.mode=16203;case 16203:if(t.extra){for(M=t.extra;h<M;){if(a===0)break e;a--,c+=i[r++]<<h,h+=8}t.offset+=c&(1<<t.extra)-1,c>>>=t.extra,h-=t.extra,t.back+=t.extra}if(t.offset>t.dmax){s.msg="invalid distance too far back",t.mode=Rt;break}t.mode=16204;case 16204:if(l===0)break e;if(f=u-l,t.offset>f){if(f=t.offset-f,f>t.whave&&t.sane){s.msg="invalid distance too far back",t.mode=Rt;break}f>t.wnext?(f-=t.wnext,m=t.wsize-f):m=t.wnext-f,f>t.length&&(f=t.length),g=t.window}else g=n,m=o-t.offset,f=t.length;f>l&&(f=l),l-=f,t.length-=f;do n[o++]=g[m++];while(--f);t.length===0&&(t.mode=Dc);break;case 16205:if(l===0)break e;n[o++]=t.length,l--,t.mode=Dc;break;case Cd:if(t.wrap){for(;h<32;){if(a===0)break e;a--,c|=i[r++]<<h,h+=8}if(u-=l,s.total_out+=u,t.total+=u,4&t.wrap&&u&&(s.adler=t.check=t.flags?si(t.check,n,u,o-u):cl(t.check,n,u,o-u)),u=l,4&t.wrap&&(t.flags?c:q0(c))!==t.check){s.msg="incorrect data check",t.mode=Rt;break}c=0,h=0}t.mode=16207;case 16207:if(t.wrap&&t.flags){for(;h<32;){if(a===0)break e;a--,c+=i[r++]<<h,h+=8}if(4&t.wrap&&c!==(4294967295&t.total)){s.msg="incorrect length check",t.mode=Rt;break}c=0,h=0}t.mode=16208;case 16208:w=tR;break e;case Rt:w=X0;break e;case 16210:return Z0;default:return nn}return s.next_out=o,s.avail_out=l,s.next_in=r,s.avail_in=a,t.hold=c,t.bits=h,(t.wsize||u!==s.avail_out&&t.mode<Rt&&(t.mode<Cd||e!==W0))&&J0(s,s.output,s.next_out,u-s.avail_out),d-=s.avail_in,u-=s.avail_out,s.total_in+=d,s.total_out+=u,t.total+=u,4&t.wrap&&u&&(s.adler=t.check=t.flags?si(t.check,n,u,s.next_out-u):cl(t.check,n,u,s.next_out-u)),s.data_type=t.bits+(t.last?64:0)+(t.mode===ts?128:0)+(t.mode===Lc||t.mode===Td?256:0),(d===0&&u===0||e===W0)&&w===wr&&(w=nR),w},inflateEnd:s=>{if(Mr(s))return nn;let e=s.state;return e.window&&(e.window=null),s.state=null,wr},inflateGetHeader:(s,e)=>{if(Mr(s))return nn;const t=s.state;return 2&t.wrap?(t.head=e,e.done=!1,wr):nn},inflateSetDictionary:(s,e)=>{const t=e.length;let i,n,r;return Mr(s)?nn:(i=s.state,i.wrap!==0&&i.mode!==Oc?nn:i.mode===Oc&&(n=1,n=cl(n,e,t,0),n!==i.check)?X0:(r=J0(s,e,t,t),r?(i.mode=16210,Z0):(i.havedict=1,wr)))},inflateInfo:"pako inflate (from Nodeca project)"},oR=function(){this.text=0,this.time=0,this.xflags=0,this.os=0,this.extra=null,this.extra_len=0,this.name="",this.comment="",this.hcrc=0,this.done=!1};const A_=Object.prototype.toString,{Z_NO_FLUSH:aR,Z_FINISH:lR,Z_OK:dl,Z_STREAM_END:Sd,Z_NEED_DICT:Ad,Z_STREAM_ERROR:cR,Z_DATA_ERROR:$0,Z_MEM_ERROR:hR}=yu;function Rd(s){this.options=v_({chunkSize:65536,windowBits:15,to:""},s||{});const e=this.options;e.raw&&e.windowBits>=0&&e.windowBits<16&&(e.windowBits=-e.windowBits,e.windowBits===0&&(e.windowBits=-15)),!(e.windowBits>=0&&e.windowBits<16)||s&&s.windowBits||(e.windowBits+=32),e.windowBits>15&&e.windowBits<48&&(15&e.windowBits||(e.windowBits|=15)),this.err=0,this.msg="",this.ended=!1,this.chunks=[],this.strm=new T_,this.strm.avail_out=0;let t=cs.inflateInit2(this.strm,e.windowBits);if(t!==dl)throw new Error(Rl[t]);if(this.header=new oR,cs.inflateGetHeader(this.strm,this.header),e.dictionary&&(typeof e.dictionary=="string"?e.dictionary=Bm(e.dictionary):A_.call(e.dictionary)==="[object ArrayBuffer]"&&(e.dictionary=new Uint8Array(e.dictionary)),e.raw&&(t=cs.inflateSetDictionary(this.strm,e.dictionary),t!==dl)))throw new Error(Rl[t])}Rd.prototype.push=function(s,e){const t=this.strm,i=this.options.chunkSize,n=this.options.dictionary;let r,o,a;if(this.ended)return!1;for(o=e===~~e?e:e===!0?lR:aR,A_.call(s)==="[object ArrayBuffer]"?t.input=new Uint8Array(s):t.input=s,t.next_in=0,t.avail_in=t.input.length;;){for(t.avail_out===0&&(t.output=new Uint8Array(i),t.next_out=0,t.avail_out=i),r=cs.inflate(t,o),r===Ad&&n&&(r=cs.inflateSetDictionary(t,n),r===dl?r=cs.inflate(t,o):r===$0&&(r=Ad));t.avail_in>0&&r===Sd&&t.state.wrap>0&&s[t.next_in]!==0;)cs.inflateReset(t),r=cs.inflate(t,o);switch(r){case cR:case $0:case Ad:case hR:return this.onEnd(r),this.ended=!0,!1}if(a=t.avail_out,t.next_out&&(t.avail_out===0||r===Sd))if(this.options.to==="string"){let l=VA(t.output,t.next_out),c=t.next_out-l,h=zA(t.output,l);t.next_out=c,t.avail_out=i-c,c&&t.output.set(t.output.subarray(l,l+c),0),this.onData(h)}else this.onData(t.output.length===t.next_out?t.output:t.output.subarray(0,t.next_out));if(r!==dl||a!==0){if(r===Sd)return r=cs.inflateEnd(this.strm),this.onEnd(r),this.ended=!0,!0;if(t.avail_in===0)break}}return!0},Rd.prototype.onData=function(s){this.chunks.push(s)},Rd.prototype.onEnd=function(s){s===dl&&(this.options.to==="string"?this.result=this.chunks.join(""):this.result=b_(this.chunks)),this.chunks=[],this.err=s,this.msg=this.strm.msg};class ou extends ji{constructor(e,t,i,n){if(super(e,t,i),fe(this,"fragment"),fe(this,"material"),fe(this,"geometry"),Array.isArray(t)||(t=[t]),this.material=t,!e.index)throw new Error("The geometry for fragments must be indexed!");this.geometry=e,this.fragment=n;const r=e.index.count;e.groups.length||e.groups.push({start:0,count:r,materialIndex:0})}exportData(){const e=this.geometry.attributes.position.array,t=this.geometry.attributes.normal.array,i=Array.from(this.geometry.index.array),n=[];for(const l of this.geometry.groups){const c=l.materialIndex||0,{start:h,count:d}=l;n.push(h,d,c)}const r=[];if(Array.isArray(this.material))for(const l of this.material){const c=l.opacity,h=l.transparent?1:0,d=new Ne(l.color).toArray();r.push(c,h,...d)}const o=Array.from(this.instanceMatrix.array);let a;return a=this.instanceColor!==null?Array.from(this.instanceColor.array):[],{position:e,normal:t,index:i,groups:n,materials:r,matrices:o,colors:a}}clone(e){throw new Error("Fragment meshes can't be cloned directly. Use mesh.fragment.clone instead!")}}const Md=1.25,Cu=65535,uR=Math.pow(2,-24),Fd=Symbol("SKIP_GENERATION");function la(s){return function(e){return e.index?e.index.count:e.attributes.position.count}(s)/3}function dR(s,e){if(!s.index){const t=s.attributes.position.count,i=function(n,r=ArrayBuffer){return n>65535?new Uint32Array(new r(4*n)):new Uint16Array(new r(2*n))}(t,e.useSharedArrayBuffer?SharedArrayBuffer:ArrayBuffer);s.setIndex(new at(i,1));for(let n=0;n<t;n++)i[n]=n}}function R_(s){const e=la(s),t=s.drawRange,i=t.start/3,n=(t.start+t.count)/3,r=Math.max(0,i),o=Math.min(e,n)-r;return[{offset:Math.floor(r),count:Math.floor(o)}]}function M_(s){if(!s.groups||!s.groups.length)return R_(s);const e=[],t=new Set,i=s.drawRange,n=i.start/3,r=(i.start+i.count)/3;for(const a of s.groups){const l=a.start/3,c=(a.start+a.count)/3;t.add(Math.max(n,l)),t.add(Math.min(r,c))}const o=Array.from(t.values()).sort((a,l)=>a-l);for(let a=0;a<o.length-1;a++){const l=o[a],c=o[a+1];e.push({offset:Math.floor(l),count:Math.floor(c-l)})}return e}function Lt(s,e,t){return t.min.x=e[s],t.min.y=e[s+1],t.min.z=e[s+2],t.max.x=e[s+3],t.max.y=e[s+4],t.max.z=e[s+5],t}function eE(s){let e=-1,t=-1/0;for(let i=0;i<3;i++){const n=s[i+3]-s[i];n>t&&(t=n,e=i)}return e}function tE(s,e){e.set(s)}function iE(s,e,t){let i,n;for(let r=0;r<3;r++){const o=r+3;i=s[r],n=e[r],t[r]=i<n?i:n,i=s[o],n=e[o],t[o]=i>n?i:n}}function Nc(s,e,t){for(let i=0;i<3;i++){const n=e[s+2*i],r=e[s+2*i+1],o=n-r,a=n+r;o<t[i]&&(t[i]=o),a>t[i+3]&&(t[i+3]=a)}}function Sa(s){const e=s[3]-s[0],t=s[4]-s[1],i=s[5]-s[2];return 2*(e*t+t*i+i*e)}function Pd(s,e,t,i,n=null){let r=1/0,o=1/0,a=1/0,l=-1/0,c=-1/0,h=-1/0,d=1/0,u=1/0,f=1/0,m=-1/0,g=-1/0,E=-1/0;const p=n!==null;for(let v=6*e,I=6*(e+t);v<I;v+=6){const _=s[v+0],b=s[v+1],T=_-b,w=_+b;T<r&&(r=T),w>l&&(l=w),p&&_<d&&(d=_),p&&_>m&&(m=_);const A=s[v+2],y=s[v+3],C=A-y,M=A+y;C<o&&(o=C),M>c&&(c=M),p&&A<u&&(u=A),p&&A>g&&(g=A);const R=s[v+4],L=s[v+5],S=R-L,U=R+L;S<a&&(a=S),U>h&&(h=U),p&&R<f&&(f=R),p&&R>E&&(E=R)}i[0]=r,i[1]=o,i[2]=a,i[3]=l,i[4]=c,i[5]=h,p&&(n[0]=d,n[1]=u,n[2]=f,n[3]=m,n[4]=g,n[5]=E)}const Vh=32,fR=(s,e)=>s.candidate-e.candidate,Os=new Array(Vh).fill().map(()=>({count:0,bounds:new Float32Array(6),rightCacheBounds:new Float32Array(6),leftCacheBounds:new Float32Array(6),candidate:0})),Uc=new Float32Array(6);let Bc=class{constructor(){}};function pR(s,e,t,i,n,r){let o=i,a=i+n-1;const l=r.pos,c=2*r.axis;for(;;){for(;o<=a&&t[6*o+c]<l;)o++;for(;o<=a&&t[6*a+c]>=l;)a--;if(!(o<a))return o;for(let h=0;h<3;h++){let d=e[3*o+h];e[3*o+h]=e[3*a+h],e[3*a+h]=d}for(let h=0;h<6;h++){let d=t[6*o+h];t[6*o+h]=t[6*a+h],t[6*a+h]=d}o++,a--}}function mR(s,e,t,i,n,r){let o=i,a=i+n-1;const l=r.pos,c=2*r.axis;for(;;){for(;o<=a&&t[6*o+c]<l;)o++;for(;o<=a&&t[6*a+c]>=l;)a--;if(!(o<a))return o;{let h=s[o];s[o]=s[a],s[a]=h;for(let d=0;d<6;d++){let u=t[6*o+d];t[6*o+d]=t[6*a+d],t[6*a+d]=u}o++,a--}}}function gR(s,e){const t=s.geometry,i=t.index?t.index.array:null,n=e.maxDepth,r=e.verbose,o=e.maxLeafTris,a=e.strategy,l=e.onProgress,c=la(t),h=s._indirectBuffer;let d=!1;const u=new Float32Array(6),f=new Float32Array(6),m=function(_,b){var T;(T=b)[0]=T[1]=T[2]=1/0,T[3]=T[4]=T[5]=-1/0;const w=_.attributes.position,A=_.index?_.index.array:null,y=la(_),C=new Float32Array(6*y),M=w.normalized,R=w.array,L=w.offset||0;let S=3;w.isInterleavedBufferAttribute&&(S=w.data.stride);const U=["getX","getY","getZ"];for(let z=0;z<y;z++){const k=3*z,H=6*z;let Y=k+0,re=k+1,j=k+2;A&&(Y=A[Y],re=A[re],j=A[j]),M||(Y=Y*S+L,re=re*S+L,j=j*S+L);for(let X=0;X<3;X++){let ue,Z,K;M?(ue=w[U[X]](Y),Z=w[U[X]](re),K=w[U[X]](j)):(ue=R[Y+X],Z=R[re+X],K=R[j+X]);let Ie=ue;Z<Ie&&(Ie=Z),K<Ie&&(Ie=K);let me=ue;Z>me&&(me=Z),K>me&&(me=K);const ce=(me-Ie)/2,ge=2*X;C[H+ge+0]=Ie+ce,C[H+ge+1]=ce+(Math.abs(Ie)+ce)*uR,Ie<b[X]&&(b[X]=Ie),me>b[X+3]&&(b[X+3]=me)}}return C}(t,u),g=e.indirect?mR:pR,E=[],p=e.indirect?R_(t):M_(t);if(p.length===1){const _=p[0],b=new Bc;b.boundingData=u,function(T,w,A,y){let C=1/0,M=1/0,R=1/0,L=-1/0,S=-1/0,U=-1/0;for(let z=6*w,k=6*(w+A);z<k;z+=6){const H=T[z+0];H<C&&(C=H),H>L&&(L=H);const Y=T[z+2];Y<M&&(M=Y),Y>S&&(S=Y);const re=T[z+4];re<R&&(R=re),re>U&&(U=re)}y[0]=C,y[1]=M,y[2]=R,y[3]=L,y[4]=S,y[5]=U}(m,_.offset,_.count,f),I(b,_.offset,_.count,f),E.push(b)}else for(let _ of p){const b=new Bc;b.boundingData=new Float32Array(6),Pd(m,_.offset,_.count,b.boundingData,f),I(b,_.offset,_.count,f),E.push(b)}return E;function v(_){l&&l(_/c)}function I(_,b,T,w=null,A=0){if(!d&&A>=n&&(d=!0,r&&(console.warn(`MeshBVH: Max depth of ${n} reached when generating BVH. Consider increasing maxDepth.`),console.warn(t))),T<=o||A>=n)return v(b+T),_.offset=b,_.count=T,_;const y=function(M,R,L,S,U,z){let k=-1,H=0;if(z===0)k=eE(R),k!==-1&&(H=(R[k]+R[k+3])/2);else if(z===1)k=eE(M),k!==-1&&(H=function(Y,re,j,X){let ue=0;for(let Z=re,K=re+j;Z<K;Z++)ue+=Y[6*Z+2*X];return ue/j}(L,S,U,k));else if(z===2){const Y=Sa(M);let re=Md*U;const j=6*S,X=6*(S+U);for(let ue=0;ue<3;ue++){const Z=R[ue],K=(R[ue+3]-Z)/Vh;if(U<8){const Ie=[...Os];Ie.length=U;let me=0;for(let ge=j;ge<X;ge+=6,me++){const Ee=Ie[me];Ee.candidate=L[ge+2*ue],Ee.count=0;const{bounds:Se,leftCacheBounds:ke,rightCacheBounds:Ue}=Ee;for(let x=0;x<3;x++)Ue[x]=1/0,Ue[x+3]=-1/0,ke[x]=1/0,ke[x+3]=-1/0,Se[x]=1/0,Se[x+3]=-1/0;Nc(ge,L,Se)}Ie.sort(fR);let ce=U;for(let ge=0;ge<ce;ge++){const Ee=Ie[ge];for(;ge+1<ce&&Ie[ge+1].candidate===Ee.candidate;)Ie.splice(ge+1,1),ce--}for(let ge=j;ge<X;ge+=6){const Ee=L[ge+2*ue];for(let Se=0;Se<ce;Se++){const ke=Ie[Se];Ee>=ke.candidate?Nc(ge,L,ke.rightCacheBounds):(Nc(ge,L,ke.leftCacheBounds),ke.count++)}}for(let ge=0;ge<ce;ge++){const Ee=Ie[ge],Se=Ee.count,ke=U-Ee.count,Ue=Ee.leftCacheBounds,x=Ee.rightCacheBounds;let ae=0;Se!==0&&(ae=Sa(Ue)/Y);let Q=0;ke!==0&&(Q=Sa(x)/Y);const G=1+Md*(ae*Se+Q*ke);G<re&&(k=ue,re=G,H=Ee.candidate)}}else{for(let ce=0;ce<Vh;ce++){const ge=Os[ce];ge.count=0,ge.candidate=Z+K+ce*K;const Ee=ge.bounds;for(let Se=0;Se<3;Se++)Ee[Se]=1/0,Ee[Se+3]=-1/0}for(let ce=j;ce<X;ce+=6){let ge=~~((L[ce+2*ue]-Z)/K);ge>=Vh&&(ge=31);const Ee=Os[ge];Ee.count++,Nc(ce,L,Ee.bounds)}const Ie=Os[31];tE(Ie.bounds,Ie.rightCacheBounds);for(let ce=30;ce>=0;ce--){const ge=Os[ce],Ee=Os[ce+1];iE(ge.bounds,Ee.rightCacheBounds,ge.rightCacheBounds)}let me=0;for(let ce=0;ce<31;ce++){const ge=Os[ce],Ee=ge.count,Se=ge.bounds,ke=Os[ce+1].rightCacheBounds;Ee!==0&&(me===0?tE(Se,Uc):iE(Se,Uc,Uc)),me+=Ee;let Ue=0,x=0;me!==0&&(Ue=Sa(Uc)/Y);const ae=U-me;ae!==0&&(x=Sa(ke)/Y);const Q=1+Md*(Ue*me+x*ae);Q<re&&(k=ue,re=Q,H=ge.candidate)}}}}else console.warn(`MeshBVH: Invalid build strategy value ${z} used.`);return{axis:k,pos:H}}(_.boundingData,w,m,b,T,a);if(y.axis===-1)return v(b+T),_.offset=b,_.count=T,_;const C=g(h,i,m,b,T,y);if(C===b||C===b+T)v(b+T),_.offset=b,_.count=T;else{_.splitAxis=y.axis;const M=new Bc,R=b,L=C-b;_.left=M,M.boundingData=new Float32Array(6),Pd(m,R,L,M.boundingData,f),I(M,R,L,f,A+1);const S=new Bc,U=C,z=T-L;_.right=S,S.boundingData=new Float32Array(6),Pd(m,U,z,S.boundingData,f),I(S,U,z,f,A+1)}return _}}function ER(s,e){const t=s.geometry;e.indirect&&(s._indirectBuffer=function(d,u){const f=(d.index?d.index.count:d.attributes.position.count)/3,m=f>65536,g=m?4:2,E=u?new SharedArrayBuffer(f*g):new ArrayBuffer(f*g),p=m?new Uint32Array(E):new Uint16Array(E);for(let v=0,I=p.length;v<I;v++)p[v]=v;return p}(t,e.useSharedArrayBuffer),function(d){if(d.groups.length===0)return!1;const u=la(d),f=M_(d).sort((E,p)=>E.offset-p.offset),m=f[f.length-1];m.count=Math.min(u-m.offset,m.count);let g=0;return f.forEach(({count:E})=>g+=E),u!==g}(t)&&!e.verbose&&console.warn('MeshBVH: Provided geometry contains groups that do not fully span the vertex contents while using the "indirect" option. BVH may incorrectly report intersections on unrendered portions of the geometry.')),s._indirectBuffer||dR(t,e);const i=gR(s,e);let n,r,o;const a=[],l=e.useSharedArrayBuffer?SharedArrayBuffer:ArrayBuffer;for(let d=0;d<i.length;d++){const u=i[d],f=new l(32*c(u));n=new Float32Array(f),r=new Uint32Array(f),o=new Uint16Array(f),h(0,u),a.push(f)}return void(s._roots=a);function c(d){return d.count?1:1+c(d.left)+c(d.right)}function h(d,u){const f=d/4,m=d/2,g=!!u.count,E=u.boundingData;for(let p=0;p<6;p++)n[f+p]=E[p];if(g){const p=u.offset,v=u.count;return r[f+6]=p,o[m+14]=v,o[m+15]=Cu,d+32}{const p=u.left,v=u.right,I=u.splitAxis;let _;if(_=h(d+32,p),_/4>Math.pow(2,32))throw new Error("MeshBVH: Cannot store child pointer greater than 32 bits.");return r[f+6]=_/4,_=h(_,v),r[f+7]=I,_}}}let vs=class{constructor(){this.min=1/0,this.max=-1/0}setFromPointsField(e,t){let i=1/0,n=-1/0;for(let r=0,o=e.length;r<o;r++){const a=e[r][t];i=a<i?a:i,n=a>n?a:n}this.min=i,this.max=n}setFromPoints(e,t){let i=1/0,n=-1/0;for(let r=0,o=t.length;r<o;r++){const a=t[r],l=e.dot(a);i=l<i?l:i,n=l>n?l:n}this.min=i,this.max=n}isSeparated(e){return this.min>e.max||e.min>this.max}};vs.prototype.setFromBox=function(){const s=new P;return function(e,t){const i=t.min,n=t.max;let r=1/0,o=-1/0;for(let a=0;a<=1;a++)for(let l=0;l<=1;l++)for(let c=0;c<=1;c++){s.x=i.x*a+n.x*(1-a),s.y=i.y*l+n.y*(1-l),s.z=i.z*c+n.z*(1-c);const h=e.dot(s);r=Math.min(h,r),o=Math.max(h,o)}this.min=r,this.max=o}}();const IR=function(){const s=new P,e=new P,t=new P;return function(i,n,r){const o=i.start,a=s,l=n.start,c=e;t.subVectors(o,l),s.subVectors(i.end,i.start),e.subVectors(n.end,n.start);const h=t.dot(c),d=c.dot(a),u=c.dot(c),f=t.dot(a),m=a.dot(a)*u-d*d;let g,E;g=m!==0?(h*d-f*u)/m:0,E=(h+g*d)/u,r.x=g,r.y=E}}(),gp=function(){const s=new Oe,e=new P,t=new P;return function(i,n,r,o){IR(i,n,s);let a=s.x,l=s.y;if(a>=0&&a<=1&&l>=0&&l<=1)return i.at(a,r),void n.at(l,o);if(a>=0&&a<=1)return l<0?n.at(0,o):n.at(1,o),void i.closestPointToPoint(o,!0,r);if(l>=0&&l<=1)return a<0?i.at(0,r):i.at(1,r),void n.closestPointToPoint(r,!0,o);{let c,h;c=a<0?i.start:i.end,h=l<0?n.start:n.end;const d=e,u=t;return i.closestPointToPoint(h,!0,e),n.closestPointToPoint(c,!0,t),d.distanceToSquared(h)<=u.distanceToSquared(c)?(r.copy(d),void o.copy(h)):(r.copy(c),void o.copy(u))}}}(),_R=function(){const s=new P,e=new P,t=new ri,i=new xt;return function(n,r){const{radius:o,center:a}=n,{a:l,b:c,c:h}=r;if(i.start=l,i.end=c,i.closestPointToPoint(a,!0,s).distanceTo(a)<=o||(i.start=l,i.end=h,i.closestPointToPoint(a,!0,s).distanceTo(a)<=o)||(i.start=c,i.end=h,i.closestPointToPoint(a,!0,s).distanceTo(a)<=o))return!0;const d=r.getPlane(t);if(Math.abs(d.distanceToPoint(a))<=o){const u=d.projectPoint(a,e);if(r.containsPoint(u))return!0}return!1}}();function Od(s){return Math.abs(s)<1e-15}let wn=class extends Ft{constructor(...e){super(...e),this.isExtendedTriangle=!0,this.satAxes=new Array(4).fill().map(()=>new P),this.satBounds=new Array(4).fill().map(()=>new vs),this.points=[this.a,this.b,this.c],this.sphere=new vi,this.plane=new ri,this.needsUpdate=!0}intersectsSphere(e){return _R(e,this)}update(){const e=this.a,t=this.b,i=this.c,n=this.points,r=this.satAxes,o=this.satBounds,a=r[0],l=o[0];this.getNormal(a),l.setFromPoints(a,n);const c=r[1],h=o[1];c.subVectors(e,t),h.setFromPoints(c,n);const d=r[2],u=o[2];d.subVectors(t,i),u.setFromPoints(d,n);const f=r[3],m=o[3];f.subVectors(i,e),m.setFromPoints(f,n),this.sphere.setFromPoints(this.points),this.plane.setFromNormalAndCoplanarPoint(a,e),this.needsUpdate=!1}};wn.prototype.closestPointToSegment=function(){const s=new P,e=new P,t=new xt;return function(i,n=null,r=null){const{start:o,end:a}=i,l=this.points;let c,h=1/0;for(let d=0;d<3;d++){const u=(d+1)%3;t.start.copy(l[d]),t.end.copy(l[u]),gp(t,i,s,e),c=s.distanceToSquared(e),c<h&&(h=c,n&&n.copy(s),r&&r.copy(e))}return this.closestPointToPoint(o,s),c=o.distanceToSquared(s),c<h&&(h=c,n&&n.copy(s),r&&r.copy(o)),this.closestPointToPoint(a,s),c=a.distanceToSquared(s),c<h&&(h=c,n&&n.copy(s),r&&r.copy(a)),Math.sqrt(h)}}(),wn.prototype.intersectsTriangle=function(){const s=new wn,e=new Array(3),t=new Array(3),i=new vs,n=new vs,r=new P,o=new P,a=new P,l=new P,c=new P,h=new xt,d=new xt,u=new xt,f=new P;function m(g,E,p){const v=g.points;let I=0,_=-1;for(let b=0;b<3;b++){const{start:T,end:w}=h;T.copy(v[b]),w.copy(v[(b+1)%3]),h.delta(o);const A=Od(E.distanceToPoint(T));if(Od(E.normal.dot(o))&&A){p.copy(h),I=2;break}const y=E.intersectLine(h,f);if(!y&&A&&f.copy(T),(y||A)&&!Od(f.distanceTo(w))){if(I<=1)(I===1?p.start:p.end).copy(f),A&&(_=I);else if(I>=2){(_===1?p.start:p.end).copy(f),I=2;break}if(I++,I===2&&_===-1)break}}return I}return function(g,E=null,p=!1){this.needsUpdate&&this.update(),g.isExtendedTriangle?g.needsUpdate&&g.update():(s.copy(g),s.update(),g=s);const v=this.plane,I=g.plane;if(Math.abs(v.normal.dot(I.normal))>1-1e-10){const _=this.satBounds,b=this.satAxes;t[0]=g.a,t[1]=g.b,t[2]=g.c;for(let A=0;A<4;A++){const y=_[A],C=b[A];if(i.setFromPoints(C,t),y.isSeparated(i))return!1}const T=g.satBounds,w=g.satAxes;e[0]=this.a,e[1]=this.b,e[2]=this.c;for(let A=0;A<4;A++){const y=T[A],C=w[A];if(i.setFromPoints(C,e),y.isSeparated(i))return!1}for(let A=0;A<4;A++){const y=b[A];for(let C=0;C<4;C++){const M=w[C];if(r.crossVectors(y,M),i.setFromPoints(r,e),n.setFromPoints(r,t),i.isSeparated(n))return!1}}return E&&(p||console.warn("ExtendedTriangle.intersectsTriangle: Triangles are coplanar which does not support an output edge. Setting edge to 0, 0, 0."),E.start.set(0,0,0),E.end.set(0,0,0)),!0}{const _=m(this,I,d);if(_===1&&g.containsPoint(d.end))return E&&(E.start.copy(d.end),E.end.copy(d.end)),!0;if(_!==2)return!1;const b=m(g,v,u);if(b===1&&this.containsPoint(u.end))return E&&(E.start.copy(u.end),E.end.copy(u.end)),!0;if(b!==2)return!1;if(d.delta(a),u.delta(l),a.dot(l)<0){let C=u.start;u.start=u.end,u.end=C}const T=d.start.dot(a),w=d.end.dot(a),A=u.start.dot(a),y=u.end.dot(a);return(T===y||A===w||w<A!=T<y)&&(E&&(c.subVectors(d.start,u.start),c.dot(a)>0?E.start.copy(d.start):E.start.copy(u.start),c.subVectors(d.end,u.end),c.dot(a)<0?E.end.copy(d.end):E.end.copy(u.end)),!0)}}}(),wn.prototype.distanceToPoint=function(){const s=new P;return function(e){return this.closestPointToPoint(e,s),e.distanceTo(s)}}(),wn.prototype.distanceToTriangle=function(){const s=new P,e=new P,t=["a","b","c"],i=new xt,n=new xt;return function(r,o=null,a=null){const l=o||a?i:null;if(this.intersectsTriangle(r,l))return(o||a)&&(o&&l.getCenter(o),a&&l.getCenter(a)),0;let c=1/0;for(let h=0;h<3;h++){let d;const u=t[h],f=r[u];this.closestPointToPoint(f,s),d=f.distanceToSquared(s),d<c&&(c=d,o&&o.copy(s),a&&a.copy(f));const m=this[u];r.closestPointToPoint(m,s),d=m.distanceToSquared(s),d<c&&(c=d,o&&o.copy(m),a&&a.copy(s))}for(let h=0;h<3;h++){const d=t[h],u=t[(h+1)%3];i.set(this[d],this[u]);for(let f=0;f<3;f++){const m=t[f],g=t[(f+1)%3];n.set(r[m],r[g]),gp(i,n,s,e);const E=s.distanceToSquared(e);E<c&&(c=E,o&&o.copy(s),a&&a.copy(e))}}return Math.sqrt(c)}}();let Si=class{constructor(e,t,i){this.isOrientedBox=!0,this.min=new P,this.max=new P,this.matrix=new _e,this.invMatrix=new _e,this.points=new Array(8).fill().map(()=>new P),this.satAxes=new Array(3).fill().map(()=>new P),this.satBounds=new Array(3).fill().map(()=>new vs),this.alignedSatBounds=new Array(3).fill().map(()=>new vs),this.needsUpdate=!1,e&&this.min.copy(e),t&&this.max.copy(t),i&&this.matrix.copy(i)}set(e,t,i){this.min.copy(e),this.max.copy(t),this.matrix.copy(i),this.needsUpdate=!0}copy(e){this.min.copy(e.min),this.max.copy(e.max),this.matrix.copy(e.matrix),this.needsUpdate=!0}};Si.prototype.update=function(){return function(){const s=this.matrix,e=this.min,t=this.max,i=this.points;for(let l=0;l<=1;l++)for(let c=0;c<=1;c++)for(let h=0;h<=1;h++){const d=i[1*l|2*c|4*h];d.x=l?t.x:e.x,d.y=c?t.y:e.y,d.z=h?t.z:e.z,d.applyMatrix4(s)}const n=this.satBounds,r=this.satAxes,o=i[0];for(let l=0;l<3;l++){const c=r[l],h=n[l],d=i[1<<l];c.subVectors(o,d),h.setFromPoints(c,i)}const a=this.alignedSatBounds;a[0].setFromPointsField(i,"x"),a[1].setFromPointsField(i,"y"),a[2].setFromPointsField(i,"z"),this.invMatrix.copy(this.matrix).invert(),this.needsUpdate=!1}}(),Si.prototype.intersectsBox=function(){const s=new vs;return function(e){this.needsUpdate&&this.update();const t=e.min,i=e.max,n=this.satBounds,r=this.satAxes,o=this.alignedSatBounds;if(s.min=t.x,s.max=i.x,o[0].isSeparated(s)||(s.min=t.y,s.max=i.y,o[1].isSeparated(s))||(s.min=t.z,s.max=i.z,o[2].isSeparated(s)))return!1;for(let a=0;a<3;a++){const l=r[a],c=n[a];if(s.setFromBox(l,e),c.isSeparated(s))return!1}return!0}}(),Si.prototype.intersectsTriangle=function(){const s=new wn,e=new Array(3),t=new vs,i=new vs,n=new P;return function(r){this.needsUpdate&&this.update(),r.isExtendedTriangle?r.needsUpdate&&r.update():(s.copy(r),s.update(),r=s);const o=this.satBounds,a=this.satAxes;e[0]=r.a,e[1]=r.b,e[2]=r.c;for(let d=0;d<3;d++){const u=o[d],f=a[d];if(t.setFromPoints(f,e),u.isSeparated(t))return!1}const l=r.satBounds,c=r.satAxes,h=this.points;for(let d=0;d<3;d++){const u=l[d],f=c[d];if(t.setFromPoints(f,h),u.isSeparated(t))return!1}for(let d=0;d<3;d++){const u=a[d];for(let f=0;f<4;f++){const m=c[f];if(n.crossVectors(u,m),t.setFromPoints(n,e),i.setFromPoints(n,h),t.isSeparated(i))return!1}}return!0}}(),Si.prototype.closestPointToPoint=function(){return function(s,e){return this.needsUpdate&&this.update(),e.copy(s).applyMatrix4(this.invMatrix).clamp(this.min,this.max).applyMatrix4(this.matrix),e}}(),Si.prototype.distanceToPoint=function(){const s=new P;return function(e){return this.closestPointToPoint(e,s),e.distanceTo(s)}}(),Si.prototype.distanceToBox=function(){const s=["x","y","z"],e=new Array(12).fill().map(()=>new xt),t=new Array(12).fill().map(()=>new xt),i=new P,n=new P;return function(r,o=0,a=null,l=null){if(this.needsUpdate&&this.update(),this.intersectsBox(r))return(a||l)&&(r.getCenter(n),this.closestPointToPoint(n,i),r.closestPointToPoint(i,n),a&&a.copy(i),l&&l.copy(n)),0;const c=o*o,h=r.min,d=r.max,u=this.points;let f=1/0;for(let g=0;g<8;g++){const E=u[g];n.copy(E).clamp(h,d);const p=E.distanceToSquared(n);if(p<f&&(f=p,a&&a.copy(E),l&&l.copy(n),p<c))return Math.sqrt(p)}let m=0;for(let g=0;g<3;g++)for(let E=0;E<=1;E++)for(let p=0;p<=1;p++){const v=(g+1)%3,I=(g+2)%3,_=1<<g|E<<v|p<<I,b=u[E<<v|p<<I],T=u[_];e[m].set(b,T);const w=s[g],A=s[v],y=s[I],C=t[m],M=C.start,R=C.end;M[w]=h[w],M[A]=E?h[A]:d[A],M[y]=p?h[y]:d[A],R[w]=d[w],R[A]=E?h[A]:d[A],R[y]=p?h[y]:d[A],m++}for(let g=0;g<=1;g++)for(let E=0;E<=1;E++)for(let p=0;p<=1;p++){n.x=g?d.x:h.x,n.y=E?d.y:h.y,n.z=p?d.z:h.z,this.closestPointToPoint(n,i);const v=n.distanceToSquared(i);if(v<f&&(f=v,a&&a.copy(i),l&&l.copy(n),v<c))return Math.sqrt(v)}for(let g=0;g<12;g++){const E=e[g];for(let p=0;p<12;p++){const v=t[p];gp(E,v,i,n);const I=i.distanceToSquared(n);if(I<f&&(f=I,a&&a.copy(i),l&&l.copy(n),I<c))return Math.sqrt(I)}}return Math.sqrt(f)}}();let zm=class{constructor(e){this._getNewPrimitive=e,this._primitives=[]}getPrimitive(){const e=this._primitives;return e.length===0?this._getNewPrimitive():e.pop()}releasePrimitive(e){this._primitives.push(e)}},vR=class extends zm{constructor(){super(()=>new wn)}};const rn=new vR;function Yi(s,e){return e[s+15]===65535}function Xi(s,e){return e[s+6]}function on(s,e){return e[s+14]}function an(s){return s+8}function ln(s,e){return e[s+6]}function F_(s,e){return e[s+7]}const wt=new class{constructor(){this.float32Array=null,this.uint16Array=null,this.uint32Array=null;const s=[];let e=null;this.setBuffer=t=>{e&&s.push(e),e=t,this.float32Array=new Float32Array(t),this.uint16Array=new Uint16Array(t),this.uint32Array=new Uint32Array(t)},this.clearBuffer=()=>{e=null,this.float32Array=null,this.uint16Array=null,this.uint32Array=null,s.length!==0&&this.setBuffer(s.pop())}}};let Ys,Go;const co=[],zc=new zm(()=>new je);function bR(s,e,t,i,n,r){Ys=zc.getPrimitive(),Go=zc.getPrimitive(),co.push(Ys,Go),wt.setBuffer(s._roots[e]);const o=Ep(0,s.geometry,t,i,n,r);wt.clearBuffer(),zc.releasePrimitive(Ys),zc.releasePrimitive(Go),co.pop(),co.pop();const a=co.length;return a>0&&(Go=co[a-1],Ys=co[a-2]),o}function Ep(s,e,t,i,n=null,r=0,o=0){const{float32Array:a,uint16Array:l,uint32Array:c}=wt;let h=2*s;if(Yi(h,l)){const d=Xi(s,c),u=on(h,l);return Lt(s,a,Ys),i(d,u,!1,o,r+s,Ys)}{let d=function(y){const{uint16Array:C,uint32Array:M}=wt;let R=2*y;for(;!Yi(R,C);)R=2*(y=an(y));return Xi(y,M)},u=function(y){const{uint16Array:C,uint32Array:M}=wt;let R=2*y;for(;!Yi(R,C);)R=2*(y=ln(y,M));return Xi(y,M)+on(R,C)};const f=an(s),m=ln(s,c);let g,E,p,v,I=f,_=m;if(n&&(p=Ys,v=Go,Lt(I,a,p),Lt(_,a,v),g=n(p),E=n(v),E<g)){I=m,_=f;const y=g;g=E,E=y,p=v}p||(p=Ys,Lt(I,a,p));const b=t(p,Yi(2*I,l),g,o+1,r+I);let T;if(b===2){const y=d(I);T=i(y,u(I)-y,!0,o+1,r+I,p)}else T=b&&Ep(I,e,t,i,n,r,o+1);if(T)return!0;v=Go,Lt(_,a,v);const w=t(v,Yi(2*_,l),E,o+1,r+_);let A;if(w===2){const y=d(_);A=i(y,u(_)-y,!0,o+1,r+_,v)}else A=w&&Ep(_,e,t,i,n,r,o+1);return!!A}}const Aa=new P,Ld=new P,ho=new P,uo=new P,fo=new P,Vc=new Oe,kc=new Oe,Gc=new Oe,nE=new P,sE=new P,rE=new P,Hc=new P;function yR(s,e,t,i,n,r,o,a,l){ho.fromBufferAttribute(e,r),uo.fromBufferAttribute(e,o),fo.fromBufferAttribute(e,a);const c=function(h,d,u,f,m,g){let E;return E=g===_i?h.intersectTriangle(f,u,d,!0,m):h.intersectTriangle(d,u,f,g!==Ai,m),E===null?null:{distance:h.origin.distanceTo(m),point:m.clone()}}(s,ho,uo,fo,Hc,l);if(c){i&&(Vc.fromBufferAttribute(i,r),kc.fromBufferAttribute(i,o),Gc.fromBufferAttribute(i,a),c.uv=Ft.getInterpolation(Hc,ho,uo,fo,Vc,kc,Gc,new Oe)),n&&(Vc.fromBufferAttribute(n,r),kc.fromBufferAttribute(n,o),Gc.fromBufferAttribute(n,a),c.uv1=Ft.getInterpolation(Hc,ho,uo,fo,Vc,kc,Gc,new Oe)),t&&(nE.fromBufferAttribute(t,r),sE.fromBufferAttribute(t,o),rE.fromBufferAttribute(t,a),c.normal=Ft.getInterpolation(Hc,ho,uo,fo,nE,sE,rE,new P),c.normal.dot(s.direction)>0&&c.normal.multiplyScalar(-1));const h={a:r,b:o,c:a,normal:new P,materialIndex:0};Ft.getNormal(ho,uo,fo,h.normal),c.face=h,c.faceIndex=r}return c}function xu(s,e,t,i,n){const r=3*i;let o=r+0,a=r+1,l=r+2;const c=s.index;s.index&&(o=c.getX(o),a=c.getX(a),l=c.getX(l));const{position:h,normal:d,uv:u,uv1:f}=s.attributes,m=yR(t,h,d,u,f,o,a,l,e);return m?(m.faceIndex=i,n&&n.push(m),m):null}function Jt(s,e,t,i){const n=s.a,r=s.b,o=s.c;let a=e,l=e+1,c=e+2;t&&(a=t.getX(a),l=t.getX(l),c=t.getX(c)),n.x=i.getX(a),n.y=i.getY(a),n.z=i.getZ(a),r.x=i.getX(l),r.y=i.getY(l),r.z=i.getZ(l),o.x=i.getX(c),o.y=i.getY(c),o.z=i.getZ(c)}function TR(s,e,t,i,n,r,o){const{geometry:a}=t,{index:l}=a,c=a.attributes.position;for(let h=s,d=e+s;h<d;h++){let u;if(u=h,Jt(o,3*u,l,c),o.needsUpdate=!0,i(o,u,n,r))return!0}return!1}function CR(s,e=null){e&&Array.isArray(e)&&(e=new Set(e));const t=s.geometry,i=t.index?t.index.array:null,n=t.attributes.position;let r,o,a,l,c=0;const h=s._roots;for(let u=0,f=h.length;u<f;u++)r=h[u],o=new Uint32Array(r),a=new Uint16Array(r),l=new Float32Array(r),d(0,c),c+=r.byteLength;function d(u,f,m=!1){const g=2*u;if(a[g+15]===Cu){const E=o[u+6];let p=1/0,v=1/0,I=1/0,_=-1/0,b=-1/0,T=-1/0;for(let w=3*E,A=3*(E+a[g+14]);w<A;w++){let y=i[w];const C=n.getX(y),M=n.getY(y),R=n.getZ(y);C<p&&(p=C),C>_&&(_=C),M<v&&(v=M),M>b&&(b=M),R<I&&(I=R),R>T&&(T=R)}return(l[u+0]!==p||l[u+1]!==v||l[u+2]!==I||l[u+3]!==_||l[u+4]!==b||l[u+5]!==T)&&(l[u+0]=p,l[u+1]=v,l[u+2]=I,l[u+3]=_,l[u+4]=b,l[u+5]=T,!0)}{const E=u+8,p=o[u+6],v=E+f,I=p+f;let _=m,b=!1,T=!1;e?_||(b=e.has(v),T=e.has(I),_=!b&&!T):(b=!0,T=!0);const w=_||T;let A=!1;(_||b)&&(A=d(E,f,_));let y=!1;w&&(y=d(p,f,_));const C=A||y;if(C)for(let M=0;M<3;M++){const R=E+M,L=p+M,S=l[R],U=l[R+3],z=l[L],k=l[L+3];l[u+M]=S<z?S:z,l[u+M+3]=U>k?U:k}return C}}}const oE=new je;function Ks(s,e,t,i){return Lt(s,e,oE),t.intersectBox(oE,i)}function xR(s,e,t,i,n,r,o){const{geometry:a}=t,{index:l}=a,c=a.attributes.position;for(let h=s,d=e+s;h<d;h++){let u;if(u=t.resolveTriangleIndex(h),Jt(o,3*u,l,c),o.needsUpdate=!0,i(o,u,n,r))return!0}return!1}const aE=new P;function wR(s,e,t,i,n){wt.setBuffer(s._roots[e]),Ip(0,s,t,i,n),wt.clearBuffer()}function Ip(s,e,t,i,n){const{float32Array:r,uint16Array:o,uint32Array:a}=wt,l=2*s;if(Yi(l,o))(function(c,h,d,u,f,m){const{geometry:g,_indirectBuffer:E}=c;for(let p=u,v=u+f;p<v;p++)xu(g,h,d,p,m)})(e,t,i,Xi(s,a),on(l,o),n);else{const c=an(s);Ks(c,r,i,aE)&&Ip(c,e,t,i,n);const h=ln(s,a);Ks(h,r,i,aE)&&Ip(h,e,t,i,n)}}const lE=new P,SR=["x","y","z"];function AR(s,e,t,i){wt.setBuffer(s._roots[e]);const n=_p(0,s,t,i);return wt.clearBuffer(),n}function _p(s,e,t,i){const{float32Array:n,uint16Array:r,uint32Array:o}=wt;let a=2*s;if(Yi(a,r))return function(l,c,h,d,u){const{geometry:f,_indirectBuffer:m}=l;let g=1/0,E=null;for(let p=d,v=d+u;p<v;p++){let I;I=xu(f,c,h,p),I&&I.distance<g&&(E=I,g=I.distance)}return E}(e,t,i,Xi(s,o),on(a,r));{const l=F_(s,o),c=SR[l],h=i.direction[c]>=0;let d,u;h?(d=an(s),u=ln(s,o)):(d=ln(s,o),u=an(s));const f=Ks(d,n,i,lE)?_p(d,e,t,i):null;if(f){const g=f.point[c];if(h?g<=n[u+l]:g>=n[u+l+3])return f}const m=Ks(u,n,i,lE)?_p(u,e,t,i):null;return f&&m?f.distance<=m.distance?f:m:f||m||null}}const Yc=new je,po=new wn,mo=new wn,Ra=new _e,cE=new Si,Wc=new Si;function RR(s,e,t,i){wt.setBuffer(s._roots[e]);const n=vp(0,s,t,i);return wt.clearBuffer(),n}function vp(s,e,t,i,n=null){const{float32Array:r,uint16Array:o,uint32Array:a}=wt;let l=2*s;if(n===null&&(t.boundingBox||t.computeBoundingBox(),cE.set(t.boundingBox.min,t.boundingBox.max,i),n=cE),!Yi(l,o)){const c=s+8,h=a[s+6];return Lt(c,r,Yc),n.intersectsBox(Yc)&&vp(c,e,t,i,n)?!0:(Lt(h,r,Yc),!!(n.intersectsBox(Yc)&&vp(h,e,t,i,n)))}{const c=e.geometry,h=c.index,d=c.attributes.position,u=t.index,f=t.attributes.position,m=Xi(s,a),g=on(l,o);if(Ra.copy(i).invert(),t.boundsTree)return Lt(s,r,Wc),Wc.matrix.copy(Ra),Wc.needsUpdate=!0,t.boundsTree.shapecast({intersectsBounds:E=>Wc.intersectsBox(E),intersectsTriangle:E=>{E.a.applyMatrix4(i),E.b.applyMatrix4(i),E.c.applyMatrix4(i),E.needsUpdate=!0;for(let p=3*m,v=3*(g+m);p<v;p+=3)if(Jt(mo,p,h,d),mo.needsUpdate=!0,E.intersectsTriangle(mo))return!0;return!1}});for(let E=3*m,p=3*(g+m);E<p;E+=3){Jt(po,E,h,d),po.a.applyMatrix4(Ra),po.b.applyMatrix4(Ra),po.c.applyMatrix4(Ra),po.needsUpdate=!0;for(let v=0,I=u.count;v<I;v+=3)if(Jt(mo,v,u,f),mo.needsUpdate=!0,po.intersectsTriangle(mo))return!0}}}const Xc=new _e,Dd=new Si,Ma=new Si,MR=new P,FR=new P,PR=new P,OR=new P;function LR(s,e,t,i={},n={},r=0,o=1/0){e.boundingBox||e.computeBoundingBox(),Dd.set(e.boundingBox.min,e.boundingBox.max,t),Dd.needsUpdate=!0;const a=s.geometry,l=a.attributes.position,c=a.index,h=e.attributes.position,d=e.index,u=rn.getPrimitive(),f=rn.getPrimitive();let m=MR,g=FR,E=null,p=null;n&&(E=PR,p=OR);let v=1/0,I=null,_=null;return Xc.copy(t).invert(),Ma.matrix.copy(Xc),s.shapecast({boundsTraverseOrder:b=>Dd.distanceToBox(b),intersectsBounds:(b,T,w)=>w<v&&w<o&&(T&&(Ma.min.copy(b.min),Ma.max.copy(b.max),Ma.needsUpdate=!0),!0),intersectsRange:(b,T)=>{if(e.boundsTree)return e.boundsTree.shapecast({boundsTraverseOrder:w=>Ma.distanceToBox(w),intersectsBounds:(w,A,y)=>y<v&&y<o,intersectsRange:(w,A)=>{for(let y=w,C=w+A;y<C;y++){Jt(f,3*y,d,h),f.a.applyMatrix4(t),f.b.applyMatrix4(t),f.c.applyMatrix4(t),f.needsUpdate=!0;for(let M=b,R=b+T;M<R;M++){Jt(u,3*M,c,l),u.needsUpdate=!0;const L=u.distanceToTriangle(f,m,E);if(L<v&&(g.copy(m),p&&p.copy(E),v=L,I=M,_=y),L<r)return!0}}}});for(let w=0,A=la(e);w<A;w++){Jt(f,3*w,d,h),f.a.applyMatrix4(t),f.b.applyMatrix4(t),f.c.applyMatrix4(t),f.needsUpdate=!0;for(let y=b,C=b+T;y<C;y++){Jt(u,3*y,c,l),u.needsUpdate=!0;const M=u.distanceToTriangle(f,m,E);if(M<v&&(g.copy(m),p&&p.copy(E),v=M,I=y,_=w),M<r)return!0}}}}),rn.releasePrimitive(u),rn.releasePrimitive(f),v===1/0?null:(i.point?i.point.copy(g):i.point=g.clone(),i.distance=v,i.faceIndex=I,n&&(n.point?n.point.copy(p):n.point=p.clone(),n.point.applyMatrix4(Xc),g.applyMatrix4(Xc),n.distance=g.sub(n.point).length(),n.faceIndex=_),i)}function DR(s,e=null){e&&Array.isArray(e)&&(e=new Set(e));const t=s.geometry,i=t.index?t.index.array:null,n=t.attributes.position;let r,o,a,l,c=0;const h=s._roots;for(let u=0,f=h.length;u<f;u++)r=h[u],o=new Uint32Array(r),a=new Uint16Array(r),l=new Float32Array(r),d(0,c),c+=r.byteLength;function d(u,f,m=!1){const g=2*u;if(a[g+15]===Cu){const E=o[u+6];let p=1/0,v=1/0,I=1/0,_=-1/0,b=-1/0,T=-1/0;for(let w=E,A=E+a[g+14];w<A;w++){const y=3*s.resolveTriangleIndex(w);for(let C=0;C<3;C++){let M=y+C;M=i?i[M]:M;const R=n.getX(M),L=n.getY(M),S=n.getZ(M);R<p&&(p=R),R>_&&(_=R),L<v&&(v=L),L>b&&(b=L),S<I&&(I=S),S>T&&(T=S)}}return(l[u+0]!==p||l[u+1]!==v||l[u+2]!==I||l[u+3]!==_||l[u+4]!==b||l[u+5]!==T)&&(l[u+0]=p,l[u+1]=v,l[u+2]=I,l[u+3]=_,l[u+4]=b,l[u+5]=T,!0)}{const E=u+8,p=o[u+6],v=E+f,I=p+f;let _=m,b=!1,T=!1;e?_||(b=e.has(v),T=e.has(I),_=!b&&!T):(b=!0,T=!0);const w=_||T;let A=!1;(_||b)&&(A=d(E,f,_));let y=!1;w&&(y=d(p,f,_));const C=A||y;if(C)for(let M=0;M<3;M++){const R=E+M,L=p+M,S=l[R],U=l[R+3],z=l[L],k=l[L+3];l[u+M]=S<z?S:z,l[u+M+3]=U>k?U:k}return C}}}const hE=new P;function NR(s,e,t,i,n){wt.setBuffer(s._roots[e]),bp(0,s,t,i,n),wt.clearBuffer()}function bp(s,e,t,i,n){const{float32Array:r,uint16Array:o,uint32Array:a}=wt,l=2*s;if(Yi(l,o))(function(c,h,d,u,f,m){const{geometry:g,_indirectBuffer:E}=c;for(let p=u,v=u+f;p<v;p++)xu(g,h,d,E?E[p]:p,m)})(e,t,i,Xi(s,a),on(l,o),n);else{const c=an(s);Ks(c,r,i,hE)&&bp(c,e,t,i,n);const h=ln(s,a);Ks(h,r,i,hE)&&bp(h,e,t,i,n)}}const uE=new P,UR=["x","y","z"];function BR(s,e,t,i){wt.setBuffer(s._roots[e]);const n=yp(0,s,t,i);return wt.clearBuffer(),n}function yp(s,e,t,i){const{float32Array:n,uint16Array:r,uint32Array:o}=wt;let a=2*s;if(Yi(a,r))return function(l,c,h,d,u){const{geometry:f,_indirectBuffer:m}=l;let g=1/0,E=null;for(let p=d,v=d+u;p<v;p++){let I;I=xu(f,c,h,m?m[p]:p),I&&I.distance<g&&(E=I,g=I.distance)}return E}(e,t,i,Xi(s,o),on(a,r));{const l=F_(s,o),c=UR[l],h=i.direction[c]>=0;let d,u;h?(d=an(s),u=ln(s,o)):(d=ln(s,o),u=an(s));const f=Ks(d,n,i,uE)?yp(d,e,t,i):null;if(f){const g=f.point[c];if(h?g<=n[u+l]:g>=n[u+l+3])return f}const m=Ks(u,n,i,uE)?yp(u,e,t,i):null;return f&&m?f.distance<=m.distance?f:m:f||m||null}}const Zc=new je,go=new wn,Eo=new wn,Fa=new _e,dE=new Si,jc=new Si;function zR(s,e,t,i){wt.setBuffer(s._roots[e]);const n=Tp(0,s,t,i);return wt.clearBuffer(),n}function Tp(s,e,t,i,n=null){const{float32Array:r,uint16Array:o,uint32Array:a}=wt;let l=2*s;if(n===null&&(t.boundingBox||t.computeBoundingBox(),dE.set(t.boundingBox.min,t.boundingBox.max,i),n=dE),!Yi(l,o)){const c=s+8,h=a[s+6];return Lt(c,r,Zc),n.intersectsBox(Zc)&&Tp(c,e,t,i,n)?!0:(Lt(h,r,Zc),!!(n.intersectsBox(Zc)&&Tp(h,e,t,i,n)))}{const c=e.geometry,h=c.index,d=c.attributes.position,u=t.index,f=t.attributes.position,m=Xi(s,a),g=on(l,o);if(Fa.copy(i).invert(),t.boundsTree)return Lt(s,r,jc),jc.matrix.copy(Fa),jc.needsUpdate=!0,t.boundsTree.shapecast({intersectsBounds:E=>jc.intersectsBox(E),intersectsTriangle:E=>{E.a.applyMatrix4(i),E.b.applyMatrix4(i),E.c.applyMatrix4(i),E.needsUpdate=!0;for(let p=m,v=g+m;p<v;p++)if(Jt(Eo,3*e.resolveTriangleIndex(p),h,d),Eo.needsUpdate=!0,E.intersectsTriangle(Eo))return!0;return!1}});for(let E=m,p=g+m;E<p;E++){const v=e.resolveTriangleIndex(E);Jt(go,3*v,h,d),go.a.applyMatrix4(Fa),go.b.applyMatrix4(Fa),go.c.applyMatrix4(Fa),go.needsUpdate=!0;for(let I=0,_=u.count;I<_;I+=3)if(Jt(Eo,I,u,f),Eo.needsUpdate=!0,go.intersectsTriangle(Eo))return!0}}}const qc=new _e,Nd=new Si,Pa=new Si,VR=new P,kR=new P,GR=new P,HR=new P;function YR(s,e,t,i={},n={},r=0,o=1/0){e.boundingBox||e.computeBoundingBox(),Nd.set(e.boundingBox.min,e.boundingBox.max,t),Nd.needsUpdate=!0;const a=s.geometry,l=a.attributes.position,c=a.index,h=e.attributes.position,d=e.index,u=rn.getPrimitive(),f=rn.getPrimitive();let m=VR,g=kR,E=null,p=null;n&&(E=GR,p=HR);let v=1/0,I=null,_=null;return qc.copy(t).invert(),Pa.matrix.copy(qc),s.shapecast({boundsTraverseOrder:b=>Nd.distanceToBox(b),intersectsBounds:(b,T,w)=>w<v&&w<o&&(T&&(Pa.min.copy(b.min),Pa.max.copy(b.max),Pa.needsUpdate=!0),!0),intersectsRange:(b,T)=>{if(e.boundsTree){const w=e.boundsTree;return w.shapecast({boundsTraverseOrder:A=>Pa.distanceToBox(A),intersectsBounds:(A,y,C)=>C<v&&C<o,intersectsRange:(A,y)=>{for(let C=A,M=A+y;C<M;C++){const R=w.resolveTriangleIndex(C);Jt(f,3*R,d,h),f.a.applyMatrix4(t),f.b.applyMatrix4(t),f.c.applyMatrix4(t),f.needsUpdate=!0;for(let L=b,S=b+T;L<S;L++){const U=s.resolveTriangleIndex(L);Jt(u,3*U,c,l),u.needsUpdate=!0;const z=u.distanceToTriangle(f,m,E);if(z<v&&(g.copy(m),p&&p.copy(E),v=z,I=L,_=C),z<r)return!0}}}})}for(let w=0,A=la(e);w<A;w++){Jt(f,3*w,d,h),f.a.applyMatrix4(t),f.b.applyMatrix4(t),f.c.applyMatrix4(t),f.needsUpdate=!0;for(let y=b,C=b+T;y<C;y++){const M=s.resolveTriangleIndex(y);Jt(u,3*M,c,l),u.needsUpdate=!0;const R=u.distanceToTriangle(f,m,E);if(R<v&&(g.copy(m),p&&p.copy(E),v=R,I=y,_=w),R<r)return!0}}}}),rn.releasePrimitive(u),rn.releasePrimitive(f),v===1/0?null:(i.point?i.point.copy(g):i.point=g.clone(),i.distance=v,i.faceIndex=I,n&&(n.point?n.point.copy(p):n.point=p.clone(),n.point.applyMatrix4(qc),g.applyMatrix4(qc),n.distance=g.sub(n.point).length(),n.faceIndex=_),i)}const fl=new wt.constructor,au=new wt.constructor,ks=new zm(()=>new je),Io=new je,_o=new je,Ud=new je,Bd=new je;let zd=!1;function vn(s,e,t,i,n,r=0,o=0,a=0,l=0,c=null,h=!1){let d,u;h?(d=au,u=fl):(d=fl,u=au);const f=d.float32Array,m=d.uint32Array,g=d.uint16Array,E=u.float32Array,p=u.uint32Array,v=u.uint16Array,I=2*e,_=Yi(2*s,g),b=Yi(I,v);let T=!1;if(b&&_)T=h?n(Xi(e,p),on(2*e,v),Xi(s,m),on(2*s,g),l,o+e,a,r+s):n(Xi(s,m),on(2*s,g),Xi(e,p),on(2*e,v),a,r+s,l,o+e);else if(b){const w=ks.getPrimitive();Lt(e,E,w),w.applyMatrix4(t);const A=an(s),y=ln(s,m);Lt(A,f,Io),Lt(y,f,_o);const C=w.intersectsBox(Io),M=w.intersectsBox(_o);T=C&&vn(e,A,i,t,n,o,r,l,a+1,w,!h)||M&&vn(e,y,i,t,n,o,r,l,a+1,w,!h),ks.releasePrimitive(w)}else{const w=an(e),A=ln(e,p);Lt(w,E,Ud),Lt(A,E,Bd);const y=c.intersectsBox(Ud),C=c.intersectsBox(Bd);if(y&&C)T=vn(s,w,t,i,n,r,o,a,l+1,c,h)||vn(s,A,t,i,n,r,o,a,l+1,c,h);else if(y)if(_)T=vn(s,w,t,i,n,r,o,a,l+1,c,h);else{const M=ks.getPrimitive();M.copy(Ud).applyMatrix4(t);const R=an(s),L=ln(s,m);Lt(R,f,Io),Lt(L,f,_o);const S=M.intersectsBox(Io),U=M.intersectsBox(_o);T=S&&vn(w,R,i,t,n,o,r,l,a+1,M,!h)||U&&vn(w,L,i,t,n,o,r,l,a+1,M,!h),ks.releasePrimitive(M)}else if(C)if(_)T=vn(s,A,t,i,n,r,o,a,l+1,c,h);else{const M=ks.getPrimitive();M.copy(Bd).applyMatrix4(t);const R=an(s),L=ln(s,m);Lt(R,f,Io),Lt(L,f,_o);const S=M.intersectsBox(Io),U=M.intersectsBox(_o);T=S&&vn(A,R,i,t,n,o,r,l,a+1,M,!h)||U&&vn(A,L,i,t,n,o,r,l,a+1,M,!h),ks.releasePrimitive(M)}}return T}const Kc=new Si,fE=new je;class Vm{static serialize(e,t={}){t={cloneBuffers:!0,...t};const i=e.geometry,n=e._roots,r=e._indirectBuffer,o=i.getIndex();let a;return a=t.cloneBuffers?{roots:n.map(l=>l.slice()),index:o.array.slice(),indirectBuffer:r?r.slice():null}:{roots:n,index:o.array,indirectBuffer:r},a}static deserialize(e,t,i={}){i={setIndex:!0,indirect:!!e.indirectBuffer,...i};const{index:n,roots:r,indirectBuffer:o}=e,a=new Vm(t,{...i,[Fd]:!0});if(a._roots=r,a._indirectBuffer=o||null,i.setIndex){const l=t.getIndex();if(l===null){const c=new at(e.index,1,!1);t.setIndex(c)}else l.array!==n&&(l.array.set(n),l.needsUpdate=!0)}return a}get indirect(){return!!this._indirectBuffer}constructor(e,t={}){if(!e.isBufferGeometry)throw new Error("MeshBVH: Only BufferGeometries are supported.");if(e.index&&e.index.isInterleavedBufferAttribute)throw new Error("MeshBVH: InterleavedBufferAttribute is not supported for the index attribute.");if((t=Object.assign({strategy:0,maxDepth:40,maxLeafTris:10,verbose:!0,useSharedArrayBuffer:!1,setBoundingBox:!0,onProgress:null,indirect:!1,[Fd]:!1},t)).useSharedArrayBuffer&&typeof SharedArrayBuffer>"u")throw new Error("MeshBVH: SharedArrayBuffer is not available.");this.geometry=e,this._roots=null,this._indirectBuffer=null,t[Fd]||(ER(this,t),!e.boundingBox&&t.setBoundingBox&&(e.boundingBox=this.getBoundingBox(new je)));const{_indirectBuffer:i}=this;this.resolveTriangleIndex=t.indirect?n=>i[n]:n=>n}refit(e=null){return(this.indirect?DR:CR)(this,e)}traverse(e,t=0){const i=this._roots[t],n=new Uint32Array(i),r=new Uint16Array(i);(function o(a,l=0){const c=2*a,h=r[c+15]===Cu;if(h){const d=n[a+6],u=r[c+14];e(l,h,new Float32Array(i,4*a,6),d,u)}else{const d=a+8,u=n[a+6],f=n[a+7];e(l,h,new Float32Array(i,4*a,6),f)||(o(d,l+1),o(u,l+1))}})(0)}raycast(e,t=pn){const i=this._roots,n=this.geometry,r=[],o=t.isMaterial,a=Array.isArray(t),l=n.groups,c=o?t.side:t,h=this.indirect?NR:wR;for(let d=0,u=i.length;d<u;d++){const f=a?t[l[d].materialIndex].side:c,m=r.length;if(h(this,d,f,e,r),a){const g=l[d].materialIndex;for(let E=m,p=r.length;E<p;E++)r[E].face.materialIndex=g}}return r}raycastFirst(e,t=pn){const i=this._roots,n=this.geometry,r=t.isMaterial,o=Array.isArray(t);let a=null;const l=n.groups,c=r?t.side:t,h=this.indirect?BR:AR;for(let d=0,u=i.length;d<u;d++){const f=h(this,d,o?t[l[d].materialIndex].side:c,e);f!=null&&(a==null||f.distance<a.distance)&&(a=f,o&&(f.face.materialIndex=l[d].materialIndex))}return a}intersectsGeometry(e,t){let i=!1;const n=this._roots,r=this.indirect?zR:RR;for(let o=0,a=n.length;o<a&&(i=r(this,o,e,t),!i);o++);return i}shapecast(e){const t=rn.getPrimitive(),i=this.indirect?xR:TR;let{boundsTraverseOrder:n,intersectsBounds:r,intersectsRange:o,intersectsTriangle:a}=e;if(o&&a){const d=o;o=(u,f,m,g,E)=>!!d(u,f,m,g,E)||i(u,f,this,a,m,g,t)}else o||(o=a?(d,u,f,m)=>i(d,u,this,a,f,m,t):(d,u,f)=>f);let l=!1,c=0;const h=this._roots;for(let d=0,u=h.length;d<u;d++){const f=h[d];if(l=bR(this,d,r,o,n,c),l)break;c+=f.byteLength}return rn.releasePrimitive(t),l}bvhcast(e,t,i){let{intersectsRanges:n,intersectsTriangles:r}=i;const o=rn.getPrimitive(),a=this.geometry.index,l=this.geometry.attributes.position,c=this.indirect?m=>{const g=this.resolveTriangleIndex(m);Jt(o,3*g,a,l)}:m=>{Jt(o,3*m,a,l)},h=rn.getPrimitive(),d=e.geometry.index,u=e.geometry.attributes.position,f=e.indirect?m=>{const g=e.resolveTriangleIndex(m);Jt(h,3*g,d,u)}:m=>{Jt(h,3*m,d,u)};if(r){const m=(g,E,p,v,I,_,b,T)=>{for(let w=p,A=p+v;w<A;w++){f(w),h.a.applyMatrix4(t),h.b.applyMatrix4(t),h.c.applyMatrix4(t),h.needsUpdate=!0;for(let y=g,C=g+E;y<C;y++)if(c(y),o.needsUpdate=!0,r(o,h,y,w,I,_,b,T))return!0}return!1};if(n){const g=n;n=function(E,p,v,I,_,b,T,w){return!!g(E,p,v,I,_,b,T,w)||m(E,p,v,I,_,b,T,w)}}else n=m}return function(m,g,E,p){if(zd)throw new Error("MeshBVH: Recursive calls to bvhcast not supported.");zd=!0;const v=m._roots,I=g._roots;let _,b=0,T=0;const w=new _e().copy(E).invert();for(let A=0,y=v.length;A<y;A++){fl.setBuffer(v[A]),T=0;const C=ks.getPrimitive();Lt(0,fl.float32Array,C),C.applyMatrix4(w);for(let M=0,R=I.length;M<R&&(au.setBuffer(I[A]),_=vn(0,0,E,w,p,b,T,0,0,C),au.clearBuffer(),T+=I[M].length,!_);M++);if(ks.releasePrimitive(C),fl.clearBuffer(),b+=v[A].length,_)break}return zd=!1,_}(this,e,t,n)}intersectsBox(e,t){return Kc.set(e.min,e.max,t),Kc.needsUpdate=!0,this.shapecast({intersectsBounds:i=>Kc.intersectsBox(i),intersectsTriangle:i=>Kc.intersectsTriangle(i)})}intersectsSphere(e){return this.shapecast({intersectsBounds:t=>e.intersectsBox(t),intersectsTriangle:t=>t.intersectsSphere(e)})}closestPointToGeometry(e,t,i={},n={},r=0,o=1/0){return(this.indirect?YR:LR)(this,e,t,i,n,r,o)}closestPointToPoint(e,t={},i=0,n=1/0){return function(r,o,a={},l=0,c=1/0){const h=l*l,d=c*c;let u=1/0,f=null;if(r.shapecast({boundsTraverseOrder:g=>(Aa.copy(o).clamp(g.min,g.max),Aa.distanceToSquared(o)),intersectsBounds:(g,E,p)=>p<u&&p<d,intersectsTriangle:(g,E)=>{g.closestPointToPoint(o,Aa);const p=o.distanceToSquared(Aa);return p<u&&(Ld.copy(Aa),u=p,f=E),p<h}}),u===1/0)return null;const m=Math.sqrt(u);return a.point?a.point.copy(Ld):a.point=Ld.clone(),a.distance=m,a.faceIndex=f,a}(this,e,t,i,n)}getBoundingBox(e){return e.makeEmpty(),this._roots.forEach(t=>{Lt(0,new Float32Array(t),fE),e.union(fE)}),e}}function pE(s,e,t){return s===null?null:(s.point.applyMatrix4(e.matrixWorld),s.distance=s.point.distanceTo(t.ray.origin),s.object=e,s.distance<t.near||s.distance>t.far?null:s)}const Vd=new da,mE=new _e,WR=Te.prototype.raycast;function XR(s,e){if(this.geometry.boundsTree){if(this.material===void 0)return;mE.copy(this.matrixWorld).invert(),Vd.copy(s.ray).applyMatrix4(mE);const t=this.geometry.boundsTree;if(s.firstHitOnly===!0){const i=pE(t.raycastFirst(Vd,this.material),this,s);i&&e.push(i)}else{const i=t.raycast(Vd,this.material);for(let n=0,r=i.length;n<r;n++){const o=pE(i[n],this,s);o&&e.push(o)}}}else WR.call(this,s,e)}function ZR(s){return this.boundsTree=new Vm(this,s),this.boundsTree}function jR(){this.boundsTree=null}const P_=class Cp{static apply(e){Cp.initialized||(We.prototype.computeBoundsTree=ZR,We.prototype.disposeBoundsTree=jR,Te.prototype.raycast=XR,Cp.initialized=!0),e.boundsTree||e.computeBoundsTree()}static dispose(e){e&&e.disposeBoundsTree&&e.disposeBoundsTree()}};fe(P_,"initialized",!1);let gE=P_,ca=class O_{constructor(e,t,i){fe(this,"ids",new Set),fe(this,"itemToInstances",new Map),fe(this,"instanceToItem",new Map),fe(this,"hiddenItems",new Set),fe(this,"id"),fe(this,"mesh"),fe(this,"capacity",0),fe(this,"capacityOffset",10),fe(this,"group"),fe(this,"_originalColors",new Map),fe(this,"_settingVisibility",!1),this.mesh=new ou(e,t,i,this),this.id=this.mesh.uuid,this.capacity=i,this.mesh.count=0,this.mesh.geometry.index.count&&gE.apply(this.mesh.geometry)}get uniqueVertices(){const e=[],t=this.mesh.geometry.getAttribute("position");if(!t)return e;const i=new Set;for(let n=0;n<t.count;n++){const r=t.getX(n),o=t.getY(n),a=t.getZ(n),l=`${r},${o},${a}`;i.has(l)||(i.add(l),e.push(new P(r,o,a)))}return e}dispose(e=!0){if(this.clear(),this.group=void 0,this._originalColors.clear(),this.mesh){if(e){for(const t of this.mesh.material)t.dispose();this.mesh.material=[],gE.dispose(this.mesh.geometry),this.mesh.geometry&&this.mesh.geometry.dispose(),this.mesh.geometry=null}this.mesh.removeFromParent(),this.mesh.userData={},this.mesh.dispose(),this.mesh.fragment=null,this.mesh=null}}get(e){const t=this.getInstancesIDs(e);if(!t)throw new Error("Item not found!");const i=[],n=[];for(const r of t){const o=new _e;if(this.mesh.getMatrixAt(r,o),i.push(o),this.mesh.instanceColor){const a=new Ne;this.mesh.getColorAt(r,a),n.push(a)}}return{id:e,transforms:i,colors:n.length?n:void 0}}getItemID(e){return this.instanceToItem.get(e)||null}getInstancesIDs(e){return this.itemToInstances.get(e)||null}update(){this.mesh.instanceColor&&(this.mesh.instanceColor.needsUpdate=!0),this.mesh.instanceMatrix.needsUpdate=!0}add(e){var t;let i=0;for(const r of e)i+=r.transforms.length;const n=this.mesh.count+i;if(n>this.capacity){const r=n+this.capacityOffset,o=new ou(this.mesh.geometry,this.mesh.material,r,this);o.count=this.mesh.count,this.capacity=r;const a=this.mesh;(t=a.parent)==null||t.add(o),a.removeFromParent(),this.mesh=o;const l=new _e;for(let c=0;c<a.instanceMatrix.count;c++)a.getMatrixAt(c,l),o.setMatrixAt(c,l);if(a.instanceColor){const c=new Ne;for(let h=0;h<a.instanceColor.count;h++)a.getColorAt(h,c),o.setColorAt(h,c)}a.dispose()}for(let r=0;r<e.length;r++){const{transforms:o,colors:a,id:l}=e[r];this.itemToInstances.has(l)||this.itemToInstances.set(l,new Set);const c=this.itemToInstances.get(l);this.ids.add(l);for(let h=0;h<o.length;h++){const d=o[h],u=this.mesh.count;if(this.mesh.setMatrixAt(u,d),a){const f=a[h];this.mesh.setColorAt(u,f)}c.add(u),this.instanceToItem.set(u,l),this.mesh.count++}}this.update()}remove(e){if(this.mesh.count!==0){for(const t of e){const i=this.itemToInstances.get(t);if(i===void 0)throw new Error("Instances not found!");for(const n of i){if(this.mesh.count===0)throw new Error("Error with mesh count!");this.putLast(n),this.instanceToItem.delete(n),this.mesh.count--}this.itemToInstances.delete(t),this.ids.delete(t)}this.update()}}clear(){this.hiddenItems.clear(),this.ids.clear(),this.instanceToItem.clear(),this.itemToInstances.clear(),this.mesh.count=0}setVisibility(e,t=this.ids){if(!this._settingVisibility){if(this._settingVisibility=!0,e)for(const i of t){if(!this.ids.has(i)||!this.hiddenItems.has(i))continue;const n=this.itemToInstances.get(i);if(!n)throw new Error("Instances not found!");for(const r of new Set(n))this.mesh.count++,this.putLast(r);this.hiddenItems.delete(i)}else for(const i of t){if(!this.ids.has(i)||this.hiddenItems.has(i))continue;const n=this.itemToInstances.get(i);if(!n)throw new Error("Instances not found!");for(const r of new Set(n))this.putLast(r),this.mesh.count--;this.hiddenItems.add(i)}this.update(),this._settingVisibility=!1}}setColor(e,t=this.ids,i=!1){if(!this.mesh.instanceColor)throw new Error("This fragment doesn't have color per instance!");for(const n of t){if(!this.ids.has(n))continue;const r=this.itemToInstances.get(n);if(!r)throw new Error("Instances not found!");const o=this._originalColors.has(n);o||this._originalColors.set(n,new Map);const a=this._originalColors.get(n);for(const l of new Set(r)){if(!o){const c=new Ne;this.mesh.getColorAt(l,c),a.set(l,c)}this.mesh.setColorAt(l,e),i&&a.set(l,e)}}this.mesh.instanceColor.needsUpdate=!0}resetColor(e=this.ids){if(!this.mesh.instanceColor)throw new Error("This fragment doesn't have color per instance!");for(const t of e){if(!this.ids.has(t))continue;const i=this.itemToInstances.get(t);if(!i)throw new Error("Instances not found!");const n=this._originalColors.get(t);if(n)for(const r of new Set(i)){const o=n.get(r);if(!o)throw new Error("Original color not found!");this.mesh.setColorAt(r,o)}}this.mesh.instanceColor.needsUpdate=!0}applyTransform(e,t){const i=new _e;for(const n of e){const r=this.getInstancesIDs(n);if(r!==null)for(const o of r)this.mesh.getMatrixAt(o,i),i.premultiply(t),this.mesh.setMatrixAt(o,i)}this.update()}exportData(){return{...this.mesh.exportData(),ids:Array.from(this.ids),id:this.id}}clone(e=this.ids){const t=new O_(this.mesh.geometry,this.mesh.material,this.capacity),i=[];for(const n of e){const r=this.getInstancesIDs(n);if(r===null)continue;const o=[],a=[];for(const l of r){const c=new _e,h=new Ne;this.mesh.getMatrixAt(l,c),this.mesh.getColorAt(l,h),o.push(c),a.push(h)}i.push({id:n,transforms:o,colors:a})}return t.add(i),t}putLast(e){if(this.mesh.count===0)return;const t=this.instanceToItem.get(e),i=this.mesh.count-1;if(i===e)return;const n=this.instanceToItem.get(i);if(t===void 0||n===void 0)throw new Error("Keys not found");if(t!==n){const a=this.itemToInstances.get(t),l=this.itemToInstances.get(n);if(!a||!l)throw new Error("Instances not found");if(!a.has(e)||!l.has(i))throw new Error("Malformed fragment structure");a.delete(e),l.delete(i),a.add(i),l.add(e),this.instanceToItem.set(e,n),this.instanceToItem.set(i,t)}const r=new _e,o=new _e;if(this.mesh.getMatrixAt(e,r),this.mesh.getMatrixAt(i,o),this.mesh.setMatrixAt(e,o),this.mesh.setMatrixAt(i,r),this.mesh.instanceColor!==null){const a=new Ne,l=new Ne;this.mesh.getColorAt(e,a),this.mesh.getColorAt(i,l),this.mesh.setColorAt(e,l),this.mesh.setColorAt(i,a);const c=this._originalColors.get(t);if(c){const d=c.get(e);d&&(c.delete(e),c.set(i,d))}const h=this._originalColors.get(n);if(h){const d=h.get(i);d&&(h.delete(i),h.set(e,d))}}}},kh=class mr{constructor(){fe(this,"bb",null),fe(this,"bb_pos",0)}__init(e,t){return this.bb_pos=e,this.bb=t,this}static getRootAsCivilCurve(e,t){return(t||new mr).__init(e.readInt32(e.position())+e.position(),e)}static getSizePrefixedRootAsCivilCurve(e,t){return e.setPosition(e.position()+4),(t||new mr).__init(e.readInt32(e.position())+e.position(),e)}points(e){const t=this.bb.__offset(this.bb_pos,4);return t?this.bb.readFloat32(this.bb.__vector(this.bb_pos+t)+4*e):0}pointsLength(){const e=this.bb.__offset(this.bb_pos,4);return e?this.bb.__vector_len(this.bb_pos+e):0}pointsArray(){const e=this.bb.__offset(this.bb_pos,4);return e?new Float32Array(this.bb.bytes().buffer,this.bb.bytes().byteOffset+this.bb.__vector(this.bb_pos+e),this.bb.__vector_len(this.bb_pos+e)):null}data(e){const t=this.bb.__offset(this.bb_pos,6);return t?this.bb.__string(this.bb_pos+t,e):null}static startCivilCurve(e){e.startObject(2)}static addPoints(e,t){e.addFieldOffset(0,t,0)}static createPointsVector(e,t){e.startVector(4,t.length,4);for(let i=t.length-1;i>=0;i--)e.addFloat32(t[i]);return e.endVector()}static startPointsVector(e,t){e.startVector(4,t,4)}static addData(e,t){e.addFieldOffset(1,t,0)}static endCivilCurve(e){return e.endObject()}static createCivilCurve(e,t,i){return mr.startCivilCurve(e),mr.addPoints(e,t),mr.addData(e,i),mr.endCivilCurve(e)}},L_=class ss{constructor(){fe(this,"bb",null),fe(this,"bb_pos",0)}__init(e,t){return this.bb_pos=e,this.bb=t,this}static getRootAsAlignment(e,t){return(t||new ss).__init(e.readInt32(e.position())+e.position(),e)}static getSizePrefixedRootAsAlignment(e,t){return e.setPosition(e.position()+4),(t||new ss).__init(e.readInt32(e.position())+e.position(),e)}vertical(e,t){const i=this.bb.__offset(this.bb_pos,4);return i?(t||new kh).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos+i)+4*e),this.bb):null}verticalLength(){const e=this.bb.__offset(this.bb_pos,4);return e?this.bb.__vector_len(this.bb_pos+e):0}horizontal(e,t){const i=this.bb.__offset(this.bb_pos,6);return i?(t||new kh).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos+i)+4*e),this.bb):null}horizontalLength(){const e=this.bb.__offset(this.bb_pos,6);return e?this.bb.__vector_len(this.bb_pos+e):0}absolute(e,t){const i=this.bb.__offset(this.bb_pos,8);return i?(t||new kh).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos+i)+4*e),this.bb):null}absoluteLength(){const e=this.bb.__offset(this.bb_pos,8);return e?this.bb.__vector_len(this.bb_pos+e):0}initialPk(){const e=this.bb.__offset(this.bb_pos,10);return e?this.bb.readFloat32(this.bb_pos+e):0}static startAlignment(e){e.startObject(4)}static addVertical(e,t){e.addFieldOffset(0,t,0)}static createVerticalVector(e,t){e.startVector(4,t.length,4);for(let i=t.length-1;i>=0;i--)e.addOffset(t[i]);return e.endVector()}static startVerticalVector(e,t){e.startVector(4,t,4)}static addHorizontal(e,t){e.addFieldOffset(1,t,0)}static createHorizontalVector(e,t){e.startVector(4,t.length,4);for(let i=t.length-1;i>=0;i--)e.addOffset(t[i]);return e.endVector()}static startHorizontalVector(e,t){e.startVector(4,t,4)}static addAbsolute(e,t){e.addFieldOffset(2,t,0)}static createAbsoluteVector(e,t){e.startVector(4,t.length,4);for(let i=t.length-1;i>=0;i--)e.addOffset(t[i]);return e.endVector()}static startAbsoluteVector(e,t){e.startVector(4,t,4)}static addInitialPk(e,t){e.addFieldFloat32(3,t,0)}static endAlignment(e){return e.endObject()}static createAlignment(e,t,i,n,r){return ss.startAlignment(e),ss.addVertical(e,t),ss.addHorizontal(e,i),ss.addAbsolute(e,n),ss.addInitialPk(e,r),ss.endAlignment(e)}},D_=class gr{constructor(){fe(this,"bb",null),fe(this,"bb_pos",0)}__init(e,t){return this.bb_pos=e,this.bb=t,this}static getRootAsCivilData(e,t){return(t||new gr).__init(e.readInt32(e.position())+e.position(),e)}static getSizePrefixedRootAsCivilData(e,t){return e.setPosition(e.position()+4),(t||new gr).__init(e.readInt32(e.position())+e.position(),e)}alignments(e,t){const i=this.bb.__offset(this.bb_pos,4);return i?(t||new L_).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos+i)+4*e),this.bb):null}alignmentsLength(){const e=this.bb.__offset(this.bb_pos,4);return e?this.bb.__vector_len(this.bb_pos+e):0}coordinationMatrix(e){const t=this.bb.__offset(this.bb_pos,6);return t?this.bb.readFloat32(this.bb.__vector(this.bb_pos+t)+4*e):0}coordinationMatrixLength(){const e=this.bb.__offset(this.bb_pos,6);return e?this.bb.__vector_len(this.bb_pos+e):0}coordinationMatrixArray(){const e=this.bb.__offset(this.bb_pos,6);return e?new Float32Array(this.bb.bytes().buffer,this.bb.bytes().byteOffset+this.bb.__vector(this.bb_pos+e),this.bb.__vector_len(this.bb_pos+e)):null}static startCivilData(e){e.startObject(2)}static addAlignments(e,t){e.addFieldOffset(0,t,0)}static createAlignmentsVector(e,t){e.startVector(4,t.length,4);for(let i=t.length-1;i>=0;i--)e.addOffset(t[i]);return e.endVector()}static startAlignmentsVector(e,t){e.startVector(4,t,4)}static addCoordinationMatrix(e,t){e.addFieldOffset(1,t,0)}static createCoordinationMatrixVector(e,t){e.startVector(4,t.length,4);for(let i=t.length-1;i>=0;i--)e.addFloat32(t[i]);return e.endVector()}static startCoordinationMatrixVector(e,t){e.startVector(4,t,4)}static endCivilData(e){return e.endObject()}static createCivilData(e,t,i){return gr.startCivilData(e),gr.addAlignments(e,t),gr.addCoordinationMatrix(e,i),gr.endCivilData(e)}},xp=class ci{constructor(){fe(this,"bb",null),fe(this,"bb_pos",0)}__init(e,t){return this.bb_pos=e,this.bb=t,this}static getRootAsFragment(e,t){return(t||new ci).__init(e.readInt32(e.position())+e.position(),e)}static getSizePrefixedRootAsFragment(e,t){return e.setPosition(e.position()+4),(t||new ci).__init(e.readInt32(e.position())+e.position(),e)}position(e){const t=this.bb.__offset(this.bb_pos,4);return t?this.bb.readFloat32(this.bb.__vector(this.bb_pos+t)+4*e):0}positionLength(){const e=this.bb.__offset(this.bb_pos,4);return e?this.bb.__vector_len(this.bb_pos+e):0}positionArray(){const e=this.bb.__offset(this.bb_pos,4);return e?new Float32Array(this.bb.bytes().buffer,this.bb.bytes().byteOffset+this.bb.__vector(this.bb_pos+e),this.bb.__vector_len(this.bb_pos+e)):null}normal(e){const t=this.bb.__offset(this.bb_pos,6);return t?this.bb.readFloat32(this.bb.__vector(this.bb_pos+t)+4*e):0}normalLength(){const e=this.bb.__offset(this.bb_pos,6);return e?this.bb.__vector_len(this.bb_pos+e):0}normalArray(){const e=this.bb.__offset(this.bb_pos,6);return e?new Float32Array(this.bb.bytes().buffer,this.bb.bytes().byteOffset+this.bb.__vector(this.bb_pos+e),this.bb.__vector_len(this.bb_pos+e)):null}index(e){const t=this.bb.__offset(this.bb_pos,8);return t?this.bb.readUint32(this.bb.__vector(this.bb_pos+t)+4*e):0}indexLength(){const e=this.bb.__offset(this.bb_pos,8);return e?this.bb.__vector_len(this.bb_pos+e):0}indexArray(){const e=this.bb.__offset(this.bb_pos,8);return e?new Uint32Array(this.bb.bytes().buffer,this.bb.bytes().byteOffset+this.bb.__vector(this.bb_pos+e),this.bb.__vector_len(this.bb_pos+e)):null}groups(e){const t=this.bb.__offset(this.bb_pos,10);return t?this.bb.readFloat32(this.bb.__vector(this.bb_pos+t)+4*e):0}groupsLength(){const e=this.bb.__offset(this.bb_pos,10);return e?this.bb.__vector_len(this.bb_pos+e):0}groupsArray(){const e=this.bb.__offset(this.bb_pos,10);return e?new Float32Array(this.bb.bytes().buffer,this.bb.bytes().byteOffset+this.bb.__vector(this.bb_pos+e),this.bb.__vector_len(this.bb_pos+e)):null}materials(e){const t=this.bb.__offset(this.bb_pos,12);return t?this.bb.readFloat32(this.bb.__vector(this.bb_pos+t)+4*e):0}materialsLength(){const e=this.bb.__offset(this.bb_pos,12);return e?this.bb.__vector_len(this.bb_pos+e):0}materialsArray(){const e=this.bb.__offset(this.bb_pos,12);return e?new Float32Array(this.bb.bytes().buffer,this.bb.bytes().byteOffset+this.bb.__vector(this.bb_pos+e),this.bb.__vector_len(this.bb_pos+e)):null}matrices(e){const t=this.bb.__offset(this.bb_pos,14);return t?this.bb.readFloat32(this.bb.__vector(this.bb_pos+t)+4*e):0}matricesLength(){const e=this.bb.__offset(this.bb_pos,14);return e?this.bb.__vector_len(this.bb_pos+e):0}matricesArray(){const e=this.bb.__offset(this.bb_pos,14);return e?new Float32Array(this.bb.bytes().buffer,this.bb.bytes().byteOffset+this.bb.__vector(this.bb_pos+e),this.bb.__vector_len(this.bb_pos+e)):null}colors(e){const t=this.bb.__offset(this.bb_pos,16);return t?this.bb.readFloat32(this.bb.__vector(this.bb_pos+t)+4*e):0}colorsLength(){const e=this.bb.__offset(this.bb_pos,16);return e?this.bb.__vector_len(this.bb_pos+e):0}colorsArray(){const e=this.bb.__offset(this.bb_pos,16);return e?new Float32Array(this.bb.bytes().buffer,this.bb.bytes().byteOffset+this.bb.__vector(this.bb_pos+e),this.bb.__vector_len(this.bb_pos+e)):null}itemsSize(e){const t=this.bb.__offset(this.bb_pos,18);return t?this.bb.readUint32(this.bb.__vector(this.bb_pos+t)+4*e):0}itemsSizeLength(){const e=this.bb.__offset(this.bb_pos,18);return e?this.bb.__vector_len(this.bb_pos+e):0}itemsSizeArray(){const e=this.bb.__offset(this.bb_pos,18);return e?new Uint32Array(this.bb.bytes().buffer,this.bb.bytes().byteOffset+this.bb.__vector(this.bb_pos+e),this.bb.__vector_len(this.bb_pos+e)):null}ids(e){const t=this.bb.__offset(this.bb_pos,20);return t?this.bb.readUint32(this.bb.__vector(this.bb_pos+t)+4*e):0}idsLength(){const e=this.bb.__offset(this.bb_pos,20);return e?this.bb.__vector_len(this.bb_pos+e):0}idsArray(){const e=this.bb.__offset(this.bb_pos,20);return e?new Uint32Array(this.bb.bytes().buffer,this.bb.bytes().byteOffset+this.bb.__vector(this.bb_pos+e),this.bb.__vector_len(this.bb_pos+e)):null}id(e){const t=this.bb.__offset(this.bb_pos,22);return t?this.bb.__string(this.bb_pos+t,e):null}capacity(){const e=this.bb.__offset(this.bb_pos,24);return e?this.bb.readUint32(this.bb_pos+e):0}capacityOffset(){const e=this.bb.__offset(this.bb_pos,26);return e?this.bb.readUint32(this.bb_pos+e):0}static startFragment(e){e.startObject(12)}static addPosition(e,t){e.addFieldOffset(0,t,0)}static createPositionVector(e,t){e.startVector(4,t.length,4);for(let i=t.length-1;i>=0;i--)e.addFloat32(t[i]);return e.endVector()}static startPositionVector(e,t){e.startVector(4,t,4)}static addNormal(e,t){e.addFieldOffset(1,t,0)}static createNormalVector(e,t){e.startVector(4,t.length,4);for(let i=t.length-1;i>=0;i--)e.addFloat32(t[i]);return e.endVector()}static startNormalVector(e,t){e.startVector(4,t,4)}static addIndex(e,t){e.addFieldOffset(2,t,0)}static createIndexVector(e,t){e.startVector(4,t.length,4);for(let i=t.length-1;i>=0;i--)e.addInt32(t[i]);return e.endVector()}static startIndexVector(e,t){e.startVector(4,t,4)}static addGroups(e,t){e.addFieldOffset(3,t,0)}static createGroupsVector(e,t){e.startVector(4,t.length,4);for(let i=t.length-1;i>=0;i--)e.addFloat32(t[i]);return e.endVector()}static startGroupsVector(e,t){e.startVector(4,t,4)}static addMaterials(e,t){e.addFieldOffset(4,t,0)}static createMaterialsVector(e,t){e.startVector(4,t.length,4);for(let i=t.length-1;i>=0;i--)e.addFloat32(t[i]);return e.endVector()}static startMaterialsVector(e,t){e.startVector(4,t,4)}static addMatrices(e,t){e.addFieldOffset(5,t,0)}static createMatricesVector(e,t){e.startVector(4,t.length,4);for(let i=t.length-1;i>=0;i--)e.addFloat32(t[i]);return e.endVector()}static startMatricesVector(e,t){e.startVector(4,t,4)}static addColors(e,t){e.addFieldOffset(6,t,0)}static createColorsVector(e,t){e.startVector(4,t.length,4);for(let i=t.length-1;i>=0;i--)e.addFloat32(t[i]);return e.endVector()}static startColorsVector(e,t){e.startVector(4,t,4)}static addItemsSize(e,t){e.addFieldOffset(7,t,0)}static createItemsSizeVector(e,t){e.startVector(4,t.length,4);for(let i=t.length-1;i>=0;i--)e.addInt32(t[i]);return e.endVector()}static startItemsSizeVector(e,t){e.startVector(4,t,4)}static addIds(e,t){e.addFieldOffset(8,t,0)}static createIdsVector(e,t){e.startVector(4,t.length,4);for(let i=t.length-1;i>=0;i--)e.addInt32(t[i]);return e.endVector()}static startIdsVector(e,t){e.startVector(4,t,4)}static addId(e,t){e.addFieldOffset(9,t,0)}static addCapacity(e,t){e.addFieldInt32(10,t,0)}static addCapacityOffset(e,t){e.addFieldInt32(11,t,0)}static endFragment(e){return e.endObject()}static createFragment(e,t,i,n,r,o,a,l,c,h,d,u,f){return ci.startFragment(e),ci.addPosition(e,t),ci.addNormal(e,i),ci.addIndex(e,n),ci.addGroups(e,r),ci.addMaterials(e,o),ci.addMatrices(e,a),ci.addColors(e,l),ci.addItemsSize(e,c),ci.addIds(e,h),ci.addId(e,d),ci.addCapacity(e,u),ci.addCapacityOffset(e,f),ci.endFragment(e)}},kd=class wp{constructor(){fe(this,"bb",null),fe(this,"bb_pos",0)}__init(e,t){return this.bb_pos=e,this.bb=t,this}static getRootAsFragmentsGroup(e,t){return(t||new wp).__init(e.readInt32(e.position())+e.position(),e)}static getSizePrefixedRootAsFragmentsGroup(e,t){return e.setPosition(e.position()+4),(t||new wp).__init(e.readInt32(e.position())+e.position(),e)}items(e,t){const i=this.bb.__offset(this.bb_pos,4);return i?(t||new xp).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos+i)+4*e),this.bb):null}itemsLength(){const e=this.bb.__offset(this.bb_pos,4);return e?this.bb.__vector_len(this.bb_pos+e):0}civil(e){const t=this.bb.__offset(this.bb_pos,6);return t?(e||new D_).__init(this.bb.__indirect(this.bb_pos+t),this.bb):null}coordinationMatrix(e){const t=this.bb.__offset(this.bb_pos,8);return t?this.bb.readFloat32(this.bb.__vector(this.bb_pos+t)+4*e):0}coordinationMatrixLength(){const e=this.bb.__offset(this.bb_pos,8);return e?this.bb.__vector_len(this.bb_pos+e):0}coordinationMatrixArray(){const e=this.bb.__offset(this.bb_pos,8);return e?new Float32Array(this.bb.bytes().buffer,this.bb.bytes().byteOffset+this.bb.__vector(this.bb_pos+e),this.bb.__vector_len(this.bb_pos+e)):null}ids(e){const t=this.bb.__offset(this.bb_pos,10);return t?this.bb.readUint32(this.bb.__vector(this.bb_pos+t)+4*e):0}idsLength(){const e=this.bb.__offset(this.bb_pos,10);return e?this.bb.__vector_len(this.bb_pos+e):0}idsArray(){const e=this.bb.__offset(this.bb_pos,10);return e?new Uint32Array(this.bb.bytes().buffer,this.bb.bytes().byteOffset+this.bb.__vector(this.bb_pos+e),this.bb.__vector_len(this.bb_pos+e)):null}itemsKeys(e){const t=this.bb.__offset(this.bb_pos,12);return t?this.bb.readUint32(this.bb.__vector(this.bb_pos+t)+4*e):0}itemsKeysLength(){const e=this.bb.__offset(this.bb_pos,12);return e?this.bb.__vector_len(this.bb_pos+e):0}itemsKeysArray(){const e=this.bb.__offset(this.bb_pos,12);return e?new Uint32Array(this.bb.bytes().buffer,this.bb.bytes().byteOffset+this.bb.__vector(this.bb_pos+e),this.bb.__vector_len(this.bb_pos+e)):null}itemsKeysIndices(e){const t=this.bb.__offset(this.bb_pos,14);return t?this.bb.readUint32(this.bb.__vector(this.bb_pos+t)+4*e):0}itemsKeysIndicesLength(){const e=this.bb.__offset(this.bb_pos,14);return e?this.bb.__vector_len(this.bb_pos+e):0}itemsKeysIndicesArray(){const e=this.bb.__offset(this.bb_pos,14);return e?new Uint32Array(this.bb.bytes().buffer,this.bb.bytes().byteOffset+this.bb.__vector(this.bb_pos+e),this.bb.__vector_len(this.bb_pos+e)):null}itemsRels(e){const t=this.bb.__offset(this.bb_pos,16);return t?this.bb.readUint32(this.bb.__vector(this.bb_pos+t)+4*e):0}itemsRelsLength(){const e=this.bb.__offset(this.bb_pos,16);return e?this.bb.__vector_len(this.bb_pos+e):0}itemsRelsArray(){const e=this.bb.__offset(this.bb_pos,16);return e?new Uint32Array(this.bb.bytes().buffer,this.bb.bytes().byteOffset+this.bb.__vector(this.bb_pos+e),this.bb.__vector_len(this.bb_pos+e)):null}itemsRelsIndices(e){const t=this.bb.__offset(this.bb_pos,18);return t?this.bb.readUint32(this.bb.__vector(this.bb_pos+t)+4*e):0}itemsRelsIndicesLength(){const e=this.bb.__offset(this.bb_pos,18);return e?this.bb.__vector_len(this.bb_pos+e):0}itemsRelsIndicesArray(){const e=this.bb.__offset(this.bb_pos,18);return e?new Uint32Array(this.bb.bytes().buffer,this.bb.bytes().byteOffset+this.bb.__vector(this.bb_pos+e),this.bb.__vector_len(this.bb_pos+e)):null}fragmentKeys(e){const t=this.bb.__offset(this.bb_pos,20);return t?this.bb.__string(this.bb_pos+t,e):null}id(e){const t=this.bb.__offset(this.bb_pos,22);return t?this.bb.__string(this.bb_pos+t,e):null}name(e){const t=this.bb.__offset(this.bb_pos,24);return t?this.bb.__string(this.bb_pos+t,e):null}ifcName(e){const t=this.bb.__offset(this.bb_pos,26);return t?this.bb.__string(this.bb_pos+t,e):null}ifcDescription(e){const t=this.bb.__offset(this.bb_pos,28);return t?this.bb.__string(this.bb_pos+t,e):null}ifcSchema(e){const t=this.bb.__offset(this.bb_pos,30);return t?this.bb.__string(this.bb_pos+t,e):null}maxExpressId(){const e=this.bb.__offset(this.bb_pos,32);return e?this.bb.readUint32(this.bb_pos+e):0}boundingBox(e){const t=this.bb.__offset(this.bb_pos,34);return t?this.bb.readFloat32(this.bb.__vector(this.bb_pos+t)+4*e):0}boundingBoxLength(){const e=this.bb.__offset(this.bb_pos,34);return e?this.bb.__vector_len(this.bb_pos+e):0}boundingBoxArray(){const e=this.bb.__offset(this.bb_pos,34);return e?new Float32Array(this.bb.bytes().buffer,this.bb.bytes().byteOffset+this.bb.__vector(this.bb_pos+e),this.bb.__vector_len(this.bb_pos+e)):null}opaqueGeometriesIds(e){const t=this.bb.__offset(this.bb_pos,36);return t?this.bb.readInt32(this.bb.__vector(this.bb_pos+t)+4*e):0}opaqueGeometriesIdsLength(){const e=this.bb.__offset(this.bb_pos,36);return e?this.bb.__vector_len(this.bb_pos+e):0}opaqueGeometriesIdsArray(){const e=this.bb.__offset(this.bb_pos,36);return e?new Int32Array(this.bb.bytes().buffer,this.bb.bytes().byteOffset+this.bb.__vector(this.bb_pos+e),this.bb.__vector_len(this.bb_pos+e)):null}transparentGeometriesIds(e){const t=this.bb.__offset(this.bb_pos,38);return t?this.bb.readInt32(this.bb.__vector(this.bb_pos+t)+4*e):0}transparentGeometriesIdsLength(){const e=this.bb.__offset(this.bb_pos,38);return e?this.bb.__vector_len(this.bb_pos+e):0}transparentGeometriesIdsArray(){const e=this.bb.__offset(this.bb_pos,38);return e?new Int32Array(this.bb.bytes().buffer,this.bb.bytes().byteOffset+this.bb.__vector(this.bb_pos+e),this.bb.__vector_len(this.bb_pos+e)):null}static startFragmentsGroup(e){e.startObject(18)}static addItems(e,t){e.addFieldOffset(0,t,0)}static createItemsVector(e,t){e.startVector(4,t.length,4);for(let i=t.length-1;i>=0;i--)e.addOffset(t[i]);return e.endVector()}static startItemsVector(e,t){e.startVector(4,t,4)}static addCivil(e,t){e.addFieldOffset(1,t,0)}static addCoordinationMatrix(e,t){e.addFieldOffset(2,t,0)}static createCoordinationMatrixVector(e,t){e.startVector(4,t.length,4);for(let i=t.length-1;i>=0;i--)e.addFloat32(t[i]);return e.endVector()}static startCoordinationMatrixVector(e,t){e.startVector(4,t,4)}static addIds(e,t){e.addFieldOffset(3,t,0)}static createIdsVector(e,t){e.startVector(4,t.length,4);for(let i=t.length-1;i>=0;i--)e.addInt32(t[i]);return e.endVector()}static startIdsVector(e,t){e.startVector(4,t,4)}static addItemsKeys(e,t){e.addFieldOffset(4,t,0)}static createItemsKeysVector(e,t){e.startVector(4,t.length,4);for(let i=t.length-1;i>=0;i--)e.addInt32(t[i]);return e.endVector()}static startItemsKeysVector(e,t){e.startVector(4,t,4)}static addItemsKeysIndices(e,t){e.addFieldOffset(5,t,0)}static createItemsKeysIndicesVector(e,t){e.startVector(4,t.length,4);for(let i=t.length-1;i>=0;i--)e.addInt32(t[i]);return e.endVector()}static startItemsKeysIndicesVector(e,t){e.startVector(4,t,4)}static addItemsRels(e,t){e.addFieldOffset(6,t,0)}static createItemsRelsVector(e,t){e.startVector(4,t.length,4);for(let i=t.length-1;i>=0;i--)e.addInt32(t[i]);return e.endVector()}static startItemsRelsVector(e,t){e.startVector(4,t,4)}static addItemsRelsIndices(e,t){e.addFieldOffset(7,t,0)}static createItemsRelsIndicesVector(e,t){e.startVector(4,t.length,4);for(let i=t.length-1;i>=0;i--)e.addInt32(t[i]);return e.endVector()}static startItemsRelsIndicesVector(e,t){e.startVector(4,t,4)}static addFragmentKeys(e,t){e.addFieldOffset(8,t,0)}static addId(e,t){e.addFieldOffset(9,t,0)}static addName(e,t){e.addFieldOffset(10,t,0)}static addIfcName(e,t){e.addFieldOffset(11,t,0)}static addIfcDescription(e,t){e.addFieldOffset(12,t,0)}static addIfcSchema(e,t){e.addFieldOffset(13,t,0)}static addMaxExpressId(e,t){e.addFieldInt32(14,t,0)}static addBoundingBox(e,t){e.addFieldOffset(15,t,0)}static createBoundingBoxVector(e,t){e.startVector(4,t.length,4);for(let i=t.length-1;i>=0;i--)e.addFloat32(t[i]);return e.endVector()}static startBoundingBoxVector(e,t){e.startVector(4,t,4)}static addOpaqueGeometriesIds(e,t){e.addFieldOffset(16,t,0)}static createOpaqueGeometriesIdsVector(e,t){e.startVector(4,t.length,4);for(let i=t.length-1;i>=0;i--)e.addInt32(t[i]);return e.endVector()}static startOpaqueGeometriesIdsVector(e,t){e.startVector(4,t,4)}static addTransparentGeometriesIds(e,t){e.addFieldOffset(17,t,0)}static createTransparentGeometriesIdsVector(e,t){e.startVector(4,t.length,4);for(let i=t.length-1;i>=0;i--)e.addInt32(t[i]);return e.endVector()}static startTransparentGeometriesIdsVector(e,t){e.startVector(4,t,4)}static endFragmentsGroup(e){return e.endObject()}static finishFragmentsGroupBuffer(e,t){e.finish(t)}static finishSizePrefixedFragmentsGroupBuffer(e,t){e.finish(t,void 0,!0)}};class qR{constructor(){fe(this,"version",1),fe(this,"fragmentIDSeparator","|")}import(e){const t=new yl(e),i=kd.getRootAsFragmentsGroup(t),n=this.constructFragmentGroup(i),r=i.itemsLength();for(let o=0;o<r;o++){const a=i.items(o);if(!a)continue;const l=this.constructGeometry(a),c=this.constructMaterials(a),h=a.capacity(),d=new ca(l,c,h);d.capacityOffset=a.capacityOffset(),this.setInstances(a,d),this.setID(a,d),n.items.push(d),n.add(d.mesh)}return n}export(e){const t=new zl(1024),i=[],n=kd,r=xp;let o=null;if(e.civilData){const j=[],X=L_,ue=D_;for(const[Ie,me]of e.civilData.alignments){const{absolute:ce,horizontal:ge,vertical:Ee}=me,Se=this.saveCivilCurves(ge,t),ke=this.saveCivilCurves(Ee,t),Ue=this.saveCivilCurves(ce,t),x=X.createHorizontalVector(t,Se),ae=X.createVerticalVector(t,ke),Q=X.createAbsoluteVector(t,Ue);X.startAlignment(t),X.addHorizontal(t,x),X.addVertical(t,ae),X.addAbsolute(t,Q),X.addInitialPk(t,me.initialKP);const G=X.endAlignment(t);j.push(G)}const Z=ue.createAlignmentsVector(t,j),K=ue.createCoordinationMatrixVector(t,e.coordinationMatrix.elements);ue.startCivilData(t),ue.addAlignments(t,Z),ue.addCoordinationMatrix(t,K),o=ue.endCivilData(t)}for(const j of e.items){const X=j.exportData(),ue=[];for(const ae of j.ids){const Q=j.getInstancesIDs(ae);if(!Q)throw new Error("Instances not found!");ue.push(Q.size)}const Z=r.createPositionVector(t,X.position),K=r.createNormalVector(t,X.normal),Ie=r.createIndexVector(t,X.index),me=r.createGroupsVector(t,X.groups),ce=r.createMaterialsVector(t,X.materials),ge=r.createMatricesVector(t,X.matrices),Ee=r.createColorsVector(t,X.colors),Se=r.createIdsVector(t,X.ids),ke=r.createItemsSizeVector(t,ue),Ue=t.createString(X.id);r.startFragment(t),r.addPosition(t,Z),r.addNormal(t,K),r.addIndex(t,Ie),r.addGroups(t,me),r.addMaterials(t,ce),r.addMatrices(t,ge),r.addColors(t,Ee),r.addIds(t,Se),r.addItemsSize(t,ke),r.addId(t,Ue),r.addCapacity(t,j.capacity),r.addCapacityOffset(t,j.capacityOffset);const x=xp.endFragment(t);i.push(x)}const a=n.createItemsVector(t,i),l=n.createCoordinationMatrixVector(t,e.coordinationMatrix.elements);let c="";for(const j of e.keyFragments.values())c.length&&(c+=this.fragmentIDSeparator),c+=j;const h=t.createString(c),d=[],u=[],f=[],m=[],g=[];let E=0,p=0;for(const[j,[X,ue]]of e.data){d.push(E),f.push(p),g.push(j);for(const Z of X)u.push(Z);for(const Z of ue)m.push(Z);E+=X.length,p+=ue.length}const v=[],I=[];for(const[j,X]of e.geometryIDs.opaque)v.push(j,X);for(const[j,X]of e.geometryIDs.transparent)I.push(j,X);const _=t.createString(e.uuid),b=t.createString(e.name),T=t.createString(e.ifcMetadata.name),w=t.createString(e.ifcMetadata.description),A=t.createString(e.ifcMetadata.schema),y=n.createItemsKeysIndicesVector(t,d),C=n.createItemsKeysVector(t,u),M=n.createItemsRelsIndicesVector(t,f),R=n.createItemsRelsVector(t,m),L=n.createIdsVector(t,g),S=n.createOpaqueGeometriesIdsVector(t,v),U=n.createTransparentGeometriesIdsVector(t,I),{min:z,max:k}=e.boundingBox,H=[z.x,z.y,z.z,k.x,k.y,k.z],Y=n.createBoundingBoxVector(t,H);n.startFragmentsGroup(t),n.addId(t,_),n.addName(t,b),n.addIfcName(t,T),n.addIfcDescription(t,w),n.addIfcSchema(t,A),n.addMaxExpressId(t,e.ifcMetadata.maxExpressID),n.addItems(t,a),n.addFragmentKeys(t,h),n.addIds(t,L),n.addItemsKeysIndices(t,y),n.addItemsKeys(t,C),n.addItemsRelsIndices(t,M),n.addItemsRels(t,R),n.addCoordinationMatrix(t,l),n.addBoundingBox(t,Y),n.addOpaqueGeometriesIds(t,S),n.addTransparentGeometriesIds(t,U),o!==null&&n.addCivil(t,o);const re=kd.endFragmentsGroup(t);return t.finish(re),t.asUint8Array()}setID(e,t){const i=e.id();i&&(t.id=i,t.mesh.uuid=i)}setInstances(e,t){const i=e.matricesArray(),n=e.colorsArray(),r=e.idsArray(),o=e.itemsSizeArray();if(!i||!r||!o)throw new Error("Error: Can't load empty fragment!");const a=[];let l=0;for(let c=0;c<o.length;c++){const h=r[c],d=o[c],u=[],f=[];for(let g=0;g<d;g++){const E=16*l,p=i.subarray(E,E+17),v=new _e().fromArray(p);if(u.push(v),n){const I=3*l,[_,b,T]=n.subarray(I,I+4),w=new Ne(_,b,T);f.push(w)}l++}const m=f.length?f:void 0;a.push({id:h,transforms:u,colors:m})}t.add(a)}constructMaterials(e){const t=e.materialsArray(),i=[];if(!t)return i;for(let n=0;n<t.length;n+=5){const r=t[n],o=!!t[n+1],a=t[n+2],l=t[n+3],c=t[n+4],h=new Ne(a,l,c),d=new aa({color:h,opacity:r,transparent:o});i.push(d)}return i}constructFragmentGroup(e){const t=new An,i=e.civil();if(i){const w=i.coordinationMatrixArray(),A=new _e;w&&A.fromArray(w),t.civilData={alignments:new Map,coordinationMatrix:A};const y=i.alignmentsLength();for(let C=0;C<y;C++){const M=new Fn({color:16777215}),R=new km,L=i.alignments(C);if(!L)throw new Error("Alignment not found!");const S=L.horizontalLength();R.horizontal=this.constructCivilCurves(L,R,"horizontal",S,M);const U=L.verticalLength();R.vertical=this.constructCivilCurves(L,R,"vertical",U,M);const z=L.horizontalLength();R.absolute=this.constructCivilCurves(L,R,"absolute",z,M),R.initialKP=L.initialPk(),t.civilData.alignments.set(C,R)}}t.uuid=e.id()||t.uuid,t.name=e.name()||"",t.ifcMetadata={name:e.ifcName()||"",description:e.ifcDescription()||"",schema:e.ifcSchema()||"IFC2X3",maxExpressID:e.maxExpressId()||0};const n=new _e().elements,r=e.coordinationMatrixArray()||n,o=e.idsArray()||new Uint32Array,a=e.itemsKeysIndicesArray()||new Uint32Array,l=e.itemsKeysArray()||new Uint32Array,c=e.itemsRelsArray()||new Uint32Array,h=e.itemsRelsIndicesArray()||new Uint32Array,d=(e.fragmentKeys()||"").split(this.fragmentIDSeparator);this.setGroupData(t,o,a,l,0),this.setGroupData(t,o,h,c,1);const u=e.opaqueGeometriesIdsArray()||new Uint32Array,f=e.transparentGeometriesIdsArray()||new Uint32Array,m=new Map;for(let w=0;w<u.length-1;w+=2){const A=u[w],y=u[w+1];m.set(A,y)}const g=new Map;for(let w=0;w<f.length-1;w+=2){const A=f[w],y=f[w+1];g.set(A,y)}t.geometryIDs={opaque:m,transparent:g};const E=e.boundingBoxArray()||[0,0,0,0,0,0],[p,v,I,_,b,T]=E;t.boundingBox.min.set(p,v,I),t.boundingBox.max.set(_,b,T);for(let w=0;w<d.length;w++)t.keyFragments.set(w,d[w]);return r.length===16&&t.coordinationMatrix.fromArray(r),t}setGroupData(e,t,i,n,r){for(let o=0;o<i.length;o++){const a=t[o],l=i[o],c=i[o+1]||n.length,h=[];for(let u=l;u<c;u++)h.push(n[u]);e.data.has(a)||e.data.set(a,[[],[]]);const d=e.data.get(a);d&&(d[r]=h)}}constructGeometry(e){const t=e.positionArray()||new Float32Array,i=e.normalArray()||new Float32Array,n=e.indexArray(),r=e.groupsArray();if(!n)throw new Error("Index not found!");const o=new We;if(o.setIndex(Array.from(n)),o.setAttribute("position",new at(t,3)),o.setAttribute("normal",new at(i,3)),r)for(let a=0;a<r.length;a+=3){const l=r[a],c=r[a+1],h=r[a+2];o.addGroup(l,c,h)}return o}constructCivilCurves(e,t,i,n,r){const o=[];for(let a=0;a<n;a++){const l=e[i](a);if(!l)throw new Error("Curve not found!");const c=l.pointsArray();if(c===null)throw new Error("Curve points not found!");let h={};const d=l.data();d&&(h=JSON.parse(d));const u=new Pm,f=new at(c,3);u.setAttribute("position",f);const m=[];for(let E=0;E<c.length/3-1;E++)m.push(E,E+1);u.setIndex(m);const g=new Gm(a,h,t,u,r);o.push(g.curve)}return o}saveCivilCurves(e,t){const i=kh,n=[];for(const r of e){const o=r.mesh.geometry.attributes.position.array,a=i.createPointsVector(t,o),l=t.createString(JSON.stringify(r.data));i.startCivilCurve(t),i.addPoints(t,a),i.addData(t,l);const c=i.endCivilCurve(t);n.push(c)}return n}}let Gh=class Er{constructor(){fe(this,"bb",null),fe(this,"bb_pos",0)}__init(e,t){return this.bb_pos=e,this.bb=t,this}static getRootAsCivilCurve(e,t){return(t||new Er).__init(e.readInt32(e.position())+e.position(),e)}static getSizePrefixedRootAsCivilCurve(e,t){return e.setPosition(e.position()+4),(t||new Er).__init(e.readInt32(e.position())+e.position(),e)}points(e){const t=this.bb.__offset(this.bb_pos,4);return t?this.bb.readFloat32(this.bb.__vector(this.bb_pos+t)+4*e):0}pointsLength(){const e=this.bb.__offset(this.bb_pos,4);return e?this.bb.__vector_len(this.bb_pos+e):0}pointsArray(){const e=this.bb.__offset(this.bb_pos,4);return e?new Float32Array(this.bb.bytes().buffer,this.bb.bytes().byteOffset+this.bb.__vector(this.bb_pos+e),this.bb.__vector_len(this.bb_pos+e)):null}data(e){const t=this.bb.__offset(this.bb_pos,6);return t?this.bb.__string(this.bb_pos+t,e):null}static startCivilCurve(e){e.startObject(2)}static addPoints(e,t){e.addFieldOffset(0,t,0)}static createPointsVector(e,t){e.startVector(4,t.length,4);for(let i=t.length-1;i>=0;i--)e.addFloat32(t[i]);return e.endVector()}static startPointsVector(e,t){e.startVector(4,t,4)}static addData(e,t){e.addFieldOffset(1,t,0)}static endCivilCurve(e){return e.endObject()}static createCivilCurve(e,t,i){return Er.startCivilCurve(e),Er.addPoints(e,t),Er.addData(e,i),Er.endCivilCurve(e)}};class Cn{constructor(){fe(this,"bb",null),fe(this,"bb_pos",0)}__init(e,t){return this.bb_pos=e,this.bb=t,this}static getRootAsAlignment(e,t){return(t||new Cn).__init(e.readInt32(e.position())+e.position(),e)}static getSizePrefixedRootAsAlignment(e,t){return e.setPosition(e.position()+4),(t||new Cn).__init(e.readInt32(e.position())+e.position(),e)}vertical(e,t){const i=this.bb.__offset(this.bb_pos,4);return i?(t||new Gh).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos+i)+4*e),this.bb):null}verticalLength(){const e=this.bb.__offset(this.bb_pos,4);return e?this.bb.__vector_len(this.bb_pos+e):0}horizontal(e,t){const i=this.bb.__offset(this.bb_pos,6);return i?(t||new Gh).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos+i)+4*e),this.bb):null}horizontalLength(){const e=this.bb.__offset(this.bb_pos,6);return e?this.bb.__vector_len(this.bb_pos+e):0}absolute(e,t){const i=this.bb.__offset(this.bb_pos,8);return i?(t||new Gh).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos+i)+4*e),this.bb):null}absoluteLength(){const e=this.bb.__offset(this.bb_pos,8);return e?this.bb.__vector_len(this.bb_pos+e):0}initialPk(){const e=this.bb.__offset(this.bb_pos,10);return e?this.bb.readFloat32(this.bb_pos+e):0}static startAlignment(e){e.startObject(4)}static addVertical(e,t){e.addFieldOffset(0,t,0)}static createVerticalVector(e,t){e.startVector(4,t.length,4);for(let i=t.length-1;i>=0;i--)e.addOffset(t[i]);return e.endVector()}static startVerticalVector(e,t){e.startVector(4,t,4)}static addHorizontal(e,t){e.addFieldOffset(1,t,0)}static createHorizontalVector(e,t){e.startVector(4,t.length,4);for(let i=t.length-1;i>=0;i--)e.addOffset(t[i]);return e.endVector()}static startHorizontalVector(e,t){e.startVector(4,t,4)}static addAbsolute(e,t){e.addFieldOffset(2,t,0)}static createAbsoluteVector(e,t){e.startVector(4,t.length,4);for(let i=t.length-1;i>=0;i--)e.addOffset(t[i]);return e.endVector()}static startAbsoluteVector(e,t){e.startVector(4,t,4)}static addInitialPk(e,t){e.addFieldFloat32(3,t,0)}static endAlignment(e){return e.endObject()}static createAlignment(e,t,i,n,r){return Cn.startAlignment(e),Cn.addVertical(e,t),Cn.addHorizontal(e,i),Cn.addAbsolute(e,n),Cn.addInitialPk(e,r),Cn.endAlignment(e)}}class hs{constructor(){fe(this,"bb",null),fe(this,"bb_pos",0)}__init(e,t){return this.bb_pos=e,this.bb=t,this}static getRootAsCivilData(e,t){return(t||new hs).__init(e.readInt32(e.position())+e.position(),e)}static getSizePrefixedRootAsCivilData(e,t){return e.setPosition(e.position()+4),(t||new hs).__init(e.readInt32(e.position())+e.position(),e)}alignments(e,t){const i=this.bb.__offset(this.bb_pos,4);return i?(t||new Cn).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos+i)+4*e),this.bb):null}alignmentsLength(){const e=this.bb.__offset(this.bb_pos,4);return e?this.bb.__vector_len(this.bb_pos+e):0}coordinationMatrix(e){const t=this.bb.__offset(this.bb_pos,6);return t?this.bb.readFloat32(this.bb.__vector(this.bb_pos+t)+4*e):0}coordinationMatrixLength(){const e=this.bb.__offset(this.bb_pos,6);return e?this.bb.__vector_len(this.bb_pos+e):0}coordinationMatrixArray(){const e=this.bb.__offset(this.bb_pos,6);return e?new Float32Array(this.bb.bytes().buffer,this.bb.bytes().byteOffset+this.bb.__vector(this.bb_pos+e),this.bb.__vector_len(this.bb_pos+e)):null}static startCivilData(e){e.startObject(2)}static addAlignments(e,t){e.addFieldOffset(0,t,0)}static createAlignmentsVector(e,t){e.startVector(4,t.length,4);for(let i=t.length-1;i>=0;i--)e.addOffset(t[i]);return e.endVector()}static startAlignmentsVector(e,t){e.startVector(4,t,4)}static addCoordinationMatrix(e,t){e.addFieldOffset(1,t,0)}static createCoordinationMatrixVector(e,t){e.startVector(4,t.length,4);for(let i=t.length-1;i>=0;i--)e.addFloat32(t[i]);return e.endVector()}static startCoordinationMatrixVector(e,t){e.startVector(4,t,4)}static endCivilData(e){return e.endObject()}static createCivilData(e,t,i){return hs.startCivilData(e),hs.addAlignments(e,t),hs.addCoordinationMatrix(e,i),hs.endCivilData(e)}}class jt{constructor(){fe(this,"bb",null),fe(this,"bb_pos",0)}__init(e,t){return this.bb_pos=e,this.bb=t,this}static getRootAsFragment(e,t){return(t||new jt).__init(e.readInt32(e.position())+e.position(),e)}static getSizePrefixedRootAsFragment(e,t){return e.setPosition(e.position()+4),(t||new jt).__init(e.readInt32(e.position())+e.position(),e)}position(e){const t=this.bb.__offset(this.bb_pos,4);return t?this.bb.readFloat32(this.bb.__vector(this.bb_pos+t)+4*e):0}positionLength(){const e=this.bb.__offset(this.bb_pos,4);return e?this.bb.__vector_len(this.bb_pos+e):0}positionArray(){const e=this.bb.__offset(this.bb_pos,4);return e?new Float32Array(this.bb.bytes().buffer,this.bb.bytes().byteOffset+this.bb.__vector(this.bb_pos+e),this.bb.__vector_len(this.bb_pos+e)):null}normal(e){const t=this.bb.__offset(this.bb_pos,6);return t?this.bb.readFloat32(this.bb.__vector(this.bb_pos+t)+4*e):0}normalLength(){const e=this.bb.__offset(this.bb_pos,6);return e?this.bb.__vector_len(this.bb_pos+e):0}normalArray(){const e=this.bb.__offset(this.bb_pos,6);return e?new Float32Array(this.bb.bytes().buffer,this.bb.bytes().byteOffset+this.bb.__vector(this.bb_pos+e),this.bb.__vector_len(this.bb_pos+e)):null}index(e){const t=this.bb.__offset(this.bb_pos,8);return t?this.bb.readUint32(this.bb.__vector(this.bb_pos+t)+4*e):0}indexLength(){const e=this.bb.__offset(this.bb_pos,8);return e?this.bb.__vector_len(this.bb_pos+e):0}indexArray(){const e=this.bb.__offset(this.bb_pos,8);return e?new Uint32Array(this.bb.bytes().buffer,this.bb.bytes().byteOffset+this.bb.__vector(this.bb_pos+e),this.bb.__vector_len(this.bb_pos+e)):null}groups(e){const t=this.bb.__offset(this.bb_pos,10);return t?this.bb.readFloat32(this.bb.__vector(this.bb_pos+t)+4*e):0}groupsLength(){const e=this.bb.__offset(this.bb_pos,10);return e?this.bb.__vector_len(this.bb_pos+e):0}groupsArray(){const e=this.bb.__offset(this.bb_pos,10);return e?new Float32Array(this.bb.bytes().buffer,this.bb.bytes().byteOffset+this.bb.__vector(this.bb_pos+e),this.bb.__vector_len(this.bb_pos+e)):null}materials(e){const t=this.bb.__offset(this.bb_pos,12);return t?this.bb.readFloat32(this.bb.__vector(this.bb_pos+t)+4*e):0}materialsLength(){const e=this.bb.__offset(this.bb_pos,12);return e?this.bb.__vector_len(this.bb_pos+e):0}materialsArray(){const e=this.bb.__offset(this.bb_pos,12);return e?new Float32Array(this.bb.bytes().buffer,this.bb.bytes().byteOffset+this.bb.__vector(this.bb_pos+e),this.bb.__vector_len(this.bb_pos+e)):null}matrices(e){const t=this.bb.__offset(this.bb_pos,14);return t?this.bb.readFloat32(this.bb.__vector(this.bb_pos+t)+4*e):0}matricesLength(){const e=this.bb.__offset(this.bb_pos,14);return e?this.bb.__vector_len(this.bb_pos+e):0}matricesArray(){const e=this.bb.__offset(this.bb_pos,14);return e?new Float32Array(this.bb.bytes().buffer,this.bb.bytes().byteOffset+this.bb.__vector(this.bb_pos+e),this.bb.__vector_len(this.bb_pos+e)):null}colors(e){const t=this.bb.__offset(this.bb_pos,16);return t?this.bb.readFloat32(this.bb.__vector(this.bb_pos+t)+4*e):0}colorsLength(){const e=this.bb.__offset(this.bb_pos,16);return e?this.bb.__vector_len(this.bb_pos+e):0}colorsArray(){const e=this.bb.__offset(this.bb_pos,16);return e?new Float32Array(this.bb.bytes().buffer,this.bb.bytes().byteOffset+this.bb.__vector(this.bb_pos+e),this.bb.__vector_len(this.bb_pos+e)):null}itemsSize(e){const t=this.bb.__offset(this.bb_pos,18);return t?this.bb.readUint32(this.bb.__vector(this.bb_pos+t)+4*e):0}itemsSizeLength(){const e=this.bb.__offset(this.bb_pos,18);return e?this.bb.__vector_len(this.bb_pos+e):0}itemsSizeArray(){const e=this.bb.__offset(this.bb_pos,18);return e?new Uint32Array(this.bb.bytes().buffer,this.bb.bytes().byteOffset+this.bb.__vector(this.bb_pos+e),this.bb.__vector_len(this.bb_pos+e)):null}ids(e){const t=this.bb.__offset(this.bb_pos,20);return t?this.bb.readUint32(this.bb.__vector(this.bb_pos+t)+4*e):0}idsLength(){const e=this.bb.__offset(this.bb_pos,20);return e?this.bb.__vector_len(this.bb_pos+e):0}idsArray(){const e=this.bb.__offset(this.bb_pos,20);return e?new Uint32Array(this.bb.bytes().buffer,this.bb.bytes().byteOffset+this.bb.__vector(this.bb_pos+e),this.bb.__vector_len(this.bb_pos+e)):null}id(e){const t=this.bb.__offset(this.bb_pos,22);return t?this.bb.__string(this.bb_pos+t,e):null}capacity(){const e=this.bb.__offset(this.bb_pos,24);return e?this.bb.readUint32(this.bb_pos+e):0}capacityOffset(){const e=this.bb.__offset(this.bb_pos,26);return e?this.bb.readUint32(this.bb_pos+e):0}static startFragment(e){e.startObject(12)}static addPosition(e,t){e.addFieldOffset(0,t,0)}static createPositionVector(e,t){e.startVector(4,t.length,4);for(let i=t.length-1;i>=0;i--)e.addFloat32(t[i]);return e.endVector()}static startPositionVector(e,t){e.startVector(4,t,4)}static addNormal(e,t){e.addFieldOffset(1,t,0)}static createNormalVector(e,t){e.startVector(4,t.length,4);for(let i=t.length-1;i>=0;i--)e.addFloat32(t[i]);return e.endVector()}static startNormalVector(e,t){e.startVector(4,t,4)}static addIndex(e,t){e.addFieldOffset(2,t,0)}static createIndexVector(e,t){e.startVector(4,t.length,4);for(let i=t.length-1;i>=0;i--)e.addInt32(t[i]);return e.endVector()}static startIndexVector(e,t){e.startVector(4,t,4)}static addGroups(e,t){e.addFieldOffset(3,t,0)}static createGroupsVector(e,t){e.startVector(4,t.length,4);for(let i=t.length-1;i>=0;i--)e.addFloat32(t[i]);return e.endVector()}static startGroupsVector(e,t){e.startVector(4,t,4)}static addMaterials(e,t){e.addFieldOffset(4,t,0)}static createMaterialsVector(e,t){e.startVector(4,t.length,4);for(let i=t.length-1;i>=0;i--)e.addFloat32(t[i]);return e.endVector()}static startMaterialsVector(e,t){e.startVector(4,t,4)}static addMatrices(e,t){e.addFieldOffset(5,t,0)}static createMatricesVector(e,t){e.startVector(4,t.length,4);for(let i=t.length-1;i>=0;i--)e.addFloat32(t[i]);return e.endVector()}static startMatricesVector(e,t){e.startVector(4,t,4)}static addColors(e,t){e.addFieldOffset(6,t,0)}static createColorsVector(e,t){e.startVector(4,t.length,4);for(let i=t.length-1;i>=0;i--)e.addFloat32(t[i]);return e.endVector()}static startColorsVector(e,t){e.startVector(4,t,4)}static addItemsSize(e,t){e.addFieldOffset(7,t,0)}static createItemsSizeVector(e,t){e.startVector(4,t.length,4);for(let i=t.length-1;i>=0;i--)e.addInt32(t[i]);return e.endVector()}static startItemsSizeVector(e,t){e.startVector(4,t,4)}static addIds(e,t){e.addFieldOffset(8,t,0)}static createIdsVector(e,t){e.startVector(4,t.length,4);for(let i=t.length-1;i>=0;i--)e.addInt32(t[i]);return e.endVector()}static startIdsVector(e,t){e.startVector(4,t,4)}static addId(e,t){e.addFieldOffset(9,t,0)}static addCapacity(e,t){e.addFieldInt32(10,t,0)}static addCapacityOffset(e,t){e.addFieldInt32(11,t,0)}static endFragment(e){return e.endObject()}static createFragment(e,t,i,n,r,o,a,l,c,h,d,u,f){return jt.startFragment(e),jt.addPosition(e,t),jt.addNormal(e,i),jt.addIndex(e,n),jt.addGroups(e,r),jt.addMaterials(e,o),jt.addMatrices(e,a),jt.addColors(e,l),jt.addItemsSize(e,c),jt.addIds(e,h),jt.addId(e,d),jt.addCapacity(e,u),jt.addCapacityOffset(e,f),jt.endFragment(e)}}let Gd=class Sp{constructor(){fe(this,"bb",null),fe(this,"bb_pos",0)}__init(e,t){return this.bb_pos=e,this.bb=t,this}static getRootAsFragmentsGroup(e,t){return(t||new Sp).__init(e.readInt32(e.position())+e.position(),e)}static getSizePrefixedRootAsFragmentsGroup(e,t){return e.setPosition(e.position()+4),(t||new Sp).__init(e.readInt32(e.position())+e.position(),e)}items(e,t){const i=this.bb.__offset(this.bb_pos,4);return i?(t||new jt).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos+i)+4*e),this.bb):null}itemsLength(){const e=this.bb.__offset(this.bb_pos,4);return e?this.bb.__vector_len(this.bb_pos+e):0}civil(e){const t=this.bb.__offset(this.bb_pos,6);return t?(e||new hs).__init(this.bb.__indirect(this.bb_pos+t),this.bb):null}coordinationMatrix(e){const t=this.bb.__offset(this.bb_pos,8);return t?this.bb.readFloat32(this.bb.__vector(this.bb_pos+t)+4*e):0}coordinationMatrixLength(){const e=this.bb.__offset(this.bb_pos,8);return e?this.bb.__vector_len(this.bb_pos+e):0}coordinationMatrixArray(){const e=this.bb.__offset(this.bb_pos,8);return e?new Float32Array(this.bb.bytes().buffer,this.bb.bytes().byteOffset+this.bb.__vector(this.bb_pos+e),this.bb.__vector_len(this.bb_pos+e)):null}ids(e){const t=this.bb.__offset(this.bb_pos,10);return t?this.bb.readUint32(this.bb.__vector(this.bb_pos+t)+4*e):0}idsLength(){const e=this.bb.__offset(this.bb_pos,10);return e?this.bb.__vector_len(this.bb_pos+e):0}idsArray(){const e=this.bb.__offset(this.bb_pos,10);return e?new Uint32Array(this.bb.bytes().buffer,this.bb.bytes().byteOffset+this.bb.__vector(this.bb_pos+e),this.bb.__vector_len(this.bb_pos+e)):null}itemsKeys(e){const t=this.bb.__offset(this.bb_pos,12);return t?this.bb.readUint32(this.bb.__vector(this.bb_pos+t)+4*e):0}itemsKeysLength(){const e=this.bb.__offset(this.bb_pos,12);return e?this.bb.__vector_len(this.bb_pos+e):0}itemsKeysArray(){const e=this.bb.__offset(this.bb_pos,12);return e?new Uint32Array(this.bb.bytes().buffer,this.bb.bytes().byteOffset+this.bb.__vector(this.bb_pos+e),this.bb.__vector_len(this.bb_pos+e)):null}itemsKeysIndices(e){const t=this.bb.__offset(this.bb_pos,14);return t?this.bb.readUint32(this.bb.__vector(this.bb_pos+t)+4*e):0}itemsKeysIndicesLength(){const e=this.bb.__offset(this.bb_pos,14);return e?this.bb.__vector_len(this.bb_pos+e):0}itemsKeysIndicesArray(){const e=this.bb.__offset(this.bb_pos,14);return e?new Uint32Array(this.bb.bytes().buffer,this.bb.bytes().byteOffset+this.bb.__vector(this.bb_pos+e),this.bb.__vector_len(this.bb_pos+e)):null}itemsRels(e){const t=this.bb.__offset(this.bb_pos,16);return t?this.bb.readUint32(this.bb.__vector(this.bb_pos+t)+4*e):0}itemsRelsLength(){const e=this.bb.__offset(this.bb_pos,16);return e?this.bb.__vector_len(this.bb_pos+e):0}itemsRelsArray(){const e=this.bb.__offset(this.bb_pos,16);return e?new Uint32Array(this.bb.bytes().buffer,this.bb.bytes().byteOffset+this.bb.__vector(this.bb_pos+e),this.bb.__vector_len(this.bb_pos+e)):null}itemsRelsIndices(e){const t=this.bb.__offset(this.bb_pos,18);return t?this.bb.readUint32(this.bb.__vector(this.bb_pos+t)+4*e):0}itemsRelsIndicesLength(){const e=this.bb.__offset(this.bb_pos,18);return e?this.bb.__vector_len(this.bb_pos+e):0}itemsRelsIndicesArray(){const e=this.bb.__offset(this.bb_pos,18);return e?new Uint32Array(this.bb.bytes().buffer,this.bb.bytes().byteOffset+this.bb.__vector(this.bb_pos+e),this.bb.__vector_len(this.bb_pos+e)):null}fragmentKeys(e){const t=this.bb.__offset(this.bb_pos,20);return t?this.bb.__string(this.bb_pos+t,e):null}globalIds(e){const t=this.bb.__offset(this.bb_pos,22);return t?this.bb.__string(this.bb_pos+t,e):null}id(e){const t=this.bb.__offset(this.bb_pos,24);return t?this.bb.__string(this.bb_pos+t,e):null}name(e){const t=this.bb.__offset(this.bb_pos,26);return t?this.bb.__string(this.bb_pos+t,e):null}ifcName(e){const t=this.bb.__offset(this.bb_pos,28);return t?this.bb.__string(this.bb_pos+t,e):null}ifcDescription(e){const t=this.bb.__offset(this.bb_pos,30);return t?this.bb.__string(this.bb_pos+t,e):null}ifcSchema(e){const t=this.bb.__offset(this.bb_pos,32);return t?this.bb.__string(this.bb_pos+t,e):null}maxExpressId(){const e=this.bb.__offset(this.bb_pos,34);return e?this.bb.readUint32(this.bb_pos+e):0}boundingBox(e){const t=this.bb.__offset(this.bb_pos,36);return t?this.bb.readFloat32(this.bb.__vector(this.bb_pos+t)+4*e):0}boundingBoxLength(){const e=this.bb.__offset(this.bb_pos,36);return e?this.bb.__vector_len(this.bb_pos+e):0}boundingBoxArray(){const e=this.bb.__offset(this.bb_pos,36);return e?new Float32Array(this.bb.bytes().buffer,this.bb.bytes().byteOffset+this.bb.__vector(this.bb_pos+e),this.bb.__vector_len(this.bb_pos+e)):null}opaqueGeometriesIds(e){const t=this.bb.__offset(this.bb_pos,38);return t?this.bb.readInt32(this.bb.__vector(this.bb_pos+t)+4*e):0}opaqueGeometriesIdsLength(){const e=this.bb.__offset(this.bb_pos,38);return e?this.bb.__vector_len(this.bb_pos+e):0}opaqueGeometriesIdsArray(){const e=this.bb.__offset(this.bb_pos,38);return e?new Int32Array(this.bb.bytes().buffer,this.bb.bytes().byteOffset+this.bb.__vector(this.bb_pos+e),this.bb.__vector_len(this.bb_pos+e)):null}transparentGeometriesIds(e){const t=this.bb.__offset(this.bb_pos,40);return t?this.bb.readInt32(this.bb.__vector(this.bb_pos+t)+4*e):0}transparentGeometriesIdsLength(){const e=this.bb.__offset(this.bb_pos,40);return e?this.bb.__vector_len(this.bb_pos+e):0}transparentGeometriesIdsArray(){const e=this.bb.__offset(this.bb_pos,40);return e?new Int32Array(this.bb.bytes().buffer,this.bb.bytes().byteOffset+this.bb.__vector(this.bb_pos+e),this.bb.__vector_len(this.bb_pos+e)):null}static startFragmentsGroup(e){e.startObject(19)}static addItems(e,t){e.addFieldOffset(0,t,0)}static createItemsVector(e,t){e.startVector(4,t.length,4);for(let i=t.length-1;i>=0;i--)e.addOffset(t[i]);return e.endVector()}static startItemsVector(e,t){e.startVector(4,t,4)}static addCivil(e,t){e.addFieldOffset(1,t,0)}static addCoordinationMatrix(e,t){e.addFieldOffset(2,t,0)}static createCoordinationMatrixVector(e,t){e.startVector(4,t.length,4);for(let i=t.length-1;i>=0;i--)e.addFloat32(t[i]);return e.endVector()}static startCoordinationMatrixVector(e,t){e.startVector(4,t,4)}static addIds(e,t){e.addFieldOffset(3,t,0)}static createIdsVector(e,t){e.startVector(4,t.length,4);for(let i=t.length-1;i>=0;i--)e.addInt32(t[i]);return e.endVector()}static startIdsVector(e,t){e.startVector(4,t,4)}static addItemsKeys(e,t){e.addFieldOffset(4,t,0)}static createItemsKeysVector(e,t){e.startVector(4,t.length,4);for(let i=t.length-1;i>=0;i--)e.addInt32(t[i]);return e.endVector()}static startItemsKeysVector(e,t){e.startVector(4,t,4)}static addItemsKeysIndices(e,t){e.addFieldOffset(5,t,0)}static createItemsKeysIndicesVector(e,t){e.startVector(4,t.length,4);for(let i=t.length-1;i>=0;i--)e.addInt32(t[i]);return e.endVector()}static startItemsKeysIndicesVector(e,t){e.startVector(4,t,4)}static addItemsRels(e,t){e.addFieldOffset(6,t,0)}static createItemsRelsVector(e,t){e.startVector(4,t.length,4);for(let i=t.length-1;i>=0;i--)e.addInt32(t[i]);return e.endVector()}static startItemsRelsVector(e,t){e.startVector(4,t,4)}static addItemsRelsIndices(e,t){e.addFieldOffset(7,t,0)}static createItemsRelsIndicesVector(e,t){e.startVector(4,t.length,4);for(let i=t.length-1;i>=0;i--)e.addInt32(t[i]);return e.endVector()}static startItemsRelsIndicesVector(e,t){e.startVector(4,t,4)}static addFragmentKeys(e,t){e.addFieldOffset(8,t,0)}static addGlobalIds(e,t){e.addFieldOffset(9,t,0)}static addId(e,t){e.addFieldOffset(10,t,0)}static addName(e,t){e.addFieldOffset(11,t,0)}static addIfcName(e,t){e.addFieldOffset(12,t,0)}static addIfcDescription(e,t){e.addFieldOffset(13,t,0)}static addIfcSchema(e,t){e.addFieldOffset(14,t,0)}static addMaxExpressId(e,t){e.addFieldInt32(15,t,0)}static addBoundingBox(e,t){e.addFieldOffset(16,t,0)}static createBoundingBoxVector(e,t){e.startVector(4,t.length,4);for(let i=t.length-1;i>=0;i--)e.addFloat32(t[i]);return e.endVector()}static startBoundingBoxVector(e,t){e.startVector(4,t,4)}static addOpaqueGeometriesIds(e,t){e.addFieldOffset(17,t,0)}static createOpaqueGeometriesIdsVector(e,t){e.startVector(4,t.length,4);for(let i=t.length-1;i>=0;i--)e.addInt32(t[i]);return e.endVector()}static startOpaqueGeometriesIdsVector(e,t){e.startVector(4,t,4)}static addTransparentGeometriesIds(e,t){e.addFieldOffset(18,t,0)}static createTransparentGeometriesIdsVector(e,t){e.startVector(4,t.length,4);for(let i=t.length-1;i>=0;i--)e.addInt32(t[i]);return e.endVector()}static startTransparentGeometriesIdsVector(e,t){e.startVector(4,t,4)}static endFragmentsGroup(e){return e.endObject()}static finishFragmentsGroupBuffer(e,t){e.finish(t)}static finishSizePrefixedFragmentsGroupBuffer(e,t){e.finish(t,void 0,!0)}};class KR{constructor(){fe(this,"version",2),fe(this,"separator","|")}import(e){const t=new yl(e),i=Gd.getRootAsFragmentsGroup(t),n=this.constructFragmentGroup(i),r=i.itemsLength();for(let o=0;o<r;o++){const a=i.items(o);if(!a)continue;const l=this.constructGeometry(a),c=this.constructMaterials(a),h=a.capacity(),d=new ca(l,c,h);d.capacityOffset=a.capacityOffset(),this.setInstances(a,d),this.setID(a,d),n.items.push(d),n.add(d.mesh)}return n}export(e){const t=new zl(1024),i=[],n=Gd,r=jt;let o=null;if(e.civilData){const ue=[],Z=Cn,K=hs;for(const[ce,ge]of e.civilData.alignments){const{absolute:Ee,horizontal:Se,vertical:ke}=ge,Ue=this.saveCivilCurves(Se,t),x=this.saveCivilCurves(ke,t),ae=this.saveCivilCurves(Ee,t),Q=Z.createHorizontalVector(t,Ue),G=Z.createVerticalVector(t,x),B=Z.createAbsoluteVector(t,ae);Z.startAlignment(t),Z.addHorizontal(t,Q),Z.addVertical(t,G),Z.addAbsolute(t,B),Z.addInitialPk(t,ge.initialKP);const q=Z.endAlignment(t);ue.push(q)}const Ie=K.createAlignmentsVector(t,ue),me=K.createCoordinationMatrixVector(t,e.coordinationMatrix.elements);K.startCivilData(t),K.addAlignments(t,Ie),K.addCoordinationMatrix(t,me),o=K.endCivilData(t)}for(const ue of e.items){const Z=ue.exportData(),K=[];for(const G of ue.ids){const B=ue.getInstancesIDs(G);if(!B)throw new Error("Instances not found!");K.push(B.size)}const Ie=r.createPositionVector(t,Z.position),me=r.createNormalVector(t,Z.normal),ce=r.createIndexVector(t,Z.index),ge=r.createGroupsVector(t,Z.groups),Ee=r.createMaterialsVector(t,Z.materials),Se=r.createMatricesVector(t,Z.matrices),ke=r.createColorsVector(t,Z.colors),Ue=r.createIdsVector(t,Z.ids),x=r.createItemsSizeVector(t,K),ae=t.createString(Z.id);r.startFragment(t),r.addPosition(t,Ie),r.addNormal(t,me),r.addIndex(t,ce),r.addGroups(t,ge),r.addMaterials(t,Ee),r.addMatrices(t,Se),r.addColors(t,ke),r.addIds(t,Ue),r.addItemsSize(t,x),r.addId(t,ae),r.addCapacity(t,ue.capacity),r.addCapacityOffset(t,ue.capacityOffset);const Q=jt.endFragment(t);i.push(Q)}const a=n.createItemsVector(t,i),l=n.createCoordinationMatrixVector(t,e.coordinationMatrix.elements);let c="";for(const ue of e.keyFragments.values())c.length&&(c+=this.separator),c+=ue;let h="";for(const[ue]of e.globalToExpressIDs)h.length&&(h+=this.separator),h+=ue;const d=t.createString(c),u=t.createString(h),f=[],m=[],g=[],E=[],p=[];let v=0,I=0;for(const[ue,[Z,K]]of e.data){f.push(v),g.push(I),p.push(ue);for(const Ie of Z)m.push(Ie);for(const Ie of K)E.push(Ie);v+=Z.length,I+=K.length}const _=[],b=[];for(const[ue,Z]of e.geometryIDs.opaque)_.push(ue,Z);for(const[ue,Z]of e.geometryIDs.transparent)b.push(ue,Z);const T=t.createString(e.uuid),w=t.createString(e.name),A=t.createString(e.ifcMetadata.name),y=t.createString(e.ifcMetadata.description),C=t.createString(e.ifcMetadata.schema),M=n.createItemsKeysIndicesVector(t,f),R=n.createItemsKeysVector(t,m),L=n.createItemsRelsIndicesVector(t,g),S=n.createItemsRelsVector(t,E),U=n.createIdsVector(t,p),z=n.createOpaqueGeometriesIdsVector(t,_),k=n.createTransparentGeometriesIdsVector(t,b),{min:H,max:Y}=e.boundingBox,re=[H.x,H.y,H.z,Y.x,Y.y,Y.z],j=n.createBoundingBoxVector(t,re);n.startFragmentsGroup(t),n.addId(t,T),n.addName(t,w),n.addIfcName(t,A),n.addIfcDescription(t,y),n.addIfcSchema(t,C),n.addMaxExpressId(t,e.ifcMetadata.maxExpressID),n.addItems(t,a),n.addFragmentKeys(t,d),n.addGlobalIds(t,u),n.addIds(t,U),n.addItemsKeysIndices(t,M),n.addItemsKeys(t,R),n.addItemsRelsIndices(t,L),n.addItemsRels(t,S),n.addCoordinationMatrix(t,l),n.addBoundingBox(t,j),n.addOpaqueGeometriesIds(t,z),n.addTransparentGeometriesIds(t,k),o!==null&&n.addCivil(t,o);const X=Gd.endFragmentsGroup(t);return t.finish(X),t.asUint8Array()}setID(e,t){const i=e.id();i&&(t.id=i,t.mesh.uuid=i)}setInstances(e,t){const i=e.matricesArray(),n=e.colorsArray(),r=e.idsArray(),o=e.itemsSizeArray();if(!i||!r||!o)throw new Error("Error: Can't load empty fragment!");const a=[];let l=0;for(let c=0;c<o.length;c++){const h=r[c],d=o[c],u=[],f=[];for(let g=0;g<d;g++){const E=16*l,p=i.subarray(E,E+17),v=new _e().fromArray(p);if(u.push(v),n){const I=3*l,[_,b,T]=n.subarray(I,I+4),w=new Ne(_,b,T);f.push(w)}l++}const m=f.length?f:void 0;a.push({id:h,transforms:u,colors:m})}t.add(a)}constructMaterials(e){const t=e.materialsArray(),i=[];if(!t)return i;for(let n=0;n<t.length;n+=5){const r=t[n],o=!!t[n+1],a=t[n+2],l=t[n+3],c=t[n+4],h=new Ne(a,l,c),d=new aa({color:h,opacity:r,transparent:o});i.push(d)}return i}constructFragmentGroup(e){const t=new An,i=e.civil();if(i){const A=i.coordinationMatrixArray(),y=new _e;A&&y.fromArray(A),t.civilData={alignments:new Map,coordinationMatrix:y};const C=i.alignmentsLength();for(let M=0;M<C;M++){const R=new Fn({color:16777215}),L=new km,S=i.alignments(M);if(!S)throw new Error("Alignment not found!");const U=S.horizontalLength();L.horizontal=this.constructCivilCurves(S,L,"horizontal",U,R);const z=S.verticalLength();L.vertical=this.constructCivilCurves(S,L,"vertical",z,R);const k=S.horizontalLength();L.absolute=this.constructCivilCurves(S,L,"absolute",k,R),L.initialKP=S.initialPk(),t.civilData.alignments.set(M,L)}}t.uuid=e.id()||t.uuid,t.name=e.name()||"",t.ifcMetadata={name:e.ifcName()||"",description:e.ifcDescription()||"",schema:e.ifcSchema()||"IFC2X3",maxExpressID:e.maxExpressId()||0};const n=new _e().elements,r=e.coordinationMatrixArray()||n,o=e.idsArray()||new Uint32Array,a=e.itemsKeysIndicesArray()||new Uint32Array,l=e.itemsKeysArray()||new Uint32Array,c=e.itemsRelsArray()||new Uint32Array,h=e.itemsRelsIndicesArray()||new Uint32Array,d=(e.fragmentKeys()||"").split(this.separator),u=(e.globalIds()||"").split(this.separator);this.setGroupData(t,o,a,l,0),this.setGroupData(t,o,h,c,1);const f=e.opaqueGeometriesIdsArray()||new Uint32Array,m=e.transparentGeometriesIdsArray()||new Uint32Array,g=new Map;for(let A=0;A<f.length-1;A+=2){const y=f[A],C=f[A+1];g.set(y,C)}const E=new Map;for(let A=0;A<m.length-1;A+=2){const y=m[A],C=m[A+1];E.set(y,C)}t.geometryIDs={opaque:g,transparent:E};const p=e.boundingBoxArray()||[0,0,0,0,0,0],[v,I,_,b,T,w]=p;t.boundingBox.min.set(v,I,_),t.boundingBox.max.set(b,T,w);for(let A=0;A<d.length;A++)t.keyFragments.set(A,d[A]);r.length===16&&t.coordinationMatrix.fromArray(r);for(let A=0;A<o.length;A++)t.globalToExpressIDs.set(u[A],o[A]);return t}setGroupData(e,t,i,n,r){for(let o=0;o<i.length;o++){const a=t[o],l=i[o],c=i[o+1],h=c===void 0?n.length:c,d=[];for(let f=l;f<h;f++)d.push(n[f]);e.data.has(a)||e.data.set(a,[[],[]]);const u=e.data.get(a);u&&(u[r]=d)}}constructGeometry(e){const t=e.positionArray()||new Float32Array,i=e.normalArray()||new Float32Array,n=e.indexArray(),r=e.groupsArray();if(!n)throw new Error("Index not found!");const o=new We;if(o.setIndex(Array.from(n)),o.setAttribute("position",new at(t,3)),o.setAttribute("normal",new at(i,3)),r)for(let a=0;a<r.length;a+=3){const l=r[a],c=r[a+1],h=r[a+2];o.addGroup(l,c,h)}return o}constructCivilCurves(e,t,i,n,r){const o=[];for(let a=0;a<n;a++){const l=e[i](a);if(!l)throw new Error("Curve not found!");const c=l.pointsArray();if(c===null)throw new Error("Curve points not found!");let h={};const d=l.data();d&&(h=JSON.parse(d));const u=new Pm,f=new at(c,3);u.setAttribute("position",f);const m=[];for(let E=0;E<c.length/3-1;E++)m.push(E,E+1);u.setIndex(m);const g=new Gm(a,h,t,u,r);o.push(g.curve)}return o}saveCivilCurves(e,t){const i=Gh,n=[];for(const r of e){const o=r.mesh.geometry.attributes.position.array,a=i.createPointsVector(t,o),l=t.createString(JSON.stringify(r.data));i.startCivilCurve(t),i.addPoints(t,a),i.addData(t,l);const c=i.endCivilCurve(t);n.push(c)}return n}}class N_{constructor(){fe(this,"parsers",[new KR,new qR]),fe(this,"version","auto")}import(e){const t=this.parsers.length;if(this.version==="auto"){for(let r=0;r<this.parsers.length;r++){const o=this.parsers[r].import(e);if(Object.keys(o).length!==0){if(r!==0){const a=this.parsers.length-r;this.warnVersion(a,t)}return o}}throw new Error("No valid parser found for this file")}this.checkCurrentVersionValid(this.version);const i=this.parsers.length-this.version,n=this.parsers[i].import(e);if(Object.keys(n).length===0)throw new Error(`The given version ${this.version} doesn't match to the given file. Try using "auto" in the version property to handle versions automatically.`);return n}export(e){if(this.version==="auto")return this.parsers[0].export(e);this.checkCurrentVersionValid(this.version);const t=this.parsers.length-this.version;return this.parsers[t].export(e)}checkCurrentVersionValid(e){if(this.version!=="auto"){if(this.version!==e&&this.warnVersion(this.version,e),!Number.isInteger(this.version))throw new Error("Invalid version. Non-automatic versions must an integer.");if(this.version<1||this.version>e)throw new Error(`Invalid version. Versions range from 1 to ${e}.`)}}warnVersion(e,t){console.warn(`This fragment file version is ${e}. The latest version is ${t}. To avoid issues, please consider updating your fragments. You can do so by regenerating your fragments from the original IFC file.`)}}class U_{constructor(e){fe(this,"baseDirectory"),fe(this,"maxDeadTime",6e4),fe(this,"mode","buffer"),fe(this,"_memoryCleanTime",1e4),fe(this,"_intervalID",null),fe(this,"_isCleaningMemory",!1),fe(this,"cleanMemory",async()=>{if(this._isCleaningMemory)return;this._isCleaningMemory=!0;const t=await this.getDir(this.baseDirectory),i=new Set,n=new Date().getTime();for await(const r of t.values()){const o=localStorage.getItem(r.name)||"0";n-parseInt(o,10)>this.maxDeadTime&&(i.add(r.name),localStorage.removeItem(r.name))}for(const r of i)t.removeEntry(r);this._isCleaningMemory=!1}),this.baseDirectory=e,this.setupMemoryCleanup()}get memoryCleanTime(){return this._memoryCleanTime}set memoryCleanTime(e){this._memoryCleanTime=e,this.dispose(),this.setupMemoryCleanup()}isCached(e){const t=this.encodeName(e);return localStorage.getItem(t)!==null}async get(e){const t=this.encodeName(e),i=await this.getDir(this.baseDirectory);try{const n=await i.getFileHandle(t),r=await n.getFile();return this.updateLastAccessTime(t),r}catch{return null}}async add(e,t){const i=this.encodeName(e),n=await this.getDir(this.baseDirectory),r=await n.getFileHandle(i,{create:!0}),o=await r.createWritable();await o.write(t),await o.close(),this.updateLastAccessTime(i)}async clear(){const e=await this.getDir(this.baseDirectory);for await(const[t]of e.entries())await e.removeEntry(t)}dispose(){this._intervalID!==null&&window.clearInterval(this._intervalID)}setupMemoryCleanup(){this._intervalID=window.setInterval(this.cleanMemory,this.memoryCleanTime)}async getDir(e){return(await navigator.storage.getDirectory()).getDirectoryHandle(e,{create:!0})}encodeName(e){return e.replace(/[\\/:*?"<>|]/g,"ñ")}updateLastAccessTime(e){const t=new Date().getTime().toString();localStorage.setItem(e,t)}}const Ir=class Ei extends fs{constructor(){super(...arguments),fe(this,"items",[]),fe(this,"boundingBox",new je),fe(this,"coordinationMatrix",new _e),fe(this,"keyFragments",new Map),fe(this,"globalToExpressIDs",new Map),fe(this,"data",new Map),fe(this,"geometryIDs",{opaque:new Map,transparent:new Map}),fe(this,"ifcMetadata",{name:"",description:"",schema:"IFC2X3",maxExpressID:0}),fe(this,"civilData"),fe(this,"streamSettings",{baseFileName:"",ids:new Map,types:new Map}),fe(this,"isStreamed",!1),fe(this,"_properties")}get hasProperties(){const e=this._properties!==void 0,t=this.streamSettings.ids.size!==0;return e||t}getFragmentMap(e=this.data.keys()){const t={};for(const i of e){const n=this.data.get(i);if(n)for(const r of n[0]){const o=this.keyFragments.get(r);o!==void 0&&(t[o]||(t[o]=new Set),t[o].add(i))}}return t}getItemVertices(e){const t=[],i=this.getFragmentMap([e]);for(const n in i){const r=this.items.find(a=>a.id===n);if(!r)continue;const o=r.getInstancesIDs(e);if(o)for(const a of o){const l=new _e;r.mesh.getMatrixAt(a,l);for(const c of r.uniqueVertices){const h=c.clone().applyMatrix4(l);t.push(h)}}}return t}static setPropertiesDB(e){e?Ei.propertiesDB||(Ei.propertiesDB=new U_("that-open-company-streaming-properties")):e||Ei.propertiesDB&&Ei.propertiesDB.dispose()}dispose(e=!0){for(const t of this.items)t.dispose(e);if(this.coordinationMatrix=new _e,this.keyFragments.clear(),this.data.clear(),this._properties={},this.removeFromParent(),this.items=[],this.civilData){const{alignments:t}=this.civilData;for(const[i,n]of t)this.disposeAlignment(n.vertical),this.disposeAlignment(n.horizontal),this.disposeAlignment(n.absolute)}this.civilData=void 0}setLocalProperties(e){this._properties=e}getLocalProperties(){return this._properties}getAllPropertiesIDs(){return this._properties?Object.keys(this._properties).map(e=>parseInt(e,10)):Array.from(this.streamSettings.ids.keys())}getAllPropertiesTypes(){if(this._properties){const e=new Set;for(const t in this._properties){const i=this._properties[t];i.type!==void 0&&e.add(i.type)}return Array.from(e)}return Array.from(this.streamSettings.types.keys())}async getProperties(e){if(this._properties)return this._properties[e]||null;const t=this.getPropsURL(e),i=await this.getPropertiesData(t);return i?i[e]:null}async setProperties(e,t){if(!this._properties)throw new Error("Writing streamed properties not supported yet!");t!==null?this._properties[e]=t:delete this._properties[e]}async getAllPropertiesOfType(e){if(this._properties){const r={};let o=!1;for(const a in this._properties){const l=this._properties[a];l.type===e&&(r[l.expressID]=l,o=!0)}return o?r:null}const{types:t}=this.streamSettings,i=t.get(e);if(i===void 0)return null;const n={};for(const r of i){const o=this.constructFileName(r),a=await this.getPropertiesData(o);for(const l in a)n[parseInt(l,10)]=a[l]}return n}clone(e){throw new Error("Use FragmentsGroup.cloneGroup instead!")}cloneGroup(e){const t=new Ei;t.coordinationMatrix=this.coordinationMatrix,t.position.copy(this.position),t.rotation.copy(this.rotation),t.scale.copy(this.scale),t.updateMatrix(),t.ifcMetadata={...this.ifcMetadata},e||(e=this.getFragmentMap(this.data.keys()));const i=new Set,n=new Map;for(const r of this.items){if(!e[r.id])continue;const o=e[r.id],a=r.clone(o);n.set(r.id,a.id),t.items.push(a),t.add(a.mesh);for(const l of o)i.add(l)}for(const r of i){const o=this.data.get(r);o&&t.data.set(r,o)}for(const[r,o]of this.keyFragments)if(n.has(o)){const a=n.get(o);if(a===void 0)throw new Error("Malformed fragment ID map during clone!");t.keyFragments.set(r,a)}for(const[r,o]of this.globalToExpressIDs)i.has(o)&&t.globalToExpressIDs.set(r,o);return this.civilData&&(t.civilData={coordinationMatrix:this.coordinationMatrix,alignments:new Map}),t}getPropsURL(e){const{ids:t}=this.streamSettings,i=t.get(e);if(i===void 0)throw new Error("ID not found");return this.constructFileName(i)}async getPropertiesData(e){var t;let i;if((t=this.streamSettings.baseUrl)!=null&&t.length&&(console.warn("streamSettings.baseUrl is deprecated. Use FragmentsGroup.url instead."),Ei.url=this.streamSettings.baseUrl),Ei.useCache){let n=null;if(Ei.propertiesDB&&(n=await Ei.propertiesDB.get(e)),n)i=await n.text();else if(i=await(await Ei.fetch(e)).text(),Ei.propertiesDB){const o=new TextEncoder().encode(i);await Ei.propertiesDB.add(e,o)}}else i=await(await Ei.fetch(e)).text();return JSON.parse(i)}constructFileName(e){if(Ei.constructFileName)return Ei.constructFileName(e);const{baseFileName:t}=this.streamSettings;return`${t}-${e}`}disposeAlignment(e){for(const t of e)if(t.mesh.geometry.dispose(),Array.isArray(t.mesh.material))for(const i of t.mesh.material)i.dispose();else t.mesh.material.dispose();e.length=0}};fe(Ir,"fetch",async s=>fetch(`${Ir.url}${s}`)),fe(Ir,"constructFileName",null),fe(Ir,"url",""),fe(Ir,"useCache",!0),fe(Ir,"propertiesDB",null);let An=Ir;class km{constructor(){fe(this,"vertical",[]),fe(this,"horizontal",[]),fe(this,"absolute",[]),fe(this,"initialKP",0)}getLength(e){let t=0;for(const i of this[e])t+=i.getLength();return t}getPointAt(e,t){const i=this.getCurveAt(e,t);return i.curve.getPointAt(i.percentage)}getPercentageAt(e,t,i=.01){const n=this[t];let r=0;for(const o of n){const a=o.getPercentageAt(e,i),l=o.getLength();if(a!==null)return(r+a*l)/this.getLength(t);r+=l}return null}getCurveAt(e,t){e<0?e=0:e>1&&(e=1);const i=this[t],n=this.getLength(t)*e;let r=0;for(const o of i){const a=o.getLength();if(r+a>=n)return{curve:o,percentage:(n-r)/a};r+=a}throw new Error("Could not compute point!")}}let QR=class{constructor(e,t,i,n){fe(this,"index"),fe(this,"mesh"),fe(this,"data"),fe(this,"alignment"),this.index=e,this.mesh=t,this.data=i,this.alignment=n}get _index(){return this.mesh.geometry.index}get _pos(){return this.mesh.geometry.attributes.position.array}getLength(){let e=0;for(let t=0;t<this._index.array.length-1;t+=2){const{startPoint:i,endPoint:n}=this.getSegment(t);e+=i.distanceTo(n)}return e}getPointAt(e){const{startPoint:t,endPoint:i,distanceToStart:n}=this.getSegmentAt(e),r=i.clone();return r.sub(t),r.normalize(),r.multiplyScalar(n),r.add(t),r}getSegmentAt(e){e<0?e=0:e>1&&(e=1);const t=this.getLength()*e;let i=0;for(let n=0;n<this._index.array.length-1;n+=2){const{startPoint:r,endPoint:o}=this.getSegment(n),a=r.distanceTo(o);if(i+a>=t)return{distanceToStart:t-i,index:n,startPoint:r,endPoint:o};i+=a}throw new Error("Could not compute point")}getPercentageAt(e,t=.01){let i=0;for(let n=0;n<this._index.array.length-1;n+=2){const{startPoint:r,endPoint:o}=this.getSegment(n),a=r.distanceTo(o),l=e.distanceTo(r);if(l+e.distanceTo(o)-a<=t)return(i+l)/this.getLength();i+=a}return null}getSegment(e){const t=3*this._index.array[e],i=3*this._index.array[e+1];return{startPoint:new P(this._pos[t],this._pos[t+1],this._pos[t+2]),endPoint:new P(this._pos[i],this._pos[i+1],this._pos[i+2])}}},Gm=class extends jI{constructor(e,t,i,n,r){super(n,r),fe(this,"curve"),this.curve=new QR(e,this,t,i)}},B_=class rs{constructor(){fe(this,"bb",null),fe(this,"bb_pos",0)}__init(e,t){return this.bb_pos=e,this.bb=t,this}static getRootAsStreamedGeometry(e,t){return(t||new rs).__init(e.readInt32(e.position())+e.position(),e)}static getSizePrefixedRootAsStreamedGeometry(e,t){return e.setPosition(e.position()+4),(t||new rs).__init(e.readInt32(e.position())+e.position(),e)}geometryId(){const e=this.bb.__offset(this.bb_pos,4);return e?this.bb.readUint32(this.bb_pos+e):0}position(e){const t=this.bb.__offset(this.bb_pos,6);return t?this.bb.readFloat32(this.bb.__vector(this.bb_pos+t)+4*e):0}positionLength(){const e=this.bb.__offset(this.bb_pos,6);return e?this.bb.__vector_len(this.bb_pos+e):0}positionArray(){const e=this.bb.__offset(this.bb_pos,6);return e?new Float32Array(this.bb.bytes().buffer,this.bb.bytes().byteOffset+this.bb.__vector(this.bb_pos+e),this.bb.__vector_len(this.bb_pos+e)):null}normal(e){const t=this.bb.__offset(this.bb_pos,8);return t?this.bb.readFloat32(this.bb.__vector(this.bb_pos+t)+4*e):0}normalLength(){const e=this.bb.__offset(this.bb_pos,8);return e?this.bb.__vector_len(this.bb_pos+e):0}normalArray(){const e=this.bb.__offset(this.bb_pos,8);return e?new Float32Array(this.bb.bytes().buffer,this.bb.bytes().byteOffset+this.bb.__vector(this.bb_pos+e),this.bb.__vector_len(this.bb_pos+e)):null}index(e){const t=this.bb.__offset(this.bb_pos,10);return t?this.bb.readUint32(this.bb.__vector(this.bb_pos+t)+4*e):0}indexLength(){const e=this.bb.__offset(this.bb_pos,10);return e?this.bb.__vector_len(this.bb_pos+e):0}indexArray(){const e=this.bb.__offset(this.bb_pos,10);return e?new Uint32Array(this.bb.bytes().buffer,this.bb.bytes().byteOffset+this.bb.__vector(this.bb_pos+e),this.bb.__vector_len(this.bb_pos+e)):null}static startStreamedGeometry(e){e.startObject(4)}static addGeometryId(e,t){e.addFieldInt32(0,t,0)}static addPosition(e,t){e.addFieldOffset(1,t,0)}static createPositionVector(e,t){e.startVector(4,t.length,4);for(let i=t.length-1;i>=0;i--)e.addFloat32(t[i]);return e.endVector()}static startPositionVector(e,t){e.startVector(4,t,4)}static addNormal(e,t){e.addFieldOffset(2,t,0)}static createNormalVector(e,t){e.startVector(4,t.length,4);for(let i=t.length-1;i>=0;i--)e.addFloat32(t[i]);return e.endVector()}static startNormalVector(e,t){e.startVector(4,t,4)}static addIndex(e,t){e.addFieldOffset(3,t,0)}static createIndexVector(e,t){e.startVector(4,t.length,4);for(let i=t.length-1;i>=0;i--)e.addInt32(t[i]);return e.endVector()}static startIndexVector(e,t){e.startVector(4,t,4)}static endStreamedGeometry(e){return e.endObject()}static createStreamedGeometry(e,t,i,n,r){return rs.startStreamedGeometry(e),rs.addGeometryId(e,t),rs.addPosition(e,i),rs.addNormal(e,n),rs.addIndex(e,r),rs.endStreamedGeometry(e)}},EE=class No{constructor(){fe(this,"bb",null),fe(this,"bb_pos",0)}__init(e,t){return this.bb_pos=e,this.bb=t,this}static getRootAsStreamedGeometries(e,t){return(t||new No).__init(e.readInt32(e.position())+e.position(),e)}static getSizePrefixedRootAsStreamedGeometries(e,t){return e.setPosition(e.position()+4),(t||new No).__init(e.readInt32(e.position())+e.position(),e)}geometries(e,t){const i=this.bb.__offset(this.bb_pos,4);return i?(t||new B_).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos+i)+4*e),this.bb):null}geometriesLength(){const e=this.bb.__offset(this.bb_pos,4);return e?this.bb.__vector_len(this.bb_pos+e):0}static startStreamedGeometries(e){e.startObject(1)}static addGeometries(e,t){e.addFieldOffset(0,t,0)}static createGeometriesVector(e,t){e.startVector(4,t.length,4);for(let i=t.length-1;i>=0;i--)e.addOffset(t[i]);return e.endVector()}static startGeometriesVector(e,t){e.startVector(4,t,4)}static endStreamedGeometries(e){return e.endObject()}static finishStreamedGeometriesBuffer(e,t){e.finish(t)}static finishSizePrefixedStreamedGeometriesBuffer(e,t){e.finish(t,void 0,!0)}static createStreamedGeometries(e,t){return No.startStreamedGeometries(e),No.addGeometries(e,t),No.endStreamedGeometries(e)}},z_=class{import(e){const t=new yl(e),i=EE.getRootAsStreamedGeometries(t),n=new Map,r=i.geometriesLength();for(let o=0;o<r;o++){const a=i.geometries(o);if(!a)continue;const l=a.geometryId();if(l===null)throw new Error("Error finding ID!");const c=a.positionArray(),h=a.normalArray(),d=a.indexArray();c&&h&&d&&n.set(l,{position:c,normal:h,index:d})}return n}export(e){const t=new zl(1024),i=[],n=EE,r=B_;for(const[l,{index:c,position:h,normal:d}]of e){const u=r.createIndexVector(t,c),f=r.createPositionVector(t,h),m=r.createNormalVector(t,d);r.startStreamedGeometry(t),r.addGeometryId(t,l),r.addIndex(t,u),r.addPosition(t,f),r.addNormal(t,m);const g=r.endStreamedGeometry(t);i.push(g)}const o=n.createGeometriesVector(t,i);n.startStreamedGeometries(t),n.addGeometries(t,o);const a=n.endStreamedGeometries(t);return t.finish(a),t.asUint8Array()}},ha=class{static combine(e){if(e.length===0)return{};if(e.length===1)return e[0];const t={};for(const i of e)for(const n in i){t[n]||(t[n]=new Set);for(const r of i[n])t[n].add(r)}return t}static intersect(e){if(e.length===0)return{};if(e.length===1)return e[0];const t=new Map;let i=0;for(const r of e){i++;for(const o in r){t.has(o)||t.set(o,{count:0,ids:new Map});const a=t.get(o);a.count++;for(const l of r[o]){const c=a.ids.get(l)||0;a.ids.set(l,c+1)}}}const n={};for(const[r,{count:o,ids:a}]of t)if(o===i)for(const[l,c]of a)c===i&&(n[r]||(n[r]=new Set),n[r].add(l));return n}static copy(e){const t={};for(const i in e)t[i]=new Set(e[i]);return t}static export(e){const t={};for(const i in e)t[i]=Array.from(e[i]);return t}static import(e){const t={};for(const i in e)t[i]=new Set(e[i]);return t}};var JR=Object.defineProperty,$R=(s,e,t)=>e in s?JR(s,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):s[e]=t,D=(s,e,t)=>($R(s,typeof e!="symbol"?e+"":e,t),t),eM=Object.defineProperty,tM=(s,e,t)=>e in s?eM(s,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):s[e]=t,F=(s,e,t)=>(tM(s,typeof e!="symbol"?e+"":e,t),t);const V_=0,iM=1,nM=2,IE=2,Hd=1.25,_E=1,Hh=6*4+4+4,wu=65535,sM=Math.pow(2,-24),Yd=Symbol("SKIP_GENERATION");function rM(s){return s.index?s.index.count:s.attributes.position.count}function ga(s){return rM(s)/3}function oM(s,e=ArrayBuffer){return s>65535?new Uint32Array(new e(4*s)):new Uint16Array(new e(2*s))}function aM(s,e){if(!s.index){const t=s.attributes.position.count,i=e.useSharedArrayBuffer?SharedArrayBuffer:ArrayBuffer,n=oM(t,i);s.setIndex(new at(n,1));for(let r=0;r<t;r++)n[r]=r}}function k_(s){const e=ga(s),t=s.drawRange,i=t.start/3,n=(t.start+t.count)/3,r=Math.max(0,i),o=Math.min(e,n)-r;return[{offset:Math.floor(r),count:Math.floor(o)}]}function G_(s){if(!s.groups||!s.groups.length)return k_(s);const e=[],t=new Set,i=s.drawRange,n=i.start/3,r=(i.start+i.count)/3;for(const a of s.groups){const l=a.start/3,c=(a.start+a.count)/3;t.add(Math.max(n,l)),t.add(Math.min(r,c))}const o=Array.from(t.values()).sort((a,l)=>a-l);for(let a=0;a<o.length-1;a++){const l=o[a],c=o[a+1];e.push({offset:Math.floor(l),count:Math.floor(c-l)})}return e}function lM(s){if(s.groups.length===0)return!1;const e=ga(s),t=G_(s).sort((r,o)=>r.offset-o.offset),i=t[t.length-1];i.count=Math.min(e-i.offset,i.count);let n=0;return t.forEach(({count:r})=>n+=r),e!==n}function Dt(s,e,t){return t.min.x=e[s],t.min.y=e[s+1],t.min.z=e[s+2],t.max.x=e[s+3],t.max.y=e[s+4],t.max.z=e[s+5],t}function cM(s){s[0]=s[1]=s[2]=1/0,s[3]=s[4]=s[5]=-1/0}function vE(s){let e=-1,t=-1/0;for(let i=0;i<3;i++){const n=s[i+3]-s[i];n>t&&(t=n,e=i)}return e}function bE(s,e){e.set(s)}function yE(s,e,t){let i,n;for(let r=0;r<3;r++){const o=r+3;i=s[r],n=e[r],t[r]=i<n?i:n,i=s[o],n=e[o],t[o]=i>n?i:n}}function Qc(s,e,t){for(let i=0;i<3;i++){const n=e[s+2*i],r=e[s+2*i+1],o=n-r,a=n+r;o<t[i]&&(t[i]=o),a>t[i+3]&&(t[i+3]=a)}}function Oa(s){const e=s[3]-s[0],t=s[4]-s[1],i=s[5]-s[2];return 2*(e*t+t*i+i*e)}function Wd(s,e,t,i,n=null){let r=1/0,o=1/0,a=1/0,l=-1/0,c=-1/0,h=-1/0,d=1/0,u=1/0,f=1/0,m=-1/0,g=-1/0,E=-1/0;const p=n!==null;for(let v=e*6,I=(e+t)*6;v<I;v+=6){const _=s[v+0],b=s[v+1],T=_-b,w=_+b;T<r&&(r=T),w>l&&(l=w),p&&_<d&&(d=_),p&&_>m&&(m=_);const A=s[v+2],y=s[v+3],C=A-y,M=A+y;C<o&&(o=C),M>c&&(c=M),p&&A<u&&(u=A),p&&A>g&&(g=A);const R=s[v+4],L=s[v+5],S=R-L,U=R+L;S<a&&(a=S),U>h&&(h=U),p&&R<f&&(f=R),p&&R>E&&(E=R)}i[0]=r,i[1]=o,i[2]=a,i[3]=l,i[4]=c,i[5]=h,p&&(n[0]=d,n[1]=u,n[2]=f,n[3]=m,n[4]=g,n[5]=E)}function hM(s,e,t,i){let n=1/0,r=1/0,o=1/0,a=-1/0,l=-1/0,c=-1/0;for(let h=e*6,d=(e+t)*6;h<d;h+=6){const u=s[h+0];u<n&&(n=u),u>a&&(a=u);const f=s[h+2];f<r&&(r=f),f>l&&(l=f);const m=s[h+4];m<o&&(o=m),m>c&&(c=m)}i[0]=n,i[1]=r,i[2]=o,i[3]=a,i[4]=l,i[5]=c}function uM(s,e){cM(e);const t=s.attributes.position,i=s.index?s.index.array:null,n=ga(s),r=new Float32Array(n*6),o=t.normalized,a=t.array,l=t.offset||0;let c=3;t.isInterleavedBufferAttribute&&(c=t.data.stride);const h=["getX","getY","getZ"];for(let d=0;d<n;d++){const u=d*3,f=d*6;let m=u+0,g=u+1,E=u+2;i&&(m=i[m],g=i[g],E=i[E]),o||(m=m*c+l,g=g*c+l,E=E*c+l);for(let p=0;p<3;p++){let v,I,_;o?(v=t[h[p]](m),I=t[h[p]](g),_=t[h[p]](E)):(v=a[m+p],I=a[g+p],_=a[E+p]);let b=v;I<b&&(b=I),_<b&&(b=_);let T=v;I>T&&(T=I),_>T&&(T=_);const w=(T-b)/2,A=p*2;r[f+A+0]=b+w,r[f+A+1]=w+(Math.abs(b)+w)*sM,b<e[p]&&(e[p]=b),T>e[p+3]&&(e[p+3]=T)}}return r}const os=32,dM=(s,e)=>s.candidate-e.candidate,Ls=new Array(os).fill().map(()=>({count:0,bounds:new Float32Array(6),rightCacheBounds:new Float32Array(6),leftCacheBounds:new Float32Array(6),candidate:0})),Jc=new Float32Array(6);function fM(s,e,t,i,n,r){let o=-1,a=0;if(r===V_)o=vE(e),o!==-1&&(a=(e[o]+e[o+3])/2);else if(r===iM)o=vE(s),o!==-1&&(a=pM(t,i,n,o));else if(r===nM){const l=Oa(s);let c=Hd*n;const h=i*6,d=(i+n)*6;for(let u=0;u<3;u++){const f=e[u],m=(e[u+3]-f)/os;if(n<os/4){const g=[...Ls];g.length=n;let E=0;for(let v=h;v<d;v+=6,E++){const I=g[E];I.candidate=t[v+2*u],I.count=0;const{bounds:_,leftCacheBounds:b,rightCacheBounds:T}=I;for(let w=0;w<3;w++)T[w]=1/0,T[w+3]=-1/0,b[w]=1/0,b[w+3]=-1/0,_[w]=1/0,_[w+3]=-1/0;Qc(v,t,_)}g.sort(dM);let p=n;for(let v=0;v<p;v++){const I=g[v];for(;v+1<p&&g[v+1].candidate===I.candidate;)g.splice(v+1,1),p--}for(let v=h;v<d;v+=6){const I=t[v+2*u];for(let _=0;_<p;_++){const b=g[_];I>=b.candidate?Qc(v,t,b.rightCacheBounds):(Qc(v,t,b.leftCacheBounds),b.count++)}}for(let v=0;v<p;v++){const I=g[v],_=I.count,b=n-I.count,T=I.leftCacheBounds,w=I.rightCacheBounds;let A=0;_!==0&&(A=Oa(T)/l);let y=0;b!==0&&(y=Oa(w)/l);const C=_E+Hd*(A*_+y*b);C<c&&(o=u,c=C,a=I.candidate)}}else{for(let p=0;p<os;p++){const v=Ls[p];v.count=0,v.candidate=f+m+p*m;const I=v.bounds;for(let _=0;_<3;_++)I[_]=1/0,I[_+3]=-1/0}for(let p=h;p<d;p+=6){let v=~~((t[p+2*u]-f)/m);v>=os&&(v=os-1);const I=Ls[v];I.count++,Qc(p,t,I.bounds)}const g=Ls[os-1];bE(g.bounds,g.rightCacheBounds);for(let p=os-2;p>=0;p--){const v=Ls[p],I=Ls[p+1];yE(v.bounds,I.rightCacheBounds,v.rightCacheBounds)}let E=0;for(let p=0;p<os-1;p++){const v=Ls[p],I=v.count,_=v.bounds,b=Ls[p+1].rightCacheBounds;I!==0&&(E===0?bE(_,Jc):yE(_,Jc,Jc)),E+=I;let T=0,w=0;E!==0&&(T=Oa(Jc)/l);const A=n-E;A!==0&&(w=Oa(b)/l);const y=_E+Hd*(T*E+w*A);y<c&&(o=u,c=y,a=v.candidate)}}}}else console.warn(`MeshBVH: Invalid build strategy value ${r} used.`);return{axis:o,pos:a}}function pM(s,e,t,i){let n=0;for(let r=e,o=e+t;r<o;r++)n+=s[r*6+i*2];return n/t}class $c{constructor(){}}function mM(s,e,t,i,n,r){let o=i,a=i+n-1;const l=r.pos,c=r.axis*2;for(;;){for(;o<=a&&t[o*6+c]<l;)o++;for(;o<=a&&t[a*6+c]>=l;)a--;if(o<a){for(let h=0;h<3;h++){let d=e[o*3+h];e[o*3+h]=e[a*3+h],e[a*3+h]=d}for(let h=0;h<6;h++){let d=t[o*6+h];t[o*6+h]=t[a*6+h],t[a*6+h]=d}o++,a--}else return o}}function gM(s,e,t,i,n,r){let o=i,a=i+n-1;const l=r.pos,c=r.axis*2;for(;;){for(;o<=a&&t[o*6+c]<l;)o++;for(;o<=a&&t[a*6+c]>=l;)a--;if(o<a){let h=s[o];s[o]=s[a],s[a]=h;for(let d=0;d<6;d++){let u=t[o*6+d];t[o*6+d]=t[a*6+d],t[a*6+d]=u}o++,a--}else return o}}function EM(s,e){const t=(s.index?s.index.count:s.attributes.position.count)/3,i=t>2**16,n=i?4:2,r=e?new SharedArrayBuffer(t*n):new ArrayBuffer(t*n),o=i?new Uint32Array(r):new Uint16Array(r);for(let a=0,l=o.length;a<l;a++)o[a]=a;return o}function IM(s,e){const t=s.geometry,i=t.index?t.index.array:null,n=e.maxDepth,r=e.verbose,o=e.maxLeafTris,a=e.strategy,l=e.onProgress,c=ga(t),h=s._indirectBuffer;let d=!1;const u=new Float32Array(6),f=new Float32Array(6),m=uM(t,u),g=e.indirect?gM:mM,E=[],p=e.indirect?k_(t):G_(t);if(p.length===1){const _=p[0],b=new $c;b.boundingData=u,hM(m,_.offset,_.count,f),I(b,_.offset,_.count,f),E.push(b)}else for(let _ of p){const b=new $c;b.boundingData=new Float32Array(6),Wd(m,_.offset,_.count,b.boundingData,f),I(b,_.offset,_.count,f),E.push(b)}return E;function v(_){l&&l(_/c)}function I(_,b,T,w=null,A=0){if(!d&&A>=n&&(d=!0,r&&(console.warn(`MeshBVH: Max depth of ${n} reached when generating BVH. Consider increasing maxDepth.`),console.warn(t))),T<=o||A>=n)return v(b+T),_.offset=b,_.count=T,_;const y=fM(_.boundingData,w,m,b,T,a);if(y.axis===-1)return v(b+T),_.offset=b,_.count=T,_;const C=g(h,i,m,b,T,y);if(C===b||C===b+T)v(b+T),_.offset=b,_.count=T;else{_.splitAxis=y.axis;const M=new $c,R=b,L=C-b;_.left=M,M.boundingData=new Float32Array(6),Wd(m,R,L,M.boundingData,f),I(M,R,L,f,A+1);const S=new $c,U=C,z=T-L;_.right=S,S.boundingData=new Float32Array(6),Wd(m,U,z,S.boundingData,f),I(S,U,z,f,A+1)}return _}}function _M(s,e){const t=s.geometry;e.indirect&&(s._indirectBuffer=EM(t,e.useSharedArrayBuffer),lM(t)&&!e.verbose&&console.warn('MeshBVH: Provided geometry contains groups that do not fully span the vertex contents while using the "indirect" option. BVH may incorrectly report intersections on unrendered portions of the geometry.')),s._indirectBuffer||aM(t,e);const i=IM(s,e);let n,r,o;const a=[],l=e.useSharedArrayBuffer?SharedArrayBuffer:ArrayBuffer;for(let d=0;d<i.length;d++){const u=i[d];let f=c(u);const m=new l(Hh*f);n=new Float32Array(m),r=new Uint32Array(m),o=new Uint16Array(m),h(0,u),a.push(m)}s._roots=a;return;function c(d){return d.count?1:1+c(d.left)+c(d.right)}function h(d,u){const f=d/4,m=d/2,g=!!u.count,E=u.boundingData;for(let p=0;p<6;p++)n[f+p]=E[p];if(g){const p=u.offset,v=u.count;return r[f+6]=p,o[m+14]=v,o[m+15]=wu,d+Hh}else{const p=u.left,v=u.right,I=u.splitAxis;let _;if(_=h(d+Hh,p),_/4>Math.pow(2,32))throw new Error("MeshBVH: Cannot store child pointer greater than 32 bits.");return r[f+6]=_/4,_=h(_,v),r[f+7]=I,_}}}class xs{constructor(){this.min=1/0,this.max=-1/0}setFromPointsField(e,t){let i=1/0,n=-1/0;for(let r=0,o=e.length;r<o;r++){const a=e[r][t];i=a<i?a:i,n=a>n?a:n}this.min=i,this.max=n}setFromPoints(e,t){let i=1/0,n=-1/0;for(let r=0,o=t.length;r<o;r++){const a=t[r],l=e.dot(a);i=l<i?l:i,n=l>n?l:n}this.min=i,this.max=n}isSeparated(e){return this.min>e.max||e.min>this.max}}xs.prototype.setFromBox=function(){const s=new P;return function(e,t){const i=t.min,n=t.max;let r=1/0,o=-1/0;for(let a=0;a<=1;a++)for(let l=0;l<=1;l++)for(let c=0;c<=1;c++){s.x=i.x*a+n.x*(1-a),s.y=i.y*l+n.y*(1-l),s.z=i.z*c+n.z*(1-c);const h=e.dot(s);r=Math.min(h,r),o=Math.max(h,o)}this.min=r,this.max=o}}();const vM=function(){const s=new P,e=new P,t=new P;return function(i,n,r){const o=i.start,a=s,l=n.start,c=e;t.subVectors(o,l),s.subVectors(i.end,i.start),e.subVectors(n.end,n.start);const h=t.dot(c),d=c.dot(a),u=c.dot(c),f=t.dot(a),m=a.dot(a)*u-d*d;let g,E;m!==0?g=(h*d-f*u)/m:g=0,E=(h+g*d)/u,r.x=g,r.y=E}}(),Hm=function(){const s=new Oe,e=new P,t=new P;return function(i,n,r,o){vM(i,n,s);let a=s.x,l=s.y;if(a>=0&&a<=1&&l>=0&&l<=1){i.at(a,r),n.at(l,o);return}else if(a>=0&&a<=1){l<0?n.at(0,o):n.at(1,o),i.closestPointToPoint(o,!0,r);return}else if(l>=0&&l<=1){a<0?i.at(0,r):i.at(1,r),n.closestPointToPoint(r,!0,o);return}else{let c;a<0?c=i.start:c=i.end;let h;l<0?h=n.start:h=n.end;const d=e,u=t;if(i.closestPointToPoint(h,!0,e),n.closestPointToPoint(c,!0,t),d.distanceToSquared(h)<=u.distanceToSquared(c)){r.copy(d),o.copy(h);return}else{r.copy(c),o.copy(u);return}}}}(),bM=function(){const s=new P,e=new P,t=new ri,i=new xt;return function(n,r){const{radius:o,center:a}=n,{a:l,b:c,c:h}=r;if(i.start=l,i.end=c,i.closestPointToPoint(a,!0,s).distanceTo(a)<=o||(i.start=l,i.end=h,i.closestPointToPoint(a,!0,s).distanceTo(a)<=o)||(i.start=c,i.end=h,i.closestPointToPoint(a,!0,s).distanceTo(a)<=o))return!0;const d=r.getPlane(t);if(Math.abs(d.distanceToPoint(a))<=o){const u=d.projectPoint(a,e);if(r.containsPoint(u))return!0}return!1}}(),yM=1e-15;function Xd(s){return Math.abs(s)<yM}class Rn extends Ft{constructor(...e){super(...e),this.isExtendedTriangle=!0,this.satAxes=new Array(4).fill().map(()=>new P),this.satBounds=new Array(4).fill().map(()=>new xs),this.points=[this.a,this.b,this.c],this.sphere=new vi,this.plane=new ri,this.needsUpdate=!0}intersectsSphere(e){return bM(e,this)}update(){const e=this.a,t=this.b,i=this.c,n=this.points,r=this.satAxes,o=this.satBounds,a=r[0],l=o[0];this.getNormal(a),l.setFromPoints(a,n);const c=r[1],h=o[1];c.subVectors(e,t),h.setFromPoints(c,n);const d=r[2],u=o[2];d.subVectors(t,i),u.setFromPoints(d,n);const f=r[3],m=o[3];f.subVectors(i,e),m.setFromPoints(f,n),this.sphere.setFromPoints(this.points),this.plane.setFromNormalAndCoplanarPoint(a,e),this.needsUpdate=!1}}Rn.prototype.closestPointToSegment=function(){const s=new P,e=new P,t=new xt;return function(i,n=null,r=null){const{start:o,end:a}=i,l=this.points;let c,h=1/0;for(let d=0;d<3;d++){const u=(d+1)%3;t.start.copy(l[d]),t.end.copy(l[u]),Hm(t,i,s,e),c=s.distanceToSquared(e),c<h&&(h=c,n&&n.copy(s),r&&r.copy(e))}return this.closestPointToPoint(o,s),c=o.distanceToSquared(s),c<h&&(h=c,n&&n.copy(s),r&&r.copy(o)),this.closestPointToPoint(a,s),c=a.distanceToSquared(s),c<h&&(h=c,n&&n.copy(s),r&&r.copy(a)),Math.sqrt(h)}}();Rn.prototype.intersectsTriangle=function(){const s=new Rn,e=new Array(3),t=new Array(3),i=new xs,n=new xs,r=new P,o=new P,a=new P,l=new P,c=new P,h=new xt,d=new xt,u=new xt,f=new P;function m(g,E,p){const v=g.points;let I=0,_=-1;for(let b=0;b<3;b++){const{start:T,end:w}=h;T.copy(v[b]),w.copy(v[(b+1)%3]),h.delta(o);const A=Xd(E.distanceToPoint(T));if(Xd(E.normal.dot(o))&&A){p.copy(h),I=2;break}const y=E.intersectLine(h,f);if(!y&&A&&f.copy(T),(y||A)&&!Xd(f.distanceTo(w))){if(I<=1)(I===1?p.start:p.end).copy(f),A&&(_=I);else if(I>=2){(_===1?p.start:p.end).copy(f),I=2;break}if(I++,I===2&&_===-1)break}}return I}return function(g,E=null,p=!1){this.needsUpdate&&this.update(),g.isExtendedTriangle?g.needsUpdate&&g.update():(s.copy(g),s.update(),g=s);const v=this.plane,I=g.plane;if(Math.abs(v.normal.dot(I.normal))>1-1e-10){const _=this.satBounds,b=this.satAxes;t[0]=g.a,t[1]=g.b,t[2]=g.c;for(let A=0;A<4;A++){const y=_[A],C=b[A];if(i.setFromPoints(C,t),y.isSeparated(i))return!1}const T=g.satBounds,w=g.satAxes;e[0]=this.a,e[1]=this.b,e[2]=this.c;for(let A=0;A<4;A++){const y=T[A],C=w[A];if(i.setFromPoints(C,e),y.isSeparated(i))return!1}for(let A=0;A<4;A++){const y=b[A];for(let C=0;C<4;C++){const M=w[C];if(r.crossVectors(y,M),i.setFromPoints(r,e),n.setFromPoints(r,t),i.isSeparated(n))return!1}}return E&&(p||console.warn("ExtendedTriangle.intersectsTriangle: Triangles are coplanar which does not support an output edge. Setting edge to 0, 0, 0."),E.start.set(0,0,0),E.end.set(0,0,0)),!0}else{const _=m(this,I,d);if(_===1&&g.containsPoint(d.end))return E&&(E.start.copy(d.end),E.end.copy(d.end)),!0;if(_!==2)return!1;const b=m(g,v,u);if(b===1&&this.containsPoint(u.end))return E&&(E.start.copy(u.end),E.end.copy(u.end)),!0;if(b!==2)return!1;if(d.delta(a),u.delta(l),a.dot(l)<0){let R=u.start;u.start=u.end,u.end=R}const T=d.start.dot(a),w=d.end.dot(a),A=u.start.dot(a),y=u.end.dot(a),C=w<A,M=T<y;return T!==y&&A!==w&&C===M?!1:(E&&(c.subVectors(d.start,u.start),c.dot(a)>0?E.start.copy(d.start):E.start.copy(u.start),c.subVectors(d.end,u.end),c.dot(a)<0?E.end.copy(d.end):E.end.copy(u.end)),!0)}}}();Rn.prototype.distanceToPoint=function(){const s=new P;return function(e){return this.closestPointToPoint(e,s),e.distanceTo(s)}}();Rn.prototype.distanceToTriangle=function(){const s=new P,e=new P,t=["a","b","c"],i=new xt,n=new xt;return function(r,o=null,a=null){const l=o||a?i:null;if(this.intersectsTriangle(r,l))return(o||a)&&(o&&l.getCenter(o),a&&l.getCenter(a)),0;let c=1/0;for(let h=0;h<3;h++){let d;const u=t[h],f=r[u];this.closestPointToPoint(f,s),d=f.distanceToSquared(s),d<c&&(c=d,o&&o.copy(s),a&&a.copy(f));const m=this[u];r.closestPointToPoint(m,s),d=m.distanceToSquared(s),d<c&&(c=d,o&&o.copy(m),a&&a.copy(s))}for(let h=0;h<3;h++){const d=t[h],u=t[(h+1)%3];i.set(this[d],this[u]);for(let f=0;f<3;f++){const m=t[f],g=t[(f+1)%3];n.set(r[m],r[g]),Hm(i,n,s,e);const E=s.distanceToSquared(e);E<c&&(c=E,o&&o.copy(s),a&&a.copy(e))}}return Math.sqrt(c)}}();class Fi{constructor(e,t,i){this.isOrientedBox=!0,this.min=new P,this.max=new P,this.matrix=new _e,this.invMatrix=new _e,this.points=new Array(8).fill().map(()=>new P),this.satAxes=new Array(3).fill().map(()=>new P),this.satBounds=new Array(3).fill().map(()=>new xs),this.alignedSatBounds=new Array(3).fill().map(()=>new xs),this.needsUpdate=!1,e&&this.min.copy(e),t&&this.max.copy(t),i&&this.matrix.copy(i)}set(e,t,i){this.min.copy(e),this.max.copy(t),this.matrix.copy(i),this.needsUpdate=!0}copy(e){this.min.copy(e.min),this.max.copy(e.max),this.matrix.copy(e.matrix),this.needsUpdate=!0}}Fi.prototype.update=function(){return function(){const s=this.matrix,e=this.min,t=this.max,i=this.points;for(let l=0;l<=1;l++)for(let c=0;c<=1;c++)for(let h=0;h<=1;h++){const d=1*l|2*c|4*h,u=i[d];u.x=l?t.x:e.x,u.y=c?t.y:e.y,u.z=h?t.z:e.z,u.applyMatrix4(s)}const n=this.satBounds,r=this.satAxes,o=i[0];for(let l=0;l<3;l++){const c=r[l],h=n[l],d=1<<l,u=i[d];c.subVectors(o,u),h.setFromPoints(c,i)}const a=this.alignedSatBounds;a[0].setFromPointsField(i,"x"),a[1].setFromPointsField(i,"y"),a[2].setFromPointsField(i,"z"),this.invMatrix.copy(this.matrix).invert(),this.needsUpdate=!1}}();Fi.prototype.intersectsBox=function(){const s=new xs;return function(e){this.needsUpdate&&this.update();const t=e.min,i=e.max,n=this.satBounds,r=this.satAxes,o=this.alignedSatBounds;if(s.min=t.x,s.max=i.x,o[0].isSeparated(s)||(s.min=t.y,s.max=i.y,o[1].isSeparated(s))||(s.min=t.z,s.max=i.z,o[2].isSeparated(s)))return!1;for(let a=0;a<3;a++){const l=r[a],c=n[a];if(s.setFromBox(l,e),c.isSeparated(s))return!1}return!0}}();Fi.prototype.intersectsTriangle=function(){const s=new Rn,e=new Array(3),t=new xs,i=new xs,n=new P;return function(r){this.needsUpdate&&this.update(),r.isExtendedTriangle?r.needsUpdate&&r.update():(s.copy(r),s.update(),r=s);const o=this.satBounds,a=this.satAxes;e[0]=r.a,e[1]=r.b,e[2]=r.c;for(let d=0;d<3;d++){const u=o[d],f=a[d];if(t.setFromPoints(f,e),u.isSeparated(t))return!1}const l=r.satBounds,c=r.satAxes,h=this.points;for(let d=0;d<3;d++){const u=l[d],f=c[d];if(t.setFromPoints(f,h),u.isSeparated(t))return!1}for(let d=0;d<3;d++){const u=a[d];for(let f=0;f<4;f++){const m=c[f];if(n.crossVectors(u,m),t.setFromPoints(n,e),i.setFromPoints(n,h),t.isSeparated(i))return!1}}return!0}}();Fi.prototype.closestPointToPoint=function(){return function(s,e){return this.needsUpdate&&this.update(),e.copy(s).applyMatrix4(this.invMatrix).clamp(this.min,this.max).applyMatrix4(this.matrix),e}}();Fi.prototype.distanceToPoint=function(){const s=new P;return function(e){return this.closestPointToPoint(e,s),e.distanceTo(s)}}();Fi.prototype.distanceToBox=function(){const s=["x","y","z"],e=new Array(12).fill().map(()=>new xt),t=new Array(12).fill().map(()=>new xt),i=new P,n=new P;return function(r,o=0,a=null,l=null){if(this.needsUpdate&&this.update(),this.intersectsBox(r))return(a||l)&&(r.getCenter(n),this.closestPointToPoint(n,i),r.closestPointToPoint(i,n),a&&a.copy(i),l&&l.copy(n)),0;const c=o*o,h=r.min,d=r.max,u=this.points;let f=1/0;for(let g=0;g<8;g++){const E=u[g];n.copy(E).clamp(h,d);const p=E.distanceToSquared(n);if(p<f&&(f=p,a&&a.copy(E),l&&l.copy(n),p<c))return Math.sqrt(p)}let m=0;for(let g=0;g<3;g++)for(let E=0;E<=1;E++)for(let p=0;p<=1;p++){const v=(g+1)%3,I=(g+2)%3,_=E<<v|p<<I,b=1<<g|E<<v|p<<I,T=u[_],w=u[b];e[m].set(T,w);const A=s[g],y=s[v],C=s[I],M=t[m],R=M.start,L=M.end;R[A]=h[A],R[y]=E?h[y]:d[y],R[C]=p?h[C]:d[y],L[A]=d[A],L[y]=E?h[y]:d[y],L[C]=p?h[C]:d[y],m++}for(let g=0;g<=1;g++)for(let E=0;E<=1;E++)for(let p=0;p<=1;p++){n.x=g?d.x:h.x,n.y=E?d.y:h.y,n.z=p?d.z:h.z,this.closestPointToPoint(n,i);const v=n.distanceToSquared(i);if(v<f&&(f=v,a&&a.copy(i),l&&l.copy(n),v<c))return Math.sqrt(v)}for(let g=0;g<12;g++){const E=e[g];for(let p=0;p<12;p++){const v=t[p];Hm(E,v,i,n);const I=i.distanceToSquared(n);if(I<f&&(f=I,a&&a.copy(i),l&&l.copy(n),I<c))return Math.sqrt(I)}}return Math.sqrt(f)}}();class Ym{constructor(e){this._getNewPrimitive=e,this._primitives=[]}getPrimitive(){const e=this._primitives;return e.length===0?this._getNewPrimitive():e.pop()}releasePrimitive(e){this._primitives.push(e)}}class TM extends Ym{constructor(){super(()=>new Rn)}}const cn=new TM;function Wi(s,e){return e[s+15]===65535}function Zi(s,e){return e[s+6]}function hn(s,e){return e[s+14]}function un(s){return s+8}function dn(s,e){return e[s+6]}function H_(s,e){return e[s+7]}class CM{constructor(){this.float32Array=null,this.uint16Array=null,this.uint32Array=null;const e=[];let t=null;this.setBuffer=i=>{t&&e.push(t),t=i,this.float32Array=new Float32Array(i),this.uint16Array=new Uint16Array(i),this.uint32Array=new Uint32Array(i)},this.clearBuffer=()=>{t=null,this.float32Array=null,this.uint16Array=null,this.uint32Array=null,e.length!==0&&this.setBuffer(e.pop())}}}const St=new CM;let Ws,Ho;const vo=[],eh=new Ym(()=>new je);function xM(s,e,t,i,n,r){Ws=eh.getPrimitive(),Ho=eh.getPrimitive(),vo.push(Ws,Ho),St.setBuffer(s._roots[e]);const o=Ap(0,s.geometry,t,i,n,r);St.clearBuffer(),eh.releasePrimitive(Ws),eh.releasePrimitive(Ho),vo.pop(),vo.pop();const a=vo.length;return a>0&&(Ho=vo[a-1],Ws=vo[a-2]),o}function Ap(s,e,t,i,n=null,r=0,o=0){const{float32Array:a,uint16Array:l,uint32Array:c}=St;let h=s*2;if(Wi(h,l)){const d=Zi(s,c),u=hn(h,l);return Dt(s,a,Ws),i(d,u,!1,o,r+s,Ws)}else{let d=function(M){const{uint16Array:R,uint32Array:L}=St;let S=M*2;for(;!Wi(S,R);)M=un(M),S=M*2;return Zi(M,L)},u=function(M){const{uint16Array:R,uint32Array:L}=St;let S=M*2;for(;!Wi(S,R);)M=dn(M,L),S=M*2;return Zi(M,L)+hn(S,R)};const f=un(s),m=dn(s,c);let g=f,E=m,p,v,I,_;if(n&&(I=Ws,_=Ho,Dt(g,a,I),Dt(E,a,_),p=n(I),v=n(_),v<p)){g=m,E=f;const M=p;p=v,v=M,I=_}I||(I=Ws,Dt(g,a,I));const b=Wi(g*2,l),T=t(I,b,p,o+1,r+g);let w;if(T===IE){const M=d(g),R=u(g)-M;w=i(M,R,!0,o+1,r+g,I)}else w=T&&Ap(g,e,t,i,n,r,o+1);if(w)return!0;_=Ho,Dt(E,a,_);const A=Wi(E*2,l),y=t(_,A,v,o+1,r+E);let C;if(y===IE){const M=d(E),R=u(E)-M;C=i(M,R,!0,o+1,r+E,_)}else C=y&&Ap(E,e,t,i,n,r,o+1);return!!C}}const La=new P,Zd=new P;function wM(s,e,t={},i=0,n=1/0){const r=i*i,o=n*n;let a=1/0,l=null;if(s.shapecast({boundsTraverseOrder:h=>(La.copy(e).clamp(h.min,h.max),La.distanceToSquared(e)),intersectsBounds:(h,d,u)=>u<a&&u<o,intersectsTriangle:(h,d)=>{h.closestPointToPoint(e,La);const u=e.distanceToSquared(La);return u<a&&(Zd.copy(La),a=u,l=d),u<r}}),a===1/0)return null;const c=Math.sqrt(a);return t.point?t.point.copy(Zd):t.point=Zd.clone(),t.distance=c,t.faceIndex=l,t}const bo=new P,yo=new P,To=new P,th=new Oe,ih=new Oe,nh=new Oe,TE=new P,CE=new P,xE=new P,sh=new P;function SM(s,e,t,i,n,r){let o;return r===_i?o=s.intersectTriangle(i,t,e,!0,n):o=s.intersectTriangle(e,t,i,r!==Ai,n),o===null?null:{distance:s.origin.distanceTo(n),point:n.clone()}}function AM(s,e,t,i,n,r,o,a,l){bo.fromBufferAttribute(e,r),yo.fromBufferAttribute(e,o),To.fromBufferAttribute(e,a);const c=SM(s,bo,yo,To,sh,l);if(c){i&&(th.fromBufferAttribute(i,r),ih.fromBufferAttribute(i,o),nh.fromBufferAttribute(i,a),c.uv=Ft.getInterpolation(sh,bo,yo,To,th,ih,nh,new Oe)),n&&(th.fromBufferAttribute(n,r),ih.fromBufferAttribute(n,o),nh.fromBufferAttribute(n,a),c.uv1=Ft.getInterpolation(sh,bo,yo,To,th,ih,nh,new Oe)),t&&(TE.fromBufferAttribute(t,r),CE.fromBufferAttribute(t,o),xE.fromBufferAttribute(t,a),c.normal=Ft.getInterpolation(sh,bo,yo,To,TE,CE,xE,new P),c.normal.dot(s.direction)>0&&c.normal.multiplyScalar(-1));const h={a:r,b:o,c:a,normal:new P,materialIndex:0};Ft.getNormal(bo,yo,To,h.normal),c.face=h,c.faceIndex=r}return c}function Su(s,e,t,i,n){const r=i*3;let o=r+0,a=r+1,l=r+2;const c=s.index;s.index&&(o=c.getX(o),a=c.getX(a),l=c.getX(l));const{position:h,normal:d,uv:u,uv1:f}=s.attributes,m=AM(t,h,d,u,f,o,a,l,e);return m?(m.faceIndex=i,n&&n.push(m),m):null}function $t(s,e,t,i){const n=s.a,r=s.b,o=s.c;let a=e,l=e+1,c=e+2;t&&(a=t.getX(a),l=t.getX(l),c=t.getX(c)),n.x=i.getX(a),n.y=i.getY(a),n.z=i.getZ(a),r.x=i.getX(l),r.y=i.getY(l),r.z=i.getZ(l),o.x=i.getX(c),o.y=i.getY(c),o.z=i.getZ(c)}function RM(s,e,t,i,n,r){const{geometry:o,_indirectBuffer:a}=s;for(let l=i,c=i+n;l<c;l++)Su(o,e,t,l,r)}function MM(s,e,t,i,n){const{geometry:r,_indirectBuffer:o}=s;let a=1/0,l=null;for(let c=i,h=i+n;c<h;c++){let d;d=Su(r,e,t,c),d&&d.distance<a&&(l=d,a=d.distance)}return l}function FM(s,e,t,i,n,r,o){const{geometry:a}=t,{index:l}=a,c=a.attributes.position;for(let h=s,d=e+s;h<d;h++){let u;if(u=h,$t(o,u*3,l,c),o.needsUpdate=!0,i(o,u,n,r))return!0}return!1}function PM(s,e=null){e&&Array.isArray(e)&&(e=new Set(e));const t=s.geometry,i=t.index?t.index.array:null,n=t.attributes.position;let r,o,a,l,c=0;const h=s._roots;for(let u=0,f=h.length;u<f;u++)r=h[u],o=new Uint32Array(r),a=new Uint16Array(r),l=new Float32Array(r),d(0,c),c+=r.byteLength;function d(u,f,m=!1){const g=u*2;if(a[g+15]===wu){const E=o[u+6],p=a[g+14];let v=1/0,I=1/0,_=1/0,b=-1/0,T=-1/0,w=-1/0;for(let A=3*E,y=3*(E+p);A<y;A++){let C=i[A];const M=n.getX(C),R=n.getY(C),L=n.getZ(C);M<v&&(v=M),M>b&&(b=M),R<I&&(I=R),R>T&&(T=R),L<_&&(_=L),L>w&&(w=L)}return l[u+0]!==v||l[u+1]!==I||l[u+2]!==_||l[u+3]!==b||l[u+4]!==T||l[u+5]!==w?(l[u+0]=v,l[u+1]=I,l[u+2]=_,l[u+3]=b,l[u+4]=T,l[u+5]=w,!0):!1}else{const E=u+8,p=o[u+6],v=E+f,I=p+f;let _=m,b=!1,T=!1;e?_||(b=e.has(v),T=e.has(I),_=!b&&!T):(b=!0,T=!0);const w=_||b,A=_||T;let y=!1;w&&(y=d(E,f,_));let C=!1;A&&(C=d(p,f,_));const M=y||C;if(M)for(let R=0;R<3;R++){const L=E+R,S=p+R,U=l[L],z=l[L+3],k=l[S],H=l[S+3];l[u+R]=U<k?U:k,l[u+R+3]=z>H?z:H}return M}}}const wE=new je;function Qs(s,e,t,i){return Dt(s,e,wE),t.intersectBox(wE,i)}function OM(s,e,t,i,n,r){const{geometry:o,_indirectBuffer:a}=s;for(let l=i,c=i+n;l<c;l++){let h=a?a[l]:l;Su(o,e,t,h,r)}}function LM(s,e,t,i,n){const{geometry:r,_indirectBuffer:o}=s;let a=1/0,l=null;for(let c=i,h=i+n;c<h;c++){let d;d=Su(r,e,t,o?o[c]:c),d&&d.distance<a&&(l=d,a=d.distance)}return l}function DM(s,e,t,i,n,r,o){const{geometry:a}=t,{index:l}=a,c=a.attributes.position;for(let h=s,d=e+s;h<d;h++){let u;if(u=t.resolveTriangleIndex(h),$t(o,u*3,l,c),o.needsUpdate=!0,i(o,u,n,r))return!0}return!1}const SE=new P;function NM(s,e,t,i,n){St.setBuffer(s._roots[e]),Rp(0,s,t,i,n),St.clearBuffer()}function Rp(s,e,t,i,n){const{float32Array:r,uint16Array:o,uint32Array:a}=St,l=s*2;if(Wi(l,o)){const c=Zi(s,a),h=hn(l,o);RM(e,t,i,c,h,n)}else{const c=un(s);Qs(c,r,i,SE)&&Rp(c,e,t,i,n);const h=dn(s,a);Qs(h,r,i,SE)&&Rp(h,e,t,i,n)}}const AE=new P,UM=["x","y","z"];function BM(s,e,t,i){St.setBuffer(s._roots[e]);const n=Mp(0,s,t,i);return St.clearBuffer(),n}function Mp(s,e,t,i){const{float32Array:n,uint16Array:r,uint32Array:o}=St;let a=s*2;if(Wi(a,r)){const l=Zi(s,o),c=hn(a,r);return MM(e,t,i,l,c)}else{const l=H_(s,o),c=UM[l],h=i.direction[c]>=0;let d,u;h?(d=un(s),u=dn(s,o)):(d=dn(s,o),u=un(s));const f=Qs(d,n,i,AE)?Mp(d,e,t,i):null;if(f){const g=f.point[c];if(h?g<=n[u+l]:g>=n[u+l+3])return f}const m=Qs(u,n,i,AE)?Mp(u,e,t,i):null;return f&&m?f.distance<=m.distance?f:m:f||m||null}}const rh=new je,Co=new Rn,xo=new Rn,Da=new _e,RE=new Fi,oh=new Fi;function zM(s,e,t,i){St.setBuffer(s._roots[e]);const n=Fp(0,s,t,i);return St.clearBuffer(),n}function Fp(s,e,t,i,n=null){const{float32Array:r,uint16Array:o,uint32Array:a}=St;let l=s*2;if(n===null&&(t.boundingBox||t.computeBoundingBox(),RE.set(t.boundingBox.min,t.boundingBox.max,i),n=RE),Wi(l,o)){const c=e.geometry,h=c.index,d=c.attributes.position,u=t.index,f=t.attributes.position,m=Zi(s,a),g=hn(l,o);if(Da.copy(i).invert(),t.boundsTree)return Dt(s,r,oh),oh.matrix.copy(Da),oh.needsUpdate=!0,t.boundsTree.shapecast({intersectsBounds:E=>oh.intersectsBox(E),intersectsTriangle:E=>{E.a.applyMatrix4(i),E.b.applyMatrix4(i),E.c.applyMatrix4(i),E.needsUpdate=!0;for(let p=m*3,v=(g+m)*3;p<v;p+=3)if($t(xo,p,h,d),xo.needsUpdate=!0,E.intersectsTriangle(xo))return!0;return!1}});for(let E=m*3,p=(g+m)*3;E<p;E+=3){$t(Co,E,h,d),Co.a.applyMatrix4(Da),Co.b.applyMatrix4(Da),Co.c.applyMatrix4(Da),Co.needsUpdate=!0;for(let v=0,I=u.count;v<I;v+=3)if($t(xo,v,u,f),xo.needsUpdate=!0,Co.intersectsTriangle(xo))return!0}}else{const c=s+8,h=a[s+6];return Dt(c,r,rh),!!(n.intersectsBox(rh)&&Fp(c,e,t,i,n)||(Dt(h,r,rh),n.intersectsBox(rh)&&Fp(h,e,t,i,n)))}}const ah=new _e,jd=new Fi,Na=new Fi,VM=new P,kM=new P,GM=new P,HM=new P;function YM(s,e,t,i={},n={},r=0,o=1/0){e.boundingBox||e.computeBoundingBox(),jd.set(e.boundingBox.min,e.boundingBox.max,t),jd.needsUpdate=!0;const a=s.geometry,l=a.attributes.position,c=a.index,h=e.attributes.position,d=e.index,u=cn.getPrimitive(),f=cn.getPrimitive();let m=VM,g=kM,E=null,p=null;n&&(E=GM,p=HM);let v=1/0,I=null,_=null;return ah.copy(t).invert(),Na.matrix.copy(ah),s.shapecast({boundsTraverseOrder:b=>jd.distanceToBox(b),intersectsBounds:(b,T,w)=>w<v&&w<o?(T&&(Na.min.copy(b.min),Na.max.copy(b.max),Na.needsUpdate=!0),!0):!1,intersectsRange:(b,T)=>{if(e.boundsTree)return e.boundsTree.shapecast({boundsTraverseOrder:w=>Na.distanceToBox(w),intersectsBounds:(w,A,y)=>y<v&&y<o,intersectsRange:(w,A)=>{for(let y=w,C=w+A;y<C;y++){$t(f,3*y,d,h),f.a.applyMatrix4(t),f.b.applyMatrix4(t),f.c.applyMatrix4(t),f.needsUpdate=!0;for(let M=b,R=b+T;M<R;M++){$t(u,3*M,c,l),u.needsUpdate=!0;const L=u.distanceToTriangle(f,m,E);if(L<v&&(g.copy(m),p&&p.copy(E),v=L,I=M,_=y),L<r)return!0}}}});{const w=ga(e);for(let A=0,y=w;A<y;A++){$t(f,3*A,d,h),f.a.applyMatrix4(t),f.b.applyMatrix4(t),f.c.applyMatrix4(t),f.needsUpdate=!0;for(let C=b,M=b+T;C<M;C++){$t(u,3*C,c,l),u.needsUpdate=!0;const R=u.distanceToTriangle(f,m,E);if(R<v&&(g.copy(m),p&&p.copy(E),v=R,I=C,_=A),R<r)return!0}}}}}),cn.releasePrimitive(u),cn.releasePrimitive(f),v===1/0?null:(i.point?i.point.copy(g):i.point=g.clone(),i.distance=v,i.faceIndex=I,n&&(n.point?n.point.copy(p):n.point=p.clone(),n.point.applyMatrix4(ah),g.applyMatrix4(ah),n.distance=g.sub(n.point).length(),n.faceIndex=_),i)}function WM(s,e=null){e&&Array.isArray(e)&&(e=new Set(e));const t=s.geometry,i=t.index?t.index.array:null,n=t.attributes.position;let r,o,a,l,c=0;const h=s._roots;for(let u=0,f=h.length;u<f;u++)r=h[u],o=new Uint32Array(r),a=new Uint16Array(r),l=new Float32Array(r),d(0,c),c+=r.byteLength;function d(u,f,m=!1){const g=u*2;if(a[g+15]===wu){const E=o[u+6],p=a[g+14];let v=1/0,I=1/0,_=1/0,b=-1/0,T=-1/0,w=-1/0;for(let A=E,y=E+p;A<y;A++){const C=3*s.resolveTriangleIndex(A);for(let M=0;M<3;M++){let R=C+M;R=i?i[R]:R;const L=n.getX(R),S=n.getY(R),U=n.getZ(R);L<v&&(v=L),L>b&&(b=L),S<I&&(I=S),S>T&&(T=S),U<_&&(_=U),U>w&&(w=U)}}return l[u+0]!==v||l[u+1]!==I||l[u+2]!==_||l[u+3]!==b||l[u+4]!==T||l[u+5]!==w?(l[u+0]=v,l[u+1]=I,l[u+2]=_,l[u+3]=b,l[u+4]=T,l[u+5]=w,!0):!1}else{const E=u+8,p=o[u+6],v=E+f,I=p+f;let _=m,b=!1,T=!1;e?_||(b=e.has(v),T=e.has(I),_=!b&&!T):(b=!0,T=!0);const w=_||b,A=_||T;let y=!1;w&&(y=d(E,f,_));let C=!1;A&&(C=d(p,f,_));const M=y||C;if(M)for(let R=0;R<3;R++){const L=E+R,S=p+R,U=l[L],z=l[L+3],k=l[S],H=l[S+3];l[u+R]=U<k?U:k,l[u+R+3]=z>H?z:H}return M}}}const ME=new P;function XM(s,e,t,i,n){St.setBuffer(s._roots[e]),Pp(0,s,t,i,n),St.clearBuffer()}function Pp(s,e,t,i,n){const{float32Array:r,uint16Array:o,uint32Array:a}=St,l=s*2;if(Wi(l,o)){const c=Zi(s,a),h=hn(l,o);OM(e,t,i,c,h,n)}else{const c=un(s);Qs(c,r,i,ME)&&Pp(c,e,t,i,n);const h=dn(s,a);Qs(h,r,i,ME)&&Pp(h,e,t,i,n)}}const FE=new P,ZM=["x","y","z"];function jM(s,e,t,i){St.setBuffer(s._roots[e]);const n=Op(0,s,t,i);return St.clearBuffer(),n}function Op(s,e,t,i){const{float32Array:n,uint16Array:r,uint32Array:o}=St;let a=s*2;if(Wi(a,r)){const l=Zi(s,o),c=hn(a,r);return LM(e,t,i,l,c)}else{const l=H_(s,o),c=ZM[l],h=i.direction[c]>=0;let d,u;h?(d=un(s),u=dn(s,o)):(d=dn(s,o),u=un(s));const f=Qs(d,n,i,FE)?Op(d,e,t,i):null;if(f){const g=f.point[c];if(h?g<=n[u+l]:g>=n[u+l+3])return f}const m=Qs(u,n,i,FE)?Op(u,e,t,i):null;return f&&m?f.distance<=m.distance?f:m:f||m||null}}const lh=new je,wo=new Rn,So=new Rn,Ua=new _e,PE=new Fi,ch=new Fi;function qM(s,e,t,i){St.setBuffer(s._roots[e]);const n=Lp(0,s,t,i);return St.clearBuffer(),n}function Lp(s,e,t,i,n=null){const{float32Array:r,uint16Array:o,uint32Array:a}=St;let l=s*2;if(n===null&&(t.boundingBox||t.computeBoundingBox(),PE.set(t.boundingBox.min,t.boundingBox.max,i),n=PE),Wi(l,o)){const c=e.geometry,h=c.index,d=c.attributes.position,u=t.index,f=t.attributes.position,m=Zi(s,a),g=hn(l,o);if(Ua.copy(i).invert(),t.boundsTree)return Dt(s,r,ch),ch.matrix.copy(Ua),ch.needsUpdate=!0,t.boundsTree.shapecast({intersectsBounds:E=>ch.intersectsBox(E),intersectsTriangle:E=>{E.a.applyMatrix4(i),E.b.applyMatrix4(i),E.c.applyMatrix4(i),E.needsUpdate=!0;for(let p=m,v=g+m;p<v;p++)if($t(So,3*e.resolveTriangleIndex(p),h,d),So.needsUpdate=!0,E.intersectsTriangle(So))return!0;return!1}});for(let E=m,p=g+m;E<p;E++){const v=e.resolveTriangleIndex(E);$t(wo,3*v,h,d),wo.a.applyMatrix4(Ua),wo.b.applyMatrix4(Ua),wo.c.applyMatrix4(Ua),wo.needsUpdate=!0;for(let I=0,_=u.count;I<_;I+=3)if($t(So,I,u,f),So.needsUpdate=!0,wo.intersectsTriangle(So))return!0}}else{const c=s+8,h=a[s+6];return Dt(c,r,lh),!!(n.intersectsBox(lh)&&Lp(c,e,t,i,n)||(Dt(h,r,lh),n.intersectsBox(lh)&&Lp(h,e,t,i,n)))}}const hh=new _e,qd=new Fi,Ba=new Fi,KM=new P,QM=new P,JM=new P,$M=new P;function e2(s,e,t,i={},n={},r=0,o=1/0){e.boundingBox||e.computeBoundingBox(),qd.set(e.boundingBox.min,e.boundingBox.max,t),qd.needsUpdate=!0;const a=s.geometry,l=a.attributes.position,c=a.index,h=e.attributes.position,d=e.index,u=cn.getPrimitive(),f=cn.getPrimitive();let m=KM,g=QM,E=null,p=null;n&&(E=JM,p=$M);let v=1/0,I=null,_=null;return hh.copy(t).invert(),Ba.matrix.copy(hh),s.shapecast({boundsTraverseOrder:b=>qd.distanceToBox(b),intersectsBounds:(b,T,w)=>w<v&&w<o?(T&&(Ba.min.copy(b.min),Ba.max.copy(b.max),Ba.needsUpdate=!0),!0):!1,intersectsRange:(b,T)=>{if(e.boundsTree){const w=e.boundsTree;return w.shapecast({boundsTraverseOrder:A=>Ba.distanceToBox(A),intersectsBounds:(A,y,C)=>C<v&&C<o,intersectsRange:(A,y)=>{for(let C=A,M=A+y;C<M;C++){const R=w.resolveTriangleIndex(C);$t(f,3*R,d,h),f.a.applyMatrix4(t),f.b.applyMatrix4(t),f.c.applyMatrix4(t),f.needsUpdate=!0;for(let L=b,S=b+T;L<S;L++){const U=s.resolveTriangleIndex(L);$t(u,3*U,c,l),u.needsUpdate=!0;const z=u.distanceToTriangle(f,m,E);if(z<v&&(g.copy(m),p&&p.copy(E),v=z,I=L,_=C),z<r)return!0}}}})}else{const w=ga(e);for(let A=0,y=w;A<y;A++){$t(f,3*A,d,h),f.a.applyMatrix4(t),f.b.applyMatrix4(t),f.c.applyMatrix4(t),f.needsUpdate=!0;for(let C=b,M=b+T;C<M;C++){const R=s.resolveTriangleIndex(C);$t(u,3*R,c,l),u.needsUpdate=!0;const L=u.distanceToTriangle(f,m,E);if(L<v&&(g.copy(m),p&&p.copy(E),v=L,I=C,_=A),L<r)return!0}}}}}),cn.releasePrimitive(u),cn.releasePrimitive(f),v===1/0?null:(i.point?i.point.copy(g):i.point=g.clone(),i.distance=v,i.faceIndex=I,n&&(n.point?n.point.copy(p):n.point=p.clone(),n.point.applyMatrix4(hh),g.applyMatrix4(hh),n.distance=g.sub(n.point).length(),n.faceIndex=_),i)}function t2(){return typeof SharedArrayBuffer<"u"}const pl=new St.constructor,lu=new St.constructor,Gs=new Ym(()=>new je),Ao=new je,Ro=new je,Kd=new je,Qd=new je;let Jd=!1;function i2(s,e,t,i){if(Jd)throw new Error("MeshBVH: Recursive calls to bvhcast not supported.");Jd=!0;const n=s._roots,r=e._roots;let o,a=0,l=0;const c=new _e().copy(t).invert();for(let h=0,d=n.length;h<d;h++){pl.setBuffer(n[h]),l=0;const u=Gs.getPrimitive();Dt(0,pl.float32Array,u),u.applyMatrix4(c);for(let f=0,m=r.length;f<m&&(lu.setBuffer(r[h]),o=bn(0,0,t,c,i,a,l,0,0,u),lu.clearBuffer(),l+=r[f].length,!o);f++);if(Gs.releasePrimitive(u),pl.clearBuffer(),a+=n[h].length,o)break}return Jd=!1,o}function bn(s,e,t,i,n,r=0,o=0,a=0,l=0,c=null,h=!1){let d,u;h?(d=lu,u=pl):(d=pl,u=lu);const f=d.float32Array,m=d.uint32Array,g=d.uint16Array,E=u.float32Array,p=u.uint32Array,v=u.uint16Array,I=s*2,_=e*2,b=Wi(I,g),T=Wi(_,v);let w=!1;if(T&&b)h?w=n(Zi(e,p),hn(e*2,v),Zi(s,m),hn(s*2,g),l,o+e,a,r+s):w=n(Zi(s,m),hn(s*2,g),Zi(e,p),hn(e*2,v),a,r+s,l,o+e);else if(T){const A=Gs.getPrimitive();Dt(e,E,A),A.applyMatrix4(t);const y=un(s),C=dn(s,m);Dt(y,f,Ao),Dt(C,f,Ro);const M=A.intersectsBox(Ao),R=A.intersectsBox(Ro);w=M&&bn(e,y,i,t,n,o,r,l,a+1,A,!h)||R&&bn(e,C,i,t,n,o,r,l,a+1,A,!h),Gs.releasePrimitive(A)}else{const A=un(e),y=dn(e,p);Dt(A,E,Kd),Dt(y,E,Qd);const C=c.intersectsBox(Kd),M=c.intersectsBox(Qd);if(C&&M)w=bn(s,A,t,i,n,r,o,a,l+1,c,h)||bn(s,y,t,i,n,r,o,a,l+1,c,h);else if(C)if(b)w=bn(s,A,t,i,n,r,o,a,l+1,c,h);else{const R=Gs.getPrimitive();R.copy(Kd).applyMatrix4(t);const L=un(s),S=dn(s,m);Dt(L,f,Ao),Dt(S,f,Ro);const U=R.intersectsBox(Ao),z=R.intersectsBox(Ro);w=U&&bn(A,L,i,t,n,o,r,l,a+1,R,!h)||z&&bn(A,S,i,t,n,o,r,l,a+1,R,!h),Gs.releasePrimitive(R)}else if(M)if(b)w=bn(s,y,t,i,n,r,o,a,l+1,c,h);else{const R=Gs.getPrimitive();R.copy(Qd).applyMatrix4(t);const L=un(s),S=dn(s,m);Dt(L,f,Ao),Dt(S,f,Ro);const U=R.intersectsBox(Ao),z=R.intersectsBox(Ro);w=U&&bn(y,L,i,t,n,o,r,l,a+1,R,!h)||z&&bn(y,S,i,t,n,o,r,l,a+1,R,!h),Gs.releasePrimitive(R)}}return w}const uh=new Fi,OE=new je;class Wm{static serialize(e,t={}){t={cloneBuffers:!0,...t};const i=e.geometry,n=e._roots,r=e._indirectBuffer,o=i.getIndex();let a;return t.cloneBuffers?a={roots:n.map(l=>l.slice()),index:o.array.slice(),indirectBuffer:r?r.slice():null}:a={roots:n,index:o.array,indirectBuffer:r},a}static deserialize(e,t,i={}){i={setIndex:!0,indirect:!!e.indirectBuffer,...i};const{index:n,roots:r,indirectBuffer:o}=e,a=new Wm(t,{...i,[Yd]:!0});if(a._roots=r,a._indirectBuffer=o||null,i.setIndex){const l=t.getIndex();if(l===null){const c=new at(e.index,1,!1);t.setIndex(c)}else l.array!==n&&(l.array.set(n),l.needsUpdate=!0)}return a}get indirect(){return!!this._indirectBuffer}constructor(e,t={}){if(e.isBufferGeometry){if(e.index&&e.index.isInterleavedBufferAttribute)throw new Error("MeshBVH: InterleavedBufferAttribute is not supported for the index attribute.")}else throw new Error("MeshBVH: Only BufferGeometries are supported.");if(t=Object.assign({strategy:V_,maxDepth:40,maxLeafTris:10,verbose:!0,useSharedArrayBuffer:!1,setBoundingBox:!0,onProgress:null,indirect:!1,[Yd]:!1},t),t.useSharedArrayBuffer&&!t2())throw new Error("MeshBVH: SharedArrayBuffer is not available.");this.geometry=e,this._roots=null,this._indirectBuffer=null,t[Yd]||(_M(this,t),!e.boundingBox&&t.setBoundingBox&&(e.boundingBox=this.getBoundingBox(new je)));const{_indirectBuffer:i}=this;this.resolveTriangleIndex=t.indirect?n=>i[n]:n=>n}refit(e=null){return(this.indirect?WM:PM)(this,e)}traverse(e,t=0){const i=this._roots[t],n=new Uint32Array(i),r=new Uint16Array(i);o(0);function o(a,l=0){const c=a*2,h=r[c+15]===wu;if(h){const d=n[a+6],u=r[c+14];e(l,h,new Float32Array(i,a*4,6),d,u)}else{const d=a+Hh/4,u=n[a+6],f=n[a+7];e(l,h,new Float32Array(i,a*4,6),f)||(o(d,l+1),o(u,l+1))}}}raycast(e,t=pn){const i=this._roots,n=this.geometry,r=[],o=t.isMaterial,a=Array.isArray(t),l=n.groups,c=o?t.side:t,h=this.indirect?XM:NM;for(let d=0,u=i.length;d<u;d++){const f=a?t[l[d].materialIndex].side:c,m=r.length;if(h(this,d,f,e,r),a){const g=l[d].materialIndex;for(let E=m,p=r.length;E<p;E++)r[E].face.materialIndex=g}}return r}raycastFirst(e,t=pn){const i=this._roots,n=this.geometry,r=t.isMaterial,o=Array.isArray(t);let a=null;const l=n.groups,c=r?t.side:t,h=this.indirect?jM:BM;for(let d=0,u=i.length;d<u;d++){const f=o?t[l[d].materialIndex].side:c,m=h(this,d,f,e);m!=null&&(a==null||m.distance<a.distance)&&(a=m,o&&(m.face.materialIndex=l[d].materialIndex))}return a}intersectsGeometry(e,t){let i=!1;const n=this._roots,r=this.indirect?qM:zM;for(let o=0,a=n.length;o<a&&(i=r(this,o,e,t),!i);o++);return i}shapecast(e){const t=cn.getPrimitive(),i=this.indirect?DM:FM;let{boundsTraverseOrder:n,intersectsBounds:r,intersectsRange:o,intersectsTriangle:a}=e;if(o&&a){const d=o;o=(u,f,m,g,E)=>d(u,f,m,g,E)?!0:i(u,f,this,a,m,g,t)}else o||(a?o=(d,u,f,m)=>i(d,u,this,a,f,m,t):o=(d,u,f)=>f);let l=!1,c=0;const h=this._roots;for(let d=0,u=h.length;d<u;d++){const f=h[d];if(l=xM(this,d,r,o,n,c),l)break;c+=f.byteLength}return cn.releasePrimitive(t),l}bvhcast(e,t,i){let{intersectsRanges:n,intersectsTriangles:r}=i;const o=cn.getPrimitive(),a=this.geometry.index,l=this.geometry.attributes.position,c=this.indirect?m=>{const g=this.resolveTriangleIndex(m);$t(o,g*3,a,l)}:m=>{$t(o,m*3,a,l)},h=cn.getPrimitive(),d=e.geometry.index,u=e.geometry.attributes.position,f=e.indirect?m=>{const g=e.resolveTriangleIndex(m);$t(h,g*3,d,u)}:m=>{$t(h,m*3,d,u)};if(r){const m=(g,E,p,v,I,_,b,T)=>{for(let w=p,A=p+v;w<A;w++){f(w),h.a.applyMatrix4(t),h.b.applyMatrix4(t),h.c.applyMatrix4(t),h.needsUpdate=!0;for(let y=g,C=g+E;y<C;y++)if(c(y),o.needsUpdate=!0,r(o,h,y,w,I,_,b,T))return!0}return!1};if(n){const g=n;n=function(E,p,v,I,_,b,T,w){return g(E,p,v,I,_,b,T,w)?!0:m(E,p,v,I,_,b,T,w)}}else n=m}return i2(this,e,t,n)}intersectsBox(e,t){return uh.set(e.min,e.max,t),uh.needsUpdate=!0,this.shapecast({intersectsBounds:i=>uh.intersectsBox(i),intersectsTriangle:i=>uh.intersectsTriangle(i)})}intersectsSphere(e){return this.shapecast({intersectsBounds:t=>e.intersectsBox(t),intersectsTriangle:t=>t.intersectsSphere(e)})}closestPointToGeometry(e,t,i={},n={},r=0,o=1/0){return(this.indirect?e2:YM)(this,e,t,i,n,r,o)}closestPointToPoint(e,t={},i=0,n=1/0){return wM(this,e,t,i,n)}getBoundingBox(e){return e.makeEmpty(),this._roots.forEach(t=>{Dt(0,new Float32Array(t),OE),e.union(OE)}),e}}function LE(s,e,t){return s===null||(s.point.applyMatrix4(e.matrixWorld),s.distance=s.point.distanceTo(t.ray.origin),s.object=e,s.distance<t.near||s.distance>t.far)?null:s}const $d=new da,DE=new _e,n2=Te.prototype.raycast;function s2(s,e){if(this.geometry.boundsTree){if(this.material===void 0)return;DE.copy(this.matrixWorld).invert(),$d.copy(s.ray).applyMatrix4(DE);const t=this.geometry.boundsTree;if(s.firstHitOnly===!0){const i=LE(t.raycastFirst($d,this.material),this,s);i&&e.push(i)}else{const i=t.raycast($d,this.material);for(let n=0,r=i.length;n<r;n++){const o=LE(i[n],this,s);o&&e.push(o)}}}else n2.call(this,s,e)}function r2(s){return this.boundsTree=new Wm(this,s),this.boundsTree}function o2(){this.boundsTree=null}let oe=class{constructor(){F(this,"enabled",!0),F(this,"trigger",s=>{if(!this.enabled)return;const e=this.handlers.slice(0);for(const t of e)t(s)}),F(this,"handlers",[])}add(s){this.handlers.push(s)}remove(s){this.handlers=this.handlers.filter(e=>e!==s)}reset(){this.handlers.length=0}};class ps{constructor(){F(this,"enabled",!0),F(this,"trigger",async e=>{if(!this.enabled)return;const t=this.handlers.slice(0);for(const i of t)await i(e)}),F(this,"handlers",[])}add(e){this.handlers.push(e)}remove(e){this.handlers=this.handlers.filter(t=>t!==e)}reset(){this.handlers.length=0}}class Xm{constructor(e){F(this,"isDisposeable",()=>"dispose"in this&&"onDisposed"in this),F(this,"isResizeable",()=>"resize"in this&&"getSize"in this),F(this,"isUpdateable",()=>"onAfterUpdate"in this&&"onBeforeUpdate"in this&&"update"in this),F(this,"isHideable",()=>"visible"in this),F(this,"isConfigurable",()=>"setup"in this&&"config"in this&&"onSetup"in this),this.components=e}}class Ke extends Xm{}class Y_ extends Xm{constructor(e){super(e),F(this,"worlds",new Map),F(this,"onWorldChanged",new oe),F(this,"currentWorld",null),this.onWorldChanged.add(({world:t,action:i})=>{i==="removed"&&this.worlds.delete(t.uuid)})}}class a2 extends Y_{constructor(){super(...arguments),F(this,"hasCameraControls",()=>"controls"in this)}}class l2 extends Y_{constructor(){super(...arguments),F(this,"onAfterUpdate",new oe),F(this,"onBeforeUpdate",new oe),F(this,"onDisposed",new oe),F(this,"onResize",new oe),F(this,"onClippingPlanesUpdated",new oe),F(this,"clippingPlanes",[])}updateClippingPlanes(){this.onClippingPlanesUpdated.trigger()}setPlane(e,t,i){t.isLocal=i;const n=this.clippingPlanes.indexOf(t);e&&n===-1?this.clippingPlanes.push(t):!e&&n>-1&&this.clippingPlanes.splice(n,1),this.three.clippingPlanes=this.clippingPlanes.filter(r=>!r.isLocal)}}const W_=class Dp extends Ke{constructor(e){super(e),F(this,"_disposedComponents",new Set),F(this,"enabled",!0),e.add(Dp.uuid,this)}get(){return this._disposedComponents}destroy(e,t=!0,i=!0){e.removeFromParent();const n=e;n.dispose&&n.dispose(),this.disposeGeometryAndMaterials(e,t),i&&n.children&&n.children.length&&this.disposeChildren(n),e.children.length=0}disposeGeometry(e){e.boundsTree&&e.disposeBoundsTree&&e.disposeBoundsTree(),e.dispose()}disposeGeometryAndMaterials(e,t){const i=e;i.geometry&&this.disposeGeometry(i.geometry),t&&i.material&&Dp.disposeMaterial(i),i.material=[],i.geometry=null}disposeChildren(e){for(const t of e.children)this.destroy(t)}static disposeMaterial(e){if(e.material)if(Array.isArray(e.material))for(const t of e.material)t.dispose();else e.material.dispose()}};F(W_,"uuid","76e9cd8e-ad8f-4753-9ef6-cbc60f7247fe");let Xn=W_;class qs extends Set{constructor(e){super(e),F(this,"onItemAdded",new oe),F(this,"onItemDeleted",new oe),F(this,"onCleared",new oe),F(this,"guard",()=>!0)}clear(){super.clear(),this.onCleared.trigger()}add(...e){for(const t of e)this.has(t)||!this.guard(t)||(super.add(t),this.onItemAdded||(this.onItemAdded=new oe),this.onItemAdded.trigger(t));return this}delete(e){const t=super.delete(e);return t&&this.onItemDeleted.trigger(),t}dispose(){this.clear(),this.onItemAdded.reset(),this.onItemDeleted.reset(),this.onCleared.reset()}}class Mn extends Map{constructor(e){super(e),F(this,"onItemSet",new oe),F(this,"onItemUpdated",new oe),F(this,"onItemDeleted",new oe),F(this,"onCleared",new oe),F(this,"guard",()=>!0)}clear(){super.clear(),this.onCleared.trigger()}set(e,t){const i=this.has(e);if(!(this.guard??(()=>!0))(e,t))return this;const n=super.set(e,t);return i?(this.onItemUpdated||(this.onItemUpdated=new oe),this.onItemUpdated.trigger({key:e,value:t})):(this.onItemSet||(this.onItemSet=new oe),this.onItemSet.trigger({key:e,value:t})),n}delete(e){const t=super.delete(e);return t&&this.onItemDeleted.trigger(e),t}dispose(){this.clear(),this.onItemSet.reset(),this.onItemDeleted.reset(),this.onCleared.reset()}}class ef{static isEntry(e){return new Set(["Boolean","Color","Text","Number","Select","Vector3","TextSet","None"]).has(e.type)}static copySchema(e,t={}){for(const i in e){const n=e[i];this.isEntry(n)?t[i]=this.copyEntry(n):(t[i]={},this.copySchema(n,t[i]))}return t}static copyEntry(e){if(e.type==="Boolean"){const t=e;return{type:t.type,value:t.value}}if(e.type==="Color"){const t=e;return{type:t.type,value:t.value.clone()}}if(e.type==="Text"){const t=e;return{type:t.type,value:t.value}}if(e.type==="Number"){const t=e;return{type:t.type,value:t.value,min:t.min,max:t.max,interpolable:t.interpolable}}if(e.type==="Select"){const t=e;return{type:t.type,value:t.value,multiple:t.multiple,options:new Set(t.options)}}if(e.type==="Vector3"){const t=e;return{type:t.type,value:t.value.clone()}}if(e.type==="TextSet"){const t=e;return{type:t.type,value:new Set(t.value)}}if(e.type==="None"){const t=e;return{type:t.type,value:t.value}}throw new Error("Invalid entry!")}}class c2{constructor(){F(this,"list",new Set)}add(e){for(const t of e)this.list.add(t)}remove(e){for(const t of e)this.list.delete(t)}set(e){for(const t of this.list)t.enabled=e}reset(){for(const e of this.list)e.reset()}}const Yh=0,h2=1,u2=new P,NE=new xt,tf=new ri,UE=new P,dh=new Ft;class d2{constructor(){this.tolerance=-1,this.faces=[],this.newFaces=[],this.assigned=new BE,this.unassigned=new BE,this.vertices=[]}setFromPoints(e){if(e.length>=4){this.makeEmpty();for(let t=0,i=e.length;t<i;t++)this.vertices.push(new f2(e[t]));this._compute()}return this}setFromObject(e){const t=[];return e.updateMatrixWorld(!0),e.traverse(function(i){const n=i.geometry;if(n!==void 0){const r=n.attributes.position;if(r!==void 0)for(let o=0,a=r.count;o<a;o++){const l=new P;l.fromBufferAttribute(r,o).applyMatrix4(i.matrixWorld),t.push(l)}}}),this.setFromPoints(t)}containsPoint(e){const t=this.faces;for(let i=0,n=t.length;i<n;i++)if(t[i].distanceToPoint(e)>this.tolerance)return!1;return!0}intersectRay(e,t){const i=this.faces;let n=-1/0,r=1/0;for(let o=0,a=i.length;o<a;o++){const l=i[o],c=l.distanceToPoint(e.origin),h=l.normal.dot(e.direction);if(c>0&&h>=0)return null;const d=h!==0?-c/h:0;if(!(d<=0)&&(h>0?r=Math.min(d,r):n=Math.max(d,n),n>r))return null}return n!==-1/0?e.at(n,t):e.at(r,t),t}intersectsRay(e){return this.intersectRay(e,u2)!==null}makeEmpty(){return this.faces=[],this.vertices=[],this}_addVertexToFace(e,t){return e.face=t,t.outside===null?this.assigned.append(e):this.assigned.insertBefore(t.outside,e),t.outside=e,this}_removeVertexFromFace(e,t){return e===t.outside&&(e.next!==null&&e.next.face===t?t.outside=e.next:t.outside=null),this.assigned.remove(e),this}_removeAllVerticesFromFace(e){if(e.outside!==null){const t=e.outside;let i=e.outside;for(;i.next!==null&&i.next.face===e;)i=i.next;return this.assigned.removeSubList(t,i),t.prev=i.next=null,e.outside=null,t}}_deleteFaceVertices(e,t){const i=this._removeAllVerticesFromFace(e);if(i!==void 0)if(t===void 0)this.unassigned.appendChain(i);else{let n=i;do{const r=n.next;t.distanceToPoint(n.point)>this.tolerance?this._addVertexToFace(n,t):this.unassigned.append(n),n=r}while(n!==null)}return this}_resolveUnassignedPoints(e){if(this.unassigned.isEmpty()===!1){let t=this.unassigned.first();do{const i=t.next;let n=this.tolerance,r=null;for(let o=0;o<e.length;o++){const a=e[o];if(a.mark===Yh){const l=a.distanceToPoint(t.point);if(l>n&&(n=l,r=a),n>1e3*this.tolerance)break}}r!==null&&this._addVertexToFace(t,r),t=i}while(t!==null)}return this}_computeExtremes(){const e=new P,t=new P,i=[],n=[];for(let r=0;r<3;r++)i[r]=n[r]=this.vertices[0];e.copy(this.vertices[0].point),t.copy(this.vertices[0].point);for(let r=0,o=this.vertices.length;r<o;r++){const a=this.vertices[r],l=a.point;for(let c=0;c<3;c++)l.getComponent(c)<e.getComponent(c)&&(e.setComponent(c,l.getComponent(c)),i[c]=a);for(let c=0;c<3;c++)l.getComponent(c)>t.getComponent(c)&&(t.setComponent(c,l.getComponent(c)),n[c]=a)}return this.tolerance=3*Number.EPSILON*(Math.max(Math.abs(e.x),Math.abs(t.x))+Math.max(Math.abs(e.y),Math.abs(t.y))+Math.max(Math.abs(e.z),Math.abs(t.z))),{min:i,max:n}}_computeInitialHull(){const e=this.vertices,t=this._computeExtremes(),i=t.min,n=t.max;let r=0,o=0;for(let u=0;u<3;u++){const f=n[u].point.getComponent(u)-i[u].point.getComponent(u);f>r&&(r=f,o=u)}const a=i[o],l=n[o];let c,h;r=0,NE.set(a.point,l.point);for(let u=0,f=this.vertices.length;u<f;u++){const m=e[u];if(m!==a&&m!==l){NE.closestPointToPoint(m.point,!0,UE);const g=UE.distanceToSquared(m.point);g>r&&(r=g,c=m)}}r=-1,tf.setFromCoplanarPoints(a.point,l.point,c.point);for(let u=0,f=this.vertices.length;u<f;u++){const m=e[u];if(m!==a&&m!==l&&m!==c){const g=Math.abs(tf.distanceToPoint(m.point));g>r&&(r=g,h=m)}}const d=[];if(tf.distanceToPoint(h.point)<0){d.push(Tn.create(a,l,c),Tn.create(h,l,a),Tn.create(h,c,l),Tn.create(h,a,c));for(let u=0;u<3;u++){const f=(u+1)%3;d[u+1].getEdge(2).setTwin(d[0].getEdge(f)),d[u+1].getEdge(1).setTwin(d[f+1].getEdge(0))}}else{d.push(Tn.create(a,c,l),Tn.create(h,a,l),Tn.create(h,l,c),Tn.create(h,c,a));for(let u=0;u<3;u++){const f=(u+1)%3;d[u+1].getEdge(2).setTwin(d[0].getEdge((3-u)%3)),d[u+1].getEdge(0).setTwin(d[f+1].getEdge(1))}}for(let u=0;u<4;u++)this.faces.push(d[u]);for(let u=0,f=e.length;u<f;u++){const m=e[u];if(m!==a&&m!==l&&m!==c&&m!==h){r=this.tolerance;let g=null;for(let E=0;E<4;E++){const p=this.faces[E].distanceToPoint(m.point);p>r&&(r=p,g=this.faces[E])}g!==null&&this._addVertexToFace(m,g)}}return this}_reindexFaces(){const e=[];for(let t=0;t<this.faces.length;t++){const i=this.faces[t];i.mark===Yh&&e.push(i)}return this.faces=e,this}_nextVertexToAdd(){if(this.assigned.isEmpty()===!1){let e,t=0;const i=this.assigned.first().face;let n=i.outside;do{const r=i.distanceToPoint(n.point);r>t&&(t=r,e=n),n=n.next}while(n!==null&&n.face===i);return e}}_computeHorizon(e,t,i,n){this._deleteFaceVertices(i),i.mark=h2;let r;t===null?r=t=i.getEdge(0):r=t.next;do{const o=r.twin,a=o.face;a.mark===Yh&&(a.distanceToPoint(e)>this.tolerance?this._computeHorizon(e,o,a,n):n.push(r)),r=r.next}while(r!==t);return this}_addAdjoiningFace(e,t){const i=Tn.create(e,t.tail(),t.head());return this.faces.push(i),i.getEdge(-1).setTwin(t.twin),i.getEdge(0)}_addNewFaces(e,t){this.newFaces=[];let i=null,n=null;for(let r=0;r<t.length;r++){const o=t[r],a=this._addAdjoiningFace(e,o);i===null?i=a:a.next.setTwin(n),this.newFaces.push(a.face),n=a}return i.next.setTwin(n),this}_addVertexToHull(e){const t=[];return this.unassigned.clear(),this._removeVertexFromFace(e,e.face),this._computeHorizon(e.point,null,e.face,t),this._addNewFaces(e,t),this._resolveUnassignedPoints(this.newFaces),this}_cleanup(){return this.assigned.clear(),this.unassigned.clear(),this.newFaces=[],this}_compute(){let e;for(this._computeInitialHull();(e=this._nextVertexToAdd())!==void 0;)this._addVertexToHull(e);return this._reindexFaces(),this._cleanup(),this}}class Tn{constructor(){this.normal=new P,this.midpoint=new P,this.area=0,this.constant=0,this.outside=null,this.mark=Yh,this.edge=null}static create(e,t,i){const n=new Tn,r=new nf(e,n),o=new nf(t,n),a=new nf(i,n);return r.next=a.prev=o,o.next=r.prev=a,a.next=o.prev=r,n.edge=r,n.compute()}getEdge(e){let t=this.edge;for(;e>0;)t=t.next,e--;for(;e<0;)t=t.prev,e++;return t}compute(){const e=this.edge.tail(),t=this.edge.head(),i=this.edge.next.head();return dh.set(e.point,t.point,i.point),dh.getNormal(this.normal),dh.getMidpoint(this.midpoint),this.area=dh.getArea(),this.constant=this.normal.dot(this.midpoint),this}distanceToPoint(e){return this.normal.dot(e)-this.constant}}class nf{constructor(e,t){this.vertex=e,this.prev=null,this.next=null,this.twin=null,this.face=t}head(){return this.vertex}tail(){return this.prev?this.prev.vertex:null}length(){const e=this.head(),t=this.tail();return t!==null?t.point.distanceTo(e.point):-1}lengthSquared(){const e=this.head(),t=this.tail();return t!==null?t.point.distanceToSquared(e.point):-1}setTwin(e){return this.twin=e,e.twin=this,this}}class f2{constructor(e){this.point=e,this.prev=null,this.next=null,this.face=null}}class BE{constructor(){this.head=null,this.tail=null}first(){return this.head}last(){return this.tail}clear(){return this.head=this.tail=null,this}insertBefore(e,t){return t.prev=e.prev,t.next=e,t.prev===null?this.head=t:t.prev.next=t,e.prev=t,this}insertAfter(e,t){return t.prev=e,t.next=e.next,t.next===null?this.tail=t:t.next.prev=t,e.next=t,this}append(e){return this.head===null?this.head=e:this.tail.next=e,e.prev=this.tail,e.next=null,this.tail=e,this}appendChain(e){for(this.head===null?this.head=e:this.tail.next=e,e.prev=this.tail;e.next!==null;)e=e.next;return this.tail=e,this}remove(e){return e.prev===null?this.head=e.next:e.prev.next=e.next,e.next===null?this.tail=e.prev:e.next.prev=e.prev,this}removeSubList(e,t){return e.prev===null?this.head=t.next:e.prev.next=t.next,t.next===null?this.tail=e.prev:t.next.prev=e.prev,this}isEmpty(){return this.head===null}}const Np=[2,2,1],Up=[1,0,0];function zn(s,e){return s*3+e}function p2(s){const e=s.elements;let t=0;for(let i=0;i<9;i++)t+=e[i]*e[i];return Math.sqrt(t)}function m2(s){const e=s.elements;let t=0;for(let i=0;i<3;i++){const n=e[zn(Np[i],Up[i])];t+=2*n*n}return Math.sqrt(t)}function g2(s,e){let t=0,i=1;const n=s.elements;for(let c=0;c<3;c++){const h=Math.abs(n[zn(Np[c],Up[c])]);h>t&&(t=h,i=c)}let r=1,o=0;const a=Up[i],l=Np[i];if(Math.abs(n[zn(l,a)])>Number.EPSILON){const c=n[zn(l,l)],h=n[zn(a,a)],d=n[zn(l,a)],u=(c-h)/2/d;let f;u<0?f=-1/(-u+Math.sqrt(1+u*u)):f=1/(u+Math.sqrt(1+u*u)),r=1/Math.sqrt(1+f*f),o=f*r}return e.identity(),e.elements[zn(a,a)]=r,e.elements[zn(l,l)]=r,e.elements[zn(l,a)]=o,e.elements[zn(a,l)]=-o,e}function E2(s,e){let t=0,i=0;const n=10;e.unitary.identity(),e.diagonal.copy(s);const r=e.unitary,o=e.diagonal,a=new Xe,l=new Xe,c=Number.EPSILON*p2(o);for(;i<n&&m2(o)>c;)g2(o,a),l.copy(a).transpose(),o.multiply(a),o.premultiply(l),r.multiply(a),++t>2&&(i++,t=0);return e}function I2(s){const e=[];for(let ce=0;ce<s.length-2;ce+=3){const ge=s[ce],Ee=s[ce+1],Se=s[ce+2];e.push(new P(ge,Ee,Se))}const t=new d2;t.setFromPoints(e);const i={unitary:new Xe,diagonal:new Xe},n=t.faces,r=[],o=[];for(let ce=0,ge=n.length;ce<ge;ce++){const Ee=n[ce];let Se=Ee.edge;r.length=0;do r.push(Se),Se=Se.next;while(Se!==Ee.edge);const ke=r.length-2;for(let Ue=1,x=ke;Ue<=x;Ue++){const ae=r[0].vertex,Q=r[Ue+0].vertex,G=r[Ue+1].vertex;o.push(ae.point.x,ae.point.y,ae.point.z),o.push(Q.point.x,Q.point.y,Q.point.z),o.push(G.point.x,G.point.y,G.point.z)}}const a=new P,l=new P,c=new P,h=new P,d=new P,u=new P,f=new P,m=new P;let g=0,E=0,p=0,v=0,I=0,_=0,b=0;for(let ce=0,ge=o.length;ce<ge;ce+=9){a.fromArray(o,ce),l.fromArray(o,ce+3),c.fromArray(o,ce+6),f.set(0,0,0),f.add(a).add(l).add(c).divideScalar(3),h.subVectors(l,a),d.subVectors(c,a);const Ee=u.crossVectors(h,d).length()/2;m.add(u.copy(f).multiplyScalar(Ee)),g+=Ee,E+=(9*f.x*f.x+a.x*a.x+l.x*l.x+c.x*c.x)*(Ee/12),p+=(9*f.x*f.y+a.x*a.y+l.x*l.y+c.x*c.y)*(Ee/12),v+=(9*f.x*f.z+a.x*a.z+l.x*l.z+c.x*c.z)*(Ee/12),I+=(9*f.y*f.y+a.y*a.y+l.y*l.y+c.y*c.y)*(Ee/12),_+=(9*f.y*f.z+a.y*a.z+l.y*l.z+c.y*c.z)*(Ee/12),b+=(9*f.z*f.z+a.z*a.z+l.z*l.z+c.z*c.z)*(Ee/12)}m.divideScalar(g),E/=g,p/=g,v/=g,I/=g,_/=g,b/=g,E-=m.x*m.x,p-=m.x*m.y,v-=m.x*m.z,I-=m.y*m.y,_-=m.y*m.z,b-=m.z*m.z;const T=new Xe;T.elements[0]=E,T.elements[1]=p,T.elements[2]=v,T.elements[3]=p,T.elements[4]=I,T.elements[5]=_,T.elements[6]=v,T.elements[7]=_,T.elements[8]=b,E2(T,i);const w=i.unitary,A=new P,y=new P,C=new P;w.extractBasis(A,y,C);let M=-1/0,R=-1/0,L=-1/0,S=1/0,U=1/0,z=1/0;for(let ce=0,ge=e.length;ce<ge;ce++){const Ee=e[ce];M=Math.max(A.dot(Ee),M),R=Math.max(y.dot(Ee),R),L=Math.max(C.dot(Ee),L),S=Math.min(A.dot(Ee),S),U=Math.min(y.dot(Ee),U),z=Math.min(C.dot(Ee),z)}A.multiplyScalar(.5*(S+M)),y.multiplyScalar(.5*(U+R)),C.multiplyScalar(.5*(z+L));const k=new P,H=new P,Y=new Xe;k.add(A).add(y).add(C),H.x=M-S,H.y=R-U,H.z=L-z,H.multiplyScalar(.5),Y.copy(w);const{x:re,y:j,z:X}=H,ue=new _e;ue.makeScale(re*2,j*2,X*2);const Z=new _e;Z.makeTranslation(-re,-j,-X);const K=new _e;K.makeTranslation(k.x,k.y,k.z);const Ie=new _e;Ie.setFromMatrix3(Y);const me=new _e;return me.multiply(K),me.multiply(Ie),me.multiply(Z),me.multiply(ue),{center:k,halfSizes:H,rotation:Y,transformation:me}}class zE{static isTransparent(e){return e.transparent&&e.opacity<1}}const Zm=class ni{static create(){const e=Math.random()*4294967295|0,t=Math.random()*4294967295|0,i=Math.random()*4294967295|0,n=Math.random()*4294967295|0;return`${ni._lut[e&255]+ni._lut[e>>8&255]+ni._lut[e>>16&255]+ni._lut[e>>24&255]}-${ni._lut[t&255]}${ni._lut[t>>8&255]}-${ni._lut[t>>16&15|64]}${ni._lut[t>>24&255]}-${ni._lut[i&63|128]}${ni._lut[i>>8&255]}-${ni._lut[i>>16&255]}${ni._lut[i>>24&255]}${ni._lut[n&255]}${ni._lut[n>>8&255]}${ni._lut[n>>16&255]}${ni._lut[n>>24&255]}`.toLowerCase()}static validate(e){if(!ni._pattern.test(e))throw new Error(`${e} is not a valid UUID v4.

- If you're the tool creator, you can take one from https://www.uuidgenerator.net/.

- If you're using a platform tool, verify the uuid isn't misspelled or contact the tool creator.`)}};F(Zm,"_pattern",/^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-4[0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}$/);F(Zm,"_lut",["00","01","02","03","04","05","06","07","08","09","0a","0b","0c","0d","0e","0f","10","11","12","13","14","15","16","17","18","19","1a","1b","1c","1d","1e","1f","20","21","22","23","24","25","26","27","28","29","2a","2b","2c","2d","2e","2f","30","31","32","33","34","35","36","37","38","39","3a","3b","3c","3d","3e","3f","40","41","42","43","44","45","46","47","48","49","4a","4b","4c","4d","4e","4f","50","51","52","53","54","55","56","57","58","59","5a","5b","5c","5d","5e","5f","60","61","62","63","64","65","66","67","68","69","6a","6b","6c","6d","6e","6f","70","71","72","73","74","75","76","77","78","79","7a","7b","7c","7d","7e","7f","80","81","82","83","84","85","86","87","88","89","8a","8b","8c","8d","8e","8f","90","91","92","93","94","95","96","97","98","99","9a","9b","9c","9d","9e","9f","a0","a1","a2","a3","a4","a5","a6","a7","a8","a9","aa","ab","ac","ad","ae","af","b0","b1","b2","b3","b4","b5","b6","b7","b8","b9","ba","bb","bc","bd","be","bf","c0","c1","c2","c3","c4","c5","c6","c7","c8","c9","ca","cb","cc","cd","ce","cf","d0","d1","d2","d3","d4","d5","d6","d7","d8","d9","da","db","dc","dd","de","df","e0","e1","e2","e3","e4","e5","e6","e7","e8","e9","ea","eb","ec","ed","ee","ef","f0","f1","f2","f3","f4","f5","f6","f7","f8","f9","fa","fb","fc","fd","fe","ff"]);let ws=Zm;class _2 extends Ke{constructor(e,t){super(e),F(this,"onDisposed",new oe),F(this,"onVertexFound",new oe),F(this,"onVertexLost",new oe),F(this,"onEnabled",new oe),F(this,"components"),F(this,"workingPlane",null),F(this,"_pickedPoint",null),F(this,"_config"),F(this,"_enabled",!1),this.components=e,this.config={snapDistance:.25,showOnlyVertex:!1,...t},this.enabled=!1}set enabled(e){this._enabled=e,e||(this._pickedPoint=null),this.onEnabled.trigger(e)}get enabled(){return this._enabled}set config(e){this._config={...this._config,...e}}get config(){return this._config}dispose(){this.onVertexFound.reset(),this.onVertexLost.reset(),this.components=null,this.onDisposed.trigger(),this.onDisposed.reset()}get(e){if(!this.enabled)return this._pickedPoint;const t=this.components.get(fn).get(e).castRay();if(!t)return this._pickedPoint!==null&&(this.onVertexLost.trigger(),this._pickedPoint=null),this._pickedPoint;const i=this.getClosestVertex(t);return i?!this.workingPlane||Math.abs(this.workingPlane.distanceToPoint(i))<.001?((this._pickedPoint===null||!this._pickedPoint.equals(i))&&(this._pickedPoint=i.clone(),this.onVertexFound.trigger(this._pickedPoint)),this._pickedPoint):(this._pickedPoint=null,this._pickedPoint):(this._pickedPoint!==null&&(this.onVertexLost.trigger(),this._pickedPoint=null),this._pickedPoint)}getClosestVertex(e){let t=new P,i=!1,n=Number.MAX_SAFE_INTEGER;const r=this.getVertices(e);if(r===null)return null;for(const o of r){if(!o)continue;const a=e.point.distanceTo(o);a>n||a>this._config.snapDistance||(i=!0,t=o,n=e.point.distanceTo(o))}return i?t:this.config.showOnlyVertex?null:e.point}getVertices(e){const t=e.object;if(!e.face||!t)return null;const i=t.geometry,n=new _e,{instanceId:r}=e,o=r!==void 0,a=t instanceof ji;return a&&o&&t.getMatrixAt(r,n),[this.getVertex(e.face.a,i),this.getVertex(e.face.b,i),this.getVertex(e.face.c,i)].map(l=>(l&&(a&&o&&l.applyMatrix4(n),l.applyMatrix4(t.matrixWorld)),l))}getVertex(e,t){if(e===void 0)return null;const i=t.attributes.position;return new P(i.getX(e),i.getY(e),i.getZ(e))}}var fh=typeof globalThis<"u"?globalThis:typeof window<"u"?window:typeof global<"u"?global:typeof self<"u"?self:{};function X_(s){return s&&s.__esModule&&Object.prototype.hasOwnProperty.call(s,"default")?s.default:s}var jm={exports:{}};jm.exports=Au;jm.exports.default=Au;function Au(s,e,t){t=t||2;var i=e&&e.length,n=i?e[0]*t:s.length,r=Z_(s,0,n,t,!0),o=[];if(!r||r.next===r.prev)return o;var a,l,c,h,d,u,f;if(i&&(r=C2(s,e,r,t)),s.length>80*t){a=c=s[0],l=h=s[1];for(var m=t;m<n;m+=t)d=s[m],u=s[m+1],d<a&&(a=d),u<l&&(l=u),d>c&&(c=d),u>h&&(h=u);f=Math.max(c-a,h-l),f=f!==0?32767/f:0}return Fl(r,o,t,a,l,f,0),o}function Z_(s,e,t,i,n){var r,o;if(n===Vp(s,e,t,i)>0)for(r=e;r<t;r+=i)o=VE(r,s[r],s[r+1],o);else for(r=t-i;r>=e;r-=i)o=VE(r,s[r],s[r+1],o);return o&&Ru(o,o.next)&&(Ol(o),o=o.next),o}function zr(s,e){if(!s)return s;e||(e=s);var t=s,i;do if(i=!1,!t.steiner&&(Ru(t,t.next)||zt(t.prev,t,t.next)===0)){if(Ol(t),t=e=t.prev,t===t.next)break;i=!0}else t=t.next;while(i||t!==e);return e}function Fl(s,e,t,i,n,r,o){if(s){!o&&r&&R2(s,i,n,r);for(var a=s,l,c;s.prev!==s.next;){if(l=s.prev,c=s.next,r?b2(s,i,n,r):v2(s)){e.push(l.i/t|0),e.push(s.i/t|0),e.push(c.i/t|0),Ol(s),s=c.next,a=c.next;continue}if(s=c,s===a){o?o===1?(s=y2(zr(s),e,t),Fl(s,e,t,i,n,r,2)):o===2&&T2(s,e,t,i,n,r):Fl(zr(s),e,t,i,n,r,1);break}}}}function v2(s){var e=s.prev,t=s,i=s.next;if(zt(e,t,i)>=0)return!1;for(var n=e.x,r=t.x,o=i.x,a=e.y,l=t.y,c=i.y,h=n<r?n<o?n:o:r<o?r:o,d=a<l?a<c?a:c:l<c?l:c,u=n>r?n>o?n:o:r>o?r:o,f=a>l?a>c?a:c:l>c?l:c,m=i.next;m!==e;){if(m.x>=h&&m.x<=u&&m.y>=d&&m.y<=f&&Yo(n,a,r,l,o,c,m.x,m.y)&&zt(m.prev,m,m.next)>=0)return!1;m=m.next}return!0}function b2(s,e,t,i){var n=s.prev,r=s,o=s.next;if(zt(n,r,o)>=0)return!1;for(var a=n.x,l=r.x,c=o.x,h=n.y,d=r.y,u=o.y,f=a<l?a<c?a:c:l<c?l:c,m=h<d?h<u?h:u:d<u?d:u,g=a>l?a>c?a:c:l>c?l:c,E=h>d?h>u?h:u:d>u?d:u,p=Bp(f,m,e,t,i),v=Bp(g,E,e,t,i),I=s.prevZ,_=s.nextZ;I&&I.z>=p&&_&&_.z<=v;){if(I.x>=f&&I.x<=g&&I.y>=m&&I.y<=E&&I!==n&&I!==o&&Yo(a,h,l,d,c,u,I.x,I.y)&&zt(I.prev,I,I.next)>=0||(I=I.prevZ,_.x>=f&&_.x<=g&&_.y>=m&&_.y<=E&&_!==n&&_!==o&&Yo(a,h,l,d,c,u,_.x,_.y)&&zt(_.prev,_,_.next)>=0))return!1;_=_.nextZ}for(;I&&I.z>=p;){if(I.x>=f&&I.x<=g&&I.y>=m&&I.y<=E&&I!==n&&I!==o&&Yo(a,h,l,d,c,u,I.x,I.y)&&zt(I.prev,I,I.next)>=0)return!1;I=I.prevZ}for(;_&&_.z<=v;){if(_.x>=f&&_.x<=g&&_.y>=m&&_.y<=E&&_!==n&&_!==o&&Yo(a,h,l,d,c,u,_.x,_.y)&&zt(_.prev,_,_.next)>=0)return!1;_=_.nextZ}return!0}function y2(s,e,t){var i=s;do{var n=i.prev,r=i.next.next;!Ru(n,r)&&j_(n,i,i.next,r)&&Pl(n,r)&&Pl(r,n)&&(e.push(n.i/t|0),e.push(i.i/t|0),e.push(r.i/t|0),Ol(i),Ol(i.next),i=s=r),i=i.next}while(i!==s);return zr(i)}function T2(s,e,t,i,n,r){var o=s;do{for(var a=o.next.next;a!==o.prev;){if(o.i!==a.i&&P2(o,a)){var l=q_(o,a);o=zr(o,o.next),l=zr(l,l.next),Fl(o,e,t,i,n,r,0),Fl(l,e,t,i,n,r,0);return}a=a.next}o=o.next}while(o!==s)}function C2(s,e,t,i){var n=[],r,o,a,l,c;for(r=0,o=e.length;r<o;r++)a=e[r]*i,l=r<o-1?e[r+1]*i:s.length,c=Z_(s,a,l,i,!1),c===c.next&&(c.steiner=!0),n.push(F2(c));for(n.sort(x2),r=0;r<n.length;r++)t=w2(n[r],t);return t}function x2(s,e){return s.x-e.x}function w2(s,e){var t=S2(s,e);if(!t)return e;var i=q_(t,s);return zr(i,i.next),zr(t,t.next)}function S2(s,e){var t=e,i=s.x,n=s.y,r=-1/0,o;do{if(n<=t.y&&n>=t.next.y&&t.next.y!==t.y){var a=t.x+(n-t.y)*(t.next.x-t.x)/(t.next.y-t.y);if(a<=i&&a>r&&(r=a,o=t.x<t.next.x?t:t.next,a===i))return o}t=t.next}while(t!==e);if(!o)return null;var l=o,c=o.x,h=o.y,d=1/0,u;t=o;do i>=t.x&&t.x>=c&&i!==t.x&&Yo(n<h?i:r,n,c,h,n<h?r:i,n,t.x,t.y)&&(u=Math.abs(n-t.y)/(i-t.x),Pl(t,s)&&(u<d||u===d&&(t.x>o.x||t.x===o.x&&A2(o,t)))&&(o=t,d=u)),t=t.next;while(t!==l);return o}function A2(s,e){return zt(s.prev,s,e.prev)<0&&zt(e.next,s,s.next)<0}function R2(s,e,t,i){var n=s;do n.z===0&&(n.z=Bp(n.x,n.y,e,t,i)),n.prevZ=n.prev,n.nextZ=n.next,n=n.next;while(n!==s);n.prevZ.nextZ=null,n.prevZ=null,M2(n)}function M2(s){var e,t,i,n,r,o,a,l,c=1;do{for(t=s,s=null,r=null,o=0;t;){for(o++,i=t,a=0,e=0;e<c&&(a++,i=i.nextZ,!!i);e++);for(l=c;a>0||l>0&&i;)a!==0&&(l===0||!i||t.z<=i.z)?(n=t,t=t.nextZ,a--):(n=i,i=i.nextZ,l--),r?r.nextZ=n:s=n,n.prevZ=r,r=n;t=i}r.nextZ=null,c*=2}while(o>1);return s}function Bp(s,e,t,i,n){return s=(s-t)*n|0,e=(e-i)*n|0,s=(s|s<<8)&16711935,s=(s|s<<4)&252645135,s=(s|s<<2)&858993459,s=(s|s<<1)&1431655765,e=(e|e<<8)&16711935,e=(e|e<<4)&252645135,e=(e|e<<2)&858993459,e=(e|e<<1)&1431655765,s|e<<1}function F2(s){var e=s,t=s;do(e.x<t.x||e.x===t.x&&e.y<t.y)&&(t=e),e=e.next;while(e!==s);return t}function Yo(s,e,t,i,n,r,o,a){return(n-o)*(e-a)>=(s-o)*(r-a)&&(s-o)*(i-a)>=(t-o)*(e-a)&&(t-o)*(r-a)>=(n-o)*(i-a)}function P2(s,e){return s.next.i!==e.i&&s.prev.i!==e.i&&!O2(s,e)&&(Pl(s,e)&&Pl(e,s)&&L2(s,e)&&(zt(s.prev,s,e.prev)||zt(s,e.prev,e))||Ru(s,e)&&zt(s.prev,s,s.next)>0&&zt(e.prev,e,e.next)>0)}function zt(s,e,t){return(e.y-s.y)*(t.x-e.x)-(e.x-s.x)*(t.y-e.y)}function Ru(s,e){return s.x===e.x&&s.y===e.y}function j_(s,e,t,i){var n=mh(zt(s,e,t)),r=mh(zt(s,e,i)),o=mh(zt(t,i,s)),a=mh(zt(t,i,e));return!!(n!==r&&o!==a||n===0&&ph(s,t,e)||r===0&&ph(s,i,e)||o===0&&ph(t,s,i)||a===0&&ph(t,e,i))}function ph(s,e,t){return e.x<=Math.max(s.x,t.x)&&e.x>=Math.min(s.x,t.x)&&e.y<=Math.max(s.y,t.y)&&e.y>=Math.min(s.y,t.y)}function mh(s){return s>0?1:s<0?-1:0}function O2(s,e){var t=s;do{if(t.i!==s.i&&t.next.i!==s.i&&t.i!==e.i&&t.next.i!==e.i&&j_(t,t.next,s,e))return!0;t=t.next}while(t!==s);return!1}function Pl(s,e){return zt(s.prev,s,s.next)<0?zt(s,e,s.next)>=0&&zt(s,s.prev,e)>=0:zt(s,e,s.prev)<0||zt(s,s.next,e)<0}function L2(s,e){var t=s,i=!1,n=(s.x+e.x)/2,r=(s.y+e.y)/2;do t.y>r!=t.next.y>r&&t.next.y!==t.y&&n<(t.next.x-t.x)*(r-t.y)/(t.next.y-t.y)+t.x&&(i=!i),t=t.next;while(t!==s);return i}function q_(s,e){var t=new zp(s.i,s.x,s.y),i=new zp(e.i,e.x,e.y),n=s.next,r=e.prev;return s.next=e,e.prev=s,t.next=n,n.prev=t,i.next=t,t.prev=i,r.next=i,i.prev=r,i}function VE(s,e,t,i){var n=new zp(s,e,t);return i?(n.next=i.next,n.prev=i,i.next.prev=n,i.next=n):(n.prev=n,n.next=n),n}function Ol(s){s.next.prev=s.prev,s.prev.next=s.next,s.prevZ&&(s.prevZ.nextZ=s.nextZ),s.nextZ&&(s.nextZ.prevZ=s.prevZ)}function zp(s,e,t){this.i=s,this.x=e,this.y=t,this.prev=null,this.next=null,this.z=0,this.prevZ=null,this.nextZ=null,this.steiner=!1}Au.deviation=function(s,e,t,i){var n=e&&e.length,r=n?e[0]*t:s.length,o=Math.abs(Vp(s,0,r,t));if(n)for(var a=0,l=e.length;a<l;a++){var c=e[a]*t,h=a<l-1?e[a+1]*t:s.length;o-=Math.abs(Vp(s,c,h,t))}var d=0;for(a=0;a<i.length;a+=3){var u=i[a]*t,f=i[a+1]*t,m=i[a+2]*t;d+=Math.abs((s[u]-s[m])*(s[f+1]-s[u+1])-(s[u]-s[f])*(s[m+1]-s[u+1]))}return o===0&&d===0?0:Math.abs((d-o)/o)};function Vp(s,e,t,i){for(var n=0,r=e,o=t-i;r<t;r+=i)n+=(s[o]-s[r])*(s[r+1]+s[o+1]),o=r;return n}Au.flatten=function(s){for(var e=s[0][0].length,t={vertices:[],holes:[],dimensions:e},i=0,n=0;n<s.length;n++){for(var r=0;r<s[n].length;r++)for(var o=0;o<e;o++)t.vertices.push(s[n][r][o]);n>0&&(i+=s[n-1].length,t.holes.push(i))}return t};var D2=jm.exports;const N2=X_(D2);class U2 extends Ke{constructor(){super(...arguments),F(this,"enabled",!0),F(this,"_inverseMatrix",new _e),F(this,"_localPlane",new ri),F(this,"_tempLine",new xt),F(this,"_tempVector",new P),F(this,"_plane"),F(this,"_plane2DCoordinateSystem",new _e),F(this,"_precission",1e4),F(this,"_planeAxis")}get plane(){if(!this._plane)throw new Error("Plane not set");return this._plane}set plane(e){this._plane=e}createEdges(e){const{meshes:t,posAttr:i}=e;let n=0;i.array.fill(0);const r=[];let o=0;const a=new Te;for(const l of t)if(l.geometry){if(l.geometry.boundsTree||l.geometry.computeBoundsTree(),!l.geometry.boundsTree)throw new Error("Bounds tree not found for edges generation.");if(l instanceof ji){if(l.count===0)continue;const c=l;for(let h=0;h<c.count;h++){a.geometry=l.geometry,a.matrix.copy(l.matrix);const d=new _e;c.getMatrixAt(h,d),a.applyMatrix4(d),a.applyMatrix4(l.matrixWorld),a.updateMatrix(),a.updateMatrixWorld(),this._inverseMatrix.copy(a.matrixWorld).invert(),this._localPlane.copy(this.plane).applyMatrix4(this._inverseMatrix),n=this.shapecast(a,i,n),n!==o&&(r.push(n),o=n)}}else this._inverseMatrix.copy(l.matrixWorld).invert(),this._localPlane.copy(this.plane).applyMatrix4(this._inverseMatrix),n=this.shapecast(l,i,n),n!==o&&(r.push(n),o=n)}return{indexes:r,index:n}}createFills(e,t){this.updatePlane2DCoordinateSystem();const i=[];let n=0;for(let r=0;r<t.length;r++){const o=t[r],a=[];for(let c=n;c<o;c+=2)a.push(c*3);const l=this.computeFill(a,e);for(const c of l)i.push(c);n=o}return i}computeFill(e,t){const i=new Map,n={},r=new Map;let o=0;const a=new Map,l=new Map,c=new Set,h=this._precission;for(let u=0;u<e.length;u++){const f=e[u];let m=0,g=0,E=0,p=0;const v=t[f],I=t[f+1],_=t[f+2],b=t[f+3],T=t[f+4],w=t[f+5];if(this._tempVector.set(v,I,_),this._tempVector.applyMatrix4(this._plane2DCoordinateSystem),m=Math.trunc(this._tempVector.x*h)/h,g=Math.trunc(this._tempVector.y*h)/h,this._tempVector.set(b,T,w),this._tempVector.applyMatrix4(this._plane2DCoordinateSystem),E=Math.trunc(this._tempVector.x*h)/h,p=Math.trunc(this._tempVector.y*h)/h,m===E&&g===p)continue;const A=`${m}|${g}`,y=`${E}|${p}`;i.has(A)||i.set(A,f/3),i.has(y)||i.set(y,f/3+1);const C=i.get(A),M=i.get(y);n[C]=[m,g],n[M]=[E,p];const R=l.has(C),L=a.has(C),S=l.has(M),U=a.has(M);if(!R&&!L&&!S&&!U)l.set(C,o),a.set(M,o),c.add(o),r.set(o,[C,M]),o++;else if(R&&U){const z=l.get(C),k=a.get(M);if(z!==k){const H=r.get(k),Y=r.get(z);if(!H||!Y)continue;r.delete(z),c.delete(z),a.set(Y[Y.length-1],k),a.delete(H[H.length-1]);for(const re of Y)H.push(re)}else c.delete(k);l.delete(C),a.delete(M)}else if(L&&S){const z=l.get(M),k=a.get(C);if(z!==k){const H=r.get(k),Y=r.get(z);if(!H||!Y)continue;r.delete(z),c.delete(z),a.set(Y[Y.length-1],k),a.delete(H[H.length-1]);for(const re of Y)H.push(re)}else c.delete(k);l.delete(M),a.delete(C)}else if(R&&S){const z=l.get(M),k=l.get(C),H=r.get(k),Y=r.get(z);if(!H||!Y)continue;r.delete(z),c.delete(z),l.delete(H[0]),l.delete(Y[0]),a.delete(Y[Y.length-1]),l.set(Y[Y.length-1],k),Y.reverse(),H.splice(0,0,...Y)}else if(L&&U){const z=a.get(M),k=a.get(C),H=r.get(k),Y=r.get(z);if(!H||!Y)continue;r.delete(z),c.delete(z),a.delete(H[H.length-1]),a.delete(Y[Y.length-1]),l.delete(Y[0]),a.set(Y[0],k),Y.reverse(),H.push(...Y)}else if(R){const z=l.get(C),k=r.get(z);if(!k)continue;k.unshift(M),l.delete(C),l.set(M,z)}else if(L){const z=a.get(C),k=r.get(z);if(!k)continue;k.push(M),a.delete(C),a.set(M,z)}else if(S){const z=l.get(M),k=r.get(z);if(!k)continue;k.unshift(C),l.delete(M),l.set(C,z)}else if(U){const z=a.get(M),k=r.get(z);if(!k)continue;k.push(C),a.delete(M),a.set(C,z)}}const d=[];for(const[u,f]of r){if(c.has(u))continue;const m=[],g=new Map;let E=0;for(const v of f){const I=n[v];m.push(I[0],I[1]),g.set(E++,v)}const p=N2(m);for(const v of p){const I=g.get(v);if(I===void 0)throw new Error("Map error!");d.push(I)}}return d}updatePlane2DCoordinateSystem(){this._plane2DCoordinateSystem=new _e;const e=new P(1,0,0),t=new P(0,1,0),i=this.plane.normal,n=new P;this.plane.coplanarPoint(n),this._planeAxis==="x"?e.crossVectors(t,i):this._planeAxis==="y"?t.crossVectors(i,e):this._planeAxis==="z"||(e.crossVectors(t,i).normalize(),t.crossVectors(i,e)),this._plane2DCoordinateSystem.fromArray([e.x,e.y,e.z,0,t.x,t.y,t.z,0,i.x,i.y,i.z,0,n.x,n.y,n.z,1]),this._plane2DCoordinateSystem.invert()}shapecast(e,t,i){return e.geometry.boundsTree.shapecast({intersectsBounds:n=>this._localPlane.intersectsBox(n),intersectsTriangle:n=>{let r=0;if(this._tempLine.start.copy(n.a),this._tempLine.end.copy(n.b),this._localPlane.intersectLine(this._tempLine,this._tempVector)){const o=this._tempVector.applyMatrix4(e.matrixWorld);t.setXYZ(i,o.x,o.y,o.z),r++,i++}if(this._tempLine.start.copy(n.b),this._tempLine.end.copy(n.c),this._localPlane.intersectLine(this._tempLine,this._tempVector)){const o=this._tempVector.applyMatrix4(e.matrixWorld);t.setXYZ(i,o.x,o.y,o.z),r++,i++}if(this._tempLine.start.copy(n.c),this._tempLine.end.copy(n.a),this._localPlane.intersectLine(this._tempLine,this._tempVector)){const o=this._tempVector.applyMatrix4(e.matrixWorld);t.setXYZ(i,o.x,o.y,o.z),r++,i++}r!==2&&(i-=r)}}),i}}F(U2,"uuid","1a193b87-6376-46c8-9e65-62a1576fdb64");const K_=class Q_{constructor(){F(this,"onDisposed",new oe),F(this,"list",new Map),F(this,"enabled",!1),F(this,"_clock"),F(this,"onInit",new oe),F(this,"update",()=>{if(!this.enabled)return;const e=this._clock.getDelta();for(const[t,i]of this.list)i.enabled&&i.isUpdateable()&&i.update(e);requestAnimationFrame(this.update)}),this._clock=new e_,Q_.setupBVH()}add(e,t){if(this.list.has(e))throw new Error("You're trying to add a component that already exists in the components instance. Use Components.get() instead.");ws.validate(e),this.list.set(e,t)}get(e){const t=e.uuid;if(!this.list.has(t)){const i=new e(this);return this.list.has(t)||this.add(t,i),i}return this.list.get(t)}init(){this.enabled=!0,this._clock.start(),this.update(),this.onInit.trigger()}dispose(){this.enabled=!1;for(const[e,t]of this.list)t.enabled=!1,t.isDisposeable()&&t.dispose();this._clock.stop(),this.onDisposed.trigger(),this.onDisposed.reset()}static setupBVH(){We.prototype.computeBoundsTree=r2,We.prototype.disposeBoundsTree=o2,Te.prototype.raycast=s2}};F(K_,"release","2.4.11");let J_=K_;class B2 extends Xm{constructor(){super(...arguments),F(this,"meshes",new Set),F(this,"onAfterUpdate",new oe),F(this,"onBeforeUpdate",new oe),F(this,"onDisposed",new oe),F(this,"isDisposing",!1),F(this,"enabled",!0),F(this,"uuid",ws.create()),F(this,"name"),F(this,"_scene"),F(this,"_camera"),F(this,"_renderer",null)}get scene(){if(!this._scene)throw new Error("No scene initialized!");return this._scene}set scene(e){this._scene=e,e.worlds.set(this.uuid,this),e.currentWorld=this,e.onWorldChanged.trigger({world:this,action:"added"})}get camera(){if(!this._camera)throw new Error("No camera initialized!");return this._camera}set camera(e){this._camera=e,e.worlds.set(this.uuid,this),e.currentWorld=this,e.onWorldChanged.trigger({world:this,action:"added"})}get renderer(){return this._renderer}set renderer(e){this._renderer=e,e&&(e.worlds.set(this.uuid,this),e.currentWorld=this,e.onWorldChanged.trigger({world:this,action:"added"}))}update(e){this.enabled&&(!this._scene||!this._camera||(this.scene.currentWorld=this,this.camera.currentWorld=this,this.renderer&&(this.renderer.currentWorld=this),this.onBeforeUpdate.trigger(),this.scene.isUpdateable()&&this.scene.update(e),this.camera.isUpdateable()&&this.camera.update(e),this.renderer&&this.renderer.update(e),this.onAfterUpdate.trigger()))}dispose(e=!0){if(this.enabled=!1,this.isDisposing=!0,this.scene.onWorldChanged.trigger({world:this,action:"removed"}),this.camera.onWorldChanged.trigger({world:this,action:"removed"}),this.renderer&&this.renderer.onWorldChanged.trigger({world:this,action:"removed"}),e){const t=this.components.get(Xn);this.scene.dispose(),this.camera.isDisposeable()&&this.camera.dispose(),this.renderer&&this.renderer.dispose();for(const i of this.meshes)t.destroy(i);this.meshes.clear()}this._scene=null,this._camera=null,this._renderer=null,this.components.get(sv).list.delete(this.uuid),this.onDisposed.trigger(),this.onDisposed.reset()}}class Ea{constructor(e,t,i,n){F(this,"_component"),F(this,"name"),F(this,"uuid"),this._component=e,this.name=i,this.uuid=n??ws.create(),t.get(Mu).list.set(this.uuid,this)}get controls(){return ef.copySchema(this._config)}set(e){for(const t in e)if(t in this){const i=t;this[i]=e[t].value}}export(e=this._config,t={}){for(const i in e){const n=e[i];if(ef.isEntry(n))if(n.type==="Color"){const{r,g:o,b:a}=n.value;t[i]={...n,value:{r,g:o,b:a}}}else if(n.type==="Vector3"){const{x:r,y:o,z:a}=n.value;t[i]={...n,value:{x:r,y:o,z:a}}}else if(n.type==="TextSet"){const r=Array.from(n.value);t[i]={...n,value:r}}else if(n.type==="Select"){const r=Array.from(n.options);t[i]={...n,options:r}}else t[i]={...n};else t[i]={},this.export(n,t[i])}return t}import(e,t={},i=!0){for(const n in e){const r=e[n];if(ef.isEntry(r))if(r.type==="Color"){const{r:o,g:a,b:l}=r.value;t[n]={...r,value:new Ne(o,a,l)}}else if(r.type==="Vector3"){const{x:o,y:a,z:l}=r.value;t[n]={...r,value:new P(o,a,l)}}else r.type==="TextSet"?t[n]={...r,value:new Set(r.value)}:r.type==="Select"?t[n]={...r,options:new Set(r.options)}:t[n]={...r};else t[n]={},this.import(r,t[n],!1)}i&&this.set(t)}}const $_=class ev extends Ke{constructor(e){super(e),F(this,"list",new Mn),F(this,"enabled",!0),e.add(ev.uuid,this)}};F($_,"uuid","b8c764e0-6b24-4e77-9a32-35fa728ee5b4");let Mu=$_;class z2 extends l2{constructor(e,t,i){super(e),F(this,"enabled",!0),F(this,"container"),F(this,"three"),F(this,"_canvas"),F(this,"_parameters"),F(this,"_resizeObserver",null),F(this,"onContainerUpdated",new oe),F(this,"_resizing",!1),F(this,"resize",o=>{if(this._resizing)return;this._resizing=!0,this.onContainerUpdated.trigger();const a=o?o.x:this.container.clientWidth,l=o?o.y:this.container.clientHeight;this.three.setSize(a,l),this.onResize.trigger(new Oe(a,l)),this._resizing=!1}),F(this,"resizeEvent",()=>{this.resize()}),F(this,"onContextLost",o=>{o.preventDefault(),this.enabled=!1}),F(this,"onContextBack",()=>{this.three.setRenderTarget(null),this.three.dispose(),this.three=new tu({canvas:this._canvas,antialias:!0,alpha:!0,...this._parameters}),this.enabled=!0}),this.container=t,this._parameters=i,this.three=new tu({antialias:!0,alpha:!0,...i}),this.three.setPixelRatio(Math.min(window.devicePixelRatio,2)),this.setupRenderer(),this.setupEvents(!0),this.resize(),this._canvas=this.three.domElement;const n=this.three.getContext(),{canvas:r}=n;r.addEventListener("webglcontextlost",this.onContextLost,!1),r.addEventListener("webglcontextrestored",this.onContextBack,!1)}update(){if(!this.enabled||!this.currentWorld)return;this.onBeforeUpdate.trigger(this);const e=this.currentWorld.scene.three,t=this.currentWorld.camera.three;this.three.render(e,t),this.onAfterUpdate.trigger(this)}dispose(){this.enabled=!1,this.setupEvents(!1),this.three.domElement.remove(),this.three.forceContextLoss(),this.three.dispose(),this.onResize.reset(),this.onAfterUpdate.reset(),this.onBeforeUpdate.reset(),this.onDisposed.trigger(),this.onDisposed.reset()}getSize(){return new Oe(this.three.domElement.clientWidth,this.three.domElement.clientHeight)}setupEvents(e){const t=this.three.domElement.parentElement;if(!t)throw new Error("This renderer needs to have an HTML container!");this._resizeObserver&&(this._resizeObserver.disconnect(),this._resizeObserver=null),window.removeEventListener("resize",this.resizeEvent),e&&(this._resizeObserver=new ResizeObserver(this.resizeEvent),this._resizeObserver.observe(t),window.addEventListener("resize",this.resizeEvent))}setupRenderer(){this.three.localClippingEnabled=!0,this.container&&this.container.appendChild(this.three.domElement),this.onContainerUpdated.trigger()}}/*!
 * camera-controls
 * https://github.com/yomotsu/camera-controls
 * (c) 2017 @yomotsu
 * Released under the MIT License.
 */const Pt={LEFT:1,RIGHT:2,MIDDLE:4},pe=Object.freeze({NONE:0,ROTATE:1,TRUCK:2,OFFSET:4,DOLLY:8,ZOOM:16,TOUCH_ROTATE:32,TOUCH_TRUCK:64,TOUCH_OFFSET:128,TOUCH_DOLLY:256,TOUCH_ZOOM:512,TOUCH_DOLLY_TRUCK:1024,TOUCH_DOLLY_OFFSET:2048,TOUCH_DOLLY_ROTATE:4096,TOUCH_ZOOM_TRUCK:8192,TOUCH_ZOOM_OFFSET:16384,TOUCH_ZOOM_ROTATE:32768}),Mo={NONE:0,IN:1,OUT:-1};function hr(s){return s.isPerspectiveCamera}function Us(s){return s.isOrthographicCamera}const Fo=Math.PI*2,kE=Math.PI/2,tv=1e-5,za=Math.PI/180;function yn(s,e,t){return Math.max(e,Math.min(t,s))}function yt(s,e=tv){return Math.abs(s)<e}function gt(s,e,t=tv){return yt(s-e,t)}function GE(s,e){return Math.round(s/e)*e}function Va(s){return isFinite(s)?s:s<0?-Number.MAX_VALUE:Number.MAX_VALUE}function ka(s){return Math.abs(s)<Number.MAX_VALUE?s:s*(1/0)}function gh(s,e,t,i,n=1/0,r){i=Math.max(1e-4,i);const o=2/i,a=o*r,l=1/(1+a+.48*a*a+.235*a*a*a);let c=s-e;const h=e,d=n*i;c=yn(c,-d,d),e=s-c;const u=(t.value+o*c)*r;t.value=(t.value-o*u)*l;let f=e+(c+u)*l;return h-s>0==f>h&&(f=h,t.value=(f-h)/r),f}function HE(s,e,t,i,n=1/0,r,o){i=Math.max(1e-4,i);const a=2/i,l=a*r,c=1/(1+l+.48*l*l+.235*l*l*l);let h=e.x,d=e.y,u=e.z,f=s.x-h,m=s.y-d,g=s.z-u;const E=h,p=d,v=u,I=n*i,_=I*I,b=f*f+m*m+g*g;if(b>_){const U=Math.sqrt(b);f=f/U*I,m=m/U*I,g=g/U*I}h=s.x-f,d=s.y-m,u=s.z-g;const T=(t.x+a*f)*r,w=(t.y+a*m)*r,A=(t.z+a*g)*r;t.x=(t.x-a*T)*c,t.y=(t.y-a*w)*c,t.z=(t.z-a*A)*c,o.x=h+(f+T)*c,o.y=d+(m+w)*c,o.z=u+(g+A)*c;const y=E-s.x,C=p-s.y,M=v-s.z,R=o.x-E,L=o.y-p,S=o.z-v;return y*R+C*L+M*S>0&&(o.x=E,o.y=p,o.z=v,t.x=(o.x-E)/r,t.y=(o.y-p)/r,t.z=(o.z-v)/r),o}function sf(s,e){e.set(0,0),s.forEach(t=>{e.x+=t.clientX,e.y+=t.clientY}),e.x/=s.length,e.y/=s.length}function rf(s,e){return Us(s)?(console.warn(`${e} is not supported in OrthographicCamera`),!0):!1}class V2{constructor(){this._listeners={}}addEventListener(e,t){const i=this._listeners;i[e]===void 0&&(i[e]=[]),i[e].indexOf(t)===-1&&i[e].push(t)}hasEventListener(e,t){const i=this._listeners;return i[e]!==void 0&&i[e].indexOf(t)!==-1}removeEventListener(e,t){const i=this._listeners[e];if(i!==void 0){const n=i.indexOf(t);n!==-1&&i.splice(n,1)}}removeAllEventListeners(e){if(!e){this._listeners={};return}Array.isArray(this._listeners[e])&&(this._listeners[e].length=0)}dispatchEvent(e){const t=this._listeners[e.type];if(t!==void 0){e.target=this;const i=t.slice(0);for(let n=0,r=i.length;n<r;n++)i[n].call(this,e)}}}var of;const k2="2.9.0",Eh=1/8,G2=/Mac/.test((of=globalThis==null?void 0:globalThis.navigator)===null||of===void 0?void 0:of.platform);let Ze,YE,Ih,af,Oi,it,ut,Po,Ga,On,Ln,ur,WE,XE,en,Ha,Oo,ZE,lf,jE,cf,hf,_h;class Kt extends V2{static install(e){Ze=e.THREE,YE=Object.freeze(new Ze.Vector3(0,0,0)),Ih=Object.freeze(new Ze.Vector3(0,1,0)),af=Object.freeze(new Ze.Vector3(0,0,1)),Oi=new Ze.Vector2,it=new Ze.Vector3,ut=new Ze.Vector3,Po=new Ze.Vector3,Ga=new Ze.Vector3,On=new Ze.Vector3,Ln=new Ze.Vector3,ur=new Ze.Vector3,WE=new Ze.Vector3,XE=new Ze.Vector3,en=new Ze.Spherical,Ha=new Ze.Spherical,Oo=new Ze.Box3,ZE=new Ze.Box3,lf=new Ze.Sphere,jE=new Ze.Quaternion,cf=new Ze.Quaternion,hf=new Ze.Matrix4,_h=new Ze.Raycaster}static get ACTION(){return pe}constructor(e,t){super(),this.minPolarAngle=0,this.maxPolarAngle=Math.PI,this.minAzimuthAngle=-1/0,this.maxAzimuthAngle=1/0,this.minDistance=Number.EPSILON,this.maxDistance=1/0,this.infinityDolly=!1,this.minZoom=.01,this.maxZoom=1/0,this.smoothTime=.25,this.draggingSmoothTime=.125,this.maxSpeed=1/0,this.azimuthRotateSpeed=1,this.polarRotateSpeed=1,this.dollySpeed=1,this.dollyDragInverted=!1,this.truckSpeed=2,this.dollyToCursor=!1,this.dragToOffset=!1,this.verticalDragToForward=!1,this.boundaryFriction=0,this.restThreshold=.01,this.colliderMeshes=[],this.cancel=()=>{},this._enabled=!0,this._state=pe.NONE,this._viewport=null,this._changedDolly=0,this._changedZoom=0,this._hasRested=!0,this._boundaryEnclosesCamera=!1,this._needsUpdate=!0,this._updatedLastTime=!1,this._elementRect=new DOMRect,this._isDragging=!1,this._dragNeedsUpdate=!0,this._activePointers=[],this._lockedPointer=null,this._interactiveArea=new DOMRect(0,0,1,1),this._isUserControllingRotate=!1,this._isUserControllingDolly=!1,this._isUserControllingTruck=!1,this._isUserControllingOffset=!1,this._isUserControllingZoom=!1,this._lastDollyDirection=Mo.NONE,this._thetaVelocity={value:0},this._phiVelocity={value:0},this._radiusVelocity={value:0},this._targetVelocity=new Ze.Vector3,this._focalOffsetVelocity=new Ze.Vector3,this._zoomVelocity={value:0},this._truckInternal=(p,v,I)=>{let _,b;if(hr(this._camera)){const T=it.copy(this._camera.position).sub(this._target),w=this._camera.getEffectiveFOV()*za,A=T.length()*Math.tan(w*.5);_=this.truckSpeed*p*A/this._elementRect.height,b=this.truckSpeed*v*A/this._elementRect.height}else if(Us(this._camera)){const T=this._camera;_=p*(T.right-T.left)/T.zoom/this._elementRect.width,b=v*(T.top-T.bottom)/T.zoom/this._elementRect.height}else return;this.verticalDragToForward?(I?this.setFocalOffset(this._focalOffsetEnd.x+_,this._focalOffsetEnd.y,this._focalOffsetEnd.z,!0):this.truck(_,0,!0),this.forward(-b,!0)):I?this.setFocalOffset(this._focalOffsetEnd.x+_,this._focalOffsetEnd.y+b,this._focalOffsetEnd.z,!0):this.truck(_,b,!0)},this._rotateInternal=(p,v)=>{const I=Fo*this.azimuthRotateSpeed*p/this._elementRect.height,_=Fo*this.polarRotateSpeed*v/this._elementRect.height;this.rotate(I,_,!0)},this._dollyInternal=(p,v,I)=>{const _=Math.pow(.95,-p*this.dollySpeed),b=this._sphericalEnd.radius,T=this._sphericalEnd.radius*_,w=yn(T,this.minDistance,this.maxDistance),A=w-T;this.infinityDolly&&this.dollyToCursor?this._dollyToNoClamp(T,!0):this.infinityDolly&&!this.dollyToCursor?(this.dollyInFixed(A,!0),this._dollyToNoClamp(w,!0)):this._dollyToNoClamp(w,!0),this.dollyToCursor&&(this._changedDolly+=(this.infinityDolly?T:w)-b,this._dollyControlCoord.set(v,I)),this._lastDollyDirection=Math.sign(-p)},this._zoomInternal=(p,v,I)=>{const _=Math.pow(.95,p*this.dollySpeed),b=this._zoom,T=this._zoom*_;this.zoomTo(T,!0),this.dollyToCursor&&(this._changedZoom+=T-b,this._dollyControlCoord.set(v,I))},typeof Ze>"u"&&console.error("camera-controls: `THREE` is undefined. You must first run `CameraControls.install( { THREE: THREE } )`. Check the docs for further information."),this._camera=e,this._yAxisUpSpace=new Ze.Quaternion().setFromUnitVectors(this._camera.up,Ih),this._yAxisUpSpaceInverse=this._yAxisUpSpace.clone().invert(),this._state=pe.NONE,this._target=new Ze.Vector3,this._targetEnd=this._target.clone(),this._focalOffset=new Ze.Vector3,this._focalOffsetEnd=this._focalOffset.clone(),this._spherical=new Ze.Spherical().setFromVector3(it.copy(this._camera.position).applyQuaternion(this._yAxisUpSpace)),this._sphericalEnd=this._spherical.clone(),this._lastDistance=this._spherical.radius,this._zoom=this._camera.zoom,this._zoomEnd=this._zoom,this._lastZoom=this._zoom,this._nearPlaneCorners=[new Ze.Vector3,new Ze.Vector3,new Ze.Vector3,new Ze.Vector3],this._updateNearPlaneCorners(),this._boundary=new Ze.Box3(new Ze.Vector3(-1/0,-1/0,-1/0),new Ze.Vector3(1/0,1/0,1/0)),this._cameraUp0=this._camera.up.clone(),this._target0=this._target.clone(),this._position0=this._camera.position.clone(),this._zoom0=this._zoom,this._focalOffset0=this._focalOffset.clone(),this._dollyControlCoord=new Ze.Vector2,this.mouseButtons={left:pe.ROTATE,middle:pe.DOLLY,right:pe.TRUCK,wheel:hr(this._camera)?pe.DOLLY:Us(this._camera)?pe.ZOOM:pe.NONE},this.touches={one:pe.TOUCH_ROTATE,two:hr(this._camera)?pe.TOUCH_DOLLY_TRUCK:Us(this._camera)?pe.TOUCH_ZOOM_TRUCK:pe.NONE,three:pe.TOUCH_TRUCK};const i=new Ze.Vector2,n=new Ze.Vector2,r=new Ze.Vector2,o=p=>{if(!this._enabled||!this._domElement)return;if(this._interactiveArea.left!==0||this._interactiveArea.top!==0||this._interactiveArea.width!==1||this._interactiveArea.height!==1){const _=this._domElement.getBoundingClientRect(),b=p.clientX/_.width,T=p.clientY/_.height;if(b<this._interactiveArea.left||b>this._interactiveArea.right||T<this._interactiveArea.top||T>this._interactiveArea.bottom)return}const v=p.pointerType!=="mouse"?null:(p.buttons&Pt.LEFT)===Pt.LEFT?Pt.LEFT:(p.buttons&Pt.MIDDLE)===Pt.MIDDLE?Pt.MIDDLE:(p.buttons&Pt.RIGHT)===Pt.RIGHT?Pt.RIGHT:null;if(v!==null){const _=this._findPointerByMouseButton(v);_&&this._disposePointer(_)}if((p.buttons&Pt.LEFT)===Pt.LEFT&&this._lockedPointer)return;const I={pointerId:p.pointerId,clientX:p.clientX,clientY:p.clientY,deltaX:0,deltaY:0,mouseButton:v};this._activePointers.push(I),this._domElement.ownerDocument.removeEventListener("pointermove",a,{passive:!1}),this._domElement.ownerDocument.removeEventListener("pointerup",l),this._domElement.ownerDocument.addEventListener("pointermove",a,{passive:!1}),this._domElement.ownerDocument.addEventListener("pointerup",l),this._isDragging=!0,u(p)},a=p=>{p.cancelable&&p.preventDefault();const v=p.pointerId,I=this._lockedPointer||this._findPointerById(v);if(I){if(I.clientX=p.clientX,I.clientY=p.clientY,I.deltaX=p.movementX,I.deltaY=p.movementY,this._state=0,p.pointerType==="touch")switch(this._activePointers.length){case 1:this._state=this.touches.one;break;case 2:this._state=this.touches.two;break;case 3:this._state=this.touches.three;break}else(!this._isDragging&&this._lockedPointer||this._isDragging&&(p.buttons&Pt.LEFT)===Pt.LEFT)&&(this._state=this._state|this.mouseButtons.left),this._isDragging&&(p.buttons&Pt.MIDDLE)===Pt.MIDDLE&&(this._state=this._state|this.mouseButtons.middle),this._isDragging&&(p.buttons&Pt.RIGHT)===Pt.RIGHT&&(this._state=this._state|this.mouseButtons.right);f()}},l=p=>{const v=this._findPointerById(p.pointerId);if(!(v&&v===this._lockedPointer)){if(v&&this._disposePointer(v),p.pointerType==="touch")switch(this._activePointers.length){case 0:this._state=pe.NONE;break;case 1:this._state=this.touches.one;break;case 2:this._state=this.touches.two;break;case 3:this._state=this.touches.three;break}else this._state=pe.NONE;m()}};let c=-1;const h=p=>{if(!this._domElement||!this._enabled||this.mouseButtons.wheel===pe.NONE)return;if(this._interactiveArea.left!==0||this._interactiveArea.top!==0||this._interactiveArea.width!==1||this._interactiveArea.height!==1){const T=this._domElement.getBoundingClientRect(),w=p.clientX/T.width,A=p.clientY/T.height;if(w<this._interactiveArea.left||w>this._interactiveArea.right||A<this._interactiveArea.top||A>this._interactiveArea.bottom)return}if(p.preventDefault(),this.dollyToCursor||this.mouseButtons.wheel===pe.ROTATE||this.mouseButtons.wheel===pe.TRUCK){const T=performance.now();c-T<1e3&&this._getClientRect(this._elementRect),c=T}const v=G2?-1:-3,I=p.deltaMode===1?p.deltaY/v:p.deltaY/(v*10),_=this.dollyToCursor?(p.clientX-this._elementRect.x)/this._elementRect.width*2-1:0,b=this.dollyToCursor?(p.clientY-this._elementRect.y)/this._elementRect.height*-2+1:0;switch(this.mouseButtons.wheel){case pe.ROTATE:{this._rotateInternal(p.deltaX,p.deltaY),this._isUserControllingRotate=!0;break}case pe.TRUCK:{this._truckInternal(p.deltaX,p.deltaY,!1),this._isUserControllingTruck=!0;break}case pe.OFFSET:{this._truckInternal(p.deltaX,p.deltaY,!0),this._isUserControllingOffset=!0;break}case pe.DOLLY:{this._dollyInternal(-I,_,b),this._isUserControllingDolly=!0;break}case pe.ZOOM:{this._zoomInternal(-I,_,b),this._isUserControllingZoom=!0;break}}this.dispatchEvent({type:"control"})},d=p=>{if(!(!this._domElement||!this._enabled)){if(this.mouseButtons.right===Kt.ACTION.NONE){const v=p instanceof PointerEvent?p.pointerId:0,I=this._findPointerById(v);I&&this._disposePointer(I),this._domElement.ownerDocument.removeEventListener("pointermove",a,{passive:!1}),this._domElement.ownerDocument.removeEventListener("pointerup",l);return}p.preventDefault()}},u=p=>{if(this._enabled){if(sf(this._activePointers,Oi),this._getClientRect(this._elementRect),i.copy(Oi),n.copy(Oi),this._activePointers.length>=2){const v=Oi.x-this._activePointers[1].clientX,I=Oi.y-this._activePointers[1].clientY,_=Math.sqrt(v*v+I*I);r.set(0,_);const b=(this._activePointers[0].clientX+this._activePointers[1].clientX)*.5,T=(this._activePointers[0].clientY+this._activePointers[1].clientY)*.5;n.set(b,T)}if(this._state=0,!p)this._lockedPointer&&(this._state=this._state|this.mouseButtons.left);else if("pointerType"in p&&p.pointerType==="touch")switch(this._activePointers.length){case 1:this._state=this.touches.one;break;case 2:this._state=this.touches.two;break;case 3:this._state=this.touches.three;break}else!this._lockedPointer&&(p.buttons&Pt.LEFT)===Pt.LEFT&&(this._state=this._state|this.mouseButtons.left),(p.buttons&Pt.MIDDLE)===Pt.MIDDLE&&(this._state=this._state|this.mouseButtons.middle),(p.buttons&Pt.RIGHT)===Pt.RIGHT&&(this._state=this._state|this.mouseButtons.right);((this._state&pe.ROTATE)===pe.ROTATE||(this._state&pe.TOUCH_ROTATE)===pe.TOUCH_ROTATE||(this._state&pe.TOUCH_DOLLY_ROTATE)===pe.TOUCH_DOLLY_ROTATE||(this._state&pe.TOUCH_ZOOM_ROTATE)===pe.TOUCH_ZOOM_ROTATE)&&(this._sphericalEnd.theta=this._spherical.theta,this._sphericalEnd.phi=this._spherical.phi,this._thetaVelocity.value=0,this._phiVelocity.value=0),((this._state&pe.TRUCK)===pe.TRUCK||(this._state&pe.TOUCH_TRUCK)===pe.TOUCH_TRUCK||(this._state&pe.TOUCH_DOLLY_TRUCK)===pe.TOUCH_DOLLY_TRUCK||(this._state&pe.TOUCH_ZOOM_TRUCK)===pe.TOUCH_ZOOM_TRUCK)&&(this._targetEnd.copy(this._target),this._targetVelocity.set(0,0,0)),((this._state&pe.DOLLY)===pe.DOLLY||(this._state&pe.TOUCH_DOLLY)===pe.TOUCH_DOLLY||(this._state&pe.TOUCH_DOLLY_TRUCK)===pe.TOUCH_DOLLY_TRUCK||(this._state&pe.TOUCH_DOLLY_OFFSET)===pe.TOUCH_DOLLY_OFFSET||(this._state&pe.TOUCH_DOLLY_ROTATE)===pe.TOUCH_DOLLY_ROTATE)&&(this._sphericalEnd.radius=this._spherical.radius,this._radiusVelocity.value=0),((this._state&pe.ZOOM)===pe.ZOOM||(this._state&pe.TOUCH_ZOOM)===pe.TOUCH_ZOOM||(this._state&pe.TOUCH_ZOOM_TRUCK)===pe.TOUCH_ZOOM_TRUCK||(this._state&pe.TOUCH_ZOOM_OFFSET)===pe.TOUCH_ZOOM_OFFSET||(this._state&pe.TOUCH_ZOOM_ROTATE)===pe.TOUCH_ZOOM_ROTATE)&&(this._zoomEnd=this._zoom,this._zoomVelocity.value=0),((this._state&pe.OFFSET)===pe.OFFSET||(this._state&pe.TOUCH_OFFSET)===pe.TOUCH_OFFSET||(this._state&pe.TOUCH_DOLLY_OFFSET)===pe.TOUCH_DOLLY_OFFSET||(this._state&pe.TOUCH_ZOOM_OFFSET)===pe.TOUCH_ZOOM_OFFSET)&&(this._focalOffsetEnd.copy(this._focalOffset),this._focalOffsetVelocity.set(0,0,0)),this.dispatchEvent({type:"controlstart"})}},f=()=>{if(!this._enabled||!this._dragNeedsUpdate)return;this._dragNeedsUpdate=!1,sf(this._activePointers,Oi);const p=this._domElement&&this._domElement.ownerDocument.pointerLockElement===this._domElement?this._lockedPointer||this._activePointers[0]:null,v=p?-p.deltaX:n.x-Oi.x,I=p?-p.deltaY:n.y-Oi.y;if(n.copy(Oi),((this._state&pe.ROTATE)===pe.ROTATE||(this._state&pe.TOUCH_ROTATE)===pe.TOUCH_ROTATE||(this._state&pe.TOUCH_DOLLY_ROTATE)===pe.TOUCH_DOLLY_ROTATE||(this._state&pe.TOUCH_ZOOM_ROTATE)===pe.TOUCH_ZOOM_ROTATE)&&(this._rotateInternal(v,I),this._isUserControllingRotate=!0),(this._state&pe.DOLLY)===pe.DOLLY||(this._state&pe.ZOOM)===pe.ZOOM){const _=this.dollyToCursor?(i.x-this._elementRect.x)/this._elementRect.width*2-1:0,b=this.dollyToCursor?(i.y-this._elementRect.y)/this._elementRect.height*-2+1:0,T=this.dollyDragInverted?-1:1;(this._state&pe.DOLLY)===pe.DOLLY?(this._dollyInternal(T*I*Eh,_,b),this._isUserControllingDolly=!0):(this._zoomInternal(T*I*Eh,_,b),this._isUserControllingZoom=!0)}if((this._state&pe.TOUCH_DOLLY)===pe.TOUCH_DOLLY||(this._state&pe.TOUCH_ZOOM)===pe.TOUCH_ZOOM||(this._state&pe.TOUCH_DOLLY_TRUCK)===pe.TOUCH_DOLLY_TRUCK||(this._state&pe.TOUCH_ZOOM_TRUCK)===pe.TOUCH_ZOOM_TRUCK||(this._state&pe.TOUCH_DOLLY_OFFSET)===pe.TOUCH_DOLLY_OFFSET||(this._state&pe.TOUCH_ZOOM_OFFSET)===pe.TOUCH_ZOOM_OFFSET||(this._state&pe.TOUCH_DOLLY_ROTATE)===pe.TOUCH_DOLLY_ROTATE||(this._state&pe.TOUCH_ZOOM_ROTATE)===pe.TOUCH_ZOOM_ROTATE){const _=Oi.x-this._activePointers[1].clientX,b=Oi.y-this._activePointers[1].clientY,T=Math.sqrt(_*_+b*b),w=r.y-T;r.set(0,T);const A=this.dollyToCursor?(n.x-this._elementRect.x)/this._elementRect.width*2-1:0,y=this.dollyToCursor?(n.y-this._elementRect.y)/this._elementRect.height*-2+1:0;(this._state&pe.TOUCH_DOLLY)===pe.TOUCH_DOLLY||(this._state&pe.TOUCH_DOLLY_ROTATE)===pe.TOUCH_DOLLY_ROTATE||(this._state&pe.TOUCH_DOLLY_TRUCK)===pe.TOUCH_DOLLY_TRUCK||(this._state&pe.TOUCH_DOLLY_OFFSET)===pe.TOUCH_DOLLY_OFFSET?(this._dollyInternal(w*Eh,A,y),this._isUserControllingDolly=!0):(this._zoomInternal(w*Eh,A,y),this._isUserControllingZoom=!0)}((this._state&pe.TRUCK)===pe.TRUCK||(this._state&pe.TOUCH_TRUCK)===pe.TOUCH_TRUCK||(this._state&pe.TOUCH_DOLLY_TRUCK)===pe.TOUCH_DOLLY_TRUCK||(this._state&pe.TOUCH_ZOOM_TRUCK)===pe.TOUCH_ZOOM_TRUCK)&&(this._truckInternal(v,I,!1),this._isUserControllingTruck=!0),((this._state&pe.OFFSET)===pe.OFFSET||(this._state&pe.TOUCH_OFFSET)===pe.TOUCH_OFFSET||(this._state&pe.TOUCH_DOLLY_OFFSET)===pe.TOUCH_DOLLY_OFFSET||(this._state&pe.TOUCH_ZOOM_OFFSET)===pe.TOUCH_ZOOM_OFFSET)&&(this._truckInternal(v,I,!0),this._isUserControllingOffset=!0),this.dispatchEvent({type:"control"})},m=()=>{sf(this._activePointers,Oi),n.copy(Oi),this._dragNeedsUpdate=!1,(this._activePointers.length===0||this._activePointers.length===1&&this._activePointers[0]===this._lockedPointer)&&(this._isDragging=!1),this._activePointers.length===0&&this._domElement&&(this._domElement.ownerDocument.removeEventListener("pointermove",a,{passive:!1}),this._domElement.ownerDocument.removeEventListener("pointerup",l),this.dispatchEvent({type:"controlend"}))};this.lockPointer=()=>{!this._enabled||!this._domElement||(this.cancel(),this._lockedPointer={pointerId:-1,clientX:0,clientY:0,deltaX:0,deltaY:0,mouseButton:null},this._activePointers.push(this._lockedPointer),this._domElement.ownerDocument.removeEventListener("pointermove",a,{passive:!1}),this._domElement.ownerDocument.removeEventListener("pointerup",l),this._domElement.requestPointerLock(),this._domElement.ownerDocument.addEventListener("pointerlockchange",g),this._domElement.ownerDocument.addEventListener("pointerlockerror",E),this._domElement.ownerDocument.addEventListener("pointermove",a,{passive:!1}),this._domElement.ownerDocument.addEventListener("pointerup",l),u())},this.unlockPointer=()=>{var p,v,I;this._lockedPointer!==null&&(this._disposePointer(this._lockedPointer),this._lockedPointer=null),(p=this._domElement)===null||p===void 0||p.ownerDocument.exitPointerLock(),(v=this._domElement)===null||v===void 0||v.ownerDocument.removeEventListener("pointerlockchange",g),(I=this._domElement)===null||I===void 0||I.ownerDocument.removeEventListener("pointerlockerror",E),this.cancel()};const g=()=>{this._domElement&&this._domElement.ownerDocument.pointerLockElement===this._domElement||this.unlockPointer()},E=()=>{this.unlockPointer()};this._addAllEventListeners=p=>{this._domElement=p,this._domElement.style.touchAction="none",this._domElement.style.userSelect="none",this._domElement.style.webkitUserSelect="none",this._domElement.addEventListener("pointerdown",o),this._domElement.addEventListener("pointercancel",l),this._domElement.addEventListener("wheel",h,{passive:!1}),this._domElement.addEventListener("contextmenu",d)},this._removeAllEventListeners=()=>{this._domElement&&(this._domElement.style.touchAction="",this._domElement.style.userSelect="",this._domElement.style.webkitUserSelect="",this._domElement.removeEventListener("pointerdown",o),this._domElement.removeEventListener("pointercancel",l),this._domElement.removeEventListener("wheel",h,{passive:!1}),this._domElement.removeEventListener("contextmenu",d),this._domElement.ownerDocument.removeEventListener("pointermove",a,{passive:!1}),this._domElement.ownerDocument.removeEventListener("pointerup",l),this._domElement.ownerDocument.removeEventListener("pointerlockchange",g),this._domElement.ownerDocument.removeEventListener("pointerlockerror",E))},this.cancel=()=>{this._state!==pe.NONE&&(this._state=pe.NONE,this._activePointers.length=0,m())},t&&this.connect(t),this.update(0)}get camera(){return this._camera}set camera(e){this._camera=e,this.updateCameraUp(),this._camera.updateProjectionMatrix(),this._updateNearPlaneCorners(),this._needsUpdate=!0}get enabled(){return this._enabled}set enabled(e){this._enabled=e,this._domElement&&(e?(this._domElement.style.touchAction="none",this._domElement.style.userSelect="none",this._domElement.style.webkitUserSelect="none"):(this.cancel(),this._domElement.style.touchAction="",this._domElement.style.userSelect="",this._domElement.style.webkitUserSelect=""))}get active(){return!this._hasRested}get currentAction(){return this._state}get distance(){return this._spherical.radius}set distance(e){this._spherical.radius===e&&this._sphericalEnd.radius===e||(this._spherical.radius=e,this._sphericalEnd.radius=e,this._needsUpdate=!0)}get azimuthAngle(){return this._spherical.theta}set azimuthAngle(e){this._spherical.theta===e&&this._sphericalEnd.theta===e||(this._spherical.theta=e,this._sphericalEnd.theta=e,this._needsUpdate=!0)}get polarAngle(){return this._spherical.phi}set polarAngle(e){this._spherical.phi===e&&this._sphericalEnd.phi===e||(this._spherical.phi=e,this._sphericalEnd.phi=e,this._needsUpdate=!0)}get boundaryEnclosesCamera(){return this._boundaryEnclosesCamera}set boundaryEnclosesCamera(e){this._boundaryEnclosesCamera=e,this._needsUpdate=!0}set interactiveArea(e){this._interactiveArea.width=yn(e.width,0,1),this._interactiveArea.height=yn(e.height,0,1),this._interactiveArea.x=yn(e.x,0,1-this._interactiveArea.width),this._interactiveArea.y=yn(e.y,0,1-this._interactiveArea.height)}addEventListener(e,t){super.addEventListener(e,t)}removeEventListener(e,t){super.removeEventListener(e,t)}rotate(e,t,i=!1){return this.rotateTo(this._sphericalEnd.theta+e,this._sphericalEnd.phi+t,i)}rotateAzimuthTo(e,t=!1){return this.rotateTo(e,this._sphericalEnd.phi,t)}rotatePolarTo(e,t=!1){return this.rotateTo(this._sphericalEnd.theta,e,t)}rotateTo(e,t,i=!1){this._isUserControllingRotate=!1;const n=yn(e,this.minAzimuthAngle,this.maxAzimuthAngle),r=yn(t,this.minPolarAngle,this.maxPolarAngle);this._sphericalEnd.theta=n,this._sphericalEnd.phi=r,this._sphericalEnd.makeSafe(),this._needsUpdate=!0,i||(this._spherical.theta=this._sphericalEnd.theta,this._spherical.phi=this._sphericalEnd.phi);const o=!i||gt(this._spherical.theta,this._sphericalEnd.theta,this.restThreshold)&&gt(this._spherical.phi,this._sphericalEnd.phi,this.restThreshold);return this._createOnRestPromise(o)}dolly(e,t=!1){return this.dollyTo(this._sphericalEnd.radius-e,t)}dollyTo(e,t=!1){return this._isUserControllingDolly=!1,this._lastDollyDirection=Mo.NONE,this._changedDolly=0,this._dollyToNoClamp(yn(e,this.minDistance,this.maxDistance),t)}_dollyToNoClamp(e,t=!1){const i=this._sphericalEnd.radius;if(this.colliderMeshes.length>=1){const r=this._collisionTest(),o=gt(r,this._spherical.radius);if(!(i>e)&&o)return Promise.resolve();this._sphericalEnd.radius=Math.min(e,r)}else this._sphericalEnd.radius=e;this._needsUpdate=!0,t||(this._spherical.radius=this._sphericalEnd.radius);const n=!t||gt(this._spherical.radius,this._sphericalEnd.radius,this.restThreshold);return this._createOnRestPromise(n)}dollyInFixed(e,t=!1){this._targetEnd.add(this._getCameraDirection(Ga).multiplyScalar(e)),t||this._target.copy(this._targetEnd);const i=!t||gt(this._target.x,this._targetEnd.x,this.restThreshold)&&gt(this._target.y,this._targetEnd.y,this.restThreshold)&&gt(this._target.z,this._targetEnd.z,this.restThreshold);return this._createOnRestPromise(i)}zoom(e,t=!1){return this.zoomTo(this._zoomEnd+e,t)}zoomTo(e,t=!1){this._isUserControllingZoom=!1,this._zoomEnd=yn(e,this.minZoom,this.maxZoom),this._needsUpdate=!0,t||(this._zoom=this._zoomEnd);const i=!t||gt(this._zoom,this._zoomEnd,this.restThreshold);return this._changedZoom=0,this._createOnRestPromise(i)}pan(e,t,i=!1){return console.warn("`pan` has been renamed to `truck`"),this.truck(e,t,i)}truck(e,t,i=!1){this._camera.updateMatrix(),On.setFromMatrixColumn(this._camera.matrix,0),Ln.setFromMatrixColumn(this._camera.matrix,1),On.multiplyScalar(e),Ln.multiplyScalar(-t);const n=it.copy(On).add(Ln),r=ut.copy(this._targetEnd).add(n);return this.moveTo(r.x,r.y,r.z,i)}forward(e,t=!1){it.setFromMatrixColumn(this._camera.matrix,0),it.crossVectors(this._camera.up,it),it.multiplyScalar(e);const i=ut.copy(this._targetEnd).add(it);return this.moveTo(i.x,i.y,i.z,t)}elevate(e,t=!1){return it.copy(this._camera.up).multiplyScalar(e),this.moveTo(this._targetEnd.x+it.x,this._targetEnd.y+it.y,this._targetEnd.z+it.z,t)}moveTo(e,t,i,n=!1){this._isUserControllingTruck=!1;const r=it.set(e,t,i).sub(this._targetEnd);this._encloseToBoundary(this._targetEnd,r,this.boundaryFriction),this._needsUpdate=!0,n||this._target.copy(this._targetEnd);const o=!n||gt(this._target.x,this._targetEnd.x,this.restThreshold)&&gt(this._target.y,this._targetEnd.y,this.restThreshold)&&gt(this._target.z,this._targetEnd.z,this.restThreshold);return this._createOnRestPromise(o)}lookInDirectionOf(e,t,i,n=!1){const r=it.set(e,t,i).sub(this._targetEnd).normalize().multiplyScalar(-this._sphericalEnd.radius).add(this._targetEnd);return this.setPosition(r.x,r.y,r.z,n)}fitToBox(e,t,{cover:i=!1,paddingLeft:n=0,paddingRight:r=0,paddingBottom:o=0,paddingTop:a=0}={}){const l=[],c=e.isBox3?Oo.copy(e):Oo.setFromObject(e);c.isEmpty()&&(console.warn("camera-controls: fitTo() cannot be used with an empty box. Aborting"),Promise.resolve());const h=GE(this._sphericalEnd.theta,kE),d=GE(this._sphericalEnd.phi,kE);l.push(this.rotateTo(h,d,t));const u=it.setFromSpherical(this._sphericalEnd).normalize(),f=jE.setFromUnitVectors(u,af),m=gt(Math.abs(u.y),1);m&&f.multiply(cf.setFromAxisAngle(Ih,h)),f.multiply(this._yAxisUpSpaceInverse);const g=ZE.makeEmpty();ut.copy(c.min).applyQuaternion(f),g.expandByPoint(ut),ut.copy(c.min).setX(c.max.x).applyQuaternion(f),g.expandByPoint(ut),ut.copy(c.min).setY(c.max.y).applyQuaternion(f),g.expandByPoint(ut),ut.copy(c.max).setZ(c.min.z).applyQuaternion(f),g.expandByPoint(ut),ut.copy(c.min).setZ(c.max.z).applyQuaternion(f),g.expandByPoint(ut),ut.copy(c.max).setY(c.min.y).applyQuaternion(f),g.expandByPoint(ut),ut.copy(c.max).setX(c.min.x).applyQuaternion(f),g.expandByPoint(ut),ut.copy(c.max).applyQuaternion(f),g.expandByPoint(ut),g.min.x-=n,g.min.y-=o,g.max.x+=r,g.max.y+=a,f.setFromUnitVectors(af,u),m&&f.premultiply(cf.invert()),f.premultiply(this._yAxisUpSpace);const E=g.getSize(it),p=g.getCenter(ut).applyQuaternion(f);if(hr(this._camera)){const v=this.getDistanceToFitBox(E.x,E.y,E.z,i);l.push(this.moveTo(p.x,p.y,p.z,t)),l.push(this.dollyTo(v,t)),l.push(this.setFocalOffset(0,0,0,t))}else if(Us(this._camera)){const v=this._camera,I=v.right-v.left,_=v.top-v.bottom,b=i?Math.max(I/E.x,_/E.y):Math.min(I/E.x,_/E.y);l.push(this.moveTo(p.x,p.y,p.z,t)),l.push(this.zoomTo(b,t)),l.push(this.setFocalOffset(0,0,0,t))}return Promise.all(l)}fitToSphere(e,t){const i=[],n="isObject3D"in e?Kt.createBoundingSphere(e,lf):lf.copy(e);if(i.push(this.moveTo(n.center.x,n.center.y,n.center.z,t)),hr(this._camera)){const r=this.getDistanceToFitSphere(n.radius);i.push(this.dollyTo(r,t))}else if(Us(this._camera)){const r=this._camera.right-this._camera.left,o=this._camera.top-this._camera.bottom,a=2*n.radius,l=Math.min(r/a,o/a);i.push(this.zoomTo(l,t))}return i.push(this.setFocalOffset(0,0,0,t)),Promise.all(i)}setLookAt(e,t,i,n,r,o,a=!1){this._isUserControllingRotate=!1,this._isUserControllingDolly=!1,this._isUserControllingTruck=!1,this._lastDollyDirection=Mo.NONE,this._changedDolly=0;const l=ut.set(n,r,o),c=it.set(e,t,i);this._targetEnd.copy(l),this._sphericalEnd.setFromVector3(c.sub(l).applyQuaternion(this._yAxisUpSpace)),this.normalizeRotations(),this._needsUpdate=!0,a||(this._target.copy(this._targetEnd),this._spherical.copy(this._sphericalEnd));const h=!a||gt(this._target.x,this._targetEnd.x,this.restThreshold)&&gt(this._target.y,this._targetEnd.y,this.restThreshold)&&gt(this._target.z,this._targetEnd.z,this.restThreshold)&&gt(this._spherical.theta,this._sphericalEnd.theta,this.restThreshold)&&gt(this._spherical.phi,this._sphericalEnd.phi,this.restThreshold)&&gt(this._spherical.radius,this._sphericalEnd.radius,this.restThreshold);return this._createOnRestPromise(h)}lerpLookAt(e,t,i,n,r,o,a,l,c,h,d,u,f,m=!1){this._isUserControllingRotate=!1,this._isUserControllingDolly=!1,this._isUserControllingTruck=!1,this._lastDollyDirection=Mo.NONE,this._changedDolly=0;const g=it.set(n,r,o),E=ut.set(e,t,i);en.setFromVector3(E.sub(g).applyQuaternion(this._yAxisUpSpace));const p=Po.set(h,d,u),v=ut.set(a,l,c);Ha.setFromVector3(v.sub(p).applyQuaternion(this._yAxisUpSpace)),this._targetEnd.copy(g.lerp(p,f));const I=Ha.theta-en.theta,_=Ha.phi-en.phi,b=Ha.radius-en.radius;this._sphericalEnd.set(en.radius+b*f,en.phi+_*f,en.theta+I*f),this.normalizeRotations(),this._needsUpdate=!0,m||(this._target.copy(this._targetEnd),this._spherical.copy(this._sphericalEnd));const T=!m||gt(this._target.x,this._targetEnd.x,this.restThreshold)&&gt(this._target.y,this._targetEnd.y,this.restThreshold)&&gt(this._target.z,this._targetEnd.z,this.restThreshold)&&gt(this._spherical.theta,this._sphericalEnd.theta,this.restThreshold)&&gt(this._spherical.phi,this._sphericalEnd.phi,this.restThreshold)&&gt(this._spherical.radius,this._sphericalEnd.radius,this.restThreshold);return this._createOnRestPromise(T)}setPosition(e,t,i,n=!1){return this.setLookAt(e,t,i,this._targetEnd.x,this._targetEnd.y,this._targetEnd.z,n)}setTarget(e,t,i,n=!1){const r=this.getPosition(it),o=this.setLookAt(r.x,r.y,r.z,e,t,i,n);return this._sphericalEnd.phi=yn(this._sphericalEnd.phi,this.minPolarAngle,this.maxPolarAngle),o}setFocalOffset(e,t,i,n=!1){this._isUserControllingOffset=!1,this._focalOffsetEnd.set(e,t,i),this._needsUpdate=!0,n||this._focalOffset.copy(this._focalOffsetEnd);const r=!n||gt(this._focalOffset.x,this._focalOffsetEnd.x,this.restThreshold)&&gt(this._focalOffset.y,this._focalOffsetEnd.y,this.restThreshold)&&gt(this._focalOffset.z,this._focalOffsetEnd.z,this.restThreshold);return this._createOnRestPromise(r)}setOrbitPoint(e,t,i){this._camera.updateMatrixWorld(),On.setFromMatrixColumn(this._camera.matrixWorldInverse,0),Ln.setFromMatrixColumn(this._camera.matrixWorldInverse,1),ur.setFromMatrixColumn(this._camera.matrixWorldInverse,2);const n=it.set(e,t,i),r=n.distanceTo(this._camera.position),o=n.sub(this._camera.position);On.multiplyScalar(o.x),Ln.multiplyScalar(o.y),ur.multiplyScalar(o.z),it.copy(On).add(Ln).add(ur),it.z=it.z+r,this.dollyTo(r,!1),this.setFocalOffset(-it.x,it.y,-it.z,!1),this.moveTo(e,t,i,!1)}setBoundary(e){if(!e){this._boundary.min.set(-1/0,-1/0,-1/0),this._boundary.max.set(1/0,1/0,1/0),this._needsUpdate=!0;return}this._boundary.copy(e),this._boundary.clampPoint(this._targetEnd,this._targetEnd),this._needsUpdate=!0}setViewport(e,t,i,n){if(e===null){this._viewport=null;return}this._viewport=this._viewport||new Ze.Vector4,typeof e=="number"?this._viewport.set(e,t,i,n):this._viewport.copy(e)}getDistanceToFitBox(e,t,i,n=!1){if(rf(this._camera,"getDistanceToFitBox"))return this._spherical.radius;const r=e/t,o=this._camera.getEffectiveFOV()*za,a=this._camera.aspect;return((n?r>a:r<a)?t:e/a)*.5/Math.tan(o*.5)+i*.5}getDistanceToFitSphere(e){if(rf(this._camera,"getDistanceToFitSphere"))return this._spherical.radius;const t=this._camera.getEffectiveFOV()*za,i=Math.atan(Math.tan(t*.5)*this._camera.aspect)*2,n=1<this._camera.aspect?t:i;return e/Math.sin(n*.5)}getTarget(e,t=!0){return(e&&e.isVector3?e:new Ze.Vector3).copy(t?this._targetEnd:this._target)}getPosition(e,t=!0){return(e&&e.isVector3?e:new Ze.Vector3).setFromSpherical(t?this._sphericalEnd:this._spherical).applyQuaternion(this._yAxisUpSpaceInverse).add(t?this._targetEnd:this._target)}getSpherical(e,t=!0){return(e||new Ze.Spherical).copy(t?this._sphericalEnd:this._spherical)}getFocalOffset(e,t=!0){return(e&&e.isVector3?e:new Ze.Vector3).copy(t?this._focalOffsetEnd:this._focalOffset)}normalizeRotations(){this._sphericalEnd.theta=this._sphericalEnd.theta%Fo,this._sphericalEnd.theta<0&&(this._sphericalEnd.theta+=Fo),this._spherical.theta+=Fo*Math.round((this._sphericalEnd.theta-this._spherical.theta)/Fo)}stop(){this._focalOffset.copy(this._focalOffsetEnd),this._target.copy(this._targetEnd),this._spherical.copy(this._sphericalEnd),this._zoom=this._zoomEnd}reset(e=!1){if(!gt(this._camera.up.x,this._cameraUp0.x)||!gt(this._camera.up.y,this._cameraUp0.y)||!gt(this._camera.up.z,this._cameraUp0.z)){this._camera.up.copy(this._cameraUp0);const i=this.getPosition(it);this.updateCameraUp(),this.setPosition(i.x,i.y,i.z)}const t=[this.setLookAt(this._position0.x,this._position0.y,this._position0.z,this._target0.x,this._target0.y,this._target0.z,e),this.setFocalOffset(this._focalOffset0.x,this._focalOffset0.y,this._focalOffset0.z,e),this.zoomTo(this._zoom0,e)];return Promise.all(t)}saveState(){this._cameraUp0.copy(this._camera.up),this.getTarget(this._target0),this.getPosition(this._position0),this._zoom0=this._zoom,this._focalOffset0.copy(this._focalOffset)}updateCameraUp(){this._yAxisUpSpace.setFromUnitVectors(this._camera.up,Ih),this._yAxisUpSpaceInverse.copy(this._yAxisUpSpace).invert()}applyCameraUp(){const e=it.subVectors(this._target,this._camera.position).normalize(),t=ut.crossVectors(e,this._camera.up);this._camera.up.crossVectors(t,e).normalize(),this._camera.updateMatrixWorld();const i=this.getPosition(it);this.updateCameraUp(),this.setPosition(i.x,i.y,i.z)}update(e){const t=this._sphericalEnd.theta-this._spherical.theta,i=this._sphericalEnd.phi-this._spherical.phi,n=this._sphericalEnd.radius-this._spherical.radius,r=WE.subVectors(this._targetEnd,this._target),o=XE.subVectors(this._focalOffsetEnd,this._focalOffset),a=this._zoomEnd-this._zoom;if(yt(t))this._thetaVelocity.value=0,this._spherical.theta=this._sphericalEnd.theta;else{const h=this._isUserControllingRotate?this.draggingSmoothTime:this.smoothTime;this._spherical.theta=gh(this._spherical.theta,this._sphericalEnd.theta,this._thetaVelocity,h,1/0,e),this._needsUpdate=!0}if(yt(i))this._phiVelocity.value=0,this._spherical.phi=this._sphericalEnd.phi;else{const h=this._isUserControllingRotate?this.draggingSmoothTime:this.smoothTime;this._spherical.phi=gh(this._spherical.phi,this._sphericalEnd.phi,this._phiVelocity,h,1/0,e),this._needsUpdate=!0}if(yt(n))this._radiusVelocity.value=0,this._spherical.radius=this._sphericalEnd.radius;else{const h=this._isUserControllingDolly?this.draggingSmoothTime:this.smoothTime;this._spherical.radius=gh(this._spherical.radius,this._sphericalEnd.radius,this._radiusVelocity,h,this.maxSpeed,e),this._needsUpdate=!0}if(yt(r.x)&&yt(r.y)&&yt(r.z))this._targetVelocity.set(0,0,0),this._target.copy(this._targetEnd);else{const h=this._isUserControllingTruck?this.draggingSmoothTime:this.smoothTime;HE(this._target,this._targetEnd,this._targetVelocity,h,this.maxSpeed,e,this._target),this._needsUpdate=!0}if(yt(o.x)&&yt(o.y)&&yt(o.z))this._focalOffsetVelocity.set(0,0,0),this._focalOffset.copy(this._focalOffsetEnd);else{const h=this._isUserControllingOffset?this.draggingSmoothTime:this.smoothTime;HE(this._focalOffset,this._focalOffsetEnd,this._focalOffsetVelocity,h,this.maxSpeed,e,this._focalOffset),this._needsUpdate=!0}if(yt(a))this._zoomVelocity.value=0,this._zoom=this._zoomEnd;else{const h=this._isUserControllingZoom?this.draggingSmoothTime:this.smoothTime;this._zoom=gh(this._zoom,this._zoomEnd,this._zoomVelocity,h,1/0,e)}if(this.dollyToCursor){if(hr(this._camera)&&this._changedDolly!==0){const h=this._spherical.radius-this._lastDistance,d=this._camera,u=this._getCameraDirection(Ga),f=it.copy(u).cross(d.up).normalize();f.lengthSq()===0&&(f.x=1);const m=ut.crossVectors(f,u),g=this._sphericalEnd.radius*Math.tan(d.getEffectiveFOV()*za*.5),E=(this._sphericalEnd.radius-h-this._sphericalEnd.radius)/this._sphericalEnd.radius,p=Po.copy(this._targetEnd).add(f.multiplyScalar(this._dollyControlCoord.x*g*d.aspect)).add(m.multiplyScalar(this._dollyControlCoord.y*g)),v=it.copy(this._targetEnd).lerp(p,E),I=this._lastDollyDirection===Mo.IN&&this._spherical.radius<=this.minDistance,_=this._lastDollyDirection===Mo.OUT&&this.maxDistance<=this._spherical.radius;if(this.infinityDolly&&(I||_)){this._sphericalEnd.radius-=h,this._spherical.radius-=h;const T=ut.copy(u).multiplyScalar(-h);v.add(T)}this._boundary.clampPoint(v,v);const b=ut.subVectors(v,this._targetEnd);this._targetEnd.copy(v),this._target.add(b),this._changedDolly-=h,yt(this._changedDolly)&&(this._changedDolly=0)}else if(Us(this._camera)&&this._changedZoom!==0){const h=this._zoom-this._lastZoom,d=this._camera,u=it.set(this._dollyControlCoord.x,this._dollyControlCoord.y,(d.near+d.far)/(d.near-d.far)).unproject(d),f=ut.set(0,0,-1).applyQuaternion(d.quaternion),m=Po.copy(u).add(f.multiplyScalar(-u.dot(d.up))),g=-(this._zoom-h-this._zoom)/this._zoom,E=this._getCameraDirection(Ga),p=this._targetEnd.dot(E),v=it.copy(this._targetEnd).lerp(m,g),I=v.dot(E),_=E.multiplyScalar(I-p);v.sub(_),this._boundary.clampPoint(v,v);const b=ut.subVectors(v,this._targetEnd);this._targetEnd.copy(v),this._target.add(b),this._changedZoom-=h,yt(this._changedZoom)&&(this._changedZoom=0)}}this._camera.zoom!==this._zoom&&(this._camera.zoom=this._zoom,this._camera.updateProjectionMatrix(),this._updateNearPlaneCorners(),this._needsUpdate=!0),this._dragNeedsUpdate=!0;const l=this._collisionTest();this._spherical.radius=Math.min(this._spherical.radius,l),this._spherical.makeSafe(),this._camera.position.setFromSpherical(this._spherical).applyQuaternion(this._yAxisUpSpaceInverse).add(this._target),this._camera.lookAt(this._target),(!yt(this._focalOffset.x)||!yt(this._focalOffset.y)||!yt(this._focalOffset.z))&&(this._camera.updateMatrixWorld(),On.setFromMatrixColumn(this._camera.matrix,0),Ln.setFromMatrixColumn(this._camera.matrix,1),ur.setFromMatrixColumn(this._camera.matrix,2),On.multiplyScalar(this._focalOffset.x),Ln.multiplyScalar(-this._focalOffset.y),ur.multiplyScalar(this._focalOffset.z),it.copy(On).add(Ln).add(ur),this._camera.position.add(it)),this._boundaryEnclosesCamera&&this._encloseToBoundary(this._camera.position.copy(this._target),it.setFromSpherical(this._spherical).applyQuaternion(this._yAxisUpSpaceInverse),1);const c=this._needsUpdate;return c&&!this._updatedLastTime?(this._hasRested=!1,this.dispatchEvent({type:"wake"}),this.dispatchEvent({type:"update"})):c?(this.dispatchEvent({type:"update"}),yt(t,this.restThreshold)&&yt(i,this.restThreshold)&&yt(n,this.restThreshold)&&yt(r.x,this.restThreshold)&&yt(r.y,this.restThreshold)&&yt(r.z,this.restThreshold)&&yt(o.x,this.restThreshold)&&yt(o.y,this.restThreshold)&&yt(o.z,this.restThreshold)&&yt(a,this.restThreshold)&&!this._hasRested&&(this._hasRested=!0,this.dispatchEvent({type:"rest"}))):!c&&this._updatedLastTime&&this.dispatchEvent({type:"sleep"}),this._lastDistance=this._spherical.radius,this._lastZoom=this._zoom,this._updatedLastTime=c,this._needsUpdate=!1,c}toJSON(){return JSON.stringify({enabled:this._enabled,minDistance:this.minDistance,maxDistance:Va(this.maxDistance),minZoom:this.minZoom,maxZoom:Va(this.maxZoom),minPolarAngle:this.minPolarAngle,maxPolarAngle:Va(this.maxPolarAngle),minAzimuthAngle:Va(this.minAzimuthAngle),maxAzimuthAngle:Va(this.maxAzimuthAngle),smoothTime:this.smoothTime,draggingSmoothTime:this.draggingSmoothTime,dollySpeed:this.dollySpeed,truckSpeed:this.truckSpeed,dollyToCursor:this.dollyToCursor,verticalDragToForward:this.verticalDragToForward,target:this._targetEnd.toArray(),position:it.setFromSpherical(this._sphericalEnd).add(this._targetEnd).toArray(),zoom:this._zoomEnd,focalOffset:this._focalOffsetEnd.toArray(),target0:this._target0.toArray(),position0:this._position0.toArray(),zoom0:this._zoom0,focalOffset0:this._focalOffset0.toArray()})}fromJSON(e,t=!1){const i=JSON.parse(e);this.enabled=i.enabled,this.minDistance=i.minDistance,this.maxDistance=ka(i.maxDistance),this.minZoom=i.minZoom,this.maxZoom=ka(i.maxZoom),this.minPolarAngle=i.minPolarAngle,this.maxPolarAngle=ka(i.maxPolarAngle),this.minAzimuthAngle=ka(i.minAzimuthAngle),this.maxAzimuthAngle=ka(i.maxAzimuthAngle),this.smoothTime=i.smoothTime,this.draggingSmoothTime=i.draggingSmoothTime,this.dollySpeed=i.dollySpeed,this.truckSpeed=i.truckSpeed,this.dollyToCursor=i.dollyToCursor,this.verticalDragToForward=i.verticalDragToForward,this._target0.fromArray(i.target0),this._position0.fromArray(i.position0),this._zoom0=i.zoom0,this._focalOffset0.fromArray(i.focalOffset0),this.moveTo(i.target[0],i.target[1],i.target[2],t),en.setFromVector3(it.fromArray(i.position).sub(this._targetEnd).applyQuaternion(this._yAxisUpSpace)),this.rotateTo(en.theta,en.phi,t),this.dollyTo(en.radius,t),this.zoomTo(i.zoom,t),this.setFocalOffset(i.focalOffset[0],i.focalOffset[1],i.focalOffset[2],t),this._needsUpdate=!0}connect(e){if(this._domElement){console.warn("camera-controls is already connected.");return}e.setAttribute("data-camera-controls-version",k2),this._addAllEventListeners(e),this._getClientRect(this._elementRect)}disconnect(){this.cancel(),this._removeAllEventListeners(),this._domElement&&(this._domElement.removeAttribute("data-camera-controls-version"),this._domElement=void 0)}dispose(){this.removeAllEventListeners(),this.disconnect()}_getTargetDirection(e){return e.setFromSpherical(this._spherical).divideScalar(this._spherical.radius).applyQuaternion(this._yAxisUpSpaceInverse)}_getCameraDirection(e){return this._getTargetDirection(e).negate()}_findPointerById(e){return this._activePointers.find(t=>t.pointerId===e)}_findPointerByMouseButton(e){return this._activePointers.find(t=>t.mouseButton===e)}_disposePointer(e){this._activePointers.splice(this._activePointers.indexOf(e),1)}_encloseToBoundary(e,t,i){const n=t.lengthSq();if(n===0)return e;const r=ut.copy(t).add(e),o=this._boundary.clampPoint(r,Po).sub(r),a=o.lengthSq();if(a===0)return e.add(t);if(a===n)return e;if(i===0)return e.add(t).add(o);{const l=1+i*a/t.dot(o);return e.add(ut.copy(t).multiplyScalar(l)).add(o.multiplyScalar(1-i))}}_updateNearPlaneCorners(){if(hr(this._camera)){const e=this._camera,t=e.near,i=e.getEffectiveFOV()*za,n=Math.tan(i*.5)*t,r=n*e.aspect;this._nearPlaneCorners[0].set(-r,-n,0),this._nearPlaneCorners[1].set(r,-n,0),this._nearPlaneCorners[2].set(r,n,0),this._nearPlaneCorners[3].set(-r,n,0)}else if(Us(this._camera)){const e=this._camera,t=1/e.zoom,i=e.left*t,n=e.right*t,r=e.top*t,o=e.bottom*t;this._nearPlaneCorners[0].set(i,r,0),this._nearPlaneCorners[1].set(n,r,0),this._nearPlaneCorners[2].set(n,o,0),this._nearPlaneCorners[3].set(i,o,0)}}_collisionTest(){let e=1/0;if(!(this.colliderMeshes.length>=1)||rf(this._camera,"_collisionTest"))return e;const t=this._getTargetDirection(Ga);hf.lookAt(YE,t,this._camera.up);for(let i=0;i<4;i++){const n=ut.copy(this._nearPlaneCorners[i]);n.applyMatrix4(hf);const r=Po.addVectors(this._target,n);_h.set(r,t),_h.far=this._spherical.radius+1;const o=_h.intersectObjects(this.colliderMeshes);o.length!==0&&o[0].distance<e&&(e=o[0].distance)}return e}_getClientRect(e){if(!this._domElement)return;const t=this._domElement.getBoundingClientRect();return e.x=t.left,e.y=t.top,this._viewport?(e.x+=this._viewport.x,e.y+=t.height-this._viewport.w-this._viewport.y,e.width=this._viewport.z,e.height=this._viewport.w):(e.width=t.width,e.height=t.height),e}_createOnRestPromise(e){return e?Promise.resolve():(this._hasRested=!1,this.dispatchEvent({type:"transitionstart"}),new Promise(t=>{const i=()=>{this.removeEventListener("rest",i),t()};this.addEventListener("rest",i)}))}_addAllEventListeners(e){}_removeAllEventListeners(){}get dampingFactor(){return console.warn(".dampingFactor has been deprecated. use smoothTime (in seconds) instead."),0}set dampingFactor(e){console.warn(".dampingFactor has been deprecated. use smoothTime (in seconds) instead.")}get draggingDampingFactor(){return console.warn(".draggingDampingFactor has been deprecated. use draggingSmoothTime (in seconds) instead."),0}set draggingDampingFactor(e){console.warn(".draggingDampingFactor has been deprecated. use draggingSmoothTime (in seconds) instead.")}static createBoundingSphere(e,t=new Ze.Sphere){const i=t,n=i.center;Oo.makeEmpty(),e.traverseVisible(o=>{o.isMesh&&Oo.expandByObject(o)}),Oo.getCenter(n);let r=0;return e.traverseVisible(o=>{if(!o.isMesh)return;const a=o,l=a.geometry.clone();l.applyMatrix4(a.matrixWorld);const c=l.attributes.position;for(let h=0,d=c.count;h<d;h++)it.fromBufferAttribute(c,h),r=Math.max(r,n.distanceToSquared(it))}),i.radius=Math.sqrt(r),i}}class Ll extends a2{constructor(e){super(e),F(this,"onBeforeUpdate",new oe),F(this,"onAfterUpdate",new oe),F(this,"onAspectUpdated",new oe),F(this,"onDisposed",new oe),F(this,"three"),F(this,"_allControls",new Map),F(this,"updateAspect",()=>{var t;if(!(!this.currentWorld||!this.currentWorld.renderer)){if(this.three instanceof Zn){this.onAspectUpdated.trigger();return}if((t=this.currentWorld.renderer)!=null&&t.isResizeable()){const i=this.currentWorld.renderer.getSize();this.three.aspect=i.width/i.height,this.three.updateProjectionMatrix(),this.onAspectUpdated.trigger()}}}),this.three=this.setupCamera(),this.setupEvents(!0),this.onWorldChanged.add(({action:t,world:i})=>{if(t==="added"){const n=this.newCameraControls();this._allControls.set(i.uuid,n)}if(t==="removed"){const n=this._allControls.get(i.uuid);n&&(n.dispose(),this._allControls.delete(i.uuid))}})}get controls(){if(!this.currentWorld)throw new Error("This camera needs a world to work!");const e=this._allControls.get(this.currentWorld.uuid);if(!e)throw new Error("Controls not found!");return e}get enabled(){return this.currentWorld===null?!1:this.controls.enabled}set enabled(e){this.currentWorld!==null&&(this.controls.enabled=e)}dispose(){this.setupEvents(!1),this.onAspectUpdated.reset(),this.onBeforeUpdate.reset(),this.onAfterUpdate.reset(),this.three.removeFromParent(),this.onDisposed.trigger(),this.onDisposed.reset();for(const[e,t]of this._allControls)t.dispose()}update(e){this.enabled&&(this.onBeforeUpdate.trigger(this),this.controls.update(e),this.onAfterUpdate.trigger(this))}setupCamera(){const e=window.innerWidth/window.innerHeight,t=new Gi(60,e,1,1e3);return t.position.set(50,50,50),t.lookAt(new P(0,0,0)),t}newCameraControls(){if(!this.currentWorld)throw new Error("This camera needs a world to work!");if(!this.currentWorld.renderer)throw new Error("This camera needs a renderer to work!");Kt.install({THREE:Ll.getSubsetOfThree()});const{domElement:e}=this.currentWorld.renderer.three,t=new Kt(this.three,e);return t.smoothTime=.2,t.dollyToCursor=!0,t.infinityDolly=!0,t.minDistance=6,t}setupEvents(e){e?window.addEventListener("resize",this.updateAspect):window.removeEventListener("resize",this.updateAspect)}static getSubsetOfThree(){return{MOUSE:ry,Vector2:Oe,Vector3:P,Vector4:ct,Quaternion:fi,Matrix4:_e,Spherical:uC,Box3:je,Sphere:vi,Raycaster:_u,MathUtils:Nr}}}const iv=class nv extends Ke{constructor(e){super(e),F(this,"onAfterUpdate",new oe),F(this,"onBeforeUpdate",new oe),F(this,"onDisposed",new oe),F(this,"list",new Mn),F(this,"enabled",!0),e.add(nv.uuid,this)}create(){const e=new B2(this.components),t=e.uuid;if(this.list.has(t))throw new Error("There is already a world with this name!");return this.list.set(t,e),e}delete(e){if(!this.list.has(e.uuid))throw new Error("The provided world is not found in the list!");this.list.delete(e.uuid),e.dispose()}dispose(){this.enabled=!1;for(const[e,t]of this.list)t.dispose();this.list.clear(),this.onDisposed.trigger()}update(e){if(this.enabled)for(const[t,i]of this.list)i.update(e)}};F(iv,"uuid","fdb61dc4-2ec1-4966-b83d-54ea795fad4a");let sv=iv;function H2(s,e,t,i){return new Promise((n,r)=>{function o(){const a=s.clientWaitSync(e,t,0);if(a===s.WAIT_FAILED){r();return}if(a===s.TIMEOUT_EXPIRED){setTimeout(o,i);return}n()}o()})}async function Y2(s,e,t,i,n,r,o){const a=s.fenceSync(s.SYNC_GPU_COMMANDS_COMPLETE,0);s.flush(),await H2(s,a,0,10),s.deleteSync(a),s.bindBuffer(e,t),s.getBufferSubData(e,i,n,r,o),s.bindBuffer(e,null)}async function W2(s,e,t,i,n,r,o,a){const l=s.createBuffer();return s.bindBuffer(s.PIXEL_PACK_BUFFER,l),s.bufferData(s.PIXEL_PACK_BUFFER,a.byteLength,s.STREAM_READ),s.readPixels(e,t,i,n,r,o,0),s.bindBuffer(s.PIXEL_PACK_BUFFER,null),await Y2(s,s.PIXEL_PACK_BUFFER,l,0,a),s.deleteBuffer(l),a}class X2 extends Ea{constructor(){super(...arguments),F(this,"_config",{enabled:{value:!0,type:"Boolean"},width:{type:"Number",interpolable:!0,value:512,min:32,max:1024},height:{type:"Number",interpolable:!0,value:512,min:32,max:1024},autoUpdate:{value:!0,type:"Boolean"},renderDebugFrame:{value:!1,type:"Boolean"},updateInterval:{type:"Number",interpolable:!0,value:1,min:0,max:1},threshold:{type:"Number",interpolable:!0,value:100,min:1,max:512}}),F(this,"_interval",null)}get enabled(){return this._config.enabled.value}set enabled(e){this._config.enabled.value=e,this._component.enabled=e}get width(){return this._config.width.value}set width(e){this.setWidthHeight(e,this.height)}get height(){return this._config.height.value}set height(e){this.setWidthHeight(this.width,e)}get autoUpdate(){return this._config.autoUpdate.value}set autoUpdate(e){this.setAutoAndInterval(e,this.updateInterval)}get updateInterval(){return this._config.updateInterval.value}set updateInterval(e){this.setAutoAndInterval(this.autoUpdate,e)}get renderDebugFrame(){return this._config.renderDebugFrame.value}set renderDebugFrame(e){this._config.renderDebugFrame.value=e}get threshold(){return this._config.threshold.value}set threshold(e){this._config.threshold.value=e}setWidthHeight(e,t){if(e<=0||t<=0)throw new Error("The width and height of the culler renderer must be more than 0!");this._config.width.value=e,this._config.height.value=t,this.resetRenderTarget()}setAutoAndInterval(e,t){if(t<=0)throw new Error("The updateInterval of the culler renderer must be more than 0!");this._config.autoUpdate.value=e,this._config.updateInterval.value=t,this.resetInterval(e)}resetRenderTarget(){this._component.renderTarget.dispose(),this._component.renderTarget=new Nt(this.width,this.height),this._component.bufferSize=this.width*this.height*4,this._component.buffer=new Uint8Array(this._component.bufferSize)}resetInterval(e){this._interval!==null&&window.clearInterval(this._interval),e&&(this._interval=window.setInterval(async()=>{this._component.preventUpdate||await this._component.updateVisibility()},this.updateInterval))}}class rv{constructor(e,t){if(F(this,"onSetup",new oe),F(this,"onDisposed",new oe),F(this,"onViewUpdated",new ps),F(this,"enabled",!0),F(this,"needsUpdate",!1),F(this,"components"),F(this,"renderTarget",new Nt),F(this,"bufferSize",1),F(this,"buffer",new Uint8Array),F(this,"preventUpdate",!1),F(this,"config"),F(this,"isSetup",!1),F(this,"world"),F(this,"renderer"),F(this,"_defaultConfig",{enabled:!0,height:512,width:512,updateInterval:1e3,autoUpdate:!0,renderDebugFrame:!1,threshold:100}),F(this,"worker"),F(this,"scene",new Hr),F(this,"_availableColor",1),F(this,"_isWorkerBusy",!1),F(this,"updateVisibility",async r=>{if(!this.enabled||!this.needsUpdate&&!r||this._isWorkerBusy)return;this._isWorkerBusy=!0;const o=this.world.camera.three;o.updateMatrix();const{width:a,height:l}=this.config;this.renderer.setSize(a,l),this.renderer.setRenderTarget(this.renderTarget),this.renderer.render(this.scene,o);const c=this.renderer.getContext();await W2(c,0,0,a,l,c.RGBA,c.UNSIGNED_BYTE,this.buffer),this.renderer.setRenderTarget(null),this.config.renderDebugFrame&&this.renderer.render(this.scene,o),this.worker.postMessage({buffer:this.buffer}),this.needsUpdate=!1}),!t.renderer)throw new Error("The given world must have a renderer!");this.components=e,this.config=new X2(this,this.components,"Culler renderer"),this.world=t,this.renderer=new tu,this.renderer.clippingPlanes=t.renderer.clippingPlanes;const i=`
      addEventListener("message", (event) => {
        const { buffer } = event.data;
        const colors = new Map();
        for (let i = 0; i < buffer.length; i += 4) {
          const r = buffer[i];
          const g = buffer[i + 1];
          const b = buffer[i + 2];
          const code = "" + r + "-" + g + "-" + b;
          if(colors.has(code)) {
            colors.set(code, colors.get(code) + 1);
          } else {
            colors.set(code, 1);
          }
        }
        postMessage({ colors });
      });
    `,n=new Blob([i],{type:"application/javascript"});this.worker=new Worker(URL.createObjectURL(n)),this.setup()}dispose(){this.enabled=!1,this.config.autoUpdate=!1,this.components.get(Mu).list.delete(this.config.uuid);for(const e of this.scene.children)e.removeFromParent();this.onViewUpdated.reset(),this.worker.terminate(),this.renderer.forceContextLoss(),this.renderer.dispose(),this.renderTarget.dispose(),this.buffer=null,this.onDisposed.reset()}setup(e){const t={...this._defaultConfig,...e},{width:i,height:n}=t;this.config.setWidthHeight(i,n);const{updateInterval:r,autoUpdate:o}=t;this.config.setAutoAndInterval(o,r),this.config.threshold=t.threshold,this.isSetup=!0,this.onSetup.trigger()}getAvailableColor(){let e=BigInt(this._availableColor.toString());const t=[];do t.unshift(Number(e%256n)),e/=256n;while(e);for(;t.length!==3;)t.unshift(0);const[i,n,r]=t,o=`${i}-${n}-${r}`;return{r:i,g:n,b:r,code:o}}increaseColor(){if(this._availableColor===256*256*256){console.warn("Color can't be increased over 256 x 256 x 256!");return}this._availableColor++}decreaseColor(){if(this._availableColor===1){console.warn("Color can't be decreased under 0!");return}this._availableColor--}}class Z2 extends rv{constructor(e,t){super(e,t),F(this,"onViewUpdated",new oe),F(this,"colorMeshes",new Map),F(this,"_colorCodeMeshMap",new Map),F(this,"_meshIDColorCodeMap",new Map),F(this,"_currentVisibleMeshes",new Set),F(this,"_recentlyHiddenMeshes",new Set),F(this,"_transparentMat",new Mi({transparent:!0,opacity:0})),F(this,"handleWorkerMessage",async i=>{if(this.preventUpdate)return;const n=i.data.colors;this._recentlyHiddenMeshes=new Set(this._currentVisibleMeshes),this._currentVisibleMeshes.clear();for(const[r,o]of n){if(o<this.config.threshold)continue;const a=this._colorCodeMeshMap.get(r);a&&(this._currentVisibleMeshes.add(a),this._recentlyHiddenMeshes.delete(a))}this.onViewUpdated.trigger({seen:this._currentVisibleMeshes,unseen:this._recentlyHiddenMeshes}),this._isWorkerBusy=!1}),this.worker.addEventListener("message",this.handleWorkerMessage),this.onViewUpdated.add(({seen:i,unseen:n})=>{for(const r of i)r.visible=!0;for(const r of n)r.visible=!1})}get threshold(){return this.config.threshold}set threshold(e){this.config.threshold=e}dispose(){super.dispose(),this._currentVisibleMeshes.clear(),this._recentlyHiddenMeshes.clear(),this._meshIDColorCodeMap.clear(),this._transparentMat.dispose(),this._colorCodeMeshMap.clear();const e=this.components.get(Xn);for(const t in this.colorMeshes){const i=this.colorMeshes.get(t);i&&e.destroy(i,!0)}this.colorMeshes.clear()}add(e){if(!this.enabled)return;if(this.preventUpdate){console.log("Culler processing not finished yet.");return}this.preventUpdate=!0;const t=e instanceof ji,{geometry:i,material:n}=e,{colorMaterial:r,code:o}=this.getAvailableMaterial();let a;if(Array.isArray(n)){let h=!0;const d=[];for(const u of n)zE.isTransparent(u)?d.push(this._transparentMat):(h=!1,d.push(r));if(h){r.dispose(),this.preventUpdate=!1;return}a=d}else if(zE.isTransparent(n)){r.dispose(),this.preventUpdate=!1;return}else a=r;this._colorCodeMeshMap.set(o,e),this._meshIDColorCodeMap.set(e.uuid,o);const l=t?e.count:1,c=new ji(i,a,l);t?c.instanceMatrix=e.instanceMatrix:c.setMatrixAt(0,new _e),e.visible=!1,e.updateWorldMatrix(!0,!1),c.applyMatrix4(e.matrixWorld),c.updateMatrix(),this.scene.add(c),this.colorMeshes.set(e.uuid,c),this.increaseColor(),this.preventUpdate=!1}remove(e){if(this.preventUpdate){console.log("Culler processing not finished yet.");return}this.preventUpdate=!0;const t=this.components.get(Xn);this._currentVisibleMeshes.delete(e),this._recentlyHiddenMeshes.delete(e);const i=this.colorMeshes.get(e.uuid),n=this._meshIDColorCodeMap.get(e.uuid);if(!i||!n){this.preventUpdate=!1;return}this._colorCodeMeshMap.delete(n),this._meshIDColorCodeMap.delete(e.uuid),this.colorMeshes.delete(e.uuid),i.geometry=void 0,i.material=[],t.destroy(i,!0),this._recentlyHiddenMeshes.delete(e),this._currentVisibleMeshes.delete(e),this.preventUpdate=!1}updateInstanced(e){for(const t of e){const i=this.colorMeshes.get(t.uuid);i&&(i.count=t.count)}}getAvailableMaterial(){const{r:e,g:t,b:i,code:n}=this.getAvailableColor(),r=nt.enabled;nt.enabled=!1;const o=new Ne(`rgb(${e}, ${t}, ${i})`);if(!this.world.renderer)throw new Error("Renderer not found in the world!");const a=this.world.renderer.clippingPlanes,l=new Mi({color:o,clippingPlanes:a,side:Ai});return nt.enabled=r,{colorMaterial:l,code:n}}}const ov=class kp extends Ke{constructor(e){super(e),F(this,"onDisposed",new oe),F(this,"_enabled",!0),F(this,"list",new Map),e.add(kp.uuid,this)}get enabled(){return this._enabled}set enabled(e){this._enabled=e;for(const[t,i]of this.list)i.enabled=e}create(e){if(this.list.has(e.uuid))return this.list.get(e.uuid);const t=new Z2(this.components,e);return this.list.set(e.uuid,t),t}delete(e){const t=this.list.get(e.uuid);t&&t.dispose(),this.list.delete(e.uuid)}dispose(){this.enabled=!1,this.onDisposed.trigger(kp.uuid),this.onDisposed.reset();for(const[e,t]of this.list)t.dispose();this.list.clear()}updateInstanced(e){for(const[,t]of this.list)t.updateInstanced(e)}};F(ov,"uuid","69f2a50d-c266-44fc-b1bd-fa4d34be89e6");let j2=ov;class q2{constructor(e){F(this,"_event"),F(this,"_position",new Oe),F(this,"onDisposed",new oe),F(this,"updateMouseInfo",t=>{this._event=t}),this.dom=e,this.setupEvents(!0)}get position(){if(this._event){const e=this.dom.getBoundingClientRect();this._position.x=this.getPositionX(e,this._event),this._position.y=this.getPositionY(e,this._event)}return this._position}dispose(){this.setupEvents(!1),this.onDisposed.trigger(),this.onDisposed.reset()}getPositionY(e,t){return-((this.getDataObject(t).clientY-e.top)/(e.bottom-e.top))*2+1}getPositionX(e,t){return(this.getDataObject(t).clientX-e.left)/(e.right-e.left)*2-1}getDataObject(e){return e instanceof MouseEvent?e:e.touches[0]}setupEvents(e){e?(this.dom.addEventListener("pointermove",this.updateMouseInfo),this.dom.addEventListener("touchstart",this.updateMouseInfo)):(this.dom.removeEventListener("pointermove",this.updateMouseInfo),this.dom.removeEventListener("touchstart",this.updateMouseInfo))}}class K2{constructor(e,t){F(this,"enabled",!0),F(this,"components"),F(this,"onDisposed",new oe),F(this,"mouse"),F(this,"three",new _u),F(this,"world");const i=t.renderer;if(!i)throw new Error("A renderer is needed for the raycaster to work!");this.world=t,this.mouse=new q2(i.three.domElement),this.components=e}dispose(){this.mouse.dispose(),this.onDisposed.trigger(),this.onDisposed.reset()}castRay(e=Array.from(this.world.meshes),t=this.mouse.position){if(!this.world)throw new Error("A world is needed to cast rays!");const i=this.world.camera.three;return this.three.setFromCamera(t,i),this.intersect(e)}castRayFromVector(e,t,i=Array.from(this.world.meshes)){return this.three.set(e,t),this.intersect(i)}intersect(e=Array.from(this.world.meshes)){const t=this.three.intersectObjects(e),i=this.filterClippingPlanes(t);return i.length>0?i[0]:null}filterClippingPlanes(e){if(!this.world.renderer)throw new Error("Renderer not found!");const t=this.world.renderer.three;if(!t.clippingPlanes)return e;const i=t.clippingPlanes;return e.length<=0||!i||(i==null?void 0:i.length)<=0?e:e.filter(n=>i.every(r=>r.distanceToPoint(n.point)>0))}}const av=class lv extends Ke{constructor(e){super(e),F(this,"enabled",!0),F(this,"list",new Map),F(this,"onDisposed",new oe),e.add(lv.uuid,this)}get(e){if(this.list.has(e.uuid))return this.list.get(e.uuid);const t=new K2(this.components,e);return this.list.set(e.uuid,t),e.onDisposed.add(()=>{this.delete(e)}),t}delete(e){const t=this.list.get(e.uuid);t&&t.dispose(),this.list.delete(e.uuid)}dispose(){for(const[e,t]of this.list)t.dispose();this.list.clear(),this.onDisposed.trigger()}};F(av,"uuid","d5d8bdf0-db25-4952-b951-b643af207ace");let fn=av;class Q2 extends Ea{constructor(){super(...arguments),F(this,"_config",{visible:{value:!0,type:"Boolean"},color:{value:new Ne,type:"Color"},primarySize:{type:"Number",interpolable:!0,value:1,min:0,max:1e3},secondarySize:{type:"Number",interpolable:!0,value:10,min:0,max:1e3},distance:{type:"Number",interpolable:!0,value:500,min:0,max:500}})}get visible(){return this._config.visible.value}set visible(e){this._config.visible.value=e,this._component.visible=e}get color(){return this._config.color.value}set color(e){this._config.color.value=e,this._component.material.uniforms.uColor.value=e,this._component.material.uniformsNeedUpdate=!0}get primarySize(){return this._config.primarySize.value}set primarySize(e){this._config.primarySize.value=e,this._component.material.uniforms.uSize1.value=e,this._component.material.uniformsNeedUpdate=!0}get secondarySize(){return this._config.secondarySize.value}set secondarySize(e){this._config.secondarySize.value=e,this._component.material.uniforms.uSize2.value=e,this._component.material.uniformsNeedUpdate=!0}get distance(){return this._config.distance.value}set distance(e){this._config.distance.value=e,this._component.material.uniforms.uDistance.value=e,this._component.material.uniformsNeedUpdate=!0}}class J2{constructor(e,t){F(this,"onDisposed",new oe),F(this,"onSetup",new oe),F(this,"isSetup",!1),F(this,"world"),F(this,"components"),F(this,"config"),F(this,"_defaultConfig",{visible:!0,color:new Ne(12303291),primarySize:1,secondarySize:10,distance:500}),F(this,"three"),F(this,"_fade",3),F(this,"updateZoom",()=>{this.world.camera instanceof Ll&&(this.material.uniforms.uZoom.value=this.world.camera.three.zoom)}),this.world=t;const{color:i,primarySize:n,secondarySize:r,distance:o}=this._defaultConfig;this.components=e,this.config=new Q2(this,this.components,"Grid");const a=new er(2,2,1,1),l=new Tt({side:Ai,uniforms:{uSize1:{value:n},uSize2:{value:r},uColor:{value:i},uDistance:{value:o},uFade:{value:this._fade},uZoom:{value:1}},transparent:!0,vertexShader:`
            
            varying vec3 worldPosition;
            
            uniform float uDistance;
            
            void main() {
            
                    vec3 pos = position.xzy * uDistance;
                    pos.xz += cameraPosition.xz;
                    
                    worldPosition = pos;
                    
                    gl_Position = projectionMatrix * modelViewMatrix * vec4(pos, 1.0);
            
            }
            `,fragmentShader:`
            
            varying vec3 worldPosition;
            
            uniform float uZoom;
            uniform float uFade;
            uniform float uSize1;
            uniform float uSize2;
            uniform vec3 uColor;
            uniform float uDistance;
                
                
                
                float getGrid(float size) {
                
                    vec2 r = worldPosition.xz / size;
                    
                    
                    vec2 grid = abs(fract(r - 0.5) - 0.5) / fwidth(r);
                    float line = min(grid.x, grid.y);
                    
                
                    return 1.0 - min(line, 1.0);
                }
                
            void main() {
            
                    
                    float d = 1.0 - min(distance(cameraPosition.xz, worldPosition.xz) / uDistance, 1.0);
                    
                    float g1 = getGrid(uSize1);
                    float g2 = getGrid(uSize2);
                    
                    // Ortho camera fades the grid away when zooming out
                    float minZoom = step(0.2, uZoom);
                    float zoomFactor = pow(min(uZoom, 1.), 2.) * minZoom;
                    
                    gl_FragColor = vec4(uColor.rgb, mix(g2, g1, g1) * pow(d, uFade));
                    gl_FragColor.a = mix(0.5 * gl_FragColor.a, gl_FragColor.a, g2) * zoomFactor;
                    
                    if ( gl_FragColor.a <= 0.0 ) discard;
                    
            
            }
            
            `,extensions:{}});this.three=new Te(a,l),this.three.frustumCulled=!1,t.scene.three.add(this.three),this.setupEvents(!0)}get visible(){return this.three.visible}set visible(e){e?this.world.scene.three.add(this.three):this.three.removeFromParent()}get material(){return this.three.material}get fade(){return this._fade===3}set fade(e){this._fade=e?3:0,this.material.uniforms.uFade.value=this._fade}setup(e){const t={...this._defaultConfig,...e};this.config.visible=!0,this.config.color=t.color,this.config.primarySize=t.primarySize,this.config.secondarySize=t.secondarySize,this.config.distance=t.distance,this.isSetup=!0,this.onSetup.trigger()}dispose(){this.setupEvents(!1),this.components.get(Mu).list.delete(this.config.uuid),this.components.get(Xn).destroy(this.three),this.onDisposed.trigger(),this.onDisposed.reset(),this.world=null,this.components=null}setupEvents(e){if(this.world.isDisposing||!(this.world.camera instanceof Ll))return;const t=this.world.camera.controls;e?t.addEventListener("update",this.updateZoom):t.removeEventListener("update",this.updateZoom)}}const $2=class cv extends Ke{constructor(e){super(e),F(this,"list",new Map),F(this,"onDisposed",new oe),F(this,"enabled",!0),e.add(cv.uuid,this)}create(e){if(this.list.has(e.uuid))throw new Error("This world already has a grid!");const t=new J2(this.components,e);return this.list.set(e.uuid,t),e.onDisposed.add(()=>{this.delete(e)}),t}delete(e){const t=this.list.get(e.uuid);t&&t.dispose(),this.list.delete(e.uuid)}dispose(){for(const[e,t]of this.list)t.dispose();this.list.clear(),this.onDisposed.trigger(),this.onDisposed.reset()}};F($2,"uuid","d1e814d5-b81c-4452-87a2-f039375e0489");const dr=new _u,Ii=new P,Ds=new P,Mt=new fi,qE={X:new P(1,0,0),Y:new P(0,1,0),Z:new P(0,0,1)},uf={type:"change"},KE={type:"mouseDown",mode:null},QE={type:"mouseUp",mode:null},JE={type:"objectChange"};class eF extends dC{constructor(e,t=null){super(void 0,t);const i=new oF(this);this._root=i;const n=new aF;this._gizmo=n,i.add(n);const r=new lF;this._plane=r,i.add(r);const o=this;function a(I,_){let b=_;Object.defineProperty(o,I,{get:function(){return b!==void 0?b:_},set:function(T){b!==T&&(b=T,r[I]=T,n[I]=T,o.dispatchEvent({type:I+"-changed",value:T}),o.dispatchEvent(uf))}}),o[I]=_,r[I]=_,n[I]=_}a("camera",e),a("object",void 0),a("enabled",!0),a("axis",null),a("mode","translate"),a("translationSnap",null),a("rotationSnap",null),a("scaleSnap",null),a("space","world"),a("size",1),a("dragging",!1),a("showX",!0),a("showY",!0),a("showZ",!0),a("minX",-1/0),a("maxX",1/0),a("minY",-1/0),a("maxY",1/0),a("minZ",-1/0),a("maxZ",1/0);const l=new P,c=new P,h=new fi,d=new fi,u=new P,f=new fi,m=new P,g=new P,E=new P,p=0,v=new P;a("worldPosition",l),a("worldPositionStart",c),a("worldQuaternion",h),a("worldQuaternionStart",d),a("cameraPosition",u),a("cameraQuaternion",f),a("pointStart",m),a("pointEnd",g),a("rotationAxis",E),a("rotationAngle",p),a("eye",v),this._offset=new P,this._startNorm=new P,this._endNorm=new P,this._cameraScale=new P,this._parentPosition=new P,this._parentQuaternion=new fi,this._parentQuaternionInv=new fi,this._parentScale=new P,this._worldScaleStart=new P,this._worldQuaternionInv=new fi,this._worldScale=new P,this._positionStart=new P,this._quaternionStart=new fi,this._scaleStart=new P,this._getPointer=tF.bind(this),this._onPointerDown=nF.bind(this),this._onPointerHover=iF.bind(this),this._onPointerMove=sF.bind(this),this._onPointerUp=rF.bind(this),t!==null&&this.connect(t)}connect(e){super.connect(e),this.domElement.addEventListener("pointerdown",this._onPointerDown),this.domElement.addEventListener("pointermove",this._onPointerHover),this.domElement.addEventListener("pointerup",this._onPointerUp),this.domElement.style.touchAction="none"}disconnect(){this.domElement.removeEventListener("pointerdown",this._onPointerDown),this.domElement.removeEventListener("pointermove",this._onPointerHover),this.domElement.removeEventListener("pointermove",this._onPointerMove),this.domElement.removeEventListener("pointerup",this._onPointerUp),this.domElement.style.touchAction="auto"}getHelper(){return this._root}pointerHover(e){if(this.object===void 0||this.dragging===!0)return;e!==null&&dr.setFromCamera(e,this.camera);const t=df(this._gizmo.picker[this.mode],dr);t?this.axis=t.object.name:this.axis=null}pointerDown(e){if(!(this.object===void 0||this.dragging===!0||e!=null&&e.button!==0)&&this.axis!==null){e!==null&&dr.setFromCamera(e,this.camera);const t=df(this._plane,dr,!0);t&&(this.object.updateMatrixWorld(),this.object.parent.updateMatrixWorld(),this._positionStart.copy(this.object.position),this._quaternionStart.copy(this.object.quaternion),this._scaleStart.copy(this.object.scale),this.object.matrixWorld.decompose(this.worldPositionStart,this.worldQuaternionStart,this._worldScaleStart),this.pointStart.copy(t.point).sub(this.worldPositionStart)),this.dragging=!0,KE.mode=this.mode,this.dispatchEvent(KE)}}pointerMove(e){const t=this.axis,i=this.mode,n=this.object;let r=this.space;if(i==="scale"?r="local":(t==="E"||t==="XYZE"||t==="XYZ")&&(r="world"),n===void 0||t===null||this.dragging===!1||e!==null&&e.button!==-1)return;e!==null&&dr.setFromCamera(e,this.camera);const o=df(this._plane,dr,!0);if(o){if(this.pointEnd.copy(o.point).sub(this.worldPositionStart),i==="translate")this._offset.copy(this.pointEnd).sub(this.pointStart),r==="local"&&t!=="XYZ"&&this._offset.applyQuaternion(this._worldQuaternionInv),t.indexOf("X")===-1&&(this._offset.x=0),t.indexOf("Y")===-1&&(this._offset.y=0),t.indexOf("Z")===-1&&(this._offset.z=0),r==="local"&&t!=="XYZ"?this._offset.applyQuaternion(this._quaternionStart).divide(this._parentScale):this._offset.applyQuaternion(this._parentQuaternionInv).divide(this._parentScale),n.position.copy(this._offset).add(this._positionStart),this.translationSnap&&(r==="local"&&(n.position.applyQuaternion(Mt.copy(this._quaternionStart).invert()),t.search("X")!==-1&&(n.position.x=Math.round(n.position.x/this.translationSnap)*this.translationSnap),t.search("Y")!==-1&&(n.position.y=Math.round(n.position.y/this.translationSnap)*this.translationSnap),t.search("Z")!==-1&&(n.position.z=Math.round(n.position.z/this.translationSnap)*this.translationSnap),n.position.applyQuaternion(this._quaternionStart)),r==="world"&&(n.parent&&n.position.add(Ii.setFromMatrixPosition(n.parent.matrixWorld)),t.search("X")!==-1&&(n.position.x=Math.round(n.position.x/this.translationSnap)*this.translationSnap),t.search("Y")!==-1&&(n.position.y=Math.round(n.position.y/this.translationSnap)*this.translationSnap),t.search("Z")!==-1&&(n.position.z=Math.round(n.position.z/this.translationSnap)*this.translationSnap),n.parent&&n.position.sub(Ii.setFromMatrixPosition(n.parent.matrixWorld)))),n.position.x=Math.max(this.minX,Math.min(this.maxX,n.position.x)),n.position.y=Math.max(this.minY,Math.min(this.maxY,n.position.y)),n.position.z=Math.max(this.minZ,Math.min(this.maxZ,n.position.z));else if(i==="scale"){if(t.search("XYZ")!==-1){let a=this.pointEnd.length()/this.pointStart.length();this.pointEnd.dot(this.pointStart)<0&&(a*=-1),Ds.set(a,a,a)}else Ii.copy(this.pointStart),Ds.copy(this.pointEnd),Ii.applyQuaternion(this._worldQuaternionInv),Ds.applyQuaternion(this._worldQuaternionInv),Ds.divide(Ii),t.search("X")===-1&&(Ds.x=1),t.search("Y")===-1&&(Ds.y=1),t.search("Z")===-1&&(Ds.z=1);n.scale.copy(this._scaleStart).multiply(Ds),this.scaleSnap&&(t.search("X")!==-1&&(n.scale.x=Math.round(n.scale.x/this.scaleSnap)*this.scaleSnap||this.scaleSnap),t.search("Y")!==-1&&(n.scale.y=Math.round(n.scale.y/this.scaleSnap)*this.scaleSnap||this.scaleSnap),t.search("Z")!==-1&&(n.scale.z=Math.round(n.scale.z/this.scaleSnap)*this.scaleSnap||this.scaleSnap))}else if(i==="rotate"){this._offset.copy(this.pointEnd).sub(this.pointStart);const a=20/this.worldPosition.distanceTo(Ii.setFromMatrixPosition(this.camera.matrixWorld));let l=!1;t==="XYZE"?(this.rotationAxis.copy(this._offset).cross(this.eye).normalize(),this.rotationAngle=this._offset.dot(Ii.copy(this.rotationAxis).cross(this.eye))*a):(t==="X"||t==="Y"||t==="Z")&&(this.rotationAxis.copy(qE[t]),Ii.copy(qE[t]),r==="local"&&Ii.applyQuaternion(this.worldQuaternion),Ii.cross(this.eye),Ii.length()===0?l=!0:this.rotationAngle=this._offset.dot(Ii.normalize())*a),(t==="E"||l)&&(this.rotationAxis.copy(this.eye),this.rotationAngle=this.pointEnd.angleTo(this.pointStart),this._startNorm.copy(this.pointStart).normalize(),this._endNorm.copy(this.pointEnd).normalize(),this.rotationAngle*=this._endNorm.cross(this._startNorm).dot(this.eye)<0?1:-1),this.rotationSnap&&(this.rotationAngle=Math.round(this.rotationAngle/this.rotationSnap)*this.rotationSnap),r==="local"&&t!=="E"&&t!=="XYZE"?(n.quaternion.copy(this._quaternionStart),n.quaternion.multiply(Mt.setFromAxisAngle(this.rotationAxis,this.rotationAngle)).normalize()):(this.rotationAxis.applyQuaternion(this._parentQuaternionInv),n.quaternion.copy(Mt.setFromAxisAngle(this.rotationAxis,this.rotationAngle)),n.quaternion.multiply(this._quaternionStart).normalize())}this.dispatchEvent(uf),this.dispatchEvent(JE)}}pointerUp(e){e!==null&&e.button!==0||(this.dragging&&this.axis!==null&&(QE.mode=this.mode,this.dispatchEvent(QE)),this.dragging=!1,this.axis=null)}dispose(){this.disconnect(),this._root.dispose()}attach(e){return this.object=e,this._root.visible=!0,this}detach(){return this.object=void 0,this.axis=null,this._root.visible=!1,this}reset(){this.enabled&&this.dragging&&(this.object.position.copy(this._positionStart),this.object.quaternion.copy(this._quaternionStart),this.object.scale.copy(this._scaleStart),this.dispatchEvent(uf),this.dispatchEvent(JE),this.pointStart.copy(this.pointEnd))}getRaycaster(){return dr}getMode(){return this.mode}setMode(e){this.mode=e}setTranslationSnap(e){this.translationSnap=e}setRotationSnap(e){this.rotationSnap=e}setScaleSnap(e){this.scaleSnap=e}setSize(e){this.size=e}setSpace(e){this.space=e}}function tF(s){if(this.domElement.ownerDocument.pointerLockElement)return{x:0,y:0,button:s.button};{const e=this.domElement.getBoundingClientRect();return{x:(s.clientX-e.left)/e.width*2-1,y:-(s.clientY-e.top)/e.height*2+1,button:s.button}}}function iF(s){if(this.enabled)switch(s.pointerType){case"mouse":case"pen":this.pointerHover(this._getPointer(s));break}}function nF(s){this.enabled&&(document.pointerLockElement||this.domElement.setPointerCapture(s.pointerId),this.domElement.addEventListener("pointermove",this._onPointerMove),this.pointerHover(this._getPointer(s)),this.pointerDown(this._getPointer(s)))}function sF(s){this.enabled&&this.pointerMove(this._getPointer(s))}function rF(s){this.enabled&&(this.domElement.releasePointerCapture(s.pointerId),this.domElement.removeEventListener("pointermove",this._onPointerMove),this.pointerUp(this._getPointer(s)))}function df(s,e,t){const i=e.intersectObject(s,!0);for(let n=0;n<i.length;n++)if(i[n].object.visible||t)return i[n];return!1}const vh=new Ki,bt=new P(0,1,0),$E=new P(0,0,0),eI=new _e,bh=new fi,Wh=new fi,Dn=new P,tI=new _e,tl=new P(1,0,0),_r=new P(0,1,0),il=new P(0,0,1),yh=new P,Ya=new P,Wa=new P;class oF extends Wt{constructor(e){super(),this.isTransformControlsRoot=!0,this.controls=e,this.visible=!1}updateMatrixWorld(e){const t=this.controls;t.object!==void 0&&(t.object.updateMatrixWorld(),t.object.parent===null?console.error("TransformControls: The attached 3D object must be a part of the scene graph."):t.object.parent.matrixWorld.decompose(t._parentPosition,t._parentQuaternion,t._parentScale),t.object.matrixWorld.decompose(t.worldPosition,t.worldQuaternion,t._worldScale),t._parentQuaternionInv.copy(t._parentQuaternion).invert(),t._worldQuaternionInv.copy(t.worldQuaternion).invert()),t.camera.updateMatrixWorld(),t.camera.matrixWorld.decompose(t.cameraPosition,t.cameraQuaternion,t._cameraScale),t.camera.isOrthographicCamera?t.camera.getWorldDirection(t.eye).negate():t.eye.copy(t.cameraPosition).sub(t.worldPosition).normalize(),super.updateMatrixWorld(e)}dispose(){this.traverse(function(e){e.geometry&&e.geometry.dispose(),e.material&&e.material.dispose()})}}class aF extends Wt{constructor(){super(),this.isTransformControlsGizmo=!0,this.type="TransformControlsGizmo";const e=new Mi({depthTest:!1,depthWrite:!1,fog:!1,toneMapped:!1,transparent:!0}),t=new Fn({depthTest:!1,depthWrite:!1,fog:!1,toneMapped:!1,transparent:!0}),i=e.clone();i.opacity=.15;const n=t.clone();n.opacity=.5;const r=e.clone();r.color.setHex(16711680);const o=e.clone();o.color.setHex(65280);const a=e.clone();a.color.setHex(255);const l=e.clone();l.color.setHex(16711680),l.opacity=.5;const c=e.clone();c.color.setHex(65280),c.opacity=.5;const h=e.clone();h.color.setHex(255),h.opacity=.5;const d=e.clone();d.opacity=.25;const u=e.clone();u.color.setHex(16776960),u.opacity=.25,e.clone().color.setHex(16776960);const f=e.clone();f.color.setHex(7895160);const m=new ui(0,.04,.1,12);m.translate(0,.05,0);const g=new Ot(.08,.08,.08);g.translate(0,.04,0);const E=new We;E.setAttribute("position",new dt([0,0,0,1,0,0],3));const p=new ui(.0075,.0075,.5,3);p.translate(0,.25,0);function v(S,U){const z=new yr(S,.0075,3,64,U*Math.PI*2);return z.rotateY(Math.PI/2),z.rotateX(Math.PI/2),z}function I(){const S=new We;return S.setAttribute("position",new dt([0,0,0,1,1,1],3)),S}const _={X:[[new Te(m,r),[.5,0,0],[0,0,-Math.PI/2]],[new Te(m,r),[-.5,0,0],[0,0,Math.PI/2]],[new Te(p,r),[0,0,0],[0,0,-Math.PI/2]]],Y:[[new Te(m,o),[0,.5,0]],[new Te(m,o),[0,-.5,0],[Math.PI,0,0]],[new Te(p,o)]],Z:[[new Te(m,a),[0,0,.5],[Math.PI/2,0,0]],[new Te(m,a),[0,0,-.5],[-Math.PI/2,0,0]],[new Te(p,a),null,[Math.PI/2,0,0]]],XYZ:[[new Te(new Bo(.1,0),d.clone()),[0,0,0]]],XY:[[new Te(new Ot(.15,.15,.01),h.clone()),[.15,.15,0]]],YZ:[[new Te(new Ot(.15,.15,.01),l.clone()),[0,.15,.15],[0,Math.PI/2,0]]],XZ:[[new Te(new Ot(.15,.15,.01),c.clone()),[.15,0,.15],[-Math.PI/2,0,0]]]},b={X:[[new Te(new ui(.2,0,.6,4),i),[.3,0,0],[0,0,-Math.PI/2]],[new Te(new ui(.2,0,.6,4),i),[-.3,0,0],[0,0,Math.PI/2]]],Y:[[new Te(new ui(.2,0,.6,4),i),[0,.3,0]],[new Te(new ui(.2,0,.6,4),i),[0,-.3,0],[0,0,Math.PI]]],Z:[[new Te(new ui(.2,0,.6,4),i),[0,0,.3],[Math.PI/2,0,0]],[new Te(new ui(.2,0,.6,4),i),[0,0,-.3],[-Math.PI/2,0,0]]],XYZ:[[new Te(new Bo(.2,0),i)]],XY:[[new Te(new Ot(.2,.2,.01),i),[.15,.15,0]]],YZ:[[new Te(new Ot(.2,.2,.01),i),[0,.15,.15],[0,Math.PI/2,0]]],XZ:[[new Te(new Ot(.2,.2,.01),i),[.15,0,.15],[-Math.PI/2,0,0]]]},T={START:[[new Te(new Bo(.01,2),n),null,null,null,"helper"]],END:[[new Te(new Bo(.01,2),n),null,null,null,"helper"]],DELTA:[[new Ht(I(),n),null,null,null,"helper"]],X:[[new Ht(E,n.clone()),[-1e3,0,0],null,[1e6,1,1],"helper"]],Y:[[new Ht(E,n.clone()),[0,-1e3,0],[0,0,Math.PI/2],[1e6,1,1],"helper"]],Z:[[new Ht(E,n.clone()),[0,0,-1e3],[0,-Math.PI/2,0],[1e6,1,1],"helper"]]},w={XYZE:[[new Te(v(.5,1),f),null,[0,Math.PI/2,0]]],X:[[new Te(v(.5,.5),r)]],Y:[[new Te(v(.5,.5),o),null,[0,0,-Math.PI/2]]],Z:[[new Te(v(.5,.5),a),null,[0,Math.PI/2,0]]],E:[[new Te(v(.75,1),u),null,[0,Math.PI/2,0]]]},A={AXIS:[[new Ht(E,n.clone()),[-1e3,0,0],null,[1e6,1,1],"helper"]]},y={XYZE:[[new Te(new Lm(.25,10,8),i)]],X:[[new Te(new yr(.5,.1,4,24),i),[0,0,0],[0,-Math.PI/2,-Math.PI/2]]],Y:[[new Te(new yr(.5,.1,4,24),i),[0,0,0],[Math.PI/2,0,0]]],Z:[[new Te(new yr(.5,.1,4,24),i),[0,0,0],[0,0,-Math.PI/2]]],E:[[new Te(new yr(.75,.1,2,24),i)]]},C={X:[[new Te(g,r),[.5,0,0],[0,0,-Math.PI/2]],[new Te(p,r),[0,0,0],[0,0,-Math.PI/2]],[new Te(g,r),[-.5,0,0],[0,0,Math.PI/2]]],Y:[[new Te(g,o),[0,.5,0]],[new Te(p,o)],[new Te(g,o),[0,-.5,0],[0,0,Math.PI]]],Z:[[new Te(g,a),[0,0,.5],[Math.PI/2,0,0]],[new Te(p,a),[0,0,0],[Math.PI/2,0,0]],[new Te(g,a),[0,0,-.5],[-Math.PI/2,0,0]]],XY:[[new Te(new Ot(.15,.15,.01),h),[.15,.15,0]]],YZ:[[new Te(new Ot(.15,.15,.01),l),[0,.15,.15],[0,Math.PI/2,0]]],XZ:[[new Te(new Ot(.15,.15,.01),c),[.15,0,.15],[-Math.PI/2,0,0]]],XYZ:[[new Te(new Ot(.1,.1,.1),d.clone())]]},M={X:[[new Te(new ui(.2,0,.6,4),i),[.3,0,0],[0,0,-Math.PI/2]],[new Te(new ui(.2,0,.6,4),i),[-.3,0,0],[0,0,Math.PI/2]]],Y:[[new Te(new ui(.2,0,.6,4),i),[0,.3,0]],[new Te(new ui(.2,0,.6,4),i),[0,-.3,0],[0,0,Math.PI]]],Z:[[new Te(new ui(.2,0,.6,4),i),[0,0,.3],[Math.PI/2,0,0]],[new Te(new ui(.2,0,.6,4),i),[0,0,-.3],[-Math.PI/2,0,0]]],XY:[[new Te(new Ot(.2,.2,.01),i),[.15,.15,0]]],YZ:[[new Te(new Ot(.2,.2,.01),i),[0,.15,.15],[0,Math.PI/2,0]]],XZ:[[new Te(new Ot(.2,.2,.01),i),[.15,0,.15],[-Math.PI/2,0,0]]],XYZ:[[new Te(new Ot(.2,.2,.2),i),[0,0,0]]]},R={X:[[new Ht(E,n.clone()),[-1e3,0,0],null,[1e6,1,1],"helper"]],Y:[[new Ht(E,n.clone()),[0,-1e3,0],[0,0,Math.PI/2],[1e6,1,1],"helper"]],Z:[[new Ht(E,n.clone()),[0,0,-1e3],[0,-Math.PI/2,0],[1e6,1,1],"helper"]]};function L(S){const U=new Wt;for(const z in S)for(let k=S[z].length;k--;){const H=S[z][k][0].clone(),Y=S[z][k][1],re=S[z][k][2],j=S[z][k][3],X=S[z][k][4];H.name=z,H.tag=X,Y&&H.position.set(Y[0],Y[1],Y[2]),re&&H.rotation.set(re[0],re[1],re[2]),j&&H.scale.set(j[0],j[1],j[2]),H.updateMatrix();const ue=H.geometry.clone();ue.applyMatrix4(H.matrix),H.geometry=ue,H.renderOrder=1/0,H.position.set(0,0,0),H.rotation.set(0,0,0),H.scale.set(1,1,1),U.add(H)}return U}this.gizmo={},this.picker={},this.helper={},this.add(this.gizmo.translate=L(_)),this.add(this.gizmo.rotate=L(w)),this.add(this.gizmo.scale=L(C)),this.add(this.picker.translate=L(b)),this.add(this.picker.rotate=L(y)),this.add(this.picker.scale=L(M)),this.add(this.helper.translate=L(T)),this.add(this.helper.rotate=L(A)),this.add(this.helper.scale=L(R)),this.picker.translate.visible=!1,this.picker.rotate.visible=!1,this.picker.scale.visible=!1}updateMatrixWorld(e){const t=(this.mode==="scale"?"local":this.space)==="local"?this.worldQuaternion:Wh;this.gizmo.translate.visible=this.mode==="translate",this.gizmo.rotate.visible=this.mode==="rotate",this.gizmo.scale.visible=this.mode==="scale",this.helper.translate.visible=this.mode==="translate",this.helper.rotate.visible=this.mode==="rotate",this.helper.scale.visible=this.mode==="scale";let i=[];i=i.concat(this.picker[this.mode].children),i=i.concat(this.gizmo[this.mode].children),i=i.concat(this.helper[this.mode].children);for(let n=0;n<i.length;n++){const r=i[n];r.visible=!0,r.rotation.set(0,0,0),r.position.copy(this.worldPosition);let o;if(this.camera.isOrthographicCamera?o=(this.camera.top-this.camera.bottom)/this.camera.zoom:o=this.worldPosition.distanceTo(this.cameraPosition)*Math.min(1.9*Math.tan(Math.PI*this.camera.fov/360)/this.camera.zoom,7),r.scale.set(1,1,1).multiplyScalar(o*this.size/4),r.tag==="helper"){r.visible=!1,r.name==="AXIS"?(r.visible=!!this.axis,this.axis==="X"&&(Mt.setFromEuler(vh.set(0,0,0)),r.quaternion.copy(t).multiply(Mt),Math.abs(bt.copy(tl).applyQuaternion(t).dot(this.eye))>.9&&(r.visible=!1)),this.axis==="Y"&&(Mt.setFromEuler(vh.set(0,0,Math.PI/2)),r.quaternion.copy(t).multiply(Mt),Math.abs(bt.copy(_r).applyQuaternion(t).dot(this.eye))>.9&&(r.visible=!1)),this.axis==="Z"&&(Mt.setFromEuler(vh.set(0,Math.PI/2,0)),r.quaternion.copy(t).multiply(Mt),Math.abs(bt.copy(il).applyQuaternion(t).dot(this.eye))>.9&&(r.visible=!1)),this.axis==="XYZE"&&(Mt.setFromEuler(vh.set(0,Math.PI/2,0)),bt.copy(this.rotationAxis),r.quaternion.setFromRotationMatrix(eI.lookAt($E,bt,_r)),r.quaternion.multiply(Mt),r.visible=this.dragging),this.axis==="E"&&(r.visible=!1)):r.name==="START"?(r.position.copy(this.worldPositionStart),r.visible=this.dragging):r.name==="END"?(r.position.copy(this.worldPosition),r.visible=this.dragging):r.name==="DELTA"?(r.position.copy(this.worldPositionStart),r.quaternion.copy(this.worldQuaternionStart),Ii.set(1e-10,1e-10,1e-10).add(this.worldPositionStart).sub(this.worldPosition).multiplyScalar(-1),Ii.applyQuaternion(this.worldQuaternionStart.clone().invert()),r.scale.copy(Ii),r.visible=this.dragging):(r.quaternion.copy(t),this.dragging?r.position.copy(this.worldPositionStart):r.position.copy(this.worldPosition),this.axis&&(r.visible=this.axis.search(r.name)!==-1));continue}r.quaternion.copy(t),this.mode==="translate"||this.mode==="scale"?(r.name==="X"&&Math.abs(bt.copy(tl).applyQuaternion(t).dot(this.eye))>.99&&(r.scale.set(1e-10,1e-10,1e-10),r.visible=!1),r.name==="Y"&&Math.abs(bt.copy(_r).applyQuaternion(t).dot(this.eye))>.99&&(r.scale.set(1e-10,1e-10,1e-10),r.visible=!1),r.name==="Z"&&Math.abs(bt.copy(il).applyQuaternion(t).dot(this.eye))>.99&&(r.scale.set(1e-10,1e-10,1e-10),r.visible=!1),r.name==="XY"&&Math.abs(bt.copy(il).applyQuaternion(t).dot(this.eye))<.2&&(r.scale.set(1e-10,1e-10,1e-10),r.visible=!1),r.name==="YZ"&&Math.abs(bt.copy(tl).applyQuaternion(t).dot(this.eye))<.2&&(r.scale.set(1e-10,1e-10,1e-10),r.visible=!1),r.name==="XZ"&&Math.abs(bt.copy(_r).applyQuaternion(t).dot(this.eye))<.2&&(r.scale.set(1e-10,1e-10,1e-10),r.visible=!1)):this.mode==="rotate"&&(bh.copy(t),bt.copy(this.eye).applyQuaternion(Mt.copy(t).invert()),r.name.search("E")!==-1&&r.quaternion.setFromRotationMatrix(eI.lookAt(this.eye,$E,_r)),r.name==="X"&&(Mt.setFromAxisAngle(tl,Math.atan2(-bt.y,bt.z)),Mt.multiplyQuaternions(bh,Mt),r.quaternion.copy(Mt)),r.name==="Y"&&(Mt.setFromAxisAngle(_r,Math.atan2(bt.x,bt.z)),Mt.multiplyQuaternions(bh,Mt),r.quaternion.copy(Mt)),r.name==="Z"&&(Mt.setFromAxisAngle(il,Math.atan2(bt.y,bt.x)),Mt.multiplyQuaternions(bh,Mt),r.quaternion.copy(Mt))),r.visible=r.visible&&(r.name.indexOf("X")===-1||this.showX),r.visible=r.visible&&(r.name.indexOf("Y")===-1||this.showY),r.visible=r.visible&&(r.name.indexOf("Z")===-1||this.showZ),r.visible=r.visible&&(r.name.indexOf("E")===-1||this.showX&&this.showY&&this.showZ),r.material._color=r.material._color||r.material.color.clone(),r.material._opacity=r.material._opacity||r.material.opacity,r.material.color.copy(r.material._color),r.material.opacity=r.material._opacity,this.enabled&&this.axis&&(r.name===this.axis||this.axis.split("").some(function(a){return r.name===a}))&&(r.material.color.setHex(16776960),r.material.opacity=1)}super.updateMatrixWorld(e)}}class lF extends Te{constructor(){super(new er(1e5,1e5,2,2),new Mi({visible:!1,wireframe:!0,side:Ai,transparent:!0,opacity:.1,toneMapped:!1})),this.isTransformControlsPlane=!0,this.type="TransformControlsPlane"}updateMatrixWorld(e){let t=this.space;switch(this.position.copy(this.worldPosition),this.mode==="scale"&&(t="local"),yh.copy(tl).applyQuaternion(t==="local"?this.worldQuaternion:Wh),Ya.copy(_r).applyQuaternion(t==="local"?this.worldQuaternion:Wh),Wa.copy(il).applyQuaternion(t==="local"?this.worldQuaternion:Wh),bt.copy(Ya),this.mode){case"translate":case"scale":switch(this.axis){case"X":bt.copy(this.eye).cross(yh),Dn.copy(yh).cross(bt);break;case"Y":bt.copy(this.eye).cross(Ya),Dn.copy(Ya).cross(bt);break;case"Z":bt.copy(this.eye).cross(Wa),Dn.copy(Wa).cross(bt);break;case"XY":Dn.copy(Wa);break;case"YZ":Dn.copy(yh);break;case"XZ":bt.copy(Wa),Dn.copy(Ya);break;case"XYZ":case"E":Dn.set(0,0,0);break}break;case"rotate":default:Dn.set(0,0,0)}Dn.length()===0?this.quaternion.copy(this.cameraQuaternion):(tI.lookAt(Ii.set(0,0,0),Dn,bt),this.quaternion.setFromRotationMatrix(tI)),super.updateMatrixWorld(e)}}class Fu{constructor(e,t,i,n,r,o=5,a=!0){if(F(this,"onDraggingStarted",new oe),F(this,"onDraggingEnded",new oe),F(this,"onDisposed",new oe),F(this,"normal"),F(this,"origin"),F(this,"three",new ri),F(this,"components"),F(this,"world"),F(this,"type","default"),F(this,"_helper"),F(this,"_visible",!0),F(this,"_enabled",!0),F(this,"_controlsActive",!1),F(this,"_arrowBoundBox",new Te),F(this,"_planeMesh"),F(this,"_controls"),F(this,"_hiddenMaterial",new Mi({visible:!1})),F(this,"update",()=>{this._enabled&&this.three.setFromNormalAndCoplanarPoint(this.normal,this._helper.position)}),F(this,"changeDrag",l=>{this._visible=!l.value,this.preventCameraMovement(),this.notifyDraggingChanged(l)}),this.components=e,this.world=t,!t.renderer)throw new Error("The given world must have a renderer!");this.normal=n,this.origin=i,t.renderer.setPlane(!0,this.three),this._planeMesh=Fu.newPlaneMesh(o,r),this._helper=this.newHelper(),this._controls=this.newTransformControls(),this.three.setFromNormalAndCoplanarPoint(n,i),a&&this.toggleControls(!0)}get enabled(){return this._enabled}set enabled(e){if(!this.world.isDisposing){if(!this.world.renderer)throw new Error("No renderer found for clipping plane!");this._enabled=e,this.world.renderer.setPlane(e,this.three)}}get visible(){return this._visible}set visible(e){this._visible=e,this._controls.object.visible=e,this._helper.visible=e,this.toggleControls(e)}get meshes(){return[this._planeMesh,this._arrowBoundBox]}get planeMaterial(){return this._planeMesh.material}set planeMaterial(e){this._planeMesh.material=e}get size(){return this._planeMesh.scale.x}set size(e){this._planeMesh.scale.set(e,e,e)}get helper(){return this._helper}setFromNormalAndCoplanarPoint(e,t){this.reset(),this.normal.equals(e)||(this.normal.copy(e),this._helper.lookAt(e)),this.origin.copy(t),this._helper.position.copy(t),this._helper.updateMatrix(),this.update()}dispose(){this._enabled=!1,this.onDraggingStarted.reset(),this.onDraggingEnded.reset(),this._helper.removeFromParent(),this.world.renderer&&this.world.renderer.setPlane(!1,this.three),this._arrowBoundBox.removeFromParent(),this._arrowBoundBox.geometry.dispose(),this._planeMesh.geometry.dispose(),this._controls.object.removeFromParent(),this._controls.dispose(),this.onDisposed.trigger(),this.onDisposed.reset()}reset(){const e=new P(1,0,0),t=new P;this.normal.equals(e)||(this.normal.copy(e),this._helper.lookAt(e)),this.origin.copy(t),this._helper.position.copy(t),this._helper.updateMatrix()}toggleControls(e){if(e){if(this._controlsActive)return;this._controls.addEventListener("change",this.update),this._controls.addEventListener("dragging-changed",this.changeDrag)}else this._controls.removeEventListener("change",this.update),this._controls.removeEventListener("dragging-changed",this.changeDrag);this._controlsActive=e}newTransformControls(){if(!this.world.renderer)throw new Error("No renderer found for clipping plane!");const e=this.world.camera.three,t=this.world.renderer.three.domElement,i=new eF(e,t);return this.initializeControls(i),this.world.scene.three.add(i.object),i}initializeControls(e){e.attach(this._helper),e.showX=!1,e.showY=!1,e.setSpace("local"),this.createArrowBoundingBox(),e.object.children[0].children[0].add(this._arrowBoundBox)}createArrowBoundingBox(){this._arrowBoundBox.geometry=new ui(.18,.18,1.2),this._arrowBoundBox.material=this._hiddenMaterial,this._arrowBoundBox.rotateX(Math.PI/2),this._arrowBoundBox.updateMatrix(),this._arrowBoundBox.geometry.applyMatrix4(this._arrowBoundBox.matrix)}notifyDraggingChanged(e){e.value?this.onDraggingStarted.trigger():this.onDraggingEnded.trigger()}preventCameraMovement(){this.world.camera.enabled=this._visible}newHelper(){const e=new Wt;return e.lookAt(this.normal),e.position.copy(this.origin),this._planeMesh.position.z+=.01,e.add(this._planeMesh),this.world.scene.three.add(e),e}static newPlaneMesh(e,t){const i=new er(1),n=new Te(i,t);return n.scale.set(e,e,e),n}}class cF extends Ea{constructor(){super(...arguments),F(this,"_config",{enabled:{value:!0,type:"Boolean"},visible:{value:!0,type:"Boolean"},color:{value:new Ne,type:"Color"},opacity:{type:"Number",interpolable:!0,value:1,min:0,max:1},size:{type:"Number",interpolable:!0,value:2,min:0,max:100}})}get enabled(){return this._config.enabled.value}set enabled(e){this._config.enabled.value=e,this._component.enabled=e}get visible(){return this._config.visible.value}set visible(e){this._config.visible.value=e,this._component.visible=e}get color(){return this._config.color.value}set color(e){this._config.color.value=e,this._component.material.color.copy(e)}get opacity(){return this._config.opacity.value}set opacity(e){this._config.opacity.value=e,this._component.material.opacity=e}get size(){return this._config.size.value}set size(e){this._config.size.value=e,this._component.size=e}}const hv=class Xh extends Ke{constructor(e){super(e),F(this,"onSetup",new oe),F(this,"onBeforeDrag",new oe),F(this,"onAfterDrag",new oe),F(this,"onBeforeCreate",new oe),F(this,"onBeforeCancel",new oe),F(this,"onAfterCancel",new oe),F(this,"onBeforeDelete",new oe),F(this,"onAfterCreate",new oe),F(this,"onAfterDelete",new oe),F(this,"onDisposed",new oe),F(this,"isSetup",!1),F(this,"orthogonalY",!1),F(this,"toleranceOrthogonalY",.7),F(this,"Type",Fu),F(this,"list",[]),F(this,"config",new cF(this,this.components,"Clipper",Xh.uuid)),F(this,"_defaultConfig",{color:new Ne(12255487),opacity:.2,size:2}),F(this,"_material",new Mi({color:12255487,side:Ai,transparent:!0,opacity:.2})),F(this,"_size",5),F(this,"_enabled",!1),F(this,"_visible",!0),F(this,"_onStartDragging",()=>{this.onBeforeDrag.trigger()}),F(this,"_onEndDragging",()=>{this.onAfterDrag.trigger()}),this.components.add(Xh.uuid,this)}get enabled(){return this._enabled}set enabled(e){this._enabled=e;for(const t of this.list)t.enabled=e;this.updateMaterialsAndPlanes()}get visible(){return this._visible}set visible(e){this._visible=e;for(const t of this.list)t.visible=e}get material(){return this._material}set material(e){this._material=e;for(const t of this.list)t.planeMaterial=e}get size(){return this._size}set size(e){this._size=e;for(const t of this.list)t.size=e}dispose(){this._enabled=!1,this.components.get(Mu).list.delete(this.config.uuid);for(const e of this.list)e.dispose();this.list.length=0,this._material.dispose(),this.onBeforeCreate.reset(),this.onBeforeCancel.reset(),this.onBeforeDelete.reset(),this.onBeforeDrag.reset(),this.onAfterCreate.reset(),this.onAfterCancel.reset(),this.onAfterDelete.reset(),this.onAfterDrag.reset(),this.onDisposed.trigger(Xh.uuid),this.onDisposed.reset()}create(e){const t=this.components.get(fn).get(e).castRay();return t?this.createPlaneFromIntersection(e,t):null}createFromNormalAndCoplanarPoint(e,t,i){const n=this.newPlane(e,i,t);return this.updateMaterialsAndPlanes(),n}delete(e,t){t||(t=this.pickPlane(e)),t&&this.deletePlane(t)}deleteAll(e){const t=[...this.list];for(const i of t)if(!e||e.has(i.type)){this.delete(i.world,i);const n=this.list.indexOf(i);n!==-1&&this.list.splice(n,1)}}setup(e){const t={...this._defaultConfig,...e};this.config.color=t.color,this.config.opacity=t.opacity,this.config.size=t.size,this.isSetup=!0,this.onSetup.trigger()}deletePlane(e){const t=this.list.indexOf(e);if(t!==-1){if(this.list.splice(t,1),!e.world.renderer)throw new Error("Renderer not found for this plane's world!");e.world.renderer.setPlane(!1,e.three),e.dispose(),this.updateMaterialsAndPlanes(),this.onAfterDelete.trigger(e)}}pickPlane(e){const t=this.components.get(fn).get(e),i=this.getAllPlaneMeshes(),n=t.castRay(i);if(n){const r=n.object;return this.list.find(o=>o.meshes.includes(r))}}getAllPlaneMeshes(){const e=[];for(const t of this.list)e.push(...t.meshes);return e}createPlaneFromIntersection(e,t){var i;if(!e.renderer)throw new Error("The given world must have a renderer!");const n=t.point.distanceTo(new P(0,0,0)),r=(i=t.face)==null?void 0:i.normal;if(!n||!r)return null;const o=this.getWorldNormal(t,r),a=this.newPlane(e,t.point,o.negate());return a.visible=this._visible,a.size=this._size,e.renderer.setPlane(!0,a.three),this.updateMaterialsAndPlanes(),a}getWorldNormal(e,t){const i=e.object;let n=e.object.matrixWorld.clone();if(i instanceof ji&&e.instanceId!==void 0){const a=new _e;i.getMatrixAt(e.instanceId,a),n=a.multiply(n)}const r=new Xe().getNormalMatrix(n),o=t.clone().applyMatrix3(r).normalize();return this.normalizePlaneDirectionY(o),o}normalizePlaneDirectionY(e){this.orthogonalY&&(e.y>this.toleranceOrthogonalY&&(e.x=0,e.y=1,e.z=0),e.y<-this.toleranceOrthogonalY&&(e.x=0,e.y=-1,e.z=0))}newPlane(e,t,i){const n=new this.Type(this.components,e,t,i,this._material);return n.onDraggingStarted.add(this._onStartDragging),n.onDraggingEnded.add(this._onEndDragging),this.list.push(n),this.onAfterCreate.trigger(n),n}updateMaterialsAndPlanes(){const e=this.components.get(sv);for(const[t,i]of e.list){if(!i.renderer)continue;i.renderer.updateClippingPlanes();const{clippingPlanes:n}=i.renderer;for(const r of i.meshes)if(r.material)if(Array.isArray(r.material))for(const o of r.material)o.clippingPlanes=n;else r.material.clippingPlanes=n}}};F(hv,"uuid","66290bc5-18c4-4cd1-9379-2e17a0617611");let ua=hv;class hF{constructor(e){F(this,"enabled",!1),F(this,"id","FirstPerson"),this.camera=e}set(e){if(this.enabled=e,e){if(this.camera.projection.current!=="Perspective"){this.camera.set("Orbit");return}this.setupFirstPersonCamera()}}setupFirstPersonCamera(){const e=this.camera.controls,t=new P;e.distance--,e.getPosition(t),e.minDistance=1,e.maxDistance=1,e.distance=1,e.moveTo(t.x,t.y,t.z),e.truckSpeed=50,e.mouseButtons.wheel=Kt.ACTION.DOLLY,e.touches.two=Kt.ACTION.TOUCH_ZOOM_TRUCK}}class uF{constructor(e){F(this,"enabled",!0),F(this,"id","Orbit"),this.camera=e,this.activateOrbitControls()}set(e){this.enabled=e,e&&this.activateOrbitControls()}activateOrbitControls(){const e=this.camera.controls;e.minDistance=1,e.maxDistance=300;const t=new P;e.getPosition(t);const i=t.length();e.distance=i,e.truckSpeed=2;const{rotation:n}=this.camera.three,r=new P(0,0,-1).applyEuler(n),o=t.addScaledVector(r,i);e.moveTo(o.x,o.y,o.z)}}class dF{constructor(e){F(this,"enabled",!1),F(this,"id","Plan"),F(this,"mouseAction1"),F(this,"mouseAction2"),F(this,"mouseInitialized",!1),F(this,"defaultAzimuthSpeed"),F(this,"defaultPolarSpeed"),this.camera=e,this.defaultAzimuthSpeed=e.controls.azimuthRotateSpeed,this.defaultPolarSpeed=e.controls.polarRotateSpeed}set(e){this.enabled=e;const t=this.camera.controls;t.azimuthRotateSpeed=e?0:this.defaultAzimuthSpeed,t.polarRotateSpeed=e?0:this.defaultPolarSpeed,this.mouseInitialized||(this.mouseAction1=t.touches.one,this.mouseAction2=t.touches.two,this.mouseInitialized=!0),e?(t.mouseButtons.left=Kt.ACTION.TRUCK,t.touches.one=Kt.ACTION.TOUCH_TRUCK,t.touches.two=Kt.ACTION.TOUCH_ZOOM):(t.mouseButtons.left=Kt.ACTION.ROTATE,t.touches.one=this.mouseAction1,t.touches.two=this.mouseAction2)}}class fF{constructor(e){F(this,"onChanged",new oe),F(this,"current","Perspective"),F(this,"camera"),F(this,"matchOrthoDistanceEnabled",!1),F(this,"_component"),F(this,"_previousDistance",-1),this._component=e,this.camera=e.three}async set(e){this.current!==e&&(e==="Orthographic"?this.setOrthoCamera():await this.setPerspectiveCamera(),this.onChanged.trigger(this.camera))}async toggle(){const e=this.current==="Perspective"?"Orthographic":"Perspective";await this.set(e)}setOrthoCamera(){if(this._component.mode===null||this._component.mode.id==="FirstPerson")return;this._previousDistance=this._component.controls.distance,this._component.controls.distance=200;const e=this.getPerspectiveDims();if(!e)return;const{width:t,height:i}=e;this.setupOrthoCamera(i,t),this.camera=this._component.threeOrtho,this.current="Orthographic"}getPerspectiveDims(){const e=this._component.currentWorld;if(!e||!e.renderer)return null;const t=new P;this._component.threePersp.getWorldDirection(t);const i=new P;this._component.controls.getTarget(i);const n=i.clone().sub(this._component.threePersp.position).dot(t),r=e.renderer.getSize(),o=r.x/r.y,a=this._component.threePersp,l=n*2*Math.atan(a.fov*(Math.PI/180)/2);return{width:l*o,height:l}}setupOrthoCamera(e,t){this._component.controls.mouseButtons.wheel=Kt.ACTION.ZOOM,this._component.controls.mouseButtons.middle=Kt.ACTION.ZOOM,this._component.controls.touches.two=Kt.ACTION.TOUCH_ZOOM_TRUCK,this._component.controls.touches.three=Kt.ACTION.TOUCH_ZOOM_TRUCK,this._component.controls.dollySpeed=5;const i=this._component.threePersp,n=this._component.threeOrtho;n.zoom=1,n.left=t/-2,n.right=t/2,n.top=e/2,n.bottom=e/-2,n.updateProjectionMatrix(),n.position.copy(i.position),n.quaternion.copy(i.quaternion),this._component.controls.camera=n}getDistance(){const e=this._component.threePersp,t=this._component.threeOrtho;return(t.top-t.bottom)/t.zoom/(2*Math.atan(e.fov*(Math.PI/180)/2))}async setPerspectiveCamera(){this._component.controls.mouseButtons.wheel=Kt.ACTION.DOLLY,this._component.controls.mouseButtons.middle=Kt.ACTION.DOLLY;const e=this._component.threePersp,t=this._component.threeOrtho;e.position.copy(t.position),e.quaternion.copy(t.quaternion),this._component.controls.mouseButtons.wheel=Kt.ACTION.DOLLY,this._component.controls.touches.two=Kt.ACTION.TOUCH_DOLLY_TRUCK,this._component.controls.touches.three=Kt.ACTION.TOUCH_DOLLY_TRUCK,this._component.controls.dollySpeed=5,this.matchOrthoDistanceEnabled?this._component.controls.distance=this.getDistance():this._component.controls.distance=this._previousDistance,await this._component.controls.zoomTo(1),e.updateProjectionMatrix(),this._component.controls.camera=e,this.camera=e,this.current="Perspective"}}class pF extends Ll{constructor(e){super(e),F(this,"projection"),F(this,"threeOrtho"),F(this,"threePersp"),F(this,"_userInputButtons",{}),F(this,"_frustumSize",50),F(this,"_navigationModes",new Map),F(this,"_mode",null),F(this,"previousSize",null),this.threePersp=this.three,this.threeOrtho=this.newOrthoCamera(),this.projection=new fF(this),this.onAspectUpdated.add(()=>{this.setOrthoPerspCameraAspect()}),this.projection.onChanged.add(t=>{this.three=t,this.updateAspect()}),this.onWorldChanged.add(({action:t})=>{t==="added"&&(this._navigationModes.clear(),this._navigationModes.set("Orbit",new uF(this)),this._navigationModes.set("FirstPerson",new hF(this)),this._navigationModes.set("Plan",new dF(this)),this._mode=this._navigationModes.get("Orbit"),this.mode.set(!0,{preventTargetAdjustment:!0}),this.currentWorld&&this.currentWorld.renderer&&(this.previousSize=this.currentWorld.renderer.getSize().clone()))})}get mode(){if(!this._mode)throw new Error("Mode not found, camera not initialized");return this._mode}dispose(){super.dispose(),this.threeOrtho.removeFromParent()}set(e){if(this.mode!==null&&this.mode.id!==e){if(this.mode.set(!1),!this._navigationModes.has(e))throw new Error("The specified mode does not exist!");this._mode=this._navigationModes.get(e),this.mode.set(!0)}}async fit(e,t=1.5){if(!this.enabled)return;const i=Number.MAX_VALUE,n=Number.MIN_VALUE,r=new P(i,i,i),o=new P(n,n,n);for(const u of e){const f=new je().setFromObject(u);f.min.x<r.x&&(r.x=f.min.x),f.min.y<r.y&&(r.y=f.min.y),f.min.z<r.z&&(r.z=f.min.z),f.max.x>o.x&&(o.x=f.max.x),f.max.y>o.y&&(o.y=f.max.y),f.max.z>o.z&&(o.z=f.max.z)}const a=new je(r,o),l=new P;a.getSize(l);const c=new P;a.getCenter(c);const h=Math.max(l.x,l.y,l.z)*t,d=new vi(c,h);await this.controls.fitToSphere(d,!0)}setUserInput(e){e?this.enableUserInput():this.disableUserInput()}disableUserInput(){this._userInputButtons.left=this.controls.mouseButtons.left,this._userInputButtons.right=this.controls.mouseButtons.right,this._userInputButtons.middle=this.controls.mouseButtons.middle,this._userInputButtons.wheel=this.controls.mouseButtons.wheel,this.controls.mouseButtons.left=0,this.controls.mouseButtons.right=0,this.controls.mouseButtons.middle=0,this.controls.mouseButtons.wheel=0}enableUserInput(){Object.keys(this._userInputButtons).length!==0&&(this.controls.mouseButtons.left=this._userInputButtons.left,this.controls.mouseButtons.right=this._userInputButtons.right,this.controls.mouseButtons.middle=this._userInputButtons.middle,this.controls.mouseButtons.wheel=this._userInputButtons.wheel)}newOrthoCamera(){const e=window.innerWidth/window.innerHeight;return new Zn(this._frustumSize*e/-2,this._frustumSize*e/2,this._frustumSize/2,this._frustumSize/-2,.1,1e3)}setOrthoPerspCameraAspect(){if(!this.currentWorld||!this.currentWorld.renderer||!this.previousSize)return;const e=this.currentWorld.renderer.getSize(),t=this.threeOrtho.top,i=this.threeOrtho.right,n=e.y/this.previousSize.y,r=e.x/this.previousSize.x,o=t*n,a=i*r;this.threeOrtho.left=-a,this.threeOrtho.right=a,this.threeOrtho.top=o,this.threeOrtho.bottom=-o,this.threeOrtho.updateProjectionMatrix(),this.previousSize.copy(e)}}const iI=new Map([[fu,{forRelated:"Decomposes",forRelating:"IsDecomposedBy"}],[rm,{forRelated:"HasAssociations",forRelating:"AssociatedTo"}],[om,{forRelated:"HasAssociations",forRelating:"ClassificationForObjects"}],[am,{forRelated:"HasAssignments",forRelating:"IsGroupedBy"}],[Bl,{forRelated:"IsDefinedBy",forRelating:"DefinesOcurrence"}],[lm,{forRelated:"IsTypedBy",forRelating:"Types"}],[cm,{forRelated:"IsDefinedBy",forRelating:"Defines"}],[pu,{forRelated:"ContainedInStructure",forRelating:"ContainsElements"}],[hm,{forRelated:"AssignedToFlowElement",forRelating:"HasControlElements"}],[um,{forRelated:"ConnectedFrom",forRelating:"ConnectedTo"}],[dm,{forRelated:"HasAssignments",forRelating:"ReferencedBy"}],[fm,{forRelated:"HasContext",forRelating:"Declares"}],[pm,{forRelated:"HasAssignments",forRelating:"Controls"}],[mm,{forRelated:"Nests",forRelating:"IsNestedBy"}],[gm,{forRelated:"HasAssociations",forRelating:"DocumentRefForObjects"}]]),cu={950732822:"IFCURIREFERENCE",4075327185:"IFCTIME",1209108979:"IFCTEMPERATURERATEOFCHANGEMEASURE",3457685358:"IFCSOUNDPRESSURELEVELMEASURE",4157543285:"IFCSOUNDPOWERLEVELMEASURE",2798247006:"IFCPROPERTYSETDEFINITIONSET",1790229001:"IFCPOSITIVEINTEGER",525895558:"IFCNONNEGATIVELENGTHMEASURE",1774176899:"IFCLINEINDEX",1275358634:"IFCLANGUAGEID",2541165894:"IFCDURATION",3701338814:"IFCDAYINWEEKNUMBER",2195413836:"IFCDATETIME",937566702:"IFCDATE",1683019596:"IFCCARDINALPOINTREFERENCE",2314439260:"IFCBINARY",1500781891:"IFCAREADENSITYMEASURE",3683503648:"IFCARCINDEX",4065007721:"IFCYEARNUMBER",1718600412:"IFCWARPINGMOMENTMEASURE",51269191:"IFCWARPINGCONSTANTMEASURE",2593997549:"IFCVOLUMETRICFLOWRATEMEASURE",3458127941:"IFCVOLUMEMEASURE",3345633955:"IFCVAPORPERMEABILITYMEASURE",1278329552:"IFCTORQUEMEASURE",2591213694:"IFCTIMESTAMP",2726807636:"IFCTIMEMEASURE",743184107:"IFCTHERMODYNAMICTEMPERATUREMEASURE",2016195849:"IFCTHERMALTRANSMITTANCEMEASURE",857959152:"IFCTHERMALRESISTANCEMEASURE",2281867870:"IFCTHERMALEXPANSIONCOEFFICIENTMEASURE",2645777649:"IFCTHERMALCONDUCTIVITYMEASURE",232962298:"IFCTHERMALADMITTANCEMEASURE",296282323:"IFCTEXTTRANSFORMATION",603696268:"IFCTEXTFONTNAME",3490877962:"IFCTEXTDECORATION",1460886941:"IFCTEXTALIGNMENT",2801250643:"IFCTEXT",58845555:"IFCTEMPERATUREGRADIENTMEASURE",361837227:"IFCSPECULARROUGHNESS",2757832317:"IFCSPECULAREXPONENT",3477203348:"IFCSPECIFICHEATCAPACITYMEASURE",993287707:"IFCSOUNDPRESSUREMEASURE",846465480:"IFCSOUNDPOWERMEASURE",3471399674:"IFCSOLIDANGLEMEASURE",408310005:"IFCSHEARMODULUSMEASURE",2190458107:"IFCSECTIONALAREAINTEGRALMEASURE",3467162246:"IFCSECTIONMODULUSMEASURE",2766185779:"IFCSECONDINMINUTE",3211557302:"IFCROTATIONALSTIFFNESSMEASURE",1755127002:"IFCROTATIONALMASSMEASURE",2133746277:"IFCROTATIONALFREQUENCYMEASURE",200335297:"IFCREAL",96294661:"IFCRATIOMEASURE",3972513137:"IFCRADIOACTIVITYMEASURE",3665567075:"IFCPRESSUREMEASURE",2169031380:"IFCPRESENTABLETEXT",1364037233:"IFCPOWERMEASURE",1245737093:"IFCPOSITIVERATIOMEASURE",3054510233:"IFCPOSITIVEPLANEANGLEMEASURE",2815919920:"IFCPOSITIVELENGTHMEASURE",4042175685:"IFCPLANEANGLEMEASURE",2642773653:"IFCPLANARFORCEMEASURE",2260317790:"IFCPARAMETERVALUE",929793134:"IFCPHMEASURE",2395907400:"IFCNUMERICMEASURE",2095195183:"IFCNORMALISEDRATIOMEASURE",765770214:"IFCMONTHINYEARNUMBER",2615040989:"IFCMONETARYMEASURE",3114022597:"IFCMOMENTOFINERTIAMEASURE",1648970520:"IFCMOLECULARWEIGHTMEASURE",3177669450:"IFCMOISTUREDIFFUSIVITYMEASURE",1753493141:"IFCMODULUSOFSUBGRADEREACTIONMEASURE",1052454078:"IFCMODULUSOFROTATIONALSUBGRADEREACTIONMEASURE",2173214787:"IFCMODULUSOFLINEARSUBGRADEREACTIONMEASURE",3341486342:"IFCMODULUSOFELASTICITYMEASURE",102610177:"IFCMINUTEINHOUR",3531705166:"IFCMASSPERLENGTHMEASURE",3124614049:"IFCMASSMEASURE",4017473158:"IFCMASSFLOWRATEMEASURE",1477762836:"IFCMASSDENSITYMEASURE",2486716878:"IFCMAGNETICFLUXMEASURE",286949696:"IFCMAGNETICFLUXDENSITYMEASURE",151039812:"IFCLUMINOUSINTENSITYMEASURE",2755797622:"IFCLUMINOUSINTENSITYDISTRIBUTIONMEASURE",2095003142:"IFCLUMINOUSFLUXMEASURE",503418787:"IFCLOGICAL",3086160713:"IFCLINEARVELOCITYMEASURE",1307019551:"IFCLINEARSTIFFNESSMEASURE",2128979029:"IFCLINEARMOMENTMEASURE",191860431:"IFCLINEARFORCEMEASURE",1243674935:"IFCLENGTHMEASURE",3258342251:"IFCLABEL",2054016361:"IFCKINEMATICVISCOSITYMEASURE",3192672207:"IFCISOTHERMALMOISTURECAPACITYMEASURE",3686016028:"IFCIONCONCENTRATIONMEASURE",3809634241:"IFCINTEGERCOUNTRATEMEASURE",1939436016:"IFCINTEGER",2679005408:"IFCINDUCTANCEMEASURE",3358199106:"IFCILLUMINANCEMEASURE",983778844:"IFCIDENTIFIER",2589826445:"IFCHOURINDAY",1158859006:"IFCHEATINGVALUEMEASURE",3113092358:"IFCHEATFLUXDENSITYMEASURE",3064340077:"IFCGLOBALLYUNIQUEID",3044325142:"IFCFREQUENCYMEASURE",1361398929:"IFCFORCEMEASURE",2590844177:"IFCFONTWEIGHT",2715512545:"IFCFONTVARIANT",1102727119:"IFCFONTSTYLE",2078135608:"IFCENERGYMEASURE",2506197118:"IFCELECTRICVOLTAGEMEASURE",2951915441:"IFCELECTRICRESISTANCEMEASURE",3790457270:"IFCELECTRICCURRENTMEASURE",2093906313:"IFCELECTRICCONDUCTANCEMEASURE",3818826038:"IFCELECTRICCHARGEMEASURE",1827137117:"IFCELECTRICCAPACITANCEMEASURE",69416015:"IFCDYNAMICVISCOSITYMEASURE",524656162:"IFCDOSEEQUIVALENTMEASURE",4134073009:"IFCDIMENSIONCOUNT",1514641115:"IFCDESCRIPTIVEMEASURE",300323983:"IFCDAYLIGHTSAVINGHOUR",86635668:"IFCDAYINMONTHNUMBER",94842927:"IFCCURVATUREMEASURE",1778710042:"IFCCOUNTMEASURE",3238673880:"IFCCONTEXTDEPENDENTMEASURE",3812528620:"IFCCOMPOUNDPLANEANGLEMEASURE",2991860651:"IFCCOMPLEXNUMBER",1867003952:"IFCBOXALIGNMENT",2735952531:"IFCBOOLEAN",2650437152:"IFCAREAMEASURE",632304761:"IFCANGULARVELOCITYMEASURE",360377573:"IFCAMOUNTOFSUBSTANCEMEASURE",4182062534:"IFCACCELERATIONMEASURE",3699917729:"IFCABSORBEDDOSEMEASURE",1971632696:"IFCGEOSLICE",2680139844:"IFCGEOMODEL",24726584:"IFCELECTRICFLOWTREATMENTDEVICE",3693000487:"IFCDISTRIBUTIONBOARD",3460952963:"IFCCONVEYORSEGMENT",3999819293:"IFCCAISSONFOUNDATION",3314249567:"IFCBOREHOLE",4196446775:"IFCBEARING",325726236:"IFCALIGNMENT",3425753595:"IFCTRACKELEMENT",991950508:"IFCSIGNAL",3798194928:"IFCREINFORCEDSOIL",3290496277:"IFCRAIL",1383356374:"IFCPAVEMENT",2182337498:"IFCNAVIGATIONELEMENT",234836483:"IFCMOORINGDEVICE",2078563270:"IFCMOBILETELECOMMUNICATIONSAPPLIANCE",1638804497:"IFCLIQUIDTERMINAL",1154579445:"IFCLINEARPOSITIONINGELEMENT",2696325953:"IFCKERB",2713699986:"IFCGEOTECHNICALASSEMBLY",2142170206:"IFCELECTRICFLOWTREATMENTDEVICETYPE",3376911765:"IFCEARTHWORKSFILL",1077100507:"IFCEARTHWORKSELEMENT",3071239417:"IFCEARTHWORKSCUT",479945903:"IFCDISTRIBUTIONBOARDTYPE",3426335179:"IFCDEEPFOUNDATION",1502416096:"IFCCOURSE",2940368186:"IFCCONVEYORSEGMENTTYPE",3203706013:"IFCCAISSONFOUNDATIONTYPE",3862327254:"IFCBUILTSYSTEM",1876633798:"IFCBUILTELEMENT",963979645:"IFCBRIDGEPART",644574406:"IFCBRIDGE",3649138523:"IFCBEARINGTYPE",1662888072:"IFCALIGNMENTVERTICAL",317615605:"IFCALIGNMENTSEGMENT",1545765605:"IFCALIGNMENTHORIZONTAL",4266260250:"IFCALIGNMENTCANT",3956297820:"IFCVIBRATIONDAMPERTYPE",1530820697:"IFCVIBRATIONDAMPER",840318589:"IFCVEHICLE",1953115116:"IFCTRANSPORTATIONDEVICE",618700268:"IFCTRACKELEMENTTYPE",2281632017:"IFCTENDONCONDUITTYPE",3663046924:"IFCTENDONCONDUIT",42703149:"IFCSINESPIRAL",1894708472:"IFCSIGNALTYPE",3599934289:"IFCSIGNTYPE",33720170:"IFCSIGN",1027922057:"IFCSEVENTHORDERPOLYNOMIALSPIRAL",544395925:"IFCSEGMENTEDREFERENCECURVE",3649235739:"IFCSECONDORDERPOLYNOMIALSPIRAL",550521510:"IFCROADPART",146592293:"IFCROAD",3818125796:"IFCRELADHERESTOELEMENT",4021432810:"IFCREFERENT",1891881377:"IFCRAILWAYPART",3992365140:"IFCRAILWAY",1763565496:"IFCRAILTYPE",1946335990:"IFCPOSITIONINGELEMENT",514975943:"IFCPAVEMENTTYPE",506776471:"IFCNAVIGATIONELEMENTTYPE",710110818:"IFCMOORINGDEVICETYPE",1950438474:"IFCMOBILETELECOMMUNICATIONSAPPLIANCETYPE",976884017:"IFCMARINEPART",525669439:"IFCMARINEFACILITY",1770583370:"IFCLIQUIDTERMINALTYPE",2176059722:"IFCLINEARELEMENT",679976338:"IFCKERBTYPE",3948183225:"IFCIMPACTPROTECTIONDEVICETYPE",2568555532:"IFCIMPACTPROTECTIONDEVICE",2898700619:"IFCGRADIENTCURVE",1594536857:"IFCGEOTECHNICALSTRATUM",4230923436:"IFCGEOTECHNICALELEMENT",4228831410:"IFCFACILITYPARTCOMMON",1310830890:"IFCFACILITYPART",24185140:"IFCFACILITY",4234616927:"IFCDIRECTRIXDERIVEDREFERENCESWEPTAREASOLID",1306400036:"IFCDEEPFOUNDATIONTYPE",4189326743:"IFCCOURSETYPE",2000195564:"IFCCOSINESPIRAL",3497074424:"IFCCLOTHOID",1626504194:"IFCBUILTELEMENTTYPE",3651464721:"IFCVEHICLETYPE",1229763772:"IFCTRIANGULATEDIRREGULARNETWORK",3665877780:"IFCTRANSPORTATIONDEVICETYPE",782932809:"IFCTHIRDORDERPOLYNOMIALSPIRAL",2735484536:"IFCSPIRAL",1356537516:"IFCSECTIONEDSURFACE",1290935644:"IFCSECTIONEDSOLIDHORIZONTAL",1862484736:"IFCSECTIONEDSOLID",1441486842:"IFCRELPOSITIONS",1033248425:"IFCRELASSOCIATESPROFILEDEF",3381221214:"IFCPOLYNOMIALCURVE",2485787929:"IFCOFFSETCURVEBYDISTANCES",590820931:"IFCOFFSETCURVE",3465909080:"IFCINDEXEDPOLYGONALTEXTUREMAP",593015953:"IFCDIRECTRIXCURVESWEPTAREASOLID",4212018352:"IFCCURVESEGMENT",3425423356:"IFCAXIS2PLACEMENTLINEAR",823603102:"IFCSEGMENT",2165702409:"IFCPOINTBYDISTANCEEXPRESSION",182550632:"IFCOPENCROSSPROFILEDEF",388784114:"IFCLINEARPLACEMENT",536804194:"IFCALIGNMENTHORIZONTALSEGMENT",3752311538:"IFCALIGNMENTCANTSEGMENT",1010789467:"IFCTEXTURECOORDINATEINDICESWITHVOIDS",222769930:"IFCTEXTURECOORDINATEINDICES",2691318326:"IFCQUANTITYNUMBER",3633395639:"IFCALIGNMENTVERTICALSEGMENT",2879124712:"IFCALIGNMENTPARAMETERSEGMENT",25142252:"IFCCONTROLLER",3087945054:"IFCALARM",4288193352:"IFCACTUATOR",630975310:"IFCUNITARYCONTROLELEMENT",4086658281:"IFCSENSOR",2295281155:"IFCPROTECTIVEDEVICETRIPPINGUNIT",182646315:"IFCFLOWINSTRUMENT",1426591983:"IFCFIRESUPPRESSIONTERMINAL",819412036:"IFCFILTER",3415622556:"IFCFAN",1003880860:"IFCELECTRICTIMECONTROL",402227799:"IFCELECTRICMOTOR",264262732:"IFCELECTRICGENERATOR",3310460725:"IFCELECTRICFLOWSTORAGEDEVICE",862014818:"IFCELECTRICDISTRIBUTIONBOARD",1904799276:"IFCELECTRICAPPLIANCE",1360408905:"IFCDUCTSILENCER",3518393246:"IFCDUCTSEGMENT",342316401:"IFCDUCTFITTING",562808652:"IFCDISTRIBUTIONCIRCUIT",4074379575:"IFCDAMPER",3640358203:"IFCCOOLINGTOWER",4136498852:"IFCCOOLEDBEAM",2272882330:"IFCCONDENSER",3571504051:"IFCCOMPRESSOR",3221913625:"IFCCOMMUNICATIONSAPPLIANCE",639361253:"IFCCOIL",3902619387:"IFCCHILLER",4217484030:"IFCCABLESEGMENT",1051757585:"IFCCABLEFITTING",3758799889:"IFCCABLECARRIERSEGMENT",635142910:"IFCCABLECARRIERFITTING",2938176219:"IFCBURNER",32344328:"IFCBOILER",2906023776:"IFCBEAMSTANDARDCASE",277319702:"IFCAUDIOVISUALAPPLIANCE",2056796094:"IFCAIRTOAIRHEATRECOVERY",177149247:"IFCAIRTERMINALBOX",1634111441:"IFCAIRTERMINAL",486154966:"IFCWINDOWSTANDARDCASE",4237592921:"IFCWASTETERMINAL",4156078855:"IFCWALLELEMENTEDCASE",4207607924:"IFCVALVE",4292641817:"IFCUNITARYEQUIPMENT",3179687236:"IFCUNITARYCONTROLELEMENTTYPE",3026737570:"IFCTUBEBUNDLE",3825984169:"IFCTRANSFORMER",812556717:"IFCTANK",1162798199:"IFCSWITCHINGDEVICE",385403989:"IFCSTRUCTURALLOADCASE",1404847402:"IFCSTACKTERMINAL",1999602285:"IFCSPACEHEATER",3420628829:"IFCSOLARDEVICE",3027962421:"IFCSLABSTANDARDCASE",3127900445:"IFCSLABELEMENTEDCASE",1329646415:"IFCSHADINGDEVICE",3053780830:"IFCSANITARYTERMINAL",2572171363:"IFCREINFORCINGBARTYPE",1232101972:"IFCRATIONALBSPLINECURVEWITHKNOTS",90941305:"IFCPUMP",655969474:"IFCPROTECTIVEDEVICETRIPPINGUNITTYPE",738039164:"IFCPROTECTIVEDEVICE",1156407060:"IFCPLATESTANDARDCASE",3612865200:"IFCPIPESEGMENT",310824031:"IFCPIPEFITTING",3694346114:"IFCOUTLET",144952367:"IFCOUTERBOUNDARYCURVE",2474470126:"IFCMOTORCONNECTION",1911478936:"IFCMEMBERSTANDARDCASE",1437502449:"IFCMEDICALDEVICE",629592764:"IFCLIGHTFIXTURE",76236018:"IFCLAMP",2176052936:"IFCJUNCTIONBOX",4175244083:"IFCINTERCEPTOR",2068733104:"IFCHUMIDIFIER",3319311131:"IFCHEATEXCHANGER",2188021234:"IFCFLOWMETER",1209101575:"IFCEXTERNALSPATIALELEMENT",484807127:"IFCEVAPORATOR",3747195512:"IFCEVAPORATIVECOOLER",2814081492:"IFCENGINE",2417008758:"IFCELECTRICDISTRIBUTIONBOARDTYPE",3242481149:"IFCDOORSTANDARDCASE",3205830791:"IFCDISTRIBUTIONSYSTEM",400855858:"IFCCOMMUNICATIONSAPPLIANCETYPE",905975707:"IFCCOLUMNSTANDARDCASE",1677625105:"IFCCIVILELEMENT",3296154744:"IFCCHIMNEY",2674252688:"IFCCABLEFITTINGTYPE",2188180465:"IFCBURNERTYPE",1177604601:"IFCBUILDINGSYSTEM",39481116:"IFCBUILDINGELEMENTPARTTYPE",1136057603:"IFCBOUNDARYCURVE",2461110595:"IFCBSPLINECURVEWITHKNOTS",1532957894:"IFCAUDIOVISUALAPPLIANCETYPE",4088093105:"IFCWORKCALENDAR",4009809668:"IFCWINDOWTYPE",926996030:"IFCVOIDINGFEATURE",2391383451:"IFCVIBRATIONISOLATOR",2415094496:"IFCTENDONTYPE",3081323446:"IFCTENDONANCHORTYPE",413509423:"IFCSYSTEMFURNITUREELEMENT",3101698114:"IFCSURFACEFEATURE",3657597509:"IFCSTRUCTURALSURFACEACTION",2757150158:"IFCSTRUCTURALCURVEREACTION",1004757350:"IFCSTRUCTURALCURVEACTION",338393293:"IFCSTAIRTYPE",1072016465:"IFCSOLARDEVICETYPE",4074543187:"IFCSHADINGDEVICETYPE",2157484638:"IFCSEAMCURVE",2781568857:"IFCROOFTYPE",2310774935:"IFCREINFORCINGMESHTYPE",964333572:"IFCREINFORCINGELEMENTTYPE",683857671:"IFCRATIONALBSPLINESURFACEWITHKNOTS",1469900589:"IFCRAMPTYPE",2839578677:"IFCPOLYGONALFACESET",1158309216:"IFCPILETYPE",3079942009:"IFCOPENINGSTANDARDCASE",1114901282:"IFCMEDICALDEVICETYPE",3113134337:"IFCINTERSECTIONCURVE",3946677679:"IFCINTERCEPTORTYPE",2571569899:"IFCINDEXEDPOLYCURVE",3493046030:"IFCGEOGRAPHICELEMENT",1509553395:"IFCFURNITURE",1893162501:"IFCFOOTINGTYPE",2853485674:"IFCEXTERNALSPATIALSTRUCTUREELEMENT",4148101412:"IFCEVENT",132023988:"IFCENGINETYPE",2397081782:"IFCELEMENTASSEMBLYTYPE",2323601079:"IFCDOORTYPE",1213902940:"IFCCYLINDRICALSURFACE",1525564444:"IFCCONSTRUCTIONPRODUCTRESOURCETYPE",4105962743:"IFCCONSTRUCTIONMATERIALRESOURCETYPE",2185764099:"IFCCONSTRUCTIONEQUIPMENTRESOURCETYPE",15328376:"IFCCOMPOSITECURVEONSURFACE",3875453745:"IFCCOMPLEXPROPERTYTEMPLATE",3893394355:"IFCCIVILELEMENTTYPE",2197970202:"IFCCHIMNEYTYPE",167062518:"IFCBSPLINESURFACEWITHKNOTS",2887950389:"IFCBSPLINESURFACE",2603310189:"IFCADVANCEDBREPWITHVOIDS",1635779807:"IFCADVANCEDBREP",2916149573:"IFCTRIANGULATEDFACESET",1935646853:"IFCTOROIDALSURFACE",2387106220:"IFCTESSELLATEDFACESET",3206491090:"IFCTASKTYPE",699246055:"IFCSURFACECURVE",4095615324:"IFCSUBCONTRACTRESOURCETYPE",603775116:"IFCSTRUCTURALSURFACEREACTION",4015995234:"IFCSPHERICALSURFACE",2481509218:"IFCSPATIALZONETYPE",463610769:"IFCSPATIALZONE",710998568:"IFCSPATIALELEMENTTYPE",1412071761:"IFCSPATIALELEMENT",3663146110:"IFCSIMPLEPROPERTYTEMPLATE",3243963512:"IFCREVOLVEDAREASOLIDTAPERED",816062949:"IFCREPARAMETRISEDCOMPOSITECURVESEGMENT",1521410863:"IFCRELSPACEBOUNDARY2NDLEVEL",3523091289:"IFCRELSPACEBOUNDARY1STLEVEL",427948657:"IFCRELINTERFERESELEMENTS",307848117:"IFCRELDEFINESBYTEMPLATE",1462361463:"IFCRELDEFINESBYOBJECT",2565941209:"IFCRELDECLARES",1027710054:"IFCRELASSIGNSTOGROUPBYFACTOR",3521284610:"IFCPROPERTYTEMPLATE",492091185:"IFCPROPERTYSETTEMPLATE",653396225:"IFCPROJECTLIBRARY",569719735:"IFCPROCEDURETYPE",3967405729:"IFCPREDEFINEDPROPERTYSET",1682466193:"IFCPCURVE",428585644:"IFCLABORRESOURCETYPE",2294589976:"IFCINDEXEDPOLYGONALFACEWITHVOIDS",178912537:"IFCINDEXEDPOLYGONALFACE",4095422895:"IFCGEOGRAPHICELEMENTTYPE",2652556860:"IFCFIXEDREFERENCESWEPTAREASOLID",2804161546:"IFCEXTRUDEDAREASOLIDTAPERED",4024345920:"IFCEVENTTYPE",2629017746:"IFCCURVEBOUNDEDSURFACE",1815067380:"IFCCREWRESOURCETYPE",3419103109:"IFCCONTEXT",2574617495:"IFCCONSTRUCTIONRESOURCETYPE",2059837836:"IFCCARTESIANPOINTLIST3D",1675464909:"IFCCARTESIANPOINTLIST2D",574549367:"IFCCARTESIANPOINTLIST",3406155212:"IFCADVANCEDFACE",3698973494:"IFCTYPERESOURCE",3736923433:"IFCTYPEPROCESS",901063453:"IFCTESSELLATEDITEM",1096409881:"IFCSWEPTDISKSOLIDPOLYGONAL",1042787934:"IFCRESOURCETIME",1608871552:"IFCRESOURCECONSTRAINTRELATIONSHIP",2943643501:"IFCRESOURCEAPPROVALRELATIONSHIP",2090586900:"IFCQUANTITYSET",1482703590:"IFCPROPERTYTEMPLATEDEFINITION",3778827333:"IFCPREDEFINEDPROPERTIES",2998442950:"IFCMIRROREDPROFILEDEF",853536259:"IFCMATERIALRELATIONSHIP",3404854881:"IFCMATERIALPROFILESETUSAGETAPERING",3079605661:"IFCMATERIALPROFILESETUSAGE",2852063980:"IFCMATERIALCONSTITUENTSET",3708119e3:"IFCMATERIALCONSTITUENT",1585845231:"IFCLAGTIME",2133299955:"IFCINDEXEDTRIANGLETEXTUREMAP",1437953363:"IFCINDEXEDTEXTUREMAP",3570813810:"IFCINDEXEDCOLOURMAP",1437805879:"IFCEXTERNALREFERENCERELATIONSHIP",297599258:"IFCEXTENDEDPROPERTIES",211053100:"IFCEVENTTIME",2713554722:"IFCCONVERSIONBASEDUNITWITHOFFSET",3285139300:"IFCCOLOURRGBLIST",1236880293:"IFCWORKTIME",1199560280:"IFCTIMEPERIOD",3611470254:"IFCTEXTUREVERTEXLIST",2771591690:"IFCTASKTIMERECURRING",1549132990:"IFCTASKTIME",2043862942:"IFCTABLECOLUMN",2934153892:"IFCSURFACEREINFORCEMENTAREA",609421318:"IFCSTRUCTURALLOADORRESULT",3478079324:"IFCSTRUCTURALLOADCONFIGURATION",1054537805:"IFCSCHEDULINGTIME",2439245199:"IFCRESOURCELEVELRELATIONSHIP",2433181523:"IFCREFERENCE",3915482550:"IFCRECURRENCEPATTERN",986844984:"IFCPROPERTYABSTRACTION",3843373140:"IFCPROJECTEDCRS",677532197:"IFCPRESENTATIONITEM",1507914824:"IFCMATERIALUSAGEDEFINITION",552965576:"IFCMATERIALPROFILEWITHOFFSETS",164193824:"IFCMATERIALPROFILESET",2235152071:"IFCMATERIALPROFILE",1847252529:"IFCMATERIALLAYERWITHOFFSETS",760658860:"IFCMATERIALDEFINITION",3057273783:"IFCMAPCONVERSION",4294318154:"IFCEXTERNALINFORMATION",1466758467:"IFCCOORDINATEREFERENCESYSTEM",1785450214:"IFCCOORDINATEOPERATION",775493141:"IFCCONNECTIONVOLUMEGEOMETRY",979691226:"IFCREINFORCINGBAR",3700593921:"IFCELECTRICDISTRIBUTIONPOINT",1062813311:"IFCDISTRIBUTIONCONTROLELEMENT",1052013943:"IFCDISTRIBUTIONCHAMBERELEMENT",578613899:"IFCCONTROLLERTYPE",2454782716:"IFCCHAMFEREDGEFEATURE",753842376:"IFCBEAM",3001207471:"IFCALARMTYPE",2874132201:"IFCACTUATORTYPE",3304561284:"IFCWINDOW",3512223829:"IFCWALLSTANDARDCASE",2391406946:"IFCWALL",3313531582:"IFCVIBRATIONISOLATORTYPE",2347447852:"IFCTENDONANCHOR",3824725483:"IFCTENDON",2515109513:"IFCSTRUCTURALANALYSISMODEL",4252922144:"IFCSTAIRFLIGHT",331165859:"IFCSTAIR",1529196076:"IFCSLAB",1783015770:"IFCSENSORTYPE",1376911519:"IFCROUNDEDEDGEFEATURE",2016517767:"IFCROOF",2320036040:"IFCREINFORCINGMESH",3027567501:"IFCREINFORCINGELEMENT",3055160366:"IFCRATIONALBEZIERCURVE",3283111854:"IFCRAMPFLIGHT",3024970846:"IFCRAMP",2262370178:"IFCRAILING",3171933400:"IFCPLATE",1687234759:"IFCPILE",1073191201:"IFCMEMBER",900683007:"IFCFOOTING",3508470533:"IFCFLOWTREATMENTDEVICE",2223149337:"IFCFLOWTERMINAL",707683696:"IFCFLOWSTORAGEDEVICE",987401354:"IFCFLOWSEGMENT",3132237377:"IFCFLOWMOVINGDEVICE",4037862832:"IFCFLOWINSTRUMENTTYPE",4278956645:"IFCFLOWFITTING",2058353004:"IFCFLOWCONTROLLER",4222183408:"IFCFIRESUPPRESSIONTERMINALTYPE",1810631287:"IFCFILTERTYPE",346874300:"IFCFANTYPE",1658829314:"IFCENERGYCONVERSIONDEVICE",857184966:"IFCELECTRICALELEMENT",1634875225:"IFCELECTRICALCIRCUIT",712377611:"IFCELECTRICTIMECONTROLTYPE",1217240411:"IFCELECTRICMOTORTYPE",1365060375:"IFCELECTRICHEATERTYPE",1534661035:"IFCELECTRICGENERATORTYPE",3277789161:"IFCELECTRICFLOWSTORAGEDEVICETYPE",663422040:"IFCELECTRICAPPLIANCETYPE",855621170:"IFCEDGEFEATURE",2030761528:"IFCDUCTSILENCERTYPE",3760055223:"IFCDUCTSEGMENTTYPE",869906466:"IFCDUCTFITTINGTYPE",395920057:"IFCDOOR",3041715199:"IFCDISTRIBUTIONPORT",3040386961:"IFCDISTRIBUTIONFLOWELEMENT",1945004755:"IFCDISTRIBUTIONELEMENT",2063403501:"IFCDISTRIBUTIONCONTROLELEMENTTYPE",1599208980:"IFCDISTRIBUTIONCHAMBERELEMENTTYPE",2635815018:"IFCDISCRETEACCESSORYTYPE",1335981549:"IFCDISCRETEACCESSORY",4147604152:"IFCDIAMETERDIMENSION",3961806047:"IFCDAMPERTYPE",3495092785:"IFCCURTAINWALL",1973544240:"IFCCOVERING",2954562838:"IFCCOOLINGTOWERTYPE",335055490:"IFCCOOLEDBEAMTYPE",488727124:"IFCCONSTRUCTIONPRODUCTRESOURCE",1060000209:"IFCCONSTRUCTIONMATERIALRESOURCE",3898045240:"IFCCONSTRUCTIONEQUIPMENTRESOURCE",1163958913:"IFCCONDITIONCRITERION",2188551683:"IFCCONDITION",2816379211:"IFCCONDENSERTYPE",3850581409:"IFCCOMPRESSORTYPE",843113511:"IFCCOLUMN",2301859152:"IFCCOILTYPE",2611217952:"IFCCIRCLE",2951183804:"IFCCHILLERTYPE",1285652485:"IFCCABLESEGMENTTYPE",3293546465:"IFCCABLECARRIERSEGMENTTYPE",395041908:"IFCCABLECARRIERFITTINGTYPE",1909888760:"IFCBUILDINGELEMENTPROXYTYPE",1095909175:"IFCBUILDINGELEMENTPROXY",2979338954:"IFCBUILDINGELEMENTPART",52481810:"IFCBUILDINGELEMENTCOMPONENT",3299480353:"IFCBUILDINGELEMENT",231477066:"IFCBOILERTYPE",1916977116:"IFCBEZIERCURVE",819618141:"IFCBEAMTYPE",1967976161:"IFCBSPLINECURVE",3460190687:"IFCASSET",2470393545:"IFCANGULARDIMENSION",1871374353:"IFCAIRTOAIRHEATRECOVERYTYPE",3352864051:"IFCAIRTERMINALTYPE",1411407467:"IFCAIRTERMINALBOXTYPE",3821786052:"IFCACTIONREQUEST",1213861670:"IFC2DCOMPOSITECURVE",1033361043:"IFCZONE",3342526732:"IFCWORKSCHEDULE",4218914973:"IFCWORKPLAN",1028945134:"IFCWORKCONTROL",1133259667:"IFCWASTETERMINALTYPE",1898987631:"IFCWALLTYPE",2769231204:"IFCVIRTUALELEMENT",728799441:"IFCVALVETYPE",1911125066:"IFCUNITARYEQUIPMENTTYPE",1600972822:"IFCTUBEBUNDLETYPE",3593883385:"IFCTRIMMEDCURVE",1620046519:"IFCTRANSPORTELEMENT",1692211062:"IFCTRANSFORMERTYPE",1637806684:"IFCTIMESERIESSCHEDULE",5716631:"IFCTANKTYPE",2254336722:"IFCSYSTEM",2315554128:"IFCSWITCHINGDEVICETYPE",148013059:"IFCSUBCONTRACTRESOURCE",1975003073:"IFCSTRUCTURALSURFACECONNECTION",2986769608:"IFCSTRUCTURALRESULTGROUP",1235345126:"IFCSTRUCTURALPOINTREACTION",734778138:"IFCSTRUCTURALPOINTCONNECTION",2082059205:"IFCSTRUCTURALPOINTACTION",3987759626:"IFCSTRUCTURALPLANARACTIONVARYING",1621171031:"IFCSTRUCTURALPLANARACTION",1252848954:"IFCSTRUCTURALLOADGROUP",1721250024:"IFCSTRUCTURALLINEARACTIONVARYING",1807405624:"IFCSTRUCTURALLINEARACTION",2445595289:"IFCSTRUCTURALCURVEMEMBERVARYING",214636428:"IFCSTRUCTURALCURVEMEMBER",4243806635:"IFCSTRUCTURALCURVECONNECTION",1179482911:"IFCSTRUCTURALCONNECTION",682877961:"IFCSTRUCTURALACTION",1039846685:"IFCSTAIRFLIGHTTYPE",3112655638:"IFCSTACKTERMINALTYPE",3812236995:"IFCSPACETYPE",652456506:"IFCSPACEPROGRAM",1305183839:"IFCSPACEHEATERTYPE",3856911033:"IFCSPACE",2533589738:"IFCSLABTYPE",4097777520:"IFCSITE",4105383287:"IFCSERVICELIFE",3517283431:"IFCSCHEDULETIMECONTROL",1768891740:"IFCSANITARYTERMINALTYPE",2863920197:"IFCRELASSIGNSTASKS",160246688:"IFCRELAGGREGATES",2324767716:"IFCRAMPFLIGHTTYPE",2893384427:"IFCRAILINGTYPE",3248260540:"IFCRADIUSDIMENSION",2250791053:"IFCPUMPTYPE",1842657554:"IFCPROTECTIVEDEVICETYPE",3651124850:"IFCPROJECTIONELEMENT",3642467123:"IFCPROJECTORDERRECORD",2904328755:"IFCPROJECTORDER",2744685151:"IFCPROCEDURE",3740093272:"IFCPORT",3724593414:"IFCPOLYLINE",4017108033:"IFCPLATETYPE",4231323485:"IFCPIPESEGMENTTYPE",804291784:"IFCPIPEFITTINGTYPE",3327091369:"IFCPERMIT",2382730787:"IFCPERFORMANCEHISTORY",2837617999:"IFCOUTLETTYPE",3425660407:"IFCORDERACTION",3588315303:"IFCOPENINGELEMENT",4143007308:"IFCOCCUPANT",1916936684:"IFCMOVE",977012517:"IFCMOTORCONNECTIONTYPE",3181161470:"IFCMEMBERTYPE",2108223431:"IFCMECHANICALFASTENERTYPE",377706215:"IFCMECHANICALFASTENER",2506943328:"IFCLINEARDIMENSION",1161773419:"IFCLIGHTFIXTURETYPE",1051575348:"IFCLAMPTYPE",3827777499:"IFCLABORRESOURCE",4288270099:"IFCJUNCTIONBOXTYPE",2391368822:"IFCINVENTORY",1806887404:"IFCHUMIDIFIERTYPE",1251058090:"IFCHEATEXCHANGERTYPE",2706460486:"IFCGROUP",3009204131:"IFCGRID",200128114:"IFCGASTERMINALTYPE",814719939:"IFCFURNITURESTANDARD",263784265:"IFCFURNISHINGELEMENT",3009222698:"IFCFLOWTREATMENTDEVICETYPE",2297155007:"IFCFLOWTERMINALTYPE",1339347760:"IFCFLOWSTORAGEDEVICETYPE",1834744321:"IFCFLOWSEGMENTTYPE",1482959167:"IFCFLOWMOVINGDEVICETYPE",3815607619:"IFCFLOWMETERTYPE",3198132628:"IFCFLOWFITTINGTYPE",3907093117:"IFCFLOWCONTROLLERTYPE",1287392070:"IFCFEATUREELEMENTSUBTRACTION",2143335405:"IFCFEATUREELEMENTADDITION",2827207264:"IFCFEATUREELEMENT",2489546625:"IFCFASTENERTYPE",647756555:"IFCFASTENER",3737207727:"IFCFACETEDBREPWITHVOIDS",807026263:"IFCFACETEDBREP",3390157468:"IFCEVAPORATORTYPE",3174744832:"IFCEVAPORATIVECOOLERTYPE",3272907226:"IFCEQUIPMENTSTANDARD",1962604670:"IFCEQUIPMENTELEMENT",2107101300:"IFCENERGYCONVERSIONDEVICETYPE",1704287377:"IFCELLIPSE",2590856083:"IFCELEMENTCOMPONENTTYPE",1623761950:"IFCELEMENTCOMPONENT",4123344466:"IFCELEMENTASSEMBLY",1758889154:"IFCELEMENT",360485395:"IFCELECTRICALBASEPROPERTIES",3849074793:"IFCDISTRIBUTIONFLOWELEMENTTYPE",3256556792:"IFCDISTRIBUTIONELEMENTTYPE",681481545:"IFCDIMENSIONCURVEDIRECTEDCALLOUT",1457835157:"IFCCURTAINWALLTYPE",3295246426:"IFCCREWRESOURCE",1916426348:"IFCCOVERINGTYPE",1419761937:"IFCCOSTSCHEDULE",3895139033:"IFCCOSTITEM",3293443760:"IFCCONTROL",2559216714:"IFCCONSTRUCTIONRESOURCE",2510884976:"IFCCONIC",3732776249:"IFCCOMPOSITECURVE",300633059:"IFCCOLUMNTYPE",2937912522:"IFCCIRCLEHOLLOWPROFILEDEF",3124254112:"IFCBUILDINGSTOREY",1950629157:"IFCBUILDINGELEMENTTYPE",4031249490:"IFCBUILDING",1260505505:"IFCBOUNDEDCURVE",3649129432:"IFCBOOLEANCLIPPINGRESULT",1334484129:"IFCBLOCK",3207858831:"IFCASYMMETRICISHAPEPROFILEDEF",1674181508:"IFCANNOTATION",2296667514:"IFCACTOR",2097647324:"IFCTRANSPORTELEMENTTYPE",3473067441:"IFCTASK",1580310250:"IFCSYSTEMFURNITUREELEMENTTYPE",4124788165:"IFCSURFACEOFREVOLUTION",2809605785:"IFCSURFACEOFLINEAREXTRUSION",2028607225:"IFCSURFACECURVESWEPTAREASOLID",4070609034:"IFCSTRUCTUREDDIMENSIONCALLOUT",2218152070:"IFCSTRUCTURALSURFACEMEMBERVARYING",3979015343:"IFCSTRUCTURALSURFACEMEMBER",3689010777:"IFCSTRUCTURALREACTION",530289379:"IFCSTRUCTURALMEMBER",3136571912:"IFCSTRUCTURALITEM",3544373492:"IFCSTRUCTURALACTIVITY",451544542:"IFCSPHERE",3893378262:"IFCSPATIALSTRUCTUREELEMENTTYPE",2706606064:"IFCSPATIALSTRUCTUREELEMENT",3626867408:"IFCRIGHTCIRCULARCYLINDER",4158566097:"IFCRIGHTCIRCULARCONE",1856042241:"IFCREVOLVEDAREASOLID",2914609552:"IFCRESOURCE",1401173127:"IFCRELVOIDSELEMENT",3451746338:"IFCRELSPACEBOUNDARY",366585022:"IFCRELSERVICESBUILDINGS",4122056220:"IFCRELSEQUENCE",1058617721:"IFCRELSCHEDULESCOSTITEMS",1245217292:"IFCRELREFERENCEDINSPATIALSTRUCTURE",750771296:"IFCRELPROJECTSELEMENT",202636808:"IFCRELOVERRIDESPROPERTIES",2051452291:"IFCRELOCCUPIESSPACES",3268803585:"IFCRELNESTS",4189434867:"IFCRELINTERACTIONREQUIREMENTS",279856033:"IFCRELFLOWCONTROLELEMENTS",3940055652:"IFCRELFILLSELEMENT",781010003:"IFCRELDEFINESBYTYPE",4186316022:"IFCRELDEFINESBYPROPERTIES",693640335:"IFCRELDEFINES",2551354335:"IFCRELDECOMPOSES",2802773753:"IFCRELCOVERSSPACES",886880790:"IFCRELCOVERSBLDGELEMENTS",3242617779:"IFCRELCONTAINEDINSPATIALSTRUCTURE",3678494232:"IFCRELCONNECTSWITHREALIZINGELEMENTS",504942748:"IFCRELCONNECTSWITHECCENTRICITY",1638771189:"IFCRELCONNECTSSTRUCTURALMEMBER",3912681535:"IFCRELCONNECTSSTRUCTURALELEMENT",2127690289:"IFCRELCONNECTSSTRUCTURALACTIVITY",3190031847:"IFCRELCONNECTSPORTS",4201705270:"IFCRELCONNECTSPORTTOELEMENT",3945020480:"IFCRELCONNECTSPATHELEMENTS",1204542856:"IFCRELCONNECTSELEMENTS",826625072:"IFCRELCONNECTS",2851387026:"IFCRELASSOCIATESPROFILEPROPERTIES",2655215786:"IFCRELASSOCIATESMATERIAL",3840914261:"IFCRELASSOCIATESLIBRARY",982818633:"IFCRELASSOCIATESDOCUMENT",2728634034:"IFCRELASSOCIATESCONSTRAINT",919958153:"IFCRELASSOCIATESCLASSIFICATION",4095574036:"IFCRELASSOCIATESAPPROVAL",1327628568:"IFCRELASSOCIATESAPPLIEDVALUE",1865459582:"IFCRELASSOCIATES",205026976:"IFCRELASSIGNSTORESOURCE",3372526763:"IFCRELASSIGNSTOPROJECTORDER",2857406711:"IFCRELASSIGNSTOPRODUCT",4278684876:"IFCRELASSIGNSTOPROCESS",1307041759:"IFCRELASSIGNSTOGROUP",2495723537:"IFCRELASSIGNSTOCONTROL",1683148259:"IFCRELASSIGNSTOACTOR",3939117080:"IFCRELASSIGNS",3454111270:"IFCRECTANGULARTRIMMEDSURFACE",2798486643:"IFCRECTANGULARPYRAMID",2770003689:"IFCRECTANGLEHOLLOWPROFILEDEF",3219374653:"IFCPROXY",1451395588:"IFCPROPERTYSET",4194566429:"IFCPROJECTIONCURVE",103090709:"IFCPROJECT",4208778838:"IFCPRODUCT",2945172077:"IFCPROCESS",220341763:"IFCPLANE",603570806:"IFCPLANARBOX",3566463478:"IFCPERMEABLECOVERINGPROPERTIES",3505215534:"IFCOFFSETCURVE3D",3388369263:"IFCOFFSETCURVE2D",3888040117:"IFCOBJECT",1425443689:"IFCMANIFOLDSOLIDBREP",1281925730:"IFCLINE",572779678:"IFCLSHAPEPROFILEDEF",1484403080:"IFCISHAPEPROFILEDEF",987898635:"IFCGEOMETRICCURVESET",1268542332:"IFCFURNITURETYPE",4238390223:"IFCFURNISHINGELEMENTTYPE",3455213021:"IFCFLUIDFLOWPROPERTIES",315944413:"IFCFILLAREASTYLETILES",4203026998:"IFCFILLAREASTYLETILESYMBOLWITHSTYLE",374418227:"IFCFILLAREASTYLEHATCHING",2047409740:"IFCFACEBASEDSURFACEMODEL",477187591:"IFCEXTRUDEDAREASOLID",80994333:"IFCENERGYPROPERTIES",2835456948:"IFCELLIPSEPROFILEDEF",2777663545:"IFCELEMENTARYSURFACE",339256511:"IFCELEMENTTYPE",1883228015:"IFCELEMENTQUANTITY",1472233963:"IFCEDGELOOP",4006246654:"IFCDRAUGHTINGPREDEFINEDCURVEFONT",445594917:"IFCDRAUGHTINGPREDEFINEDCOLOUR",3073041342:"IFCDRAUGHTINGCALLOUT",526551008:"IFCDOORSTYLE",1714330368:"IFCDOORPANELPROPERTIES",2963535650:"IFCDOORLININGPROPERTIES",32440307:"IFCDIRECTION",4054601972:"IFCDIMENSIONCURVETERMINATOR",606661476:"IFCDIMENSIONCURVE",693772133:"IFCDEFINEDSYMBOL",2827736869:"IFCCURVEBOUNDEDPLANE",2601014836:"IFCCURVE",2147822146:"IFCCSGSOLID",2506170314:"IFCCSGPRIMITIVE3D",194851669:"IFCCRANERAILFSHAPEPROFILEDEF",4133800736:"IFCCRANERAILASHAPEPROFILEDEF",2485617015:"IFCCOMPOSITECURVESEGMENT",2205249479:"IFCCLOSEDSHELL",1383045692:"IFCCIRCLEPROFILEDEF",1416205885:"IFCCARTESIANTRANSFORMATIONOPERATOR3DNONUNIFORM",3331915920:"IFCCARTESIANTRANSFORMATIONOPERATOR3D",3486308946:"IFCCARTESIANTRANSFORMATIONOPERATOR2DNONUNIFORM",3749851601:"IFCCARTESIANTRANSFORMATIONOPERATOR2D",59481748:"IFCCARTESIANTRANSFORMATIONOPERATOR",1123145078:"IFCCARTESIANPOINT",2898889636:"IFCCSHAPEPROFILEDEF",2713105998:"IFCBOXEDHALFSPACE",2581212453:"IFCBOUNDINGBOX",4182860854:"IFCBOUNDEDSURFACE",2736907675:"IFCBOOLEANRESULT",2740243338:"IFCAXIS2PLACEMENT3D",3125803723:"IFCAXIS2PLACEMENT2D",4261334040:"IFCAXIS1PLACEMENT",1302238472:"IFCANNOTATIONSURFACE",2265737646:"IFCANNOTATIONFILLAREAOCCURRENCE",669184980:"IFCANNOTATIONFILLAREA",3288037868:"IFCANNOTATIONCURVEOCCURRENCE",2543172580:"IFCZSHAPEPROFILEDEF",1299126871:"IFCWINDOWSTYLE",512836454:"IFCWINDOWPANELPROPERTIES",336235671:"IFCWINDOWLININGPROPERTIES",2759199220:"IFCVERTEXLOOP",1417489154:"IFCVECTOR",427810014:"IFCUSHAPEPROFILEDEF",2347495698:"IFCTYPEPRODUCT",1628702193:"IFCTYPEOBJECT",1345879162:"IFCTWODIRECTIONREPEATFACTOR",2715220739:"IFCTRAPEZIUMPROFILEDEF",3124975700:"IFCTEXTLITERALWITHEXTENT",4282788508:"IFCTEXTLITERAL",3028897424:"IFCTERMINATORSYMBOL",3071757647:"IFCTSHAPEPROFILEDEF",230924584:"IFCSWEPTSURFACE",1260650574:"IFCSWEPTDISKSOLID",2247615214:"IFCSWEPTAREASOLID",1878645084:"IFCSURFACESTYLERENDERING",2513912981:"IFCSURFACE",2233826070:"IFCSUBEDGE",3653947884:"IFCSTRUCTURALSTEELPROFILEPROPERTIES",3843319758:"IFCSTRUCTURALPROFILEPROPERTIES",1190533807:"IFCSTRUCTURALLOADSINGLEFORCEWARPING",1597423693:"IFCSTRUCTURALLOADSINGLEFORCE",1973038258:"IFCSTRUCTURALLOADSINGLEDISPLACEMENTDISTORTION",2473145415:"IFCSTRUCTURALLOADSINGLEDISPLACEMENT",2668620305:"IFCSTRUCTURALLOADPLANARFORCE",1595516126:"IFCSTRUCTURALLOADLINEARFORCE",390701378:"IFCSPACETHERMALLOADPROPERTIES",1202362311:"IFCSOUNDVALUE",2485662743:"IFCSOUNDPROPERTIES",723233188:"IFCSOLIDMODEL",2609359061:"IFCSLIPPAGECONNECTIONCONDITION",4124623270:"IFCSHELLBASEDSURFACEMODEL",2411513650:"IFCSERVICELIFEFACTOR",1509187699:"IFCSECTIONEDSPINE",2778083089:"IFCROUNDEDRECTANGLEPROFILEDEF",478536968:"IFCRELATIONSHIP",3765753017:"IFCREINFORCEMENTDEFINITIONPROPERTIES",3413951693:"IFCREGULARTIMESERIES",3615266464:"IFCRECTANGLEPROFILEDEF",110355661:"IFCPROPERTYTABLEVALUE",3650150729:"IFCPROPERTYSINGLEVALUE",3357820518:"IFCPROPERTYSETDEFINITION",941946838:"IFCPROPERTYREFERENCEVALUE",2752243245:"IFCPROPERTYLISTVALUE",4166981789:"IFCPROPERTYENUMERATEDVALUE",1680319473:"IFCPROPERTYDEFINITION",871118103:"IFCPROPERTYBOUNDEDVALUE",673634403:"IFCPRODUCTDEFINITIONSHAPE",179317114:"IFCPREDEFINEDPOINTMARKERSYMBOL",433424934:"IFCPREDEFINEDDIMENSIONSYMBOL",2559016684:"IFCPREDEFINEDCURVEFONT",759155922:"IFCPREDEFINEDCOLOUR",2775532180:"IFCPOLYGONALBOUNDEDHALFSPACE",2924175390:"IFCPOLYLOOP",1423911732:"IFCPOINTONSURFACE",4022376103:"IFCPOINTONCURVE",2067069095:"IFCPOINT",1663979128:"IFCPLANAREXTENT",2004835150:"IFCPLACEMENT",597895409:"IFCPIXELTEXTURE",3021840470:"IFCPHYSICALCOMPLEXQUANTITY",2519244187:"IFCPATH",2529465313:"IFCPARAMETERIZEDPROFILEDEF",1029017970:"IFCORIENTEDEDGE",2665983363:"IFCOPENSHELL",2833995503:"IFCONEDIRECTIONREPEATFACTOR",219451334:"IFCOBJECTDEFINITION",1430189142:"IFCMECHANICALCONCRETEMATERIALPROPERTIES",2022407955:"IFCMATERIALDEFINITIONREPRESENTATION",2347385850:"IFCMAPPEDITEM",1008929658:"IFCLOOP",2624227202:"IFCLOCALPLACEMENT",3422422726:"IFCLIGHTSOURCESPOT",1520743889:"IFCLIGHTSOURCEPOSITIONAL",4266656042:"IFCLIGHTSOURCEGONIOMETRIC",2604431987:"IFCLIGHTSOURCEDIRECTIONAL",125510826:"IFCLIGHTSOURCEAMBIENT",1402838566:"IFCLIGHTSOURCE",3741457305:"IFCIRREGULARTIMESERIES",3905492369:"IFCIMAGETEXTURE",2445078500:"IFCHYGROSCOPICMATERIALPROPERTIES",812098782:"IFCHALFSPACESOLID",178086475:"IFCGRIDPLACEMENT",3590301190:"IFCGEOMETRICSET",4142052618:"IFCGEOMETRICREPRESENTATIONSUBCONTEXT",2453401579:"IFCGEOMETRICREPRESENTATIONITEM",3448662350:"IFCGEOMETRICREPRESENTATIONCONTEXT",1446786286:"IFCGENERALPROFILEPROPERTIES",803998398:"IFCGENERALMATERIALPROPERTIES",3857492461:"IFCFUELPROPERTIES",738692330:"IFCFILLAREASTYLE",4219587988:"IFCFAILURECONNECTIONCONDITION",3008276851:"IFCFACESURFACE",803316827:"IFCFACEOUTERBOUND",1809719519:"IFCFACEBOUND",2556980723:"IFCFACE",1860660968:"IFCEXTENDEDMATERIALPROPERTIES",476780140:"IFCEDGECURVE",3900360178:"IFCEDGE",4170525392:"IFCDRAUGHTINGPREDEFINEDTEXTFONT",3732053477:"IFCDOCUMENTREFERENCE",1694125774:"IFCDIMENSIONPAIR",2273265877:"IFCDIMENSIONCALLOUTRELATIONSHIP",3632507154:"IFCDERIVEDPROFILEDEF",3800577675:"IFCCURVESTYLE",2889183280:"IFCCONVERSIONBASEDUNIT",3050246964:"IFCCONTEXTDEPENDENTUNIT",45288368:"IFCCONNECTIONPOINTECCENTRICITY",1981873012:"IFCCONNECTIONCURVEGEOMETRY",370225590:"IFCCONNECTEDFACESET",1485152156:"IFCCOMPOSITEPROFILEDEF",2542286263:"IFCCOMPLEXPROPERTY",776857604:"IFCCOLOURRGB",647927063:"IFCCLASSIFICATIONREFERENCE",3150382593:"IFCCENTERLINEPROFILEDEF",616511568:"IFCBLOBTEXTURE",2705031697:"IFCARBITRARYPROFILEDEFWITHVOIDS",1310608509:"IFCARBITRARYOPENPROFILEDEF",3798115385:"IFCARBITRARYCLOSEDPROFILEDEF",2297822566:"IFCANNOTATIONTEXTOCCURRENCE",3612888222:"IFCANNOTATIONSYMBOLOCCURRENCE",962685235:"IFCANNOTATIONSURFACEOCCURRENCE",2442683028:"IFCANNOTATIONOCCURRENCE",1065908215:"IFCWATERPROPERTIES",891718957:"IFCVIRTUALGRIDINTERSECTION",1907098498:"IFCVERTEXPOINT",3304826586:"IFCVERTEXBASEDTEXTUREMAP",2799835756:"IFCVERTEX",180925521:"IFCUNITASSIGNMENT",1735638870:"IFCTOPOLOGYREPRESENTATION",1377556343:"IFCTOPOLOGICALREPRESENTATIONITEM",581633288:"IFCTIMESERIESVALUE",1718945513:"IFCTIMESERIESREFERENCERELATIONSHIP",3101149627:"IFCTIMESERIES",3317419933:"IFCTHERMALMATERIALPROPERTIES",1210645708:"IFCTEXTUREVERTEX",2552916305:"IFCTEXTUREMAP",1742049831:"IFCTEXTURECOORDINATEGENERATOR",280115917:"IFCTEXTURECOORDINATE",1484833681:"IFCTEXTSTYLEWITHBOXCHARACTERISTICS",1640371178:"IFCTEXTSTYLETEXTMODEL",2636378356:"IFCTEXTSTYLEFORDEFINEDFONT",1983826977:"IFCTEXTSTYLEFONTMODEL",1447204868:"IFCTEXTSTYLE",912023232:"IFCTELECOMADDRESS",531007025:"IFCTABLEROW",985171141:"IFCTABLE",1290481447:"IFCSYMBOLSTYLE",626085974:"IFCSURFACETEXTURE",1351298697:"IFCSURFACESTYLEWITHTEXTURES",846575682:"IFCSURFACESTYLESHADING",1607154358:"IFCSURFACESTYLEREFRACTION",3303107099:"IFCSURFACESTYLELIGHTING",1300840506:"IFCSURFACESTYLE",3049322572:"IFCSTYLEDREPRESENTATION",3958052878:"IFCSTYLEDITEM",2830218821:"IFCSTYLEMODEL",3408363356:"IFCSTRUCTURALLOADTEMPERATURE",2525727697:"IFCSTRUCTURALLOADSTATIC",2162789131:"IFCSTRUCTURALLOAD",2273995522:"IFCSTRUCTURALCONNECTIONCONDITION",3692461612:"IFCSIMPLEPROPERTY",4240577450:"IFCSHAPEREPRESENTATION",3982875396:"IFCSHAPEMODEL",867548509:"IFCSHAPEASPECT",4165799628:"IFCSECTIONREINFORCEMENTPROPERTIES",2042790032:"IFCSECTIONPROPERTIES",448429030:"IFCSIUNIT",2341007311:"IFCROOT",3679540991:"IFCRIBPLATEPROFILEPROPERTIES",1660063152:"IFCREPRESENTATIONMAP",3008791417:"IFCREPRESENTATIONITEM",3377609919:"IFCREPRESENTATIONCONTEXT",1076942058:"IFCREPRESENTATION",1222501353:"IFCRELAXATION",1580146022:"IFCREINFORCEMENTBARPROPERTIES",2692823254:"IFCREFERENCESVALUEDOCUMENT",825690147:"IFCQUANTITYWEIGHT",2405470396:"IFCQUANTITYVOLUME",3252649465:"IFCQUANTITYTIME",931644368:"IFCQUANTITYLENGTH",2093928680:"IFCQUANTITYCOUNT",2044713172:"IFCQUANTITYAREA",3710013099:"IFCPROPERTYENUMERATION",148025276:"IFCPROPERTYDEPENDENCYRELATIONSHIP",3896028662:"IFCPROPERTYCONSTRAINTRELATIONSHIP",2598011224:"IFCPROPERTY",2802850158:"IFCPROFILEPROPERTIES",3958567839:"IFCPROFILEDEF",2267347899:"IFCPRODUCTSOFCOMBUSTIONPROPERTIES",2095639259:"IFCPRODUCTREPRESENTATION",2417041796:"IFCPRESENTATIONSTYLEASSIGNMENT",3119450353:"IFCPRESENTATIONSTYLE",1304840413:"IFCPRESENTATIONLAYERWITHSTYLE",2022622350:"IFCPRESENTATIONLAYERASSIGNMENT",1775413392:"IFCPREDEFINEDTEXTFONT",3213052703:"IFCPREDEFINEDTERMINATORSYMBOL",990879717:"IFCPREDEFINEDSYMBOL",3727388367:"IFCPREDEFINEDITEM",3355820592:"IFCPOSTALADDRESS",2226359599:"IFCPHYSICALSIMPLEQUANTITY",2483315170:"IFCPHYSICALQUANTITY",101040310:"IFCPERSONANDORGANIZATION",2077209135:"IFCPERSON",1207048766:"IFCOWNERHISTORY",1411181986:"IFCORGANIZATIONRELATIONSHIP",4251960020:"IFCORGANIZATION",1227763645:"IFCOPTICALMATERIALPROPERTIES",2251480897:"IFCOBJECTIVE",3701648758:"IFCOBJECTPLACEMENT",1918398963:"IFCNAMEDUNIT",2706619895:"IFCMONETARYUNIT",3368373690:"IFCMETRIC",677618848:"IFCMECHANICALSTEELMATERIALPROPERTIES",4256014907:"IFCMECHANICALMATERIALPROPERTIES",2597039031:"IFCMEASUREWITHUNIT",3265635763:"IFCMATERIALPROPERTIES",2199411900:"IFCMATERIALLIST",1303795690:"IFCMATERIALLAYERSETUSAGE",3303938423:"IFCMATERIALLAYERSET",248100487:"IFCMATERIALLAYER",1847130766:"IFCMATERIALCLASSIFICATIONRELATIONSHIP",1838606355:"IFCMATERIAL",30780891:"IFCLOCALTIME",1566485204:"IFCLIGHTINTENSITYDISTRIBUTION",4162380809:"IFCLIGHTDISTRIBUTIONDATA",3452421091:"IFCLIBRARYREFERENCE",2655187982:"IFCLIBRARYINFORMATION",3020489413:"IFCIRREGULARTIMESERIESVALUE",852622518:"IFCGRIDAXIS",3548104201:"IFCEXTERNALLYDEFINEDTEXTFONT",3207319532:"IFCEXTERNALLYDEFINEDSYMBOL",1040185647:"IFCEXTERNALLYDEFINEDSURFACESTYLE",2242383968:"IFCEXTERNALLYDEFINEDHATCHSTYLE",3200245327:"IFCEXTERNALREFERENCE",1648886627:"IFCENVIRONMENTALIMPACTVALUE",3796139169:"IFCDRAUGHTINGCALLOUTRELATIONSHIP",770865208:"IFCDOCUMENTINFORMATIONRELATIONSHIP",1154170062:"IFCDOCUMENTINFORMATION",1376555844:"IFCDOCUMENTELECTRONICFORMAT",2949456006:"IFCDIMENSIONALEXPONENTS",1045800335:"IFCDERIVEDUNITELEMENT",1765591967:"IFCDERIVEDUNIT",1072939445:"IFCDATEANDTIME",3510044353:"IFCCURVESTYLEFONTPATTERN",2367409068:"IFCCURVESTYLEFONTANDSCALING",1105321065:"IFCCURVESTYLEFONT",539742890:"IFCCURRENCYRELATIONSHIP",602808272:"IFCCOSTVALUE",1065062679:"IFCCOORDINATEDUNIVERSALTIMEOFFSET",347226245:"IFCCONSTRAINTRELATIONSHIP",613356794:"IFCCONSTRAINTCLASSIFICATIONRELATIONSHIP",1658513725:"IFCCONSTRAINTAGGREGATIONRELATIONSHIP",1959218052:"IFCCONSTRAINT",2732653382:"IFCCONNECTIONSURFACEGEOMETRY",4257277454:"IFCCONNECTIONPORTGEOMETRY",2614616156:"IFCCONNECTIONPOINTGEOMETRY",2859738748:"IFCCONNECTIONGEOMETRY",3264961684:"IFCCOLOURSPECIFICATION",3639012971:"IFCCLASSIFICATIONNOTATIONFACET",938368621:"IFCCLASSIFICATIONNOTATION",1098599126:"IFCCLASSIFICATIONITEMRELATIONSHIP",1767535486:"IFCCLASSIFICATIONITEM",747523909:"IFCCLASSIFICATION",622194075:"IFCCALENDARDATE",2069777674:"IFCBOUNDARYNODECONDITIONWARPING",1387855156:"IFCBOUNDARYNODECONDITION",3367102660:"IFCBOUNDARYFACECONDITION",1560379544:"IFCBOUNDARYEDGECONDITION",4037036970:"IFCBOUNDARYCONDITION",3869604511:"IFCAPPROVALRELATIONSHIP",390851274:"IFCAPPROVALPROPERTYRELATIONSHIP",2080292479:"IFCAPPROVALACTORRELATIONSHIP",130549933:"IFCAPPROVAL",1110488051:"IFCAPPLIEDVALUERELATIONSHIP",411424972:"IFCAPPLIEDVALUE",639542469:"IFCAPPLICATION",618182010:"IFCADDRESS",3630933823:"IFCACTORROLE",599546466:"FILE_DESCRIPTION",1390159747:"FILE_NAME",1109904537:"FILE_SCHEMA"};class Pr{static async getUnits(e){var t,i,n;const{IFCUNITASSIGNMENT:r}=Bn,o=await e.getAllPropertiesOfType(r);if(!o)return 1;const a=Object.keys(o),l=o[parseInt(a[0],10)];for(const c of l.Units){if(c.value===void 0||c.value===null)continue;const h=await e.getProperties(c.value);if(!h||!h.UnitType||!h.UnitType.value||h.UnitType.value!=="LENGTHUNIT")continue;let d=1,u=1;return h.Name.value==="METRE"&&(u=1),h.Name.value==="FOOT"&&(u=.3048),((t=h.Prefix)==null?void 0:t.value)==="MILLI"?d=.001:((i=h.Prefix)==null?void 0:i.value)==="CENTI"?d=.01:((n=h.Prefix)==null?void 0:n.value)==="DECI"&&(d=.1),u*d}return 1}static async findItemByGuid(e,t){var i;const n=e.getAllPropertiesIDs();for(const r of n){const o=await e.getProperties(r);if(o&&((i=o.GlobalId)==null?void 0:i.value)===t)return o}return null}static async getRelationMap(e,t,i){var n;const r=i??(async()=>{}),o={},a=e.getAllPropertiesIDs();for(const l of a){const c=await e.getProperties(l);if(!c)continue;const h=c.type===t,d=Object.keys(c).find(E=>E.startsWith("Relating")),u=Object.keys(c).find(E=>E.startsWith("Related"));if(!(h&&d&&u))continue;const f=await e.getProperties((n=c[d])==null?void 0:n.value),m=c[u];if(!f||!m||!(m&&Array.isArray(m)))continue;const g=m.map(E=>E.value);await r(f.expressID,g),o[f.expressID]=g}return o}static async getQsetQuantities(e,t,i){const n=i??(()=>{}),r=await e.getProperties(t);return!r||r.type!==Mh?null:(r.Quantities??[{}]).map(o=>(o.value&&n(o.value),o.value)).filter(o=>o!==null)}static async getPsetProps(e,t,i){const n=i??(()=>{}),r=await e.getProperties(t);return!r||r.type!==Xo?null:(r.HasProperties??[{}]).map(o=>(o.value&&n(o.value),o.value)).filter(o=>o!==null)}static async getPsetRel(e,t){var i;if(!await e.getProperties(t))return null;const n=await e.getAllPropertiesOfType(Bl);if(!n)return null;const r=Object.values(n);let o=null;for(const a of r)((i=a.RelatingPropertyDefinition)==null?void 0:i.value)===t&&(o=a.expressID);return o}static async getQsetRel(e,t){return Pr.getPsetRel(e,t)}static async getEntityName(e,t){var i;const n=await e.getProperties(t);if(!n)return{key:null,name:null};const r=Object.keys(n).find(a=>a.endsWith("Name"))??null,o=r?(i=n[r])==null?void 0:i.value:null;return{key:r,name:o}}static async getQuantityValue(e,t){const i=await e.getProperties(t);if(!i)return{key:null,value:null};const n=Object.keys(i).find(o=>o.endsWith("Value"))??null;let r;return n===null||i[n]===void 0||i[n]===null?r=null:r=i[n].value,{key:n,value:r}}static isRel(e){return cu[e].startsWith("IFCREL")}static async attributeExists(e,t,i){const n=await e.getProperties(t);return n?Object.keys(n).includes(i):!1}static async groupEntitiesByType(e,t){var i;const n=new Map;for(const r of t){const o=await e.getProperties(r);if(!o)continue;const a=o.type;n.get(a)||n.set(a,new Set),(i=n.get(a))==null||i.add(r)}return n}}const mF={IFCURIREFERENCE:"IfcUriReference",IFCTIME:"IfcTime",IFCTEMPERATURERATEOFCHANGEMEASURE:"IfcTemperatureRateOfChangeMeasure",IFCSOUNDPRESSURELEVELMEASURE:"IfcSoundPressureLevelMeasure",IFCSOUNDPOWERLEVELMEASURE:"IfcSoundPowerLevelMeasure",IFCPROPERTYSETDEFINITIONSET:"IfcPropertySetDefinitionSet",IFCPOSITIVEINTEGER:"IfcPositiveInteger",IFCNONNEGATIVELENGTHMEASURE:"IfcNonNegativeLengthMeasure",IFCLINEINDEX:"IfcLineIndex",IFCLANGUAGEID:"IfcLanguageId",IFCDURATION:"IfcDuration",IFCDAYINWEEKNUMBER:"IfcDayInWeekNumber",IFCDATETIME:"IfcDateTime",IFCDATE:"IfcDate",IFCCARDINALPOINTREFERENCE:"IfcCardinalPointReference",IFCBINARY:"IfcBinary",IFCAREADENSITYMEASURE:"IfcAreaDensityMeasure",IFCARCINDEX:"IfcArcIndex",IFCYEARNUMBER:"IfcYearNumber",IFCWARPINGMOMENTMEASURE:"IfcWarpingMomentMeasure",IFCWARPINGCONSTANTMEASURE:"IfcWarpingConstantMeasure",IFCVOLUMETRICFLOWRATEMEASURE:"IfcVolumetricFlowRateMeasure",IFCVOLUMEMEASURE:"IfcVolumeMeasure",IFCVAPORPERMEABILITYMEASURE:"IfcVaporPermeabilityMeasure",IFCTORQUEMEASURE:"IfcTorqueMeasure",IFCTIMESTAMP:"IfcTimestamp",IFCTIMEMEASURE:"IfcTimeMeasure",IFCTHERMODYNAMICTEMPERATUREMEASURE:"IfcThermodynamicTemperatureMeasure",IFCTHERMALTRANSMITTANCEMEASURE:"IfcThermalTransmittanceMeasure",IFCTHERMALRESISTANCEMEASURE:"IfcThermalResistanceMeasure",IFCTHERMALEXPANSIONCOEFFICIENTMEASURE:"IfcThermalExpansionCoefficientMeasure",IFCTHERMALCONDUCTIVITYMEASURE:"IfcThermalConductivityMeasure",IFCTHERMALADMITTANCEMEASURE:"IfcThermalAdmittanceMeasure",IFCTEXTTRANSFORMATION:"IfcTextTransformation",IFCTEXTFONTNAME:"IfcTextFontName",IFCTEXTDECORATION:"IfcTextDecoration",IFCTEXTALIGNMENT:"IfcTextAlignment",IFCTEXT:"IfcText",IFCTEMPERATUREGRADIENTMEASURE:"IfcTemperatureGradientMeasure",IFCSPECULARROUGHNESS:"IfcSpecularRoughness",IFCSPECULAREXPONENT:"IfcSpecularExponent",IFCSPECIFICHEATCAPACITYMEASURE:"IfcSpecificHeatCapacityMeasure",IFCSOUNDPRESSUREMEASURE:"IfcSoundPressureMeasure",IFCSOUNDPOWERMEASURE:"IfcSoundPowerMeasure",IFCSOLIDANGLEMEASURE:"IfcSolidAngleMeasure",IFCSHEARMODULUSMEASURE:"IfcShearModulusMeasure",IFCSECTIONALAREAINTEGRALMEASURE:"IfcSectionalAreaIntegralMeasure",IFCSECTIONMODULUSMEASURE:"IfcSectionModulusMeasure",IFCSECONDINMINUTE:"IfcSecondInMinute",IFCROTATIONALSTIFFNESSMEASURE:"IfcRotationalStiffnessMeasure",IFCROTATIONALMASSMEASURE:"IfcRotationalMassMeasure",IFCROTATIONALFREQUENCYMEASURE:"IfcRotationalFrequencyMeasure",IFCREAL:"IfcReal",IFCRATIOMEASURE:"IfcRatioMeasure",IFCRADIOACTIVITYMEASURE:"IfcRadioactivityMeasure",IFCPRESSUREMEASURE:"IfcPressureMeasure",IFCPRESENTABLETEXT:"IfcPresentableText",IFCPOWERMEASURE:"IfcPowerMeasure",IFCPOSITIVERATIOMEASURE:"IfcPositiveRatioMeasure",IFCPOSITIVEPLANEANGLEMEASURE:"IfcPositivePlaneAngleMeasure",IFCPOSITIVELENGTHMEASURE:"IfcPositiveLengthMeasure",IFCPLANEANGLEMEASURE:"IfcPlaneAngleMeasure",IFCPLANARFORCEMEASURE:"IfcPlanarForceMeasure",IFCPARAMETERVALUE:"IfcParameterValue",IFCPHMEASURE:"IfcPhMeasure",IFCNUMERICMEASURE:"IfcNumericMeasure",IFCNORMALISEDRATIOMEASURE:"IfcNormalisedRatioMeasure",IFCMONTHINYEARNUMBER:"IfcMonthInYearNumber",IFCMONETARYMEASURE:"IfcMonetaryMeasure",IFCMOMENTOFINERTIAMEASURE:"IfcMomentOfInertiaMeasure",IFCMOLECULARWEIGHTMEASURE:"IfcMolecularWeightMeasure",IFCMOISTUREDIFFUSIVITYMEASURE:"IfcMoistureDiffusivityMeasure",IFCMODULUSOFSUBGRADEREACTIONMEASURE:"IfcModulusOfSubgradeReactionMeasure",IFCMODULUSOFROTATIONALSUBGRADEREACTIONMEASURE:"IfcModulusOfRotationalSubgradeReactionMeasure",IFCMODULUSOFLINEARSUBGRADEREACTIONMEASURE:"IfcModulusOfLinearSubgradeReactionMeasure",IFCMODULUSOFELASTICITYMEASURE:"IfcModulusOfElasticityMeasure",IFCMINUTEINHOUR:"IfcMinuteInHour",IFCMASSPERLENGTHMEASURE:"IfcMassPerLengthMeasure",IFCMASSMEASURE:"IfcMassMeasure",IFCMASSFLOWRATEMEASURE:"IfcMassFlowRateMeasure",IFCMASSDENSITYMEASURE:"IfcMassDensityMeasure",IFCMAGNETICFLUXMEASURE:"IfcMagneticFluxMeasure",IFCMAGNETICFLUXDENSITYMEASURE:"IfcMagneticFluxDensityMeasure",IFCLUMINOUSINTENSITYMEASURE:"IfcLuminousIntensityMeasure",IFCLUMINOUSINTENSITYDISTRIBUTIONMEASURE:"IfcLuminousIntensityDistributionMeasure",IFCLUMINOUSFLUXMEASURE:"IfcLuminousFluxMeasure",IFCLOGICAL:"IfcLogical",IFCLINEARVELOCITYMEASURE:"IfcLinearVelocityMeasure",IFCLINEARSTIFFNESSMEASURE:"IfcLinearStiffnessMeasure",IFCLINEARMOMENTMEASURE:"IfcLinearMomentMeasure",IFCLINEARFORCEMEASURE:"IfcLinearForceMeasure",IFCLENGTHMEASURE:"IfcLengthMeasure",IFCLABEL:"IfcLabel",IFCKINEMATICVISCOSITYMEASURE:"IfcKinematicViscosityMeasure",IFCISOTHERMALMOISTURECAPACITYMEASURE:"IfcIsothermalMoistureCapacityMeasure",IFCIONCONCENTRATIONMEASURE:"IfcIonConcentrationMeasure",IFCINTEGERCOUNTRATEMEASURE:"IfcIntegerCountRateMeasure",IFCINTEGER:"IfcInteger",IFCINDUCTANCEMEASURE:"IfcInductanceMeasure",IFCILLUMINANCEMEASURE:"IfcIlluminanceMeasure",IFCIDENTIFIER:"IfcIdentifier",IFCHOURINDAY:"IfcHourInDay",IFCHEATINGVALUEMEASURE:"IfcHeatingValueMeasure",IFCHEATFLUXDENSITYMEASURE:"IfcHeatFluxDensityMeasure",IFCGLOBALLYUNIQUEID:"IfcGloballyUniqueId",IFCFREQUENCYMEASURE:"IfcFrequencyMeasure",IFCFORCEMEASURE:"IfcForceMeasure",IFCFONTWEIGHT:"IfcFontWeight",IFCFONTVARIANT:"IfcFontVariant",IFCFONTSTYLE:"IfcFontStyle",IFCENERGYMEASURE:"IfcEnergyMeasure",IFCELECTRICVOLTAGEMEASURE:"IfcElectricVoltageMeasure",IFCELECTRICRESISTANCEMEASURE:"IfcElectricResistanceMeasure",IFCELECTRICCURRENTMEASURE:"IfcElectricCurrentMeasure",IFCELECTRICCONDUCTANCEMEASURE:"IfcElectricConductanceMeasure",IFCELECTRICCHARGEMEASURE:"IfcElectricChargeMeasure",IFCELECTRICCAPACITANCEMEASURE:"IfcElectricCapacitanceMeasure",IFCDYNAMICVISCOSITYMEASURE:"IfcDynamicViscosityMeasure",IFCDOSEEQUIVALENTMEASURE:"IfcDoseEquivalentMeasure",IFCDIMENSIONCOUNT:"IfcDimensionCount",IFCDESCRIPTIVEMEASURE:"IfcDescriptiveMeasure",IFCDAYLIGHTSAVINGHOUR:"IfcDaylightSavingHour",IFCDAYINMONTHNUMBER:"IfcDayInMonthNumber",IFCCURVATUREMEASURE:"IfcCurvatureMeasure",IFCCOUNTMEASURE:"IfcCountMeasure",IFCCONTEXTDEPENDENTMEASURE:"IfcContextDependentMeasure",IFCCOMPOUNDPLANEANGLEMEASURE:"IfcCompoundPlaneAngleMeasure",IFCCOMPLEXNUMBER:"IfcComplexNumber",IFCBOXALIGNMENT:"IfcBoxAlignment",IFCBOOLEAN:"IfcBoolean",IFCAREAMEASURE:"IfcAreaMeasure",IFCANGULARVELOCITYMEASURE:"IfcAngularVelocityMeasure",IFCAMOUNTOFSUBSTANCEMEASURE:"IfcAmountOfSubstanceMeasure",IFCACCELERATIONMEASURE:"IfcAccelerationMeasure",IFCABSORBEDDOSEMEASURE:"IfcAbsorbedDoseMeasure",IFCGEOSLICE:"IfcGeoSlice",IFCGEOMODEL:"IfcGeoModel",IFCELECTRICFLOWTREATMENTDEVICE:"IfcElectricFlowTreatmentDevice",IFCDISTRIBUTIONBOARD:"IfcDistributionBoard",IFCCONVEYORSEGMENT:"IfcConveyorSegment",IFCCAISSONFOUNDATION:"IfcCaissonFoundation",IFCBOREHOLE:"IfcBorehole",IFCBEARING:"IfcBearing",IFCALIGNMENT:"IfcAlignment",IFCTRACKELEMENT:"IfcTrackElement",IFCSIGNAL:"IfcSignal",IFCREINFORCEDSOIL:"IfcReinforcedSoil",IFCRAIL:"IfcRail",IFCPAVEMENT:"IfcPavement",IFCNAVIGATIONELEMENT:"IfcNavigationElement",IFCMOORINGDEVICE:"IfcMooringDevice",IFCMOBILETELECOMMUNICATIONSAPPLIANCE:"IfcMobileTelecommunicationsAppliance",IFCLIQUIDTERMINAL:"IfcLiquidTerminal",IFCLINEARPOSITIONINGELEMENT:"IfcLinearPositioningElement",IFCKERB:"IfcKerb",IFCGEOTECHNICALASSEMBLY:"IfcGeotechnicalAssembly",IFCELECTRICFLOWTREATMENTDEVICETYPE:"IfcElectricFlowTreatmentDeviceType",IFCEARTHWORKSFILL:"IfcEarthworksFill",IFCEARTHWORKSELEMENT:"IfcEarthworksElement",IFCEARTHWORKSCUT:"IfcEarthworksCut",IFCDISTRIBUTIONBOARDTYPE:"IfcDistributionBoardType",IFCDEEPFOUNDATION:"IfcDeepFoundation",IFCCOURSE:"IfcCourse",IFCCONVEYORSEGMENTTYPE:"IfcConveyorSegmentType",IFCCAISSONFOUNDATIONTYPE:"IfcCaissonFoundationType",IFCBUILTSYSTEM:"IfcBuiltSystem",IFCBUILTELEMENT:"IfcBuiltElement",IFCBRIDGEPART:"IfcBridgePart",IFCBRIDGE:"IfcBridge",IFCBEARINGTYPE:"IfcBearingType",IFCALIGNMENTVERTICAL:"IfcAlignmentVertical",IFCALIGNMENTSEGMENT:"IfcAlignmentSegment",IFCALIGNMENTHORIZONTAL:"IfcAlignmentHorizontal",IFCALIGNMENTCANT:"IfcAlignmentCant",IFCVIBRATIONDAMPERTYPE:"IfcVibrationDamperType",IFCVIBRATIONDAMPER:"IfcVibrationDamper",IFCVEHICLE:"IfcVehicle",IFCTRANSPORTATIONDEVICE:"IfcTransportationDevice",IFCTRACKELEMENTTYPE:"IfcTrackElementType",IFCTENDONCONDUITTYPE:"IfcTendonConduitType",IFCTENDONCONDUIT:"IfcTendonConduit",IFCSINESPIRAL:"IfcSineSpiral",IFCSIGNALTYPE:"IfcSignalType",IFCSIGNTYPE:"IfcSignType",IFCSIGN:"IfcSign",IFCSEVENTHORDERPOLYNOMIALSPIRAL:"IfcSeventhOrderPolynomialSpiral",IFCSEGMENTEDREFERENCECURVE:"IfcSegmentedReferenceCurve",IFCSECONDORDERPOLYNOMIALSPIRAL:"IfcSecondOrderPolynomialSpiral",IFCROADPART:"IfcRoadPart",IFCROAD:"IfcRoad",IFCRELADHERESTOELEMENT:"IfcRelAdheresToElement",IFCREFERENT:"IfcReferent",IFCRAILWAYPART:"IfcRailwayPart",IFCRAILWAY:"IfcRailway",IFCRAILTYPE:"IfcRailType",IFCPOSITIONINGELEMENT:"IfcPositioningElement",IFCPAVEMENTTYPE:"IfcPavementType",IFCNAVIGATIONELEMENTTYPE:"IfcNavigationElementType",IFCMOORINGDEVICETYPE:"IfcMooringDeviceType",IFCMOBILETELECOMMUNICATIONSAPPLIANCETYPE:"IfcMobileTelecommunicationsApplianceType",IFCMARINEPART:"IfcMarinePart",IFCMARINEFACILITY:"IfcMarineFacility",IFCLIQUIDTERMINALTYPE:"IfcLiquidTerminalType",IFCLINEARELEMENT:"IfcLinearElement",IFCKERBTYPE:"IfcKerbType",IFCIMPACTPROTECTIONDEVICETYPE:"IfcImpactProtectionDeviceType",IFCIMPACTPROTECTIONDEVICE:"IfcImpactProtectionDevice",IFCGRADIENTCURVE:"IfcGradientCurve",IFCGEOTECHNICALSTRATUM:"IfcGeotechnicalStratum",IFCGEOTECHNICALELEMENT:"IfcGeotechnicalElement",IFCFACILITYPARTCOMMON:"IfcFacilityPartCommon",IFCFACILITYPART:"IfcFacilityPart",IFCFACILITY:"IfcFacility",IFCDIRECTRIXDERIVEDREFERENCESWEPTAREASOLID:"IfcDirectrixDerivedReferenceSweptAreaSolid",IFCDEEPFOUNDATIONTYPE:"IfcDeepFoundationType",IFCCOURSETYPE:"IfcCourseType",IFCCOSINESPIRAL:"IfcCosineSpiral",IFCCLOTHOID:"IfcClothoid",IFCBUILTELEMENTTYPE:"IfcBuiltElementType",IFCVEHICLETYPE:"IfcVehicleType",IFCTRIANGULATEDIRREGULARNETWORK:"IfcTriangulatedIrregularNetwork",IFCTRANSPORTATIONDEVICETYPE:"IfcTransportationDeviceType",IFCTHIRDORDERPOLYNOMIALSPIRAL:"IfcThirdOrderPolynomialSpiral",IFCSPIRAL:"IfcSpiral",IFCSECTIONEDSURFACE:"IfcSectionedSurface",IFCSECTIONEDSOLIDHORIZONTAL:"IfcSectionedSolidHorizontal",IFCSECTIONEDSOLID:"IfcSectionedSolid",IFCRELPOSITIONS:"IfcRelPositions",IFCRELASSOCIATESPROFILEDEF:"IfcRelAssociatesProfileDef",IFCPOLYNOMIALCURVE:"IfcPolynomialCurve",IFCOFFSETCURVEBYDISTANCES:"IfcOffsetCurveByDistances",IFCOFFSETCURVE:"IfcOffsetCurve",IFCINDEXEDPOLYGONALTEXTUREMAP:"IfcIndexedPolygonalTextureMap",IFCDIRECTRIXCURVESWEPTAREASOLID:"IfcDirectrixCurveSweptAreaSolid",IFCCURVESEGMENT:"IfcCurveSegment",IFCAXIS2PLACEMENTLINEAR:"IfcAxis2PlacementLinear",IFCSEGMENT:"IfcSegment",IFCPOINTBYDISTANCEEXPRESSION:"IfcPointByDistanceExpression",IFCOPENCROSSPROFILEDEF:"IfcOpenCrossProfileDef",IFCLINEARPLACEMENT:"IfcLinearPlacement",IFCALIGNMENTHORIZONTALSEGMENT:"IfcAlignmentHorizontalSegment",IFCALIGNMENTCANTSEGMENT:"IfcAlignmentCantSegment",IFCTEXTURECOORDINATEINDICESWITHVOIDS:"IfcTextureCoordinateIndicesWithVoids",IFCTEXTURECOORDINATEINDICES:"IfcTextureCoordinateIndices",IFCQUANTITYNUMBER:"IfcQuantityNumber",IFCALIGNMENTVERTICALSEGMENT:"IfcAlignmentVerticalSegment",IFCALIGNMENTPARAMETERSEGMENT:"IfcAlignmentParameterSegment",IFCCONTROLLER:"IfcController",IFCALARM:"IfcAlarm",IFCACTUATOR:"IfcActuator",IFCUNITARYCONTROLELEMENT:"IfcUnitaryControlElement",IFCSENSOR:"IfcSensor",IFCPROTECTIVEDEVICETRIPPINGUNIT:"IfcProtectiveDeviceTrippingUnit",IFCFLOWINSTRUMENT:"IfcFlowInstrument",IFCFIRESUPPRESSIONTERMINAL:"IfcFireSuppressionTerminal",IFCFILTER:"IfcFilter",IFCFAN:"IfcFan",IFCELECTRICTIMECONTROL:"IfcElectricTimeControl",IFCELECTRICMOTOR:"IfcElectricMotor",IFCELECTRICGENERATOR:"IfcElectricGenerator",IFCELECTRICFLOWSTORAGEDEVICE:"IfcElectricFlowStorageDevice",IFCELECTRICDISTRIBUTIONBOARD:"IfcElectricDistributionBoard",IFCELECTRICAPPLIANCE:"IfcElectricAppliance",IFCDUCTSILENCER:"IfcDuctSilencer",IFCDUCTSEGMENT:"IfcDuctSegment",IFCDUCTFITTING:"IfcDuctFitting",IFCDISTRIBUTIONCIRCUIT:"IfcDistributionCircuit",IFCDAMPER:"IfcDamper",IFCCOOLINGTOWER:"IfcCoolingTower",IFCCOOLEDBEAM:"IfcCooledBeam",IFCCONDENSER:"IfcCondenser",IFCCOMPRESSOR:"IfcCompressor",IFCCOMMUNICATIONSAPPLIANCE:"IfcCommunicationsAppliance",IFCCOIL:"IfcCoil",IFCCHILLER:"IfcChiller",IFCCABLESEGMENT:"IfcCableSegment",IFCCABLEFITTING:"IfcCableFitting",IFCCABLECARRIERSEGMENT:"IfcCableCarrierSegment",IFCCABLECARRIERFITTING:"IfcCableCarrierFitting",IFCBURNER:"IfcBurner",IFCBOILER:"IfcBoiler",IFCBEAMSTANDARDCASE:"IfcBeamStandardCase",IFCAUDIOVISUALAPPLIANCE:"IfcAudioVisualAppliance",IFCAIRTOAIRHEATRECOVERY:"IfcAirToAirHeatRecovery",IFCAIRTERMINALBOX:"IfcAirTerminalBox",IFCAIRTERMINAL:"IfcAirTerminal",IFCWINDOWSTANDARDCASE:"IfcWindowStandardCase",IFCWASTETERMINAL:"IfcWasteTerminal",IFCWALLELEMENTEDCASE:"IfcWallElementedCase",IFCVALVE:"IfcValve",IFCUNITARYEQUIPMENT:"IfcUnitaryEquipment",IFCUNITARYCONTROLELEMENTTYPE:"IfcUnitaryControlElementType",IFCTUBEBUNDLE:"IfcTubeBundle",IFCTRANSFORMER:"IfcTransformer",IFCTANK:"IfcTank",IFCSWITCHINGDEVICE:"IfcSwitchingDevice",IFCSTRUCTURALLOADCASE:"IfcStructuralLoadCase",IFCSTACKTERMINAL:"IfcStackTerminal",IFCSPACEHEATER:"IfcSpaceHeater",IFCSOLARDEVICE:"IfcSolarDevice",IFCSLABSTANDARDCASE:"IfcSlabStandardCase",IFCSLABELEMENTEDCASE:"IfcSlabElementedCase",IFCSHADINGDEVICE:"IfcShadingDevice",IFCSANITARYTERMINAL:"IfcSanitaryTerminal",IFCREINFORCINGBARTYPE:"IfcReinforcingBarType",IFCRATIONALBSPLINECURVEWITHKNOTS:"IfcRationalBSplineCurveWithKnots",IFCPUMP:"IfcPump",IFCPROTECTIVEDEVICETRIPPINGUNITTYPE:"IfcProtectiveDeviceTrippingUnitType",IFCPROTECTIVEDEVICE:"IfcProtectiveDevice",IFCPLATESTANDARDCASE:"IfcPlateStandardCase",IFCPIPESEGMENT:"IfcPipeSegment",IFCPIPEFITTING:"IfcPipeFitting",IFCOUTLET:"IfcOutlet",IFCOUTERBOUNDARYCURVE:"IfcOuterBoundaryCurve",IFCMOTORCONNECTION:"IfcMotorConnection",IFCMEMBERSTANDARDCASE:"IfcMemberStandardCase",IFCMEDICALDEVICE:"IfcMedicalDevice",IFCLIGHTFIXTURE:"IfcLightFixture",IFCLAMP:"IfcLamp",IFCJUNCTIONBOX:"IfcJunctionBox",IFCINTERCEPTOR:"IfcInterceptor",IFCHUMIDIFIER:"IfcHumidifier",IFCHEATEXCHANGER:"IfcHeatExchanger",IFCFLOWMETER:"IfcFlowMeter",IFCEXTERNALSPATIALELEMENT:"IfcExternalSpatialElement",IFCEVAPORATOR:"IfcEvaporator",IFCEVAPORATIVECOOLER:"IfcEvaporativeCooler",IFCENGINE:"IfcEngine",IFCELECTRICDISTRIBUTIONBOARDTYPE:"IfcElectricDistributionBoardType",IFCDOORSTANDARDCASE:"IfcDoorStandardCase",IFCDISTRIBUTIONSYSTEM:"IfcDistributionSystem",IFCCOMMUNICATIONSAPPLIANCETYPE:"IfcCommunicationsApplianceType",IFCCOLUMNSTANDARDCASE:"IfcColumnStandardCase",IFCCIVILELEMENT:"IfcCivilElement",IFCCHIMNEY:"IfcChimney",IFCCABLEFITTINGTYPE:"IfcCableFittingType",IFCBURNERTYPE:"IfcBurnerType",IFCBUILDINGSYSTEM:"IfcBuildingSystem",IFCBUILDINGELEMENTPARTTYPE:"IfcBuildingElementPartType",IFCBOUNDARYCURVE:"IfcBoundaryCurve",IFCBSPLINECURVEWITHKNOTS:"IfcBSplineCurveWithKnots",IFCAUDIOVISUALAPPLIANCETYPE:"IfcAudioVisualApplianceType",IFCWORKCALENDAR:"IfcWorkCalendar",IFCWINDOWTYPE:"IfcWindowType",IFCVOIDINGFEATURE:"IfcVoidingFeature",IFCVIBRATIONISOLATOR:"IfcVibrationIsolator",IFCTENDONTYPE:"IfcTendonType",IFCTENDONANCHORTYPE:"IfcTendonAnchorType",IFCSYSTEMFURNITUREELEMENT:"IfcSystemFurnitureElement",IFCSURFACEFEATURE:"IfcSurfaceFeature",IFCSTRUCTURALSURFACEACTION:"IfcStructuralSurfaceAction",IFCSTRUCTURALCURVEREACTION:"IfcStructuralCurveReaction",IFCSTRUCTURALCURVEACTION:"IfcStructuralCurveAction",IFCSTAIRTYPE:"IfcStairType",IFCSOLARDEVICETYPE:"IfcSolarDeviceType",IFCSHADINGDEVICETYPE:"IfcShadingDeviceType",IFCSEAMCURVE:"IfcSeamCurve",IFCROOFTYPE:"IfcRoofType",IFCREINFORCINGMESHTYPE:"IfcReinforcingMeshType",IFCREINFORCINGELEMENTTYPE:"IfcReinforcingElementType",IFCRATIONALBSPLINESURFACEWITHKNOTS:"IfcRationalBSplineSurfaceWithKnots",IFCRAMPTYPE:"IfcRampType",IFCPOLYGONALFACESET:"IfcPolygonalFaceSet",IFCPILETYPE:"IfcPileType",IFCOPENINGSTANDARDCASE:"IfcOpeningStandardCase",IFCMEDICALDEVICETYPE:"IfcMedicalDeviceType",IFCINTERSECTIONCURVE:"IfcIntersectionCurve",IFCINTERCEPTORTYPE:"IfcInterceptorType",IFCINDEXEDPOLYCURVE:"IfcIndexedPolyCurve",IFCGEOGRAPHICELEMENT:"IfcGeographicElement",IFCFURNITURE:"IfcFurniture",IFCFOOTINGTYPE:"IfcFootingType",IFCEXTERNALSPATIALSTRUCTUREELEMENT:"IfcExternalSpatialStructureElement",IFCEVENT:"IfcEvent",IFCENGINETYPE:"IfcEngineType",IFCELEMENTASSEMBLYTYPE:"IfcElementAssemblyType",IFCDOORTYPE:"IfcDoorType",IFCCYLINDRICALSURFACE:"IfcCylindricalSurface",IFCCONSTRUCTIONPRODUCTRESOURCETYPE:"IfcConstructionProductResourceType",IFCCONSTRUCTIONMATERIALRESOURCETYPE:"IfcConstructionMaterialResourceType",IFCCONSTRUCTIONEQUIPMENTRESOURCETYPE:"IfcConstructionEquipmentResourceType",IFCCOMPOSITECURVEONSURFACE:"IfcCompositeCurveOnSurface",IFCCOMPLEXPROPERTYTEMPLATE:"IfcComplexPropertyTemplate",IFCCIVILELEMENTTYPE:"IfcCivilElementType",IFCCHIMNEYTYPE:"IfcChimneyType",IFCBSPLINESURFACEWITHKNOTS:"IfcBSplineSurfaceWithKnots",IFCBSPLINESURFACE:"IfcBSplineSurface",IFCADVANCEDBREPWITHVOIDS:"IfcAdvancedBrepWithVoids",IFCADVANCEDBREP:"IfcAdvancedBrep",IFCTRIANGULATEDFACESET:"IfcTriangulatedFaceSet",IFCTOROIDALSURFACE:"IfcToroidalSurface",IFCTESSELLATEDFACESET:"IfcTessellatedFaceSet",IFCTASKTYPE:"IfcTaskType",IFCSURFACECURVE:"IfcSurfaceCurve",IFCSUBCONTRACTRESOURCETYPE:"IfcSubContractResourceType",IFCSTRUCTURALSURFACEREACTION:"IfcStructuralSurfaceReaction",IFCSPHERICALSURFACE:"IfcSphericalSurface",IFCSPATIALZONETYPE:"IfcSpatialZoneType",IFCSPATIALZONE:"IfcSpatialZone",IFCSPATIALELEMENTTYPE:"IfcSpatialElementType",IFCSPATIALELEMENT:"IfcSpatialElement",IFCSIMPLEPROPERTYTEMPLATE:"IfcSimplePropertyTemplate",IFCREVOLVEDAREASOLIDTAPERED:"IfcRevolvedAreaSolidTapered",IFCREPARAMETRISEDCOMPOSITECURVESEGMENT:"IfcReparametrisedCompositeCurveSegment",IFCRELSPACEBOUNDARY2NDLEVEL:"IfcRelSpaceBoundary2ndLevel",IFCRELSPACEBOUNDARY1STLEVEL:"IfcRelSpaceBoundary1stLevel",IFCRELINTERFERESELEMENTS:"IfcRelInterferesElements",IFCRELDEFINESBYTEMPLATE:"IfcRelDefinesByTemplate",IFCRELDEFINESBYOBJECT:"IfcRelDefinesByObject",IFCRELDECLARES:"IfcRelDeclares",IFCRELASSIGNSTOGROUPBYFACTOR:"IfcRelAssignsToGroupByFactor",IFCPROPERTYTEMPLATE:"IfcPropertyTemplate",IFCPROPERTYSETTEMPLATE:"IfcPropertySetTemplate",IFCPROJECTLIBRARY:"IfcProjectLibrary",IFCPROCEDURETYPE:"IfcProcedureType",IFCPREDEFINEDPROPERTYSET:"IfcPredefinedPropertySet",IFCPCURVE:"IfcPCurve",IFCLABORRESOURCETYPE:"IfcLaborResourceType",IFCINDEXEDPOLYGONALFACEWITHVOIDS:"IfcIndexedPolygonalFaceWithVoids",IFCINDEXEDPOLYGONALFACE:"IfcIndexedPolygonalFace",IFCGEOGRAPHICELEMENTTYPE:"IfcGeographicElementType",IFCFIXEDREFERENCESWEPTAREASOLID:"IfcFixedReferenceSweptAreaSolid",IFCEXTRUDEDAREASOLIDTAPERED:"IfcExtrudedAreaSolidTapered",IFCEVENTTYPE:"IfcEventType",IFCCURVEBOUNDEDSURFACE:"IfcCurveBoundedSurface",IFCCREWRESOURCETYPE:"IfcCrewResourceType",IFCCONTEXT:"IfcContext",IFCCONSTRUCTIONRESOURCETYPE:"IfcConstructionResourceType",IFCCARTESIANPOINTLIST3D:"IfcCartesianPointList3D",IFCCARTESIANPOINTLIST2D:"IfcCartesianPointList2D",IFCCARTESIANPOINTLIST:"IfcCartesianPointList",IFCADVANCEDFACE:"IfcAdvancedFace",IFCTYPERESOURCE:"IfcTypeResource",IFCTYPEPROCESS:"IfcTypeProcess",IFCTESSELLATEDITEM:"IfcTessellatedItem",IFCSWEPTDISKSOLIDPOLYGONAL:"IfcSweptDiskSolidPolygonal",IFCRESOURCETIME:"IfcResourceTime",IFCRESOURCECONSTRAINTRELATIONSHIP:"IfcResourceConstraintRelationship",IFCRESOURCEAPPROVALRELATIONSHIP:"IfcResourceApprovalRelationship",IFCQUANTITYSET:"IfcQuantitySet",IFCPROPERTYTEMPLATEDEFINITION:"IfcPropertyTemplateDefinition",IFCPREDEFINEDPROPERTIES:"IfcPredefinedProperties",IFCMIRROREDPROFILEDEF:"IfcMirroredProfileDef",IFCMATERIALRELATIONSHIP:"IfcMaterialRelationship",IFCMATERIALPROFILESETUSAGETAPERING:"IfcMaterialProfileSetUsageTapering",IFCMATERIALPROFILESETUSAGE:"IfcMaterialProfileSetUsage",IFCMATERIALCONSTITUENTSET:"IfcMaterialConstituentSet",IFCMATERIALCONSTITUENT:"IfcMaterialConstituent",IFCLAGTIME:"IfcLagTime",IFCINDEXEDTRIANGLETEXTUREMAP:"IfcIndexedTriangleTextureMap",IFCINDEXEDTEXTUREMAP:"IfcIndexedTextureMap",IFCINDEXEDCOLOURMAP:"IfcIndexedColourMap",IFCEXTERNALREFERENCERELATIONSHIP:"IfcExternalReferenceRelationship",IFCEXTENDEDPROPERTIES:"IfcExtendedProperties",IFCEVENTTIME:"IfcEventTime",IFCCONVERSIONBASEDUNITWITHOFFSET:"IfcConversionBasedUnitWithOffset",IFCCOLOURRGBLIST:"IfcColourRgbList",IFCWORKTIME:"IfcWorkTime",IFCTIMEPERIOD:"IfcTimePeriod",IFCTEXTUREVERTEXLIST:"IfcTextureVertexList",IFCTASKTIMERECURRING:"IfcTaskTimeRecurring",IFCTASKTIME:"IfcTaskTime",IFCTABLECOLUMN:"IfcTableColumn",IFCSURFACEREINFORCEMENTAREA:"IfcSurfaceReinforcementArea",IFCSTRUCTURALLOADORRESULT:"IfcStructuralLoadOrResult",IFCSTRUCTURALLOADCONFIGURATION:"IfcStructuralLoadConfiguration",IFCSCHEDULINGTIME:"IfcSchedulingTime",IFCRESOURCELEVELRELATIONSHIP:"IfcResourceLevelRelationship",IFCREFERENCE:"IfcReference",IFCRECURRENCEPATTERN:"IfcRecurrencePattern",IFCPROPERTYABSTRACTION:"IfcPropertyAbstraction",IFCPROJECTEDCRS:"IfcProjectedCrs",IFCPRESENTATIONITEM:"IfcPresentationItem",IFCMATERIALUSAGEDEFINITION:"IfcMaterialUsageDefinition",IFCMATERIALPROFILEWITHOFFSETS:"IfcMaterialProfileWithOffsets",IFCMATERIALPROFILESET:"IfcMaterialProfileSet",IFCMATERIALPROFILE:"IfcMaterialProfile",IFCMATERIALLAYERWITHOFFSETS:"IfcMaterialLayerWithOffsets",IFCMATERIALDEFINITION:"IfcMaterialDefinition",IFCMAPCONVERSION:"IfcMapConversion",IFCEXTERNALINFORMATION:"IfcExternalInformation",IFCCOORDINATEREFERENCESYSTEM:"IfcCoordinateReferenceSystem",IFCCOORDINATEOPERATION:"IfcCoordinateOperation",IFCCONNECTIONVOLUMEGEOMETRY:"IfcConnectionVolumeGeometry",IFCREINFORCINGBAR:"IfcReinforcingBar",IFCELECTRICDISTRIBUTIONPOINT:"IfcElectricDistributionPoint",IFCDISTRIBUTIONCONTROLELEMENT:"IfcDistributionControlElement",IFCDISTRIBUTIONCHAMBERELEMENT:"IfcDistributionChamberElement",IFCCONTROLLERTYPE:"IfcControllerType",IFCCHAMFEREDGEFEATURE:"IfcChamferEdgeFeature",IFCBEAM:"IfcBeam",IFCALARMTYPE:"IfcAlarmType",IFCACTUATORTYPE:"IfcActuatorType",IFCWINDOW:"IfcWindow",IFCWALLSTANDARDCASE:"IfcWallStandardCase",IFCWALL:"IfcWall",IFCVIBRATIONISOLATORTYPE:"IfcVibrationIsolatorType",IFCTENDONANCHOR:"IfcTendonAnchor",IFCTENDON:"IfcTendon",IFCSTRUCTURALANALYSISMODEL:"IfcStructuralAnalysisModel",IFCSTAIRFLIGHT:"IfcStairFlight",IFCSTAIR:"IfcStair",IFCSLAB:"IfcSlab",IFCSENSORTYPE:"IfcSensorType",IFCROUNDEDEDGEFEATURE:"IfcRoundedEdgeFeature",IFCROOF:"IfcRoof",IFCREINFORCINGMESH:"IfcReinforcingMesh",IFCREINFORCINGELEMENT:"IfcReinforcingElement",IFCRATIONALBEZIERCURVE:"IfcRationalBezierCurve",IFCRAMPFLIGHT:"IfcRampFlight",IFCRAMP:"IfcRamp",IFCRAILING:"IfcRailing",IFCPLATE:"IfcPlate",IFCPILE:"IfcPile",IFCMEMBER:"IfcMember",IFCFOOTING:"IfcFooting",IFCFLOWTREATMENTDEVICE:"IfcFlowTreatmentDevice",IFCFLOWTERMINAL:"IfcFlowTerminal",IFCFLOWSTORAGEDEVICE:"IfcFlowStorageDevice",IFCFLOWSEGMENT:"IfcFlowSegment",IFCFLOWMOVINGDEVICE:"IfcFlowMovingDevice",IFCFLOWINSTRUMENTTYPE:"IfcFlowInstrumentType",IFCFLOWFITTING:"IfcFlowFitting",IFCFLOWCONTROLLER:"IfcFlowController",IFCFIRESUPPRESSIONTERMINALTYPE:"IfcFireSuppressionTerminalType",IFCFILTERTYPE:"IfcFilterType",IFCFANTYPE:"IfcFanType",IFCENERGYCONVERSIONDEVICE:"IfcEnergyConversionDevice",IFCELECTRICALELEMENT:"IfcElectricalElement",IFCELECTRICALCIRCUIT:"IfcElectricalCircuit",IFCELECTRICTIMECONTROLTYPE:"IfcElectricTimeControlType",IFCELECTRICMOTORTYPE:"IfcElectricMotorType",IFCELECTRICHEATERTYPE:"IfcElectricHeaterType",IFCELECTRICGENERATORTYPE:"IfcElectricGeneratorType",IFCELECTRICFLOWSTORAGEDEVICETYPE:"IfcElectricFlowStorageDeviceType",IFCELECTRICAPPLIANCETYPE:"IfcElectricApplianceType",IFCEDGEFEATURE:"IfcEdgeFeature",IFCDUCTSILENCERTYPE:"IfcDuctSilencerType",IFCDUCTSEGMENTTYPE:"IfcDuctSegmentType",IFCDUCTFITTINGTYPE:"IfcDuctFittingType",IFCDOOR:"IfcDoor",IFCDISTRIBUTIONPORT:"IfcDistributionPort",IFCDISTRIBUTIONFLOWELEMENT:"IfcDistributionFlowElement",IFCDISTRIBUTIONELEMENT:"IfcDistributionElement",IFCDISTRIBUTIONCONTROLELEMENTTYPE:"IfcDistributionControlElementType",IFCDISTRIBUTIONCHAMBERELEMENTTYPE:"IfcDistributionChamberElementType",IFCDISCRETEACCESSORYTYPE:"IfcDiscreteAccessoryType",IFCDISCRETEACCESSORY:"IfcDiscreteAccessory",IFCDIAMETERDIMENSION:"IfcDiameterDimension",IFCDAMPERTYPE:"IfcDamperType",IFCCURTAINWALL:"IfcCurtainWall",IFCCOVERING:"IfcCovering",IFCCOOLINGTOWERTYPE:"IfcCoolingTowerType",IFCCOOLEDBEAMTYPE:"IfcCooledBeamType",IFCCONSTRUCTIONPRODUCTRESOURCE:"IfcConstructionProductResource",IFCCONSTRUCTIONMATERIALRESOURCE:"IfcConstructionMaterialResource",IFCCONSTRUCTIONEQUIPMENTRESOURCE:"IfcConstructionEquipmentResource",IFCCONDITIONCRITERION:"IfcConditionCriterion",IFCCONDITION:"IfcCondition",IFCCONDENSERTYPE:"IfcCondenserType",IFCCOMPRESSORTYPE:"IfcCompressorType",IFCCOLUMN:"IfcColumn",IFCCOILTYPE:"IfcCoilType",IFCCIRCLE:"IfcCircle",IFCCHILLERTYPE:"IfcChillerType",IFCCABLESEGMENTTYPE:"IfcCableSegmentType",IFCCABLECARRIERSEGMENTTYPE:"IfcCableCarrierSegmentType",IFCCABLECARRIERFITTINGTYPE:"IfcCableCarrierFittingType",IFCBUILDINGELEMENTPROXYTYPE:"IfcBuildingElementProxyType",IFCBUILDINGELEMENTPROXY:"IfcBuildingElementProxy",IFCBUILDINGELEMENTPART:"IfcBuildingElementPart",IFCBUILDINGELEMENTCOMPONENT:"IfcBuildingElementComponent",IFCBUILDINGELEMENT:"IfcBuildingElement",IFCBOILERTYPE:"IfcBoilerType",IFCBEZIERCURVE:"IfcBezierCurve",IFCBEAMTYPE:"IfcBeamType",IFCBSPLINECURVE:"IfcBSplineCurve",IFCASSET:"IfcAsset",IFCANGULARDIMENSION:"IfcAngularDimension",IFCAIRTOAIRHEATRECOVERYTYPE:"IfcAirToAirHeatRecoveryType",IFCAIRTERMINALTYPE:"IfcAirTerminalType",IFCAIRTERMINALBOXTYPE:"IfcAirTerminalBoxType",IFCACTIONREQUEST:"IfcActionRequest",IFC2DCOMPOSITECURVE:"Ifc2DCompositeCurve",IFCZONE:"IfcZone",IFCWORKSCHEDULE:"IfcWorkSchedule",IFCWORKPLAN:"IfcWorkPlan",IFCWORKCONTROL:"IfcWorkControl",IFCWASTETERMINALTYPE:"IfcWasteTerminalType",IFCWALLTYPE:"IfcWallType",IFCVIRTUALELEMENT:"IfcVirtualElement",IFCVALVETYPE:"IfcValveType",IFCUNITARYEQUIPMENTTYPE:"IfcUnitaryEquipmentType",IFCTUBEBUNDLETYPE:"IfcTubeBundleType",IFCTRIMMEDCURVE:"IfcTrimmedCurve",IFCTRANSPORTELEMENT:"IfcTransportElement",IFCTRANSFORMERTYPE:"IfcTransformerType",IFCTIMESERIESSCHEDULE:"IfcTimeSeriesSchedule",IFCTANKTYPE:"IfcTankType",IFCSYSTEM:"IfcSystem",IFCSWITCHINGDEVICETYPE:"IfcSwitchingDeviceType",IFCSUBCONTRACTRESOURCE:"IfcSubContractResource",IFCSTRUCTURALSURFACECONNECTION:"IfcStructuralSurfaceConnection",IFCSTRUCTURALRESULTGROUP:"IfcStructuralResultGroup",IFCSTRUCTURALPOINTREACTION:"IfcStructuralPointReaction",IFCSTRUCTURALPOINTCONNECTION:"IfcStructuralPointConnection",IFCSTRUCTURALPOINTACTION:"IfcStructuralPointAction",IFCSTRUCTURALPLANARACTIONVARYING:"IfcStructuralPlanarActionVarying",IFCSTRUCTURALPLANARACTION:"IfcStructuralPlanarAction",IFCSTRUCTURALLOADGROUP:"IfcStructuralLoadGroup",IFCSTRUCTURALLINEARACTIONVARYING:"IfcStructuralLinearActionVarying",IFCSTRUCTURALLINEARACTION:"IfcStructuralLinearAction",IFCSTRUCTURALCURVEMEMBERVARYING:"IfcStructuralCurveMemberVarying",IFCSTRUCTURALCURVEMEMBER:"IfcStructuralCurveMember",IFCSTRUCTURALCURVECONNECTION:"IfcStructuralCurveConnection",IFCSTRUCTURALCONNECTION:"IfcStructuralConnection",IFCSTRUCTURALACTION:"IfcStructuralAction",IFCSTAIRFLIGHTTYPE:"IfcStairFlightType",IFCSTACKTERMINALTYPE:"IfcStackTerminalType",IFCSPACETYPE:"IfcSpaceType",IFCSPACEPROGRAM:"IfcSpaceProgram",IFCSPACEHEATERTYPE:"IfcSpaceHeaterType",IFCSPACE:"IfcSpace",IFCSLABTYPE:"IfcSlabType",IFCSITE:"IfcSite",IFCSERVICELIFE:"IfcServiceLife",IFCSCHEDULETIMECONTROL:"IfcScheduleTimeControl",IFCSANITARYTERMINALTYPE:"IfcSanitaryTerminalType",IFCRELASSIGNSTASKS:"IfcRelAssignsTasks",IFCRELAGGREGATES:"IfcRelAggregates",IFCRAMPFLIGHTTYPE:"IfcRampFlightType",IFCRAILINGTYPE:"IfcRailingType",IFCRADIUSDIMENSION:"IfcRadiusDimension",IFCPUMPTYPE:"IfcPumpType",IFCPROTECTIVEDEVICETYPE:"IfcProtectiveDeviceType",IFCPROJECTIONELEMENT:"IfcProjectionElement",IFCPROJECTORDERRECORD:"IfcProjectOrderRecord",IFCPROJECTORDER:"IfcProjectOrder",IFCPROCEDURE:"IfcProcedure",IFCPORT:"IfcPort",IFCPOLYLINE:"IfcPolyline",IFCPLATETYPE:"IfcPlateType",IFCPIPESEGMENTTYPE:"IfcPipeSegmentType",IFCPIPEFITTINGTYPE:"IfcPipeFittingType",IFCPERMIT:"IfcPermit",IFCPERFORMANCEHISTORY:"IfcPerformanceHistory",IFCOUTLETTYPE:"IfcOutletType",IFCORDERACTION:"IfcOrderAction",IFCOPENINGELEMENT:"IfcOpeningElement",IFCOCCUPANT:"IfcOccupant",IFCMOVE:"IfcMove",IFCMOTORCONNECTIONTYPE:"IfcMotorConnectionType",IFCMEMBERTYPE:"IfcMemberType",IFCMECHANICALFASTENERTYPE:"IfcMechanicalFastenerType",IFCMECHANICALFASTENER:"IfcMechanicalFastener",IFCLINEARDIMENSION:"IfcLinearDimension",IFCLIGHTFIXTURETYPE:"IfcLightFixtureType",IFCLAMPTYPE:"IfcLampType",IFCLABORRESOURCE:"IfcLaborResource",IFCJUNCTIONBOXTYPE:"IfcJunctionBoxType",IFCINVENTORY:"IfcInventory",IFCHUMIDIFIERTYPE:"IfcHumidifierType",IFCHEATEXCHANGERTYPE:"IfcHeatExchangerType",IFCGROUP:"IfcGroup",IFCGRID:"IfcGrid",IFCGASTERMINALTYPE:"IfcGasTerminalType",IFCFURNITURESTANDARD:"IfcFurnitureStandard",IFCFURNISHINGELEMENT:"IfcFurnishingElement",IFCFLOWTREATMENTDEVICETYPE:"IfcFlowTreatmentDeviceType",IFCFLOWTERMINALTYPE:"IfcFlowTerminalType",IFCFLOWSTORAGEDEVICETYPE:"IfcFlowStorageDeviceType",IFCFLOWSEGMENTTYPE:"IfcFlowSegmentType",IFCFLOWMOVINGDEVICETYPE:"IfcFlowMovingDeviceType",IFCFLOWMETERTYPE:"IfcFlowMeterType",IFCFLOWFITTINGTYPE:"IfcFlowFittingType",IFCFLOWCONTROLLERTYPE:"IfcFlowControllerType",IFCFEATUREELEMENTSUBTRACTION:"IfcFeatureElementSubtraction",IFCFEATUREELEMENTADDITION:"IfcFeatureElementAddition",IFCFEATUREELEMENT:"IfcFeatureElement",IFCFASTENERTYPE:"IfcFastenerType",IFCFASTENER:"IfcFastener",IFCFACETEDBREPWITHVOIDS:"IfcFacetedBrepWithVoids",IFCFACETEDBREP:"IfcFacetedBrep",IFCEVAPORATORTYPE:"IfcEvaporatorType",IFCEVAPORATIVECOOLERTYPE:"IfcEvaporativeCoolerType",IFCEQUIPMENTSTANDARD:"IfcEquipmentStandard",IFCEQUIPMENTELEMENT:"IfcEquipmentElement",IFCENERGYCONVERSIONDEVICETYPE:"IfcEnergyConversionDeviceType",IFCELLIPSE:"IfcEllipse",IFCELEMENTCOMPONENTTYPE:"IfcElementComponentType",IFCELEMENTCOMPONENT:"IfcElementComponent",IFCELEMENTASSEMBLY:"IfcElementAssembly",IFCELEMENT:"IfcElement",IFCELECTRICALBASEPROPERTIES:"IfcElectricalBaseProperties",IFCDISTRIBUTIONFLOWELEMENTTYPE:"IfcDistributionFlowElementType",IFCDISTRIBUTIONELEMENTTYPE:"IfcDistributionElementType",IFCDIMENSIONCURVEDIRECTEDCALLOUT:"IfcDimensionCurveDirectedCallout",IFCCURTAINWALLTYPE:"IfcCurtainWallType",IFCCREWRESOURCE:"IfcCrewResource",IFCCOVERINGTYPE:"IfcCoveringType",IFCCOSTSCHEDULE:"IfcCostSchedule",IFCCOSTITEM:"IfcCostItem",IFCCONTROL:"IfcControl",IFCCONSTRUCTIONRESOURCE:"IfcConstructionResource",IFCCONIC:"IfcConic",IFCCOMPOSITECURVE:"IfcCompositeCurve",IFCCOLUMNTYPE:"IfcColumnType",IFCCIRCLEHOLLOWPROFILEDEF:"IfcCircleHollowProfileDef",IFCBUILDINGSTOREY:"IfcBuildingStorey",IFCBUILDINGELEMENTTYPE:"IfcBuildingElementType",IFCBUILDING:"IfcBuilding",IFCBOUNDEDCURVE:"IfcBoundedCurve",IFCBOOLEANCLIPPINGRESULT:"IfcBooleanClippingResult",IFCBLOCK:"IfcBlock",IFCASYMMETRICISHAPEPROFILEDEF:"IfcAsymmetricIShapeProfileDef",IFCANNOTATION:"IfcAnnotation",IFCACTOR:"IfcActor",IFCTRANSPORTELEMENTTYPE:"IfcTransportElementType",IFCTASK:"IfcTask",IFCSYSTEMFURNITUREELEMENTTYPE:"IfcSystemFurnitureElementType",IFCSURFACEOFREVOLUTION:"IfcSurfaceOfRevolution",IFCSURFACEOFLINEAREXTRUSION:"IfcSurfaceOfLinearExtrusion",IFCSURFACECURVESWEPTAREASOLID:"IfcSurfaceCurveSweptAreaSolid",IFCSTRUCTUREDDIMENSIONCALLOUT:"IfcStructuredDimensionCallout",IFCSTRUCTURALSURFACEMEMBERVARYING:"IfcStructuralSurfaceMemberVarying",IFCSTRUCTURALSURFACEMEMBER:"IfcStructuralSurfaceMember",IFCSTRUCTURALREACTION:"IfcStructuralReaction",IFCSTRUCTURALMEMBER:"IfcStructuralMember",IFCSTRUCTURALITEM:"IfcStructuralItem",IFCSTRUCTURALACTIVITY:"IfcStructuralActivity",IFCSPHERE:"IfcSphere",IFCSPATIALSTRUCTUREELEMENTTYPE:"IfcSpatialStructureElementType",IFCSPATIALSTRUCTUREELEMENT:"IfcSpatialStructureElement",IFCRIGHTCIRCULARCYLINDER:"IfcRightCircularCylinder",IFCRIGHTCIRCULARCONE:"IfcRightCircularCone",IFCREVOLVEDAREASOLID:"IfcRevolvedAreaSolid",IFCRESOURCE:"IfcResource",IFCRELVOIDSELEMENT:"IfcRelVoidsElement",IFCRELSPACEBOUNDARY:"IfcRelSpaceBoundary",IFCRELSERVICESBUILDINGS:"IfcRelServicesBuildings",IFCRELSEQUENCE:"IfcRelSequence",IFCRELSCHEDULESCOSTITEMS:"IfcRelSchedulesCostItems",IFCRELREFERENCEDINSPATIALSTRUCTURE:"IfcRelReferencedInSpatialStructure",IFCRELPROJECTSELEMENT:"IfcRelProjectsElement",IFCRELOVERRIDESPROPERTIES:"IfcRelOverridesProperties",IFCRELOCCUPIESSPACES:"IfcRelOccupiesSpaces",IFCRELNESTS:"IfcRelNests",IFCRELINTERACTIONREQUIREMENTS:"IfcRelInteractionRequirements",IFCRELFLOWCONTROLELEMENTS:"IfcRelFlowControlElements",IFCRELFILLSELEMENT:"IfcRelFillsElement",IFCRELDEFINESBYTYPE:"IfcRelDefinesByType",IFCRELDEFINESBYPROPERTIES:"IfcRelDefinesByProperties",IFCRELDEFINES:"IfcRelDefines",IFCRELDECOMPOSES:"IfcRelDecomposes",IFCRELCOVERSSPACES:"IfcRelCoversSpaces",IFCRELCOVERSBLDGELEMENTS:"IfcRelCoversBldgElements",IFCRELCONTAINEDINSPATIALSTRUCTURE:"IfcRelContainedInSpatialStructure",IFCRELCONNECTSWITHREALIZINGELEMENTS:"IfcRelConnectsWithRealizingElements",IFCRELCONNECTSWITHECCENTRICITY:"IfcRelConnectsWithEccentricity",IFCRELCONNECTSSTRUCTURALMEMBER:"IfcRelConnectsStructuralMember",IFCRELCONNECTSSTRUCTURALELEMENT:"IfcRelConnectsStructuralElement",IFCRELCONNECTSSTRUCTURALACTIVITY:"IfcRelConnectsStructuralActivity",IFCRELCONNECTSPORTS:"IfcRelConnectsPorts",IFCRELCONNECTSPORTTOELEMENT:"IfcRelConnectsPortToElement",IFCRELCONNECTSPATHELEMENTS:"IfcRelConnectsPathElements",IFCRELCONNECTSELEMENTS:"IfcRelConnectsElements",IFCRELCONNECTS:"IfcRelConnects",IFCRELASSOCIATESPROFILEPROPERTIES:"IfcRelAssociatesProfileProperties",IFCRELASSOCIATESMATERIAL:"IfcRelAssociatesMaterial",IFCRELASSOCIATESLIBRARY:"IfcRelAssociatesLibrary",IFCRELASSOCIATESDOCUMENT:"IfcRelAssociatesDocument",IFCRELASSOCIATESCONSTRAINT:"IfcRelAssociatesConstraint",IFCRELASSOCIATESCLASSIFICATION:"IfcRelAssociatesClassification",IFCRELASSOCIATESAPPROVAL:"IfcRelAssociatesApproval",IFCRELASSOCIATESAPPLIEDVALUE:"IfcRelAssociatesAppliedValue",IFCRELASSOCIATES:"IfcRelAssociates",IFCRELASSIGNSTORESOURCE:"IfcRelAssignsToResource",IFCRELASSIGNSTOPROJECTORDER:"IfcRelAssignsToProjectOrder",IFCRELASSIGNSTOPRODUCT:"IfcRelAssignsToProduct",IFCRELASSIGNSTOPROCESS:"IfcRelAssignsToProcess",IFCRELASSIGNSTOGROUP:"IfcRelAssignsToGroup",IFCRELASSIGNSTOCONTROL:"IfcRelAssignsToControl",IFCRELASSIGNSTOACTOR:"IfcRelAssignsToActor",IFCRELASSIGNS:"IfcRelAssigns",IFCRECTANGULARTRIMMEDSURFACE:"IfcRectangularTrimmedSurface",IFCRECTANGULARPYRAMID:"IfcRectangularPyramid",IFCRECTANGLEHOLLOWPROFILEDEF:"IfcRectangleHollowProfileDef",IFCPROXY:"IfcProxy",IFCPROPERTYSET:"IfcPropertySet",IFCPROJECTIONCURVE:"IfcProjectionCurve",IFCPROJECT:"IfcProject",IFCPRODUCT:"IfcProduct",IFCPROCESS:"IfcProcess",IFCPLANE:"IfcPlane",IFCPLANARBOX:"IfcPlanarBox",IFCPERMEABLECOVERINGPROPERTIES:"IfcPermeableCoveringProperties",IFCOFFSETCURVE3D:"IfcOffsetCurve3D",IFCOFFSETCURVE2D:"IfcOffsetCurve2D",IFCOBJECT:"IfcObject",IFCMANIFOLDSOLIDBREP:"IfcManifoldSolidBrep",IFCLINE:"IfcLine",IFCLSHAPEPROFILEDEF:"IfcLShapeProfileDef",IFCISHAPEPROFILEDEF:"IfcIShapeProfileDef",IFCGEOMETRICCURVESET:"IfcGeometricCurveSet",IFCFURNITURETYPE:"IfcFurnitureType",IFCFURNISHINGELEMENTTYPE:"IfcFurnishingElementType",IFCFLUIDFLOWPROPERTIES:"IfcFluidFlowProperties",IFCFILLAREASTYLETILES:"IfcFillAreaStyleTiles",IFCFILLAREASTYLETILESYMBOLWITHSTYLE:"IfcFillAreaStyleTileSymbolWithStyle",IFCFILLAREASTYLEHATCHING:"IfcFillAreaStyleHatching",IFCFACEBASEDSURFACEMODEL:"IfcFaceBasedSurfaceModel",IFCEXTRUDEDAREASOLID:"IfcExtrudedAreaSolid",IFCENERGYPROPERTIES:"IfcEnergyProperties",IFCELLIPSEPROFILEDEF:"IfcEllipseProfileDef",IFCELEMENTARYSURFACE:"IfcElementarySurface",IFCELEMENTTYPE:"IfcElementType",IFCELEMENTQUANTITY:"IfcElementQuantity",IFCEDGELOOP:"IfcEdgeLoop",IFCDRAUGHTINGPREDEFINEDCURVEFONT:"IfcDraughtingPredefinedCurveFont",IFCDRAUGHTINGPREDEFINEDCOLOUR:"IfcDraughtingPredefinedColour",IFCDRAUGHTINGCALLOUT:"IfcDraughtingCallout",IFCDOORSTYLE:"IfcDoorStyle",IFCDOORPANELPROPERTIES:"IfcDoorPanelProperties",IFCDOORLININGPROPERTIES:"IfcDoorLiningProperties",IFCDIRECTION:"IfcDirection",IFCDIMENSIONCURVETERMINATOR:"IfcDimensionCurveTerminator",IFCDIMENSIONCURVE:"IfcDimensionCurve",IFCDEFINEDSYMBOL:"IfcDefinedSymbol",IFCCURVEBOUNDEDPLANE:"IfcCurveBoundedPlane",IFCCURVE:"IfcCurve",IFCCSGSOLID:"IfcCsgSolid",IFCCSGPRIMITIVE3D:"IfcCsgPrimitive3D",IFCCRANERAILFSHAPEPROFILEDEF:"IfcCraneRailFShapeProfileDef",IFCCRANERAILASHAPEPROFILEDEF:"IfcCraneRailAShapeProfileDef",IFCCOMPOSITECURVESEGMENT:"IfcCompositeCurveSegment",IFCCLOSEDSHELL:"IfcClosedShell",IFCCIRCLEPROFILEDEF:"IfcCircleProfileDef",IFCCARTESIANTRANSFORMATIONOPERATOR3DNONUNIFORM:"IfcCartesianTransformationOperator3DNonUniform",IFCCARTESIANTRANSFORMATIONOPERATOR3D:"IfcCartesianTransformationOperator3D",IFCCARTESIANTRANSFORMATIONOPERATOR2DNONUNIFORM:"IfcCartesianTransformationOperator2DNonUniform",IFCCARTESIANTRANSFORMATIONOPERATOR2D:"IfcCartesianTransformationOperator2D",IFCCARTESIANTRANSFORMATIONOPERATOR:"IfcCartesianTransformationOperator",IFCCARTESIANPOINT:"IfcCartesianPoint",IFCCSHAPEPROFILEDEF:"IfcCShapeProfileDef",IFCBOXEDHALFSPACE:"IfcBoxedHalfSpace",IFCBOUNDINGBOX:"IfcBoundingBox",IFCBOUNDEDSURFACE:"IfcBoundedSurface",IFCBOOLEANRESULT:"IfcBooleanResult",IFCAXIS2PLACEMENT3D:"IfcAxis2Placement3D",IFCAXIS2PLACEMENT2D:"IfcAxis2Placement2D",IFCAXIS1PLACEMENT:"IfcAxis1Placement",IFCANNOTATIONSURFACE:"IfcAnnotationSurface",IFCANNOTATIONFILLAREAOCCURRENCE:"IfcAnnotationFillAreaOccurrence",IFCANNOTATIONFILLAREA:"IfcAnnotationFillArea",IFCANNOTATIONCURVEOCCURRENCE:"IfcAnnotationCurveOccurrence",IFCZSHAPEPROFILEDEF:"IfcZShapeProfileDef",IFCWINDOWSTYLE:"IfcWindowStyle",IFCWINDOWPANELPROPERTIES:"IfcWindowPanelProperties",IFCWINDOWLININGPROPERTIES:"IfcWindowLiningProperties",IFCVERTEXLOOP:"IfcVertexLoop",IFCVECTOR:"IfcVector",IFCUSHAPEPROFILEDEF:"IfcUShapeProfileDef",IFCTYPEPRODUCT:"IfcTypeProduct",IFCTYPEOBJECT:"IfcTypeObject",IFCTWODIRECTIONREPEATFACTOR:"IfcTwoDirectionRepeatFactor",IFCTRAPEZIUMPROFILEDEF:"IfcTrapeziumProfileDef",IFCTEXTLITERALWITHEXTENT:"IfcTextLiteralWithExtent",IFCTEXTLITERAL:"IfcTextLiteral",IFCTERMINATORSYMBOL:"IfcTerminatorSymbol",IFCTSHAPEPROFILEDEF:"IfcTShapeProfileDef",IFCSWEPTSURFACE:"IfcSweptSurface",IFCSWEPTDISKSOLID:"IfcSweptDiskSolid",IFCSWEPTAREASOLID:"IfcSweptAreaSolid",IFCSURFACESTYLERENDERING:"IfcSurfaceStyleRendering",IFCSURFACE:"IfcSurface",IFCSUBEDGE:"IfcSubedge",IFCSTRUCTURALSTEELPROFILEPROPERTIES:"IfcStructuralSteelProfileProperties",IFCSTRUCTURALPROFILEPROPERTIES:"IfcStructuralProfileProperties",IFCSTRUCTURALLOADSINGLEFORCEWARPING:"IfcStructuralLoadSingleForceWarping",IFCSTRUCTURALLOADSINGLEFORCE:"IfcStructuralLoadSingleForce",IFCSTRUCTURALLOADSINGLEDISPLACEMENTDISTORTION:"IfcStructuralLoadSingleDisplacementDistortion",IFCSTRUCTURALLOADSINGLEDISPLACEMENT:"IfcStructuralLoadSingleDisplacement",IFCSTRUCTURALLOADPLANARFORCE:"IfcStructuralLoadPlanarForce",IFCSTRUCTURALLOADLINEARFORCE:"IfcStructuralLoadLinearForce",IFCSPACETHERMALLOADPROPERTIES:"IfcSpaceThermalLoadProperties",IFCSOUNDVALUE:"IfcSoundValue",IFCSOUNDPROPERTIES:"IfcSoundProperties",IFCSOLIDMODEL:"IfcSolidModel",IFCSLIPPAGECONNECTIONCONDITION:"IfcSlippageConnectionCondition",IFCSHELLBASEDSURFACEMODEL:"IfcShellBasedSurfaceModel",IFCSERVICELIFEFACTOR:"IfcServiceLifeFactor",IFCSECTIONEDSPINE:"IfcSectionedSpine",IFCROUNDEDRECTANGLEPROFILEDEF:"IfcRoundedRectangleProfileDef",IFCRELATIONSHIP:"IfcRelationship",IFCREINFORCEMENTDEFINITIONPROPERTIES:"IfcReinforcementDefinitionProperties",IFCREGULARTIMESERIES:"IfcRegularTimeSeries",IFCRECTANGLEPROFILEDEF:"IfcRectangleProfileDef",IFCPROPERTYTABLEVALUE:"IfcPropertyTableValue",IFCPROPERTYSINGLEVALUE:"IfcPropertySingleValue",IFCPROPERTYSETDEFINITION:"IfcPropertySetDefinition",IFCPROPERTYREFERENCEVALUE:"IfcPropertyReferenceValue",IFCPROPERTYLISTVALUE:"IfcPropertyListValue",IFCPROPERTYENUMERATEDVALUE:"IfcPropertyEnumeratedValue",IFCPROPERTYDEFINITION:"IfcPropertyDefinition",IFCPROPERTYBOUNDEDVALUE:"IfcPropertyBoundedValue",IFCPRODUCTDEFINITIONSHAPE:"IfcProductDefinitionShape",IFCPREDEFINEDPOINTMARKERSYMBOL:"IfcPredefinedPointMarkerSymbol",IFCPREDEFINEDDIMENSIONSYMBOL:"IfcPredefinedDimensionSymbol",IFCPREDEFINEDCURVEFONT:"IfcPredefinedCurveFont",IFCPREDEFINEDCOLOUR:"IfcPredefinedColour",IFCPOLYGONALBOUNDEDHALFSPACE:"IfcPolygonalBoundedHalfSpace",IFCPOLYLOOP:"IfcPolyLoop",IFCPOINTONSURFACE:"IfcPointOnSurface",IFCPOINTONCURVE:"IfcPointOnCurve",IFCPOINT:"IfcPoint",IFCPLANAREXTENT:"IfcPlanarExtent",IFCPLACEMENT:"IfcPlacement",IFCPIXELTEXTURE:"IfcPixelTexture",IFCPHYSICALCOMPLEXQUANTITY:"IfcPhysicalComplexQuantity",IFCPATH:"IfcPath",IFCPARAMETERIZEDPROFILEDEF:"IfcParameterizedProfileDef",IFCORIENTEDEDGE:"IfcOrientedEdge",IFCOPENSHELL:"IfcOpenShell",IFCONEDIRECTIONREPEATFACTOR:"IfcOneDirectionRepeatFactor",IFCOBJECTDEFINITION:"IfcObjectDefinition",IFCMECHANICALCONCRETEMATERIALPROPERTIES:"IfcMechanicalConcreteMaterialProperties",IFCMATERIALDEFINITIONREPRESENTATION:"IfcMaterialDefinitionRepresentation",IFCMAPPEDITEM:"IfcMappedItem",IFCLOOP:"IfcLoop",IFCLOCALPLACEMENT:"IfcLocalPlacement",IFCLIGHTSOURCESPOT:"IfcLightSourceSpot",IFCLIGHTSOURCEPOSITIONAL:"IfcLightSourcePositional",IFCLIGHTSOURCEGONIOMETRIC:"IfcLightSourceGoniometric",IFCLIGHTSOURCEDIRECTIONAL:"IfcLightSourceDirectional",IFCLIGHTSOURCEAMBIENT:"IfcLightSourceAmbient",IFCLIGHTSOURCE:"IfcLightSource",IFCIRREGULARTIMESERIES:"IfcIrregularTimeSeries",IFCIMAGETEXTURE:"IfcImageTexture",IFCHYGROSCOPICMATERIALPROPERTIES:"IfcHygroscopicMaterialProperties",IFCHALFSPACESOLID:"IfcHalfSpaceSolid",IFCGRIDPLACEMENT:"IfcGridPlacement",IFCGEOMETRICSET:"IfcGeometricSet",IFCGEOMETRICREPRESENTATIONSUBCONTEXT:"IfcGeometricRepresentationSubContext",IFCGEOMETRICREPRESENTATIONITEM:"IfcGeometricRepresentationItem",IFCGEOMETRICREPRESENTATIONCONTEXT:"IfcGeometricRepresentationContext",IFCGENERALPROFILEPROPERTIES:"IfcGeneralProfileProperties",IFCGENERALMATERIALPROPERTIES:"IfcGeneralMaterialProperties",IFCFUELPROPERTIES:"IfcFuelProperties",IFCFILLAREASTYLE:"IfcFillAreaStyle",IFCFAILURECONNECTIONCONDITION:"IfcFailureConnectionCondition",IFCFACESURFACE:"IfcFaceSurface",IFCFACEOUTERBOUND:"IfcFaceOuterBound",IFCFACEBOUND:"IfcFaceBound",IFCFACE:"IfcFace",IFCEXTENDEDMATERIALPROPERTIES:"IfcExtendedMaterialProperties",IFCEDGECURVE:"IfcEdgeCurve",IFCEDGE:"IfcEdge",IFCDRAUGHTINGPREDEFINEDTEXTFONT:"IfcDraughtingPredefinedTextFont",IFCDOCUMENTREFERENCE:"IfcDocumentReference",IFCDIMENSIONPAIR:"IfcDimensionPair",IFCDIMENSIONCALLOUTRELATIONSHIP:"IfcDimensionCalloutRelationship",IFCDERIVEDPROFILEDEF:"IfcDerivedProfileDef",IFCCURVESTYLE:"IfcCurveStyle",IFCCONVERSIONBASEDUNIT:"IfcConversionBasedUnit",IFCCONTEXTDEPENDENTUNIT:"IfcContextDependentUnit",IFCCONNECTIONPOINTECCENTRICITY:"IfcConnectionPointEccentricity",IFCCONNECTIONCURVEGEOMETRY:"IfcConnectionCurveGeometry",IFCCONNECTEDFACESET:"IfcConnectedFaceSet",IFCCOMPOSITEPROFILEDEF:"IfcCompositeProfileDef",IFCCOMPLEXPROPERTY:"IfcComplexProperty",IFCCOLOURRGB:"IfcColourRgb",IFCCLASSIFICATIONREFERENCE:"IfcClassificationReference",IFCCENTERLINEPROFILEDEF:"IfcCenterLineProfileDef",IFCBLOBTEXTURE:"IfcBlobTexture",IFCARBITRARYPROFILEDEFWITHVOIDS:"IfcArbitraryProfileDefWithVoids",IFCARBITRARYOPENPROFILEDEF:"IfcArbitraryOpenProfileDef",IFCARBITRARYCLOSEDPROFILEDEF:"IfcArbitraryClosedProfileDef",IFCANNOTATIONTEXTOCCURRENCE:"IfcAnnotationTextOccurrence",IFCANNOTATIONSYMBOLOCCURRENCE:"IfcAnnotationSymbolOccurrence",IFCANNOTATIONSURFACEOCCURRENCE:"IfcAnnotationSurfaceOccurrence",IFCANNOTATIONOCCURRENCE:"IfcAnnotationOccurrence",IFCWATERPROPERTIES:"IfcWaterProperties",IFCVIRTUALGRIDINTERSECTION:"IfcVirtualGridIntersection",IFCVERTEXPOINT:"IfcVertexPoint",IFCVERTEXBASEDTEXTUREMAP:"IfcVertexBasedTextureMap",IFCVERTEX:"IfcVertex",IFCUNITASSIGNMENT:"IfcUnitAssignment",IFCTOPOLOGYREPRESENTATION:"IfcTopologyRepresentation",IFCTOPOLOGICALREPRESENTATIONITEM:"IfcTopologicalRepresentationItem",IFCTIMESERIESVALUE:"IfcTimeSeriesValue",IFCTIMESERIESREFERENCERELATIONSHIP:"IfcTimeSeriesReferenceRelationship",IFCTIMESERIES:"IfcTimeSeries",IFCTHERMALMATERIALPROPERTIES:"IfcThermalMaterialProperties",IFCTEXTUREVERTEX:"IfcTextureVertex",IFCTEXTUREMAP:"IfcTextureMap",IFCTEXTURECOORDINATEGENERATOR:"IfcTextureCoordinateGenerator",IFCTEXTURECOORDINATE:"IfcTextureCoordinate",IFCTEXTSTYLEWITHBOXCHARACTERISTICS:"IfcTextStyleWithBoxCharacteristics",IFCTEXTSTYLETEXTMODEL:"IfcTextStyleTextModel",IFCTEXTSTYLEFORDEFINEDFONT:"IfcTextStyleForDefinedFont",IFCTEXTSTYLEFONTMODEL:"IfcTextStyleFontModel",IFCTEXTSTYLE:"IfcTextStyle",IFCTELECOMADDRESS:"IfcTelecomAddress",IFCTABLEROW:"IfcTableRow",IFCTABLE:"IfcTable",IFCSYMBOLSTYLE:"IfcSymbolStyle",IFCSURFACETEXTURE:"IfcSurfaceTexture",IFCSURFACESTYLEWITHTEXTURES:"IfcSurfaceStyleWithTextures",IFCSURFACESTYLESHADING:"IfcSurfaceStyleShading",IFCSURFACESTYLEREFRACTION:"IfcSurfaceStyleRefraction",IFCSURFACESTYLELIGHTING:"IfcSurfaceStyleLighting",IFCSURFACESTYLE:"IfcSurfaceStyle",IFCSTYLEDREPRESENTATION:"IfcStyledRepresentation",IFCSTYLEDITEM:"IfcStyledItem",IFCSTYLEMODEL:"IfcStyleModel",IFCSTRUCTURALLOADTEMPERATURE:"IfcStructuralLoadTemperature",IFCSTRUCTURALLOADSTATIC:"IfcStructuralLoadStatic",IFCSTRUCTURALLOAD:"IfcStructuralLoad",IFCSTRUCTURALCONNECTIONCONDITION:"IfcStructuralConnectionCondition",IFCSIMPLEPROPERTY:"IfcSimpleProperty",IFCSHAPEREPRESENTATION:"IfcShapeRepresentation",IFCSHAPEMODEL:"IfcShapeModel",IFCSHAPEASPECT:"IfcShapeAspect",IFCSECTIONREINFORCEMENTPROPERTIES:"IfcSectionReinforcementProperties",IFCSECTIONPROPERTIES:"IfcSectionProperties",IFCSIUNIT:"IfcSIUnit",IFCROOT:"IfcRoot",IFCRIBPLATEPROFILEPROPERTIES:"IfcRibPlateProfileProperties",IFCREPRESENTATIONMAP:"IfcRepresentationMap",IFCREPRESENTATIONITEM:"IfcRepresentationItem",IFCREPRESENTATIONCONTEXT:"IfcRepresentationContext",IFCREPRESENTATION:"IfcRepresentation",IFCRELAXATION:"IfcRelaxation",IFCREINFORCEMENTBARPROPERTIES:"IfcReinforcementBarProperties",IFCREFERENCESVALUEDOCUMENT:"IfcReferencesValueDocument",IFCQUANTITYWEIGHT:"IfcQuantityWeight",IFCQUANTITYVOLUME:"IfcQuantityVolume",IFCQUANTITYTIME:"IfcQuantityTime",IFCQUANTITYLENGTH:"IfcQuantityLength",IFCQUANTITYCOUNT:"IfcQuantityCount",IFCQUANTITYAREA:"IfcQuantityArea",IFCPROPERTYENUMERATION:"IfcPropertyEnumeration",IFCPROPERTYDEPENDENCYRELATIONSHIP:"IfcPropertyDependencyRelationship",IFCPROPERTYCONSTRAINTRELATIONSHIP:"IfcPropertyConstraintRelationship",IFCPROPERTY:"IfcProperty",IFCPROFILEPROPERTIES:"IfcProfileProperties",IFCPROFILEDEF:"IfcProfileDef",IFCPRODUCTSOFCOMBUSTIONPROPERTIES:"IfcProductsOfCombustionProperties",IFCPRODUCTREPRESENTATION:"IfcProductRepresentation",IFCPRESENTATIONSTYLEASSIGNMENT:"IfcPresentationStyleAssignment",IFCPRESENTATIONSTYLE:"IfcPresentationStyle",IFCPRESENTATIONLAYERWITHSTYLE:"IfcPresentationLayerWithStyle",IFCPRESENTATIONLAYERASSIGNMENT:"IfcPresentationLayerAssignment",IFCPREDEFINEDTEXTFONT:"IfcPredefinedTextFont",IFCPREDEFINEDTERMINATORSYMBOL:"IfcPredefinedTerminatorSymbol",IFCPREDEFINEDSYMBOL:"IfcPredefinedSymbol",IFCPREDEFINEDITEM:"IfcPredefinedItem",IFCPOSTALADDRESS:"IfcPostalAddress",IFCPHYSICALSIMPLEQUANTITY:"IfcPhysicalSimpleQuantity",IFCPHYSICALQUANTITY:"IfcPhysicalQuantity",IFCPERSONANDORGANIZATION:"IfcPersonAndOrganization",IFCPERSON:"IfcPerson",IFCOWNERHISTORY:"IfcOwnerHistory",IFCORGANIZATIONRELATIONSHIP:"IfcOrganizationRelationship",IFCORGANIZATION:"IfcOrganization",IFCOPTICALMATERIALPROPERTIES:"IfcOpticalMaterialProperties",IFCOBJECTIVE:"IfcObjective",IFCOBJECTPLACEMENT:"IfcObjectPlacement",IFCNAMEDUNIT:"IfcNamedUnit",IFCMONETARYUNIT:"IfcMonetaryUnit",IFCMETRIC:"IfcMetric",IFCMECHANICALSTEELMATERIALPROPERTIES:"IfcMechanicalSteelMaterialProperties",IFCMECHANICALMATERIALPROPERTIES:"IfcMechanicalMaterialProperties",IFCMEASUREWITHUNIT:"IfcMeasureWithUnit",IFCMATERIALPROPERTIES:"IfcMaterialProperties",IFCMATERIALLIST:"IfcMaterialList",IFCMATERIALLAYERSETUSAGE:"IfcMaterialLayerSetUsage",IFCMATERIALLAYERSET:"IfcMaterialLayerSet",IFCMATERIALLAYER:"IfcMaterialLayer",IFCMATERIALCLASSIFICATIONRELATIONSHIP:"IfcMaterialClassificationRelationship",IFCMATERIAL:"IfcMaterial",IFCLOCALTIME:"IfcLocalTime",IFCLIGHTINTENSITYDISTRIBUTION:"IfcLightIntensityDistribution",IFCLIGHTDISTRIBUTIONDATA:"IfcLightDistributionData",IFCLIBRARYREFERENCE:"IfcLibraryReference",IFCLIBRARYINFORMATION:"IfcLibraryInformation",IFCIRREGULARTIMESERIESVALUE:"IfcIrregularTimeSeriesValue",IFCGRIDAXIS:"IfcGridAxis",IFCEXTERNALLYDEFINEDTEXTFONT:"IfcExternallyDefinedTextFont",IFCEXTERNALLYDEFINEDSYMBOL:"IfcExternallyDefinedSymbol",IFCEXTERNALLYDEFINEDSURFACESTYLE:"IfcExternallyDefinedSurfaceStyle",IFCEXTERNALLYDEFINEDHATCHSTYLE:"IfcExternallyDefinedHatchStyle",IFCEXTERNALREFERENCE:"IfcExternalReference",IFCENVIRONMENTALIMPACTVALUE:"IfcEnvironmentalImpactValue",IFCDRAUGHTINGCALLOUTRELATIONSHIP:"IfcDraughtingCalloutRelationship",IFCDOCUMENTINFORMATIONRELATIONSHIP:"IfcDocumentInformationRelationship",IFCDOCUMENTINFORMATION:"IfcDocumentInformation",IFCDOCUMENTELECTRONICFORMAT:"IfcDocumentElectronicFormat",IFCDIMENSIONALEXPONENTS:"IfcDimensionalExponents",IFCDERIVEDUNITELEMENT:"IfcDerivedUnitElement",IFCDERIVEDUNIT:"IfcDerivedUnit",IFCDATEANDTIME:"IfcDateAndTime",IFCCURVESTYLEFONTPATTERN:"IfcCurveStyleFontPattern",IFCCURVESTYLEFONTANDSCALING:"IfcCurveStyleFontAndScaling",IFCCURVESTYLEFONT:"IfcCurveStyleFont",IFCCURRENCYRELATIONSHIP:"IfcCurrencyRelationship",IFCCOSTVALUE:"IfcCostValue",IFCCOORDINATEDUNIVERSALTIMEOFFSET:"IfcCoordinatedUniversalTimeOffset",IFCCONSTRAINTRELATIONSHIP:"IfcConstraintRelationship",IFCCONSTRAINTCLASSIFICATIONRELATIONSHIP:"IfcConstraintClassificationRelationship",IFCCONSTRAINTAGGREGATIONRELATIONSHIP:"IfcConstraintAggregationRelationship",IFCCONSTRAINT:"IfcConstraint",IFCCONNECTIONSURFACEGEOMETRY:"IfcConnectionSurfaceGeometry",IFCCONNECTIONPORTGEOMETRY:"IfcConnectionPortGeometry",IFCCONNECTIONPOINTGEOMETRY:"IfcConnectionPointGeometry",IFCCONNECTIONGEOMETRY:"IfcConnectionGeometry",IFCCOLOURSPECIFICATION:"IfcColourSpecification",IFCCLASSIFICATIONNOTATIONFACET:"IfcClassificationNotationFacet",IFCCLASSIFICATIONNOTATION:"IfcClassificationNotation",IFCCLASSIFICATIONITEMRELATIONSHIP:"IfcClassificationItemRelationship",IFCCLASSIFICATIONITEM:"IfcClassificationItem",IFCCLASSIFICATION:"IfcClassification",IFCCALENDARDATE:"IfcCalendarDate",IFCBOUNDARYNODECONDITIONWARPING:"IfcBoundaryNodeConditionWarping",IFCBOUNDARYNODECONDITION:"IfcBoundaryNodeCondition",IFCBOUNDARYFACECONDITION:"IfcBoundaryFaceCondition",IFCBOUNDARYEDGECONDITION:"IfcBoundaryEdgeCondition",IFCBOUNDARYCONDITION:"IfcBoundaryCondition",IFCAPPROVALRELATIONSHIP:"IfcApprovalRelationship",IFCAPPROVALPROPERTYRELATIONSHIP:"IfcApprovalPropertyRelationship",IFCAPPROVALACTORRELATIONSHIP:"IfcApprovalActorRelationship",IFCAPPROVAL:"IfcApproval",IFCAPPLIEDVALUERELATIONSHIP:"IfcAppliedValueRelationship",IFCAPPLIEDVALUE:"IfcAppliedValue",IFCAPPLICATION:"IfcApplication",IFCADDRESS:"IfcAddress",IFCACTORROLE:"IfcActorRole"};class gF{constructor(){F(this,"factor",1),F(this,"complement",1)}apply(e){const t=this.getScaleMatrix().multiply(e);e.copy(t)}setUp(e){var t,i,n;this.factor=1;const r=this.getLengthUnits(e);if(!r)return;const o=r==null,a=r.Name===void 0||r.Name===null;o||a||(r.Name.value==="FOOT"&&(this.factor=.3048),((t=r.Prefix)==null?void 0:t.value)==="MILLI"?this.complement=.001:((i=r.Prefix)==null?void 0:i.value)==="CENTI"?this.complement=.01:((n=r.Prefix)==null?void 0:n.value)==="DECI"&&(this.complement=.01))}getLengthUnits(e){try{const t=e.GetLineIDsWithType(0,ey).get(0),i=e.GetLine(0,t);for(const n of i.Units){if(!n||n.value===null||n.value===void 0)continue;const r=e.GetLine(0,n.value);if(r.UnitType&&r.UnitType.value==="LENGTHUNIT")return r}return null}catch{return console.log("Could not get units"),null}}getScaleMatrix(){const e=this.factor;return new _e().fromArray([e,0,0,0,0,e,0,0,0,0,e,0,0,0,0,1])}}class uv{constructor(){F(this,"itemsByFloor",{}),F(this,"_units",new gF)}setUp(e){this._units.setUp(e),this.cleanUp();try{const t=e.GetLineIDsWithType(0,pu),i=new Set,n=e.GetLineIDsWithType(0,kr);for(let c=0;c<n.size();c++)i.add(n.get(c));const r=e.GetLineIDsWithType(0,fu),o=r.size();for(let c=0;c<o;c++){const h=r.get(c),d=e.GetLine(0,h);if(!d||!d.RelatingObject||!d.RelatedObjects)continue;const u=d.RelatingObject.value,f=d.RelatedObjects;for(const m of f){const g=m.value;i.has(g)&&(this.itemsByFloor[g]=u)}}const a={},l=t.size();for(let c=0;c<l;c++){const h=t.get(c),d=e.GetLine(0,h);if(!d||!d.RelatingStructure||!d.RelatedElements)continue;const u=d.RelatingStructure.value,f=d.RelatedElements;if(i.has(u))for(const m of f){a[u]||(a[u]=[]);const g=m.value;a[u].push(g)}else for(const m of f){const g=m.value;this.itemsByFloor[g]=u}}for(const c in a){const h=this.itemsByFloor[c];if(h!==void 0){const d=a[c];for(const u of d)this.itemsByFloor[u]=h}}for(let c=0;c<o;c++){const h=r.get(c),d=e.GetLine(0,h);if(!d||!d.RelatingObject||!d.RelatedObjects)continue;const u=d.RelatingObject.value,f=d.RelatedObjects;for(const m of f){const g=m.value,E=this.itemsByFloor[u];E!==void 0&&(this.itemsByFloor[g]=E)}}}catch{console.log("Could not get floors.")}}cleanUp(){this.itemsByFloor={}}}class qm{constructor(){F(this,"includeProperties",!0),F(this,"optionalCategories",[kr]),F(this,"wasm",{path:"",absolute:!1,logLevel:qb.LOG_LEVEL_OFF}),F(this,"excludedCategories",new Set),F(this,"includedCategories",new Set),F(this,"saveLocations",!1),F(this,"webIfc",{COORDINATE_TO_ORIGIN:!0}),F(this,"autoSetWasm",!0),F(this,"customLocateFileHandler",null)}}class dv{constructor(){F(this,"defLineMat",new Fn({color:16777215}))}read(e){const t=e.GetAllAlignments(0),i=e.GetAllCrossSections2D(0),n=e.GetAllCrossSections3D(0),r={IfcAlignment:t,IfcCrossSection2D:i,IfcCrossSection3D:n};return this.get(r)}get(e){if(e.IfcAlignment){const t=new Map;for(const i of e.IfcAlignment){const n=new km;n.absolute=this.getCurves(i.curve3D,n),n.horizontal=this.getCurves(i.horizontal,n),n.vertical=this.getCurves(i.vertical,n),t.set(t.size,n)}return{alignments:t,coordinationMatrix:new _e}}}getCurves(e,t){const i=[];let n=0;for(const r of e){const o={};if(r.data)for(const u of r.data){const[f,m]=u.split(": "),g=parseFloat(m);o[f]=g||m}const{points:a}=r,l=new Float32Array(a.length*3);for(let u=0;u<a.length;u++){const{x:f,y:m,z:g}=a[u];l[u*3]=f,l[u*3+1]=m,l[u*3+2]=g||0}const c=new at(l,3),h=new Pm;h.setAttribute("position",c);const d=new Gm(n,o,t,h,this.defLineMat);i.push(d.curve),n++}return i}}class fv{getNameInfo(e){var t;const i={},{arguments:n}=e.GetHeaderLine(0,Kb)||{};if(!n)return i;const[r,o,a,l,c,h,d]=n;if(r!=null&&r.value&&(i.name=r.value),o!=null&&o.value&&(i.creationDate=new Date(o.value)),a){i.author={};const[u,f]=a;u!=null&&u.value&&(i.author.name=u.value),f!=null&&f.value&&(i.author.email=f.value)}return l&&(t=l[0])!=null&&t.value&&(i.organization=l[0].value),c!=null&&c.value&&(i.preprocessorVersion=c==null?void 0:c.value),h!=null&&h.value&&(i.originatingSystem=h==null?void 0:h.value),d!=null&&d.value&&(i.authorization=d==null?void 0:d.value),i}getDescriptionInfo(e){var t;const i={},{arguments:n}=e.GetHeaderLine(0,Qb)||{};if(!n)return i;const[r,o]=n;if(Array.isArray(r)&&(t=r[0])!=null&&t.value){const a=r[0].value.match(/\[([^\]]+)\]/);a&&a[1]&&(i.viewDefinition=a[1])}return o!=null&&o.value&&(i.implementationLevel=o.value),i}}class pv{static get(e,t){const i=[Em,Im,_m,mu,kr,ty,iy,ny,sy],n=e.data;for(const r of i){const o=t.GetLineIDsWithType(0,r),a=o.size();for(let l=0;l<a;l++){const c=o.get(l);n.has(c)||n.set(c,[[],[0,r]])}}}}const mv=new Set([1123145078,574549367,1675464909,2059837836,3798115385,32440307,3125803723,3207858831,2740243338,2624227202,4240577450,3615266464,3724593414,220341763,477187591,1878645084,1300840506,3303107099,1607154358,1878645084,846575682,1351298697,2417041796,3049322572,3331915920,1416205885,776857604,3285139300,3958052878,2827736869,2732653382,673634403,3448662350,4142052618,2924175390,803316827,2556980723,1809719519,2205249479,807026263,3737207727,1660063152,2347385850,2705031697,3732776249,2485617015,2611217952,1704287377,2937912522,2770003689,1281925730,1484403080,3448662350,4142052618,3800577675,4006246654,3590301190,1383045692,2775532180,2047409740,370225590,3593883385,2665983363,4124623270,812098782,3649129432,987898635,1105321065,3510044353,1635779807,2603310189,3406155212,1310608509,4261334040,2736907675,3649129432,1136057603,1260505505,4182860854,2713105998,2898889636,59481748,3749851601,3486308946,3150382593,1062206242,3264961684,15328376,1485152156,370225590,1981873012,2859738748,45288368,2614616156,2732653382,775493141,2147822146,2601014836,2629017746,1186437898,2367409068,1213902940,3632507154,3900360178,476780140,1472233963,2804161546,3008276851,738692330,374418227,315944413,3905492369,3570813810,2571569899,178912537,2294589976,1437953363,2133299955,572779678,3092502836,388784114,2624227202,1425443689,3057273783,2347385850,1682466193,2519244187,2839578677,3958567839,2513912981,2830218821,427810014,2916149573]),gv=class Ev extends Ke{constructor(e){super(e),F(this,"enabled",!0),e.add(Ev.uuid,this)}async export(e,t,i=!1,n=!0){const r={},o=new Set(e.GetIfcEntityList(t)),a=new Set([Em,Im,_m,mu,kr]);for(const l of a)o.add(l);for(const l of o){if(mv.has(l))continue;const c=a.has(l)&&n,h=e.GetLineIDsWithType(t,l);for(const d of h)try{const u=e.GetLine(0,d,c,i);r[u.expressID]=u}catch{console.log(`Could not get property ${d}, with recursive ${c} and indirect ${i}.`)}}return r}};F(gv,"uuid","b32c4332-cd67-436e-ba7f-196646c7a635");let EF=gv;const Iv=class Gp extends Ke{constructor(e){super(e),F(this,"onDisposed",new oe),F(this,"onIfcStartedLoading",new oe),F(this,"onSetup",new oe),F(this,"settings",new qm),F(this,"webIfc",new Jo),F(this,"enabled",!0),F(this,"_material",new aa),F(this,"_spatialTree",new uv),F(this,"_metaData",new fv),F(this,"_fragmentInstances",new Map),F(this,"_civil",new dv),F(this,"_visitedFragments",new Map),F(this,"_materialT",new aa({transparent:!0,opacity:.5})),this.components.add(Gp.uuid,this),this.settings.excludedCategories.add(xI)}dispose(){this.webIfc=null,this.onDisposed.trigger(Gp.uuid),this.onDisposed.reset()}async setup(e){this.settings={...this.settings,...e},this.settings.autoSetWasm&&await this.autoSetWasm(),this.onSetup.trigger()}async load(e,t=!0,i=""){const n=performance.now();this.onIfcStartedLoading.trigger(),await this.readIfcFile(e);const r=await this.getAllGeometries();r.name=i;const o=await this.components.get(EF).export(this.webIfc,0);r.setLocalProperties(o);const a=this.components.get($e);a.groups.set(r.uuid,r);for(const l of r.items)a.list.set(l.id,l),l.mesh.uuid=l.id,l.group=r;a.onFragmentsLoaded.trigger(r),t&&a.coordinate([r]);for(const[l]of r.data){const c=o[l];if(!c||!c.GlobalId)continue;const h=c.GlobalId.value||c.GlobalId;r.globalToExpressIDs.set(h,l)}return pv.get(r,this.webIfc),this.cleanUp(),console.log(`Streaming the IFC took ${performance.now()-n} ms!`),r}async readIfcFile(e){const{path:t,absolute:i,logLevel:n}=this.settings.wasm;return this.webIfc.SetWasmPath(t,i),await this.webIfc.Init(this.settings.customLocateFileHandler||void 0),n&&this.webIfc.SetLogLevel(n),this.webIfc.OpenModel(e,this.settings.webIfc)}cleanUp(){try{this.webIfc.Dispose()}catch{console.log("Web-ifc wasn't disposed.")}this.webIfc=null,this.webIfc=new Jo,this._visitedFragments.clear(),this._fragmentInstances.clear()}async getAllGeometries(){this._spatialTree.setUp(this.webIfc);const e=this.webIfc.GetIfcEntityList(0),t=new An;t.ifcMetadata={name:"",description:"",...this._metaData.getNameInfo(this.webIfc),...this._metaData.getDescriptionInfo(this.webIfc),schema:this.webIfc.GetModelSchema(0)||"IFC2X3",maxExpressID:this.webIfc.GetMaxExpressID(0)};const i=[];for(const r of e){if(!this.webIfc.IsIfcElement(r)&&r!==kr)continue;const o=this.settings.includedCategories;if(o.size>0&&!o.has(r)||this.settings.excludedCategories.has(r))continue;const a=this.webIfc.GetLineIDsWithType(0,r),l=a.size();for(let c=0;c<l;c++){const h=a.get(c);i.push(h);const d=this._spatialTree.itemsByFloor[h]||0;t.data.set(h,[[],[d,r]])}}this._spatialTree.cleanUp(),this.webIfc.StreamMeshes(0,i,r=>{this.getMesh(r,t)});for(const r of this._visitedFragments){const{index:o,fragment:a}=r[1];t.keyFragments.set(o,a.id)}for(const r of t.items){const o=this._fragmentInstances.get(r.id);if(!o)throw new Error("Fragment not found!");const a=[];for(const[l,c]of o)a.push(c);r.add(a)}const n=this.webIfc.GetCoordinationMatrix(0);return t.coordinationMatrix.fromArray(n),t.civilData=this._civil.read(this.webIfc),t}getMesh(e,t){const i=e.geometries.size(),n=e.expressID;for(let r=0;r<i;r++){const o=e.geometries.get(r),{x:a,y:l,z:c,w:h}=o.color,d=h!==1,{geometryExpressID:u}=o,f=`${u}-${d}`;if(!this._visitedFragments.has(f)){const _=this.getGeometry(this.webIfc,u),b=d?this._materialT:this._material,T=new ca(_,b,1);t.add(T.mesh),t.items.push(T);const w=this._visitedFragments.size;this._visitedFragments.set(f,{index:w,fragment:T})}const m=new Ne().setRGB(a,l,c,"srgb"),g=new _e;g.fromArray(o.flatTransformation);const E=this._visitedFragments.get(f);if(E===void 0)throw new Error("Error getting geometry data for streaming!");const p=t.data.get(n);if(!p)throw new Error("Data not found!");p[0].push(E.index);const{fragment:v}=E;this._fragmentInstances.has(v.id)||this._fragmentInstances.set(v.id,new Map);const I=this._fragmentInstances.get(v.id);if(!I)throw new Error("Instances not found!");if(I.has(n)){const _=I.get(n);if(!_)throw new Error("Instance not found!");_.transforms.push(g),_.colors&&_.colors.push(m)}else I.set(n,{id:n,transforms:[g],colors:[m]})}}getGeometry(e,t){const i=e.GetGeometry(0,t),n=e.GetIndexArray(i.GetIndexData(),i.GetIndexDataSize()),r=e.GetVertexArray(i.GetVertexData(),i.GetVertexDataSize()),o=new Float32Array(r.length/2),a=new Float32Array(r.length/2);for(let d=0;d<r.length;d+=6)o[d/2]=r[d],o[d/2+1]=r[d+1],o[d/2+2]=r[d+2],a[d/2]=r[d+3],a[d/2+1]=r[d+4],a[d/2+2]=r[d+5];const l=new We,c=new at(o,3),h=new at(a,3);return l.setAttribute("position",c),l.setAttribute("normal",h),l.setIndex(Array.from(n)),i.delete(),l}async autoSetWasm(){const e=await fetch(`https://unpkg.com/@thatopen/components@${J_.release}/package.json`);if(!e.ok){console.warn("Couldn't get openbim-components package.json. Set wasm settings manually.");return}const t=await e.json();if(!("web-ifc"in t.peerDependencies))console.warn("Couldn't get web-ifc from peer dependencies in openbim-components. Set wasm settings manually.");else{const i=t.peerDependencies["web-ifc"];this.settings.wasm.path=`https://unpkg.com/web-ifc@${i}/`,this.settings.wasm.absolute=!0}}};F(Iv,"uuid","a659add7-1418-4771-a0d6-7d4d438e4624");let IF=Iv;const _F={IfcRelAssignsToControl:{related:5,relating:7},IfcRelAssignsToGroup:{related:5,relating:7},IfcRelAssignsToProduct:{related:5,relating:7},IfcRelAssociatesClassification:{related:5,relating:6},IfcRelAssociatesMaterial:{related:5,relating:6},IfcRelAssociatesDocument:{related:5,relating:6},IfcRelContainedInSpatialStructure:{related:5,relating:6},IfcRelFlowControlElements:{related:5,relating:6},IfcRelConnectsElements:{related:7,relating:6},IfcRelDeclares:{related:6,relating:5},IfcRelAggregates:{related:6,relating:5},IfcRelNests:{related:6,relating:5},IfcRelDefinesByProperties:{related:5,relating:6},IfcRelDefinesByType:{related:5,relating:6},IfcRelDefinesByTemplate:{related:5,relating:6}},vF={[pm]:"IfcRelAssignsToControl",[am]:"IfcRelAssignsToGroup",[dm]:"IfcRelAssignsToProduct",[om]:"IfcRelAssociatesClassification",[rm]:"IfcRelAssociatesMaterial",[gm]:"IfcRelAssociatesDocument",[pu]:"IfcRelContainedInSpatialStructure",[um]:"IfcRelConnectsElements",[hm]:"IfcRelFlowControlElements",[fm]:"IfcRelDeclares",[fu]:"IfcRelAggregates",[mm]:"IfcRelNests",[Bl]:"IfcRelDefinesByProperties",[lm]:"IfcRelDefinesByType",[cm]:"IfcRelDefinesByTemplate"},_v=class vr extends Ke{constructor(e){super(e),F(this,"onDisposed",new oe),F(this,"onRequestFile",new oe),F(this,"ifcToExport",null),F(this,"onElementToPset",new oe),F(this,"onPropToPset",new oe),F(this,"onPsetRemoved",new oe),F(this,"onDataChanged",new oe),F(this,"wasm",{path:"/",absolute:!1}),F(this,"enabled",!0),F(this,"attributeListeners",{}),F(this,"selectedModel"),F(this,"changeMap",{}),this.components.add(vr.uuid,this)}dispose(){this.selectedModel=void 0,this.attributeListeners={},this.changeMap={},this.onElementToPset.reset(),this.onPropToPset.reset(),this.onPsetRemoved.reset(),this.onDataChanged.reset(),this.onDisposed.trigger(vr.uuid),this.onDisposed.reset()}static getIFCSchema(e){const t=e.ifcMetadata.schema;if(!t)throw new Error("IFC Schema not found");return t.startsWith("IFC2X3")?"IFC2X3":t.startsWith("IFC4")&&t.replace("IFC4","")===""?"IFC4":t.startsWith("IFC4X3")?"IFC4X3":t}async setData(e,...t){for(const i of t){const{expressID:n}=i;(!n||n===-1)&&(i.expressID=this.getNewExpressID(e)),await e.setProperties(i.expressID,i),this.registerChange(e,i.expressID)}}async newPset(e,t,i){const n=vr.getIFCSchema(e),{handle:r}=await this.getOwnerHistory(e),o=this.newGUID(e),a=new Bn[n].IfcLabel(t),l=i?new Bn[n].IfcText(i):null,c=new Bn[n].IfcPropertySet(o,r,a,l,[]);return c.expressID=this.getNewExpressID(e),await this.setData(e,c),{pset:c}}async removePset(e,...t){for(const i of t){const n=await e.getProperties(i);if((n==null?void 0:n.type)!==Xo)continue;const r=await Pr.getPsetRel(e,i);if(r&&(await e.setProperties(r,null),this.registerChange(e,r)),n){for(const o of n.HasProperties)await e.setProperties(o.value,null);await e.setProperties(i,null),this.onPsetRemoved.trigger({model:e,psetID:i}),this.registerChange(e,i)}}}newSingleStringProperty(e,t,i,n){return this.newSingleProperty(e,t,i,n)}newSingleNumericProperty(e,t,i,n){return this.newSingleProperty(e,t,i,n)}newSingleBooleanProperty(e,t,i,n){return this.newSingleProperty(e,t,i,n)}async removePsetProp(e,t,i){const n=await e.getProperties(t),r=await e.getProperties(i);!n||!r||n.type===Xo&&r&&(n.HasProperties=n.HasProperties.filter(o=>o.value!==i),await e.setProperties(i,null),this.registerChange(e,t,i))}addElementToPset(e,t,...i){this.components.get(qi).addEntitiesRelation(e,t,{type:Bl,inv:"DefinesOcurrence"},...i)}async addPropToPset(e,t,...i){const n=await e.getProperties(t);if(n){for(const r of i){if(n.HasProperties.includes(r))continue;const o=new zs(r);n.HasProperties.push(o),this.onPropToPset.trigger({model:e,psetID:t,propID:r})}this.registerChange(e,t)}}async createIfcRel(e,t,i,n){const r=vF[t];if(!r)throw new Error(`IfcPropertiesManager: ${r} is unsoported.`);const o=vr.getIFCSchema(e),a=_F[r],l=Bn[o][r];if(!(a&&l))throw new Error(`IfcPropertiesManager: ${r} is unsoported.`);const c=[new Bn[o].IfcGloballyUniqueId(ws.create())],{related:h,relating:d}=a,u=[...new Set(n)].map(g=>new zs(g)),f=(g,E)=>{for(let p=g;p<E-1;p++)c.push(null)};h<d?(f(1,h),c.push(u),f(h,d),c.push(new zs(i))):(f(1,d),f(d,h),c.push(new zs(i)),c.push(u));const m=new l(...c);return await this.setData(e,m),m}async saveToIfc(e,t){const i=this.components.get(IF),n=i.webIfc,r=await i.readIfcFile(t);await this.components.get(qi).applyRelationChanges();const o=this.changeMap[e.uuid]??[];for(const l of o){const c=await e.getProperties(l);c?n.WriteLine(r,c):n.GetLine(r,l)&&n.DeleteLine(r,l)}const a=n.SaveModel(r);return i.webIfc.CloseModel(r),i.cleanUp(),a}async getEntityRef(e,t){const i=await e.getAllPropertiesOfType(t);if(!i)return null;const n=[];for(const r in i){const o=new zs(Number(r));n.push(o)}return n}async setAttributeListener(e,t,i){this.attributeListeners[e.uuid]||(this.attributeListeners[e.uuid]={});const n=this.attributeListeners[e.uuid][t]?this.attributeListeners[e.uuid][t][i]:null;if(n)return n;const r=await e.getProperties(t);if(!r)throw new Error(`Entity with expressID ${t} doesn't exists.`);const o=r[i];if(Array.isArray(o)||!o)throw new Error(`Attribute ${i} is array or null, and it can't have a listener.`);const a=o.value;if(a===void 0||a==null)throw new Error(`Attribute ${i} has a badly defined handle.`);const l=new oe;return Object.defineProperty(r[i],"value",{get(){return this._value},async set(c){this._value=c,l.trigger(c)}}),r[i].value=a,this.attributeListeners[e.uuid][t]||(this.attributeListeners[e.uuid][t]={}),this.attributeListeners[e.uuid][t][i]=l,l}getNewExpressID(e){return e.ifcMetadata.maxExpressID++,e.ifcMetadata.maxExpressID}newGUID(e){const t=vr.getIFCSchema(e);return new Bn[t].IfcGloballyUniqueId(ws.create())}async getOwnerHistory(e){const t=await e.getAllPropertiesOfType(Xb);if(!t)throw new Error("No OwnerHistory was found.");const i=Object.keys(t).map(o=>parseInt(o,10)),n=t[i[0]],r=new zs(n.expressID);return{entity:n,handle:r}}registerChange(e,...t){this.changeMap[e.uuid]||(this.changeMap[e.uuid]=new Set);for(const i of t)this.changeMap[e.uuid].add(i),this.onDataChanged.trigger({model:e,expressID:i})}async newSingleProperty(e,t,i,n){const r=vr.getIFCSchema(e),o=new Bn[r].IfcIdentifier(i),a=new Bn[r][t](n),l=new Bn[r].IfcPropertySingleValue(o,null,a,null);return l.expressID=this.getNewExpressID(e),await this.setData(e,l),l}};F(_v,"uuid","58c2d9f0-183c-48d6-a402-dfcf5b9a34df");let bF=_v;const vv=class Hp extends Ke{constructor(e){super(e),F(this,"onDisposed",new oe),F(this,"onRelationsIndexed",new oe),F(this,"relationMaps",{}),F(this,"enabled",!0),F(this,"_relToAttributesMap",iI),F(this,"_inverseAttributes",["IsDecomposedBy","Decomposes","AssociatedTo","HasAssociations","ClassificationForObjects","IsGroupedBy","HasAssignments","IsDefinedBy","DefinesOcurrence","IsTypedBy","Types","Defines","ContainedInStructure","ContainsElements","HasControlElements","AssignedToFlowElement","ConnectedTo","ConnectedFrom","ReferencedBy","Declares","HasContext","Controls","IsNestedBy","Nests","DocumentRefForObjects"]),F(this,"_ifcRels",[fu,rm,om,am,Bl,lm,cm,pu,hm,um,dm,fm,pm,mm,gm]),F(this,"onFragmentsDisposed",t=>{delete this.relationMaps[t.groupID]}),F(this,"_changeMap",{}),F(this,"onEntitiesRelated",new oe),this.components.add(Hp.uuid,this),e.get($e).onFragmentsDisposed.add(this.onFragmentsDisposed)}indexRelations(e,t,i,n){const r=Object.keys(t).find(h=>h.startsWith("Relating")),o=Object.keys(t).find(h=>h.startsWith("Related"));if(!(r&&o))return;const a=t[r].value,l=t[o].map(h=>h.value),c=this.getEntityRelations(e,a,n);for(const h of l)c.push(h);for(const h of l)this.getEntityRelations(e,h,i).push(a)}getAttributeIndex(e){const t=this._inverseAttributes.indexOf(e);if(t===-1)throw new Error(`IfcRelationsIndexer: ${e} is not a valid IFC Inverse Attribute name or its not supported yet by this component.`);return t}setRelationMap(e,t){this.relationMaps[e.uuid]=t,this.onRelationsIndexed.trigger({modelID:e.uuid,relationsMap:t})}async process(e,t){if(!e.hasProperties)throw new Error("FragmentsGroup properties not found");let i=this.relationMaps[e.uuid];i||(i=new Map,this.relationMaps[e.uuid]=i);const n=e.getLocalProperties();if(!n)return i;const r=(t==null?void 0:t.relationsToProcess)??this._ifcRels;for(const[o,a]of Object.entries(n)){if(!r.includes(a.type))continue;const l=this._relToAttributesMap.get(a.type);if(!l)continue;const{forRelated:c,forRelating:h}=l;this.indexRelations(i,a,c,h)}return this.setRelationMap(e,i),i}async processFromWebIfc(e,t){const i=new Map;for(const n of this._ifcRels){const r=this._relToAttributesMap.get(n);if(!r)continue;const{forRelated:o,forRelating:a}=r,l=e.GetLineIDsWithType(t,n);for(let c=0;c<l.size();c++){const h=await e.properties.getItemProperties(t,l.get(c));this.indexRelations(i,h,o,a)}}return this.onRelationsIndexed.trigger({modelID:t.toString(),relationsMap:i}),i}getEntityRelations(e,t,i){const n=this.getAttributeIndex(i);let r;if(e instanceof An?r=this.relationMaps[e.uuid]:typeof e=="string"?r=this.relationMaps[e]:r=e,!r&&(e instanceof An||typeof e=="string")){r=new Map;const l=e instanceof An?e.uuid:e;this.relationMaps[l]=r}let o=r.get(t);o||(o=new Map,r.set(t,o));let a=o.get(n);return a||(a=[],o.set(n,a)),a}serializeRelations(e){const t={};for(const[i,n]of e.entries()){t[i]||(t[i]={});for(const[r,o]of n.entries())t[i][r]=o}return JSON.stringify(t)}serializeModelRelations(e){const t=this.relationMaps[e.uuid];return t?this.serializeRelations(t):null}serializeAllRelations(){const e={};for(const t in this.relationMaps){const i=this.relationMaps[t],n={};for(const[r,o]of i.entries()){n[r]||(n[r]={});for(const[a,l]of o.entries())n[r][a]=l}e[t]=n}return JSON.stringify(e)}getRelationsMapFromJSON(e){const t=JSON.parse(e),i=new Map;for(const n in t){const r=t[n],o=new Map;for(const a in r)o.set(Number(a),r[a]);i.set(Number(n),o)}return i}dispose(){this.relationMaps={},this.components.get($e).onFragmentsDisposed.remove(this.onFragmentsDisposed),this.onDisposed.trigger(Hp.uuid),this.onDisposed.reset()}getEntitiesWithRelation(e,t,i){const n=this.relationMaps[e.uuid];if(!n)throw new Error("IfcRelationsIndexer: the model relations are not indexed!");const r=new Set;for(const[o,a]of n){const l=this.getAttributeIndex(t),c=a.get(l);c&&c.includes(i)&&r.add(o)}return r}addEntityRelations(e,t,i,...n){const r=this.getEntityRelations(e,t,i);if(r)r.push(...n);else{const o=this.getAttributeIndex(i),a=this.relationMaps[e.uuid].get(t);a==null||a.set(o,n)}}async applyRelationChanges(){const e=this.components.get($e),t=this.components.get(bF);for(const i in this._changeMap){const n=e.groups.get(i);if(!n)continue;const r=this._changeMap[i];for(const[o,a]of r)for(const[l,c]of a){const{related:h,relID:d}=c;if(d){const u=await n.getProperties(d);if(!u)continue;const f=Object.keys(u),m=f.find(E=>E.startsWith("Related")),g=f.find(E=>E.startsWith("Relating"));if(!(m&&g))continue;u[m]=[...h].map(E=>new zs(E)),u[g]=new zs(l),await t.setData(n,u)}else{const u=await t.createIfcRel(n,o,l,[...h]);if(!u)continue;c.relID=u.expressID}}}}addEntitiesRelation(e,t,i,...n){const{type:r,inv:o}=i;let a=this.relationMaps[e.uuid];if(a||(a=new Map,this.relationMaps[e.uuid]=a),!this._ifcRels.includes(r))return;const l=iI.get(r);if(!l)return;const{forRelated:c,forRelating:h}=l;if(!(c===o||h===o))return;let d=this._changeMap[e.uuid];d||(d=new Mn,this._changeMap[e.uuid]=d);const u=h===o?[t]:n,f=c===o?[t]:n;let m=d.get(r);m||(m=new Mn,m.onItemSet.add(()=>this.onEntitiesRelated.trigger({invAttribute:o,relType:r,relatingIDs:u,relatedIDs:f})),m.onItemUpdated.add(()=>this.onEntitiesRelated.trigger({invAttribute:o,relType:r,relatingIDs:u,relatedIDs:f})),d.set(r,m));for(const g of u){let E=m.get(g);E||(E={related:new qs},m.set(g,E)),E.related.add(...f)}for(const g of u)this.getEntityRelations(e,g,h).push(...f);for(const g of f)this.getEntityRelations(e,g,c).push(...u)}getEntityChildren(e,t,i=new Set){if(i.add(t),this.relationMaps[e.uuid]===void 0)throw new Error("The provided model has no indices. You have to generate them first.");const n=this.getEntityRelations(e,t,"IsDecomposedBy");if(n)for(const o of n)this.getEntityChildren(e,o,i);const r=this.getEntityRelations(e,t,"ContainsElements");if(r)for(const o of r)this.getEntityChildren(e,o,i);return i}};F(vv,"uuid","23a889ab-83b3-44a4-8bee-ead83438370b");let qi=vv;const bv=class yv extends Ke{constructor(e){super(e),F(this,"onDisposed",new oe),F(this,"onFragmentsLoaded",new oe),F(this,"onFragmentsDisposed",new oe),F(this,"list",new Mn),F(this,"groups",new Mn),F(this,"baseCoordinationModel",""),F(this,"baseCoordinationMatrix",new _e),F(this,"enabled",!0),F(this,"_loader",new N_),this.components.add(yv.uuid,this)}get meshes(){const e=[];for(const[t,i]of this.list)e.push(i.mesh);return e}dispose(){for(const[e,t]of this.groups)t.dispose(!0);this.baseCoordinationModel="",this.groups.clear(),this.list.clear(),this.onFragmentsLoaded.reset(),this.onFragmentsDisposed.reset(),this.onDisposed.trigger(),this.onDisposed.reset()}disposeGroup(e){const{uuid:t}=e,i=[];for(const n of e.items)i.push(n.id),this.list.delete(n.id);e.dispose(!0),this.groups.delete(e.uuid),this.groups.size===0&&(this.baseCoordinationModel="",this.baseCoordinationMatrix=new _e),this.onFragmentsDisposed.trigger({groupID:t,fragmentIDs:i})}load(e,t){const i={coordinate:!0,...t},{coordinate:n,name:r,properties:o,relationsMap:a}=i,l=this._loader.import(e);t&&(l.isStreamed=t.isStreamed||!1),r&&(l.name=r);for(const c of l.items)c.group=l,this.list.set(c.id,c);return n&&this.coordinate([l]),this.groups.set(l.uuid,l),o&&l.setLocalProperties(o),a&&this.components.get(qi).setRelationMap(l,a),this.onFragmentsLoaded.trigger(l),l}export(e){return this._loader.export(e)}getModelIdMap(e){const t={};for(const i in e){const n=this.list.get(i);if(!(n&&n.group))continue;const r=n.group;r.uuid in t||(t[r.uuid]=new Set);const o=e[i];for(const a of o)t[r.uuid].add(a)}return t}modelIdToFragmentIdMap(e){let t={};for(const i in e){const n=this.groups.get(i);if(!n)continue;const r=e[i],o=n.getFragmentMap(r);t={...t,...o}}return t}guidToFragmentIdMap(e){const t={};for(const[i,n]of this.groups){i in t||(t[i]=new Set);for(const r of e){const o=n.globalToExpressIDs.get(r);o&&t[i].add(o)}}return this.modelIdToFragmentIdMap(t)}fragmentIdMapToGuids(e){const t=[],i=this.getModelIdMap(e);for(const n in i){const r=this.groups.get(n);if(!r)continue;const o=i[n];for(const a of o)for(const[l,c]of r.globalToExpressIDs.entries())if(c===a){t.push(l);break}}return t}coordinate(e=Array.from(this.groups.values())){if(this.baseCoordinationModel.length===0){const t=e.pop();if(!t)return;this.baseCoordinationModel=t.uuid,this.baseCoordinationMatrix=t.coordinationMatrix.clone()}if(e.length)for(const t of e)t.coordinationMatrix.equals(this.baseCoordinationMatrix)||(t.position.set(0,0,0),t.rotation.set(0,0,0),t.scale.set(1,1,1),t.updateMatrix(),this.applyBaseCoordinateSystem(t,t.coordinationMatrix))}applyBaseCoordinateSystem(e,t){t&&e.applyMatrix4(t.clone().invert()),e.applyMatrix4(this.baseCoordinationMatrix)}clone(e,t){const i=e.cloneGroup(t);this.groups.set(i.uuid,i);for(const n of i.items)this.list.set(n.id,n);return i}};F(bv,"uuid","fef46874-46a3-461b-8c44-2922ab77c806");let $e=bv;function Th(s){throw new Error('Could not dynamically require "'+s+'". Please configure the dynamicRequireTargets or/and ignoreDynamicRequires option of @rollup/plugin-commonjs appropriately for this require call to work.')}var Tv={exports:{}};/*!

JSZip v3.10.1 - A JavaScript class for generating and reading zip files
<http://stuartk.com/jszip>

(c) 2009-2016 Stuart Knightley <stuart [at] stuartk.com>
Dual licenced under the MIT license or GPLv3. See https://raw.github.com/Stuk/jszip/main/LICENSE.markdown.

JSZip uses the library pako released under the MIT license :
https://github.com/nodeca/pako/blob/main/LICENSE
*/(function(s,e){(function(t){s.exports=t()})(function(){return function t(i,n,r){function o(c,h){if(!n[c]){if(!i[c]){var d=typeof Th=="function"&&Th;if(!h&&d)return d(c,!0);if(a)return a(c,!0);var u=new Error("Cannot find module '"+c+"'");throw u.code="MODULE_NOT_FOUND",u}var f=n[c]={exports:{}};i[c][0].call(f.exports,function(m){var g=i[c][1][m];return o(g||m)},f,f.exports,t,i,n,r)}return n[c].exports}for(var a=typeof Th=="function"&&Th,l=0;l<r.length;l++)o(r[l]);return o}({1:[function(t,i,n){var r=t("./utils"),o=t("./support"),a="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=";n.encode=function(l){for(var c,h,d,u,f,m,g,E=[],p=0,v=l.length,I=v,_=r.getTypeOf(l)!=="string";p<l.length;)I=v-p,d=_?(c=l[p++],h=p<v?l[p++]:0,p<v?l[p++]:0):(c=l.charCodeAt(p++),h=p<v?l.charCodeAt(p++):0,p<v?l.charCodeAt(p++):0),u=c>>2,f=(3&c)<<4|h>>4,m=1<I?(15&h)<<2|d>>6:64,g=2<I?63&d:64,E.push(a.charAt(u)+a.charAt(f)+a.charAt(m)+a.charAt(g));return E.join("")},n.decode=function(l){var c,h,d,u,f,m,g=0,E=0,p="data:";if(l.substr(0,p.length)===p)throw new Error("Invalid base64 input, it looks like a data url.");var v,I=3*(l=l.replace(/[^A-Za-z0-9+/=]/g,"")).length/4;if(l.charAt(l.length-1)===a.charAt(64)&&I--,l.charAt(l.length-2)===a.charAt(64)&&I--,I%1!=0)throw new Error("Invalid base64 input, bad content length.");for(v=o.uint8array?new Uint8Array(0|I):new Array(0|I);g<l.length;)c=a.indexOf(l.charAt(g++))<<2|(u=a.indexOf(l.charAt(g++)))>>4,h=(15&u)<<4|(f=a.indexOf(l.charAt(g++)))>>2,d=(3&f)<<6|(m=a.indexOf(l.charAt(g++))),v[E++]=c,f!==64&&(v[E++]=h),m!==64&&(v[E++]=d);return v}},{"./support":30,"./utils":32}],2:[function(t,i,n){var r=t("./external"),o=t("./stream/DataWorker"),a=t("./stream/Crc32Probe"),l=t("./stream/DataLengthProbe");function c(h,d,u,f,m){this.compressedSize=h,this.uncompressedSize=d,this.crc32=u,this.compression=f,this.compressedContent=m}c.prototype={getContentWorker:function(){var h=new o(r.Promise.resolve(this.compressedContent)).pipe(this.compression.uncompressWorker()).pipe(new l("data_length")),d=this;return h.on("end",function(){if(this.streamInfo.data_length!==d.uncompressedSize)throw new Error("Bug : uncompressed data size mismatch")}),h},getCompressedWorker:function(){return new o(r.Promise.resolve(this.compressedContent)).withStreamInfo("compressedSize",this.compressedSize).withStreamInfo("uncompressedSize",this.uncompressedSize).withStreamInfo("crc32",this.crc32).withStreamInfo("compression",this.compression)}},c.createWorkerFrom=function(h,d,u){return h.pipe(new a).pipe(new l("uncompressedSize")).pipe(d.compressWorker(u)).pipe(new l("compressedSize")).withStreamInfo("compression",d)},i.exports=c},{"./external":6,"./stream/Crc32Probe":25,"./stream/DataLengthProbe":26,"./stream/DataWorker":27}],3:[function(t,i,n){var r=t("./stream/GenericWorker");n.STORE={magic:"\0\0",compressWorker:function(){return new r("STORE compression")},uncompressWorker:function(){return new r("STORE decompression")}},n.DEFLATE=t("./flate")},{"./flate":7,"./stream/GenericWorker":28}],4:[function(t,i,n){var r=t("./utils"),o=function(){for(var a,l=[],c=0;c<256;c++){a=c;for(var h=0;h<8;h++)a=1&a?3988292384^a>>>1:a>>>1;l[c]=a}return l}();i.exports=function(a,l){return a!==void 0&&a.length?r.getTypeOf(a)!=="string"?function(c,h,d,u){var f=o,m=u+d;c^=-1;for(var g=u;g<m;g++)c=c>>>8^f[255&(c^h[g])];return-1^c}(0|l,a,a.length,0):function(c,h,d,u){var f=o,m=u+d;c^=-1;for(var g=u;g<m;g++)c=c>>>8^f[255&(c^h.charCodeAt(g))];return-1^c}(0|l,a,a.length,0):0}},{"./utils":32}],5:[function(t,i,n){n.base64=!1,n.binary=!1,n.dir=!1,n.createFolders=!0,n.date=null,n.compression=null,n.compressionOptions=null,n.comment=null,n.unixPermissions=null,n.dosPermissions=null},{}],6:[function(t,i,n){var r=null;r=typeof Promise<"u"?Promise:t("lie"),i.exports={Promise:r}},{lie:37}],7:[function(t,i,n){var r=typeof Uint8Array<"u"&&typeof Uint16Array<"u"&&typeof Uint32Array<"u",o=t("pako"),a=t("./utils"),l=t("./stream/GenericWorker"),c=r?"uint8array":"array";function h(d,u){l.call(this,"FlateWorker/"+d),this._pako=null,this._pakoAction=d,this._pakoOptions=u,this.meta={}}n.magic="\b\0",a.inherits(h,l),h.prototype.processChunk=function(d){this.meta=d.meta,this._pako===null&&this._createPako(),this._pako.push(a.transformTo(c,d.data),!1)},h.prototype.flush=function(){l.prototype.flush.call(this),this._pako===null&&this._createPako(),this._pako.push([],!0)},h.prototype.cleanUp=function(){l.prototype.cleanUp.call(this),this._pako=null},h.prototype._createPako=function(){this._pako=new o[this._pakoAction]({raw:!0,level:this._pakoOptions.level||-1});var d=this;this._pako.onData=function(u){d.push({data:u,meta:d.meta})}},n.compressWorker=function(d){return new h("Deflate",d)},n.uncompressWorker=function(){return new h("Inflate",{})}},{"./stream/GenericWorker":28,"./utils":32,pako:38}],8:[function(t,i,n){function r(f,m){var g,E="";for(g=0;g<m;g++)E+=String.fromCharCode(255&f),f>>>=8;return E}function o(f,m,g,E,p,v){var I,_,b=f.file,T=f.compression,w=v!==c.utf8encode,A=a.transformTo("string",v(b.name)),y=a.transformTo("string",c.utf8encode(b.name)),C=b.comment,M=a.transformTo("string",v(C)),R=a.transformTo("string",c.utf8encode(C)),L=y.length!==b.name.length,S=R.length!==C.length,U="",z="",k="",H=b.dir,Y=b.date,re={crc32:0,compressedSize:0,uncompressedSize:0};m&&!g||(re.crc32=f.crc32,re.compressedSize=f.compressedSize,re.uncompressedSize=f.uncompressedSize);var j=0;m&&(j|=8),w||!L&&!S||(j|=2048);var X=0,ue=0;H&&(X|=16),p==="UNIX"?(ue=798,X|=function(K,Ie){var me=K;return K||(me=Ie?16893:33204),(65535&me)<<16}(b.unixPermissions,H)):(ue=20,X|=function(K){return 63&(K||0)}(b.dosPermissions)),I=Y.getUTCHours(),I<<=6,I|=Y.getUTCMinutes(),I<<=5,I|=Y.getUTCSeconds()/2,_=Y.getUTCFullYear()-1980,_<<=4,_|=Y.getUTCMonth()+1,_<<=5,_|=Y.getUTCDate(),L&&(z=r(1,1)+r(h(A),4)+y,U+="up"+r(z.length,2)+z),S&&(k=r(1,1)+r(h(M),4)+R,U+="uc"+r(k.length,2)+k);var Z="";return Z+=`
\0`,Z+=r(j,2),Z+=T.magic,Z+=r(I,2),Z+=r(_,2),Z+=r(re.crc32,4),Z+=r(re.compressedSize,4),Z+=r(re.uncompressedSize,4),Z+=r(A.length,2),Z+=r(U.length,2),{fileRecord:d.LOCAL_FILE_HEADER+Z+A+U,dirRecord:d.CENTRAL_FILE_HEADER+r(ue,2)+Z+r(M.length,2)+"\0\0\0\0"+r(X,4)+r(E,4)+A+U+M}}var a=t("../utils"),l=t("../stream/GenericWorker"),c=t("../utf8"),h=t("../crc32"),d=t("../signature");function u(f,m,g,E){l.call(this,"ZipFileWorker"),this.bytesWritten=0,this.zipComment=m,this.zipPlatform=g,this.encodeFileName=E,this.streamFiles=f,this.accumulate=!1,this.contentBuffer=[],this.dirRecords=[],this.currentSourceOffset=0,this.entriesCount=0,this.currentFile=null,this._sources=[]}a.inherits(u,l),u.prototype.push=function(f){var m=f.meta.percent||0,g=this.entriesCount,E=this._sources.length;this.accumulate?this.contentBuffer.push(f):(this.bytesWritten+=f.data.length,l.prototype.push.call(this,{data:f.data,meta:{currentFile:this.currentFile,percent:g?(m+100*(g-E-1))/g:100}}))},u.prototype.openedSource=function(f){this.currentSourceOffset=this.bytesWritten,this.currentFile=f.file.name;var m=this.streamFiles&&!f.file.dir;if(m){var g=o(f,m,!1,this.currentSourceOffset,this.zipPlatform,this.encodeFileName);this.push({data:g.fileRecord,meta:{percent:0}})}else this.accumulate=!0},u.prototype.closedSource=function(f){this.accumulate=!1;var m=this.streamFiles&&!f.file.dir,g=o(f,m,!0,this.currentSourceOffset,this.zipPlatform,this.encodeFileName);if(this.dirRecords.push(g.dirRecord),m)this.push({data:function(E){return d.DATA_DESCRIPTOR+r(E.crc32,4)+r(E.compressedSize,4)+r(E.uncompressedSize,4)}(f),meta:{percent:100}});else for(this.push({data:g.fileRecord,meta:{percent:0}});this.contentBuffer.length;)this.push(this.contentBuffer.shift());this.currentFile=null},u.prototype.flush=function(){for(var f=this.bytesWritten,m=0;m<this.dirRecords.length;m++)this.push({data:this.dirRecords[m],meta:{percent:100}});var g=this.bytesWritten-f,E=function(p,v,I,_,b){var T=a.transformTo("string",b(_));return d.CENTRAL_DIRECTORY_END+"\0\0\0\0"+r(p,2)+r(p,2)+r(v,4)+r(I,4)+r(T.length,2)+T}(this.dirRecords.length,g,f,this.zipComment,this.encodeFileName);this.push({data:E,meta:{percent:100}})},u.prototype.prepareNextSource=function(){this.previous=this._sources.shift(),this.openedSource(this.previous.streamInfo),this.isPaused?this.previous.pause():this.previous.resume()},u.prototype.registerPrevious=function(f){this._sources.push(f);var m=this;return f.on("data",function(g){m.processChunk(g)}),f.on("end",function(){m.closedSource(m.previous.streamInfo),m._sources.length?m.prepareNextSource():m.end()}),f.on("error",function(g){m.error(g)}),this},u.prototype.resume=function(){return!!l.prototype.resume.call(this)&&(!this.previous&&this._sources.length?(this.prepareNextSource(),!0):this.previous||this._sources.length||this.generatedError?void 0:(this.end(),!0))},u.prototype.error=function(f){var m=this._sources;if(!l.prototype.error.call(this,f))return!1;for(var g=0;g<m.length;g++)try{m[g].error(f)}catch{}return!0},u.prototype.lock=function(){l.prototype.lock.call(this);for(var f=this._sources,m=0;m<f.length;m++)f[m].lock()},i.exports=u},{"../crc32":4,"../signature":23,"../stream/GenericWorker":28,"../utf8":31,"../utils":32}],9:[function(t,i,n){var r=t("../compressions"),o=t("./ZipFileWorker");n.generateWorker=function(a,l,c){var h=new o(l.streamFiles,c,l.platform,l.encodeFileName),d=0;try{a.forEach(function(u,f){d++;var m=function(v,I){var _=v||I,b=r[_];if(!b)throw new Error(_+" is not a valid compression method !");return b}(f.options.compression,l.compression),g=f.options.compressionOptions||l.compressionOptions||{},E=f.dir,p=f.date;f._compressWorker(m,g).withStreamInfo("file",{name:u,dir:E,date:p,comment:f.comment||"",unixPermissions:f.unixPermissions,dosPermissions:f.dosPermissions}).pipe(h)}),h.entriesCount=d}catch(u){h.error(u)}return h}},{"../compressions":3,"./ZipFileWorker":8}],10:[function(t,i,n){function r(){if(!(this instanceof r))return new r;if(arguments.length)throw new Error("The constructor with parameters has been removed in JSZip 3.0, please check the upgrade guide.");this.files=Object.create(null),this.comment=null,this.root="",this.clone=function(){var o=new r;for(var a in this)typeof this[a]!="function"&&(o[a]=this[a]);return o}}(r.prototype=t("./object")).loadAsync=t("./load"),r.support=t("./support"),r.defaults=t("./defaults"),r.version="3.10.1",r.loadAsync=function(o,a){return new r().loadAsync(o,a)},r.external=t("./external"),i.exports=r},{"./defaults":5,"./external":6,"./load":11,"./object":15,"./support":30}],11:[function(t,i,n){var r=t("./utils"),o=t("./external"),a=t("./utf8"),l=t("./zipEntries"),c=t("./stream/Crc32Probe"),h=t("./nodejsUtils");function d(u){return new o.Promise(function(f,m){var g=u.decompressed.getContentWorker().pipe(new c);g.on("error",function(E){m(E)}).on("end",function(){g.streamInfo.crc32!==u.decompressed.crc32?m(new Error("Corrupted zip : CRC32 mismatch")):f()}).resume()})}i.exports=function(u,f){var m=this;return f=r.extend(f||{},{base64:!1,checkCRC32:!1,optimizedBinaryString:!1,createFolders:!1,decodeFileName:a.utf8decode}),h.isNode&&h.isStream(u)?o.Promise.reject(new Error("JSZip can't accept a stream when loading a zip file.")):r.prepareContent("the loaded zip file",u,!0,f.optimizedBinaryString,f.base64).then(function(g){var E=new l(f);return E.load(g),E}).then(function(g){var E=[o.Promise.resolve(g)],p=g.files;if(f.checkCRC32)for(var v=0;v<p.length;v++)E.push(d(p[v]));return o.Promise.all(E)}).then(function(g){for(var E=g.shift(),p=E.files,v=0;v<p.length;v++){var I=p[v],_=I.fileNameStr,b=r.resolve(I.fileNameStr);m.file(b,I.decompressed,{binary:!0,optimizedBinaryString:!0,date:I.date,dir:I.dir,comment:I.fileCommentStr.length?I.fileCommentStr:null,unixPermissions:I.unixPermissions,dosPermissions:I.dosPermissions,createFolders:f.createFolders}),I.dir||(m.file(b).unsafeOriginalName=_)}return E.zipComment.length&&(m.comment=E.zipComment),m})}},{"./external":6,"./nodejsUtils":14,"./stream/Crc32Probe":25,"./utf8":31,"./utils":32,"./zipEntries":33}],12:[function(t,i,n){var r=t("../utils"),o=t("../stream/GenericWorker");function a(l,c){o.call(this,"Nodejs stream input adapter for "+l),this._upstreamEnded=!1,this._bindStream(c)}r.inherits(a,o),a.prototype._bindStream=function(l){var c=this;(this._stream=l).pause(),l.on("data",function(h){c.push({data:h,meta:{percent:0}})}).on("error",function(h){c.isPaused?this.generatedError=h:c.error(h)}).on("end",function(){c.isPaused?c._upstreamEnded=!0:c.end()})},a.prototype.pause=function(){return!!o.prototype.pause.call(this)&&(this._stream.pause(),!0)},a.prototype.resume=function(){return!!o.prototype.resume.call(this)&&(this._upstreamEnded?this.end():this._stream.resume(),!0)},i.exports=a},{"../stream/GenericWorker":28,"../utils":32}],13:[function(t,i,n){var r=t("readable-stream").Readable;function o(a,l,c){r.call(this,l),this._helper=a;var h=this;a.on("data",function(d,u){h.push(d)||h._helper.pause(),c&&c(u)}).on("error",function(d){h.emit("error",d)}).on("end",function(){h.push(null)})}t("../utils").inherits(o,r),o.prototype._read=function(){this._helper.resume()},i.exports=o},{"../utils":32,"readable-stream":16}],14:[function(t,i,n){i.exports={isNode:typeof Buffer<"u",newBufferFrom:function(r,o){if(Buffer.from&&Buffer.from!==Uint8Array.from)return Buffer.from(r,o);if(typeof r=="number")throw new Error('The "data" argument must not be a number');return new Buffer(r,o)},allocBuffer:function(r){if(Buffer.alloc)return Buffer.alloc(r);var o=new Buffer(r);return o.fill(0),o},isBuffer:function(r){return Buffer.isBuffer(r)},isStream:function(r){return r&&typeof r.on=="function"&&typeof r.pause=="function"&&typeof r.resume=="function"}}},{}],15:[function(t,i,n){function r(b,T,w){var A,y=a.getTypeOf(T),C=a.extend(w||{},h);C.date=C.date||new Date,C.compression!==null&&(C.compression=C.compression.toUpperCase()),typeof C.unixPermissions=="string"&&(C.unixPermissions=parseInt(C.unixPermissions,8)),C.unixPermissions&&16384&C.unixPermissions&&(C.dir=!0),C.dosPermissions&&16&C.dosPermissions&&(C.dir=!0),C.dir&&(b=p(b)),C.createFolders&&(A=E(b))&&v.call(this,A,!0);var M=y==="string"&&C.binary===!1&&C.base64===!1;w&&w.binary!==void 0||(C.binary=!M),(T instanceof d&&T.uncompressedSize===0||C.dir||!T||T.length===0)&&(C.base64=!1,C.binary=!0,T="",C.compression="STORE",y="string");var R=null;R=T instanceof d||T instanceof l?T:m.isNode&&m.isStream(T)?new g(b,T):a.prepareContent(b,T,C.binary,C.optimizedBinaryString,C.base64);var L=new u(b,R,C);this.files[b]=L}var o=t("./utf8"),a=t("./utils"),l=t("./stream/GenericWorker"),c=t("./stream/StreamHelper"),h=t("./defaults"),d=t("./compressedObject"),u=t("./zipObject"),f=t("./generate"),m=t("./nodejsUtils"),g=t("./nodejs/NodejsStreamInputAdapter"),E=function(b){b.slice(-1)==="/"&&(b=b.substring(0,b.length-1));var T=b.lastIndexOf("/");return 0<T?b.substring(0,T):""},p=function(b){return b.slice(-1)!=="/"&&(b+="/"),b},v=function(b,T){return T=T!==void 0?T:h.createFolders,b=p(b),this.files[b]||r.call(this,b,null,{dir:!0,createFolders:T}),this.files[b]};function I(b){return Object.prototype.toString.call(b)==="[object RegExp]"}var _={load:function(){throw new Error("This method has been removed in JSZip 3.0, please check the upgrade guide.")},forEach:function(b){var T,w,A;for(T in this.files)A=this.files[T],(w=T.slice(this.root.length,T.length))&&T.slice(0,this.root.length)===this.root&&b(w,A)},filter:function(b){var T=[];return this.forEach(function(w,A){b(w,A)&&T.push(A)}),T},file:function(b,T,w){if(arguments.length!==1)return b=this.root+b,r.call(this,b,T,w),this;if(I(b)){var A=b;return this.filter(function(C,M){return!M.dir&&A.test(C)})}var y=this.files[this.root+b];return y&&!y.dir?y:null},folder:function(b){if(!b)return this;if(I(b))return this.filter(function(y,C){return C.dir&&b.test(y)});var T=this.root+b,w=v.call(this,T),A=this.clone();return A.root=w.name,A},remove:function(b){b=this.root+b;var T=this.files[b];if(T||(b.slice(-1)!=="/"&&(b+="/"),T=this.files[b]),T&&!T.dir)delete this.files[b];else for(var w=this.filter(function(y,C){return C.name.slice(0,b.length)===b}),A=0;A<w.length;A++)delete this.files[w[A].name];return this},generate:function(){throw new Error("This method has been removed in JSZip 3.0, please check the upgrade guide.")},generateInternalStream:function(b){var T,w={};try{if((w=a.extend(b||{},{streamFiles:!1,compression:"STORE",compressionOptions:null,type:"",platform:"DOS",comment:null,mimeType:"application/zip",encodeFileName:o.utf8encode})).type=w.type.toLowerCase(),w.compression=w.compression.toUpperCase(),w.type==="binarystring"&&(w.type="string"),!w.type)throw new Error("No output type specified.");a.checkSupport(w.type),w.platform!=="darwin"&&w.platform!=="freebsd"&&w.platform!=="linux"&&w.platform!=="sunos"||(w.platform="UNIX"),w.platform==="win32"&&(w.platform="DOS");var A=w.comment||this.comment||"";T=f.generateWorker(this,w,A)}catch(y){(T=new l("error")).error(y)}return new c(T,w.type||"string",w.mimeType)},generateAsync:function(b,T){return this.generateInternalStream(b).accumulate(T)},generateNodeStream:function(b,T){return(b=b||{}).type||(b.type="nodebuffer"),this.generateInternalStream(b).toNodejsStream(T)}};i.exports=_},{"./compressedObject":2,"./defaults":5,"./generate":9,"./nodejs/NodejsStreamInputAdapter":12,"./nodejsUtils":14,"./stream/GenericWorker":28,"./stream/StreamHelper":29,"./utf8":31,"./utils":32,"./zipObject":35}],16:[function(t,i,n){i.exports=t("stream")},{stream:void 0}],17:[function(t,i,n){var r=t("./DataReader");function o(a){r.call(this,a);for(var l=0;l<this.data.length;l++)a[l]=255&a[l]}t("../utils").inherits(o,r),o.prototype.byteAt=function(a){return this.data[this.zero+a]},o.prototype.lastIndexOfSignature=function(a){for(var l=a.charCodeAt(0),c=a.charCodeAt(1),h=a.charCodeAt(2),d=a.charCodeAt(3),u=this.length-4;0<=u;--u)if(this.data[u]===l&&this.data[u+1]===c&&this.data[u+2]===h&&this.data[u+3]===d)return u-this.zero;return-1},o.prototype.readAndCheckSignature=function(a){var l=a.charCodeAt(0),c=a.charCodeAt(1),h=a.charCodeAt(2),d=a.charCodeAt(3),u=this.readData(4);return l===u[0]&&c===u[1]&&h===u[2]&&d===u[3]},o.prototype.readData=function(a){if(this.checkOffset(a),a===0)return[];var l=this.data.slice(this.zero+this.index,this.zero+this.index+a);return this.index+=a,l},i.exports=o},{"../utils":32,"./DataReader":18}],18:[function(t,i,n){var r=t("../utils");function o(a){this.data=a,this.length=a.length,this.index=0,this.zero=0}o.prototype={checkOffset:function(a){this.checkIndex(this.index+a)},checkIndex:function(a){if(this.length<this.zero+a||a<0)throw new Error("End of data reached (data length = "+this.length+", asked index = "+a+"). Corrupted zip ?")},setIndex:function(a){this.checkIndex(a),this.index=a},skip:function(a){this.setIndex(this.index+a)},byteAt:function(){},readInt:function(a){var l,c=0;for(this.checkOffset(a),l=this.index+a-1;l>=this.index;l--)c=(c<<8)+this.byteAt(l);return this.index+=a,c},readString:function(a){return r.transformTo("string",this.readData(a))},readData:function(){},lastIndexOfSignature:function(){},readAndCheckSignature:function(){},readDate:function(){var a=this.readInt(4);return new Date(Date.UTC(1980+(a>>25&127),(a>>21&15)-1,a>>16&31,a>>11&31,a>>5&63,(31&a)<<1))}},i.exports=o},{"../utils":32}],19:[function(t,i,n){var r=t("./Uint8ArrayReader");function o(a){r.call(this,a)}t("../utils").inherits(o,r),o.prototype.readData=function(a){this.checkOffset(a);var l=this.data.slice(this.zero+this.index,this.zero+this.index+a);return this.index+=a,l},i.exports=o},{"../utils":32,"./Uint8ArrayReader":21}],20:[function(t,i,n){var r=t("./DataReader");function o(a){r.call(this,a)}t("../utils").inherits(o,r),o.prototype.byteAt=function(a){return this.data.charCodeAt(this.zero+a)},o.prototype.lastIndexOfSignature=function(a){return this.data.lastIndexOf(a)-this.zero},o.prototype.readAndCheckSignature=function(a){return a===this.readData(4)},o.prototype.readData=function(a){this.checkOffset(a);var l=this.data.slice(this.zero+this.index,this.zero+this.index+a);return this.index+=a,l},i.exports=o},{"../utils":32,"./DataReader":18}],21:[function(t,i,n){var r=t("./ArrayReader");function o(a){r.call(this,a)}t("../utils").inherits(o,r),o.prototype.readData=function(a){if(this.checkOffset(a),a===0)return new Uint8Array(0);var l=this.data.subarray(this.zero+this.index,this.zero+this.index+a);return this.index+=a,l},i.exports=o},{"../utils":32,"./ArrayReader":17}],22:[function(t,i,n){var r=t("../utils"),o=t("../support"),a=t("./ArrayReader"),l=t("./StringReader"),c=t("./NodeBufferReader"),h=t("./Uint8ArrayReader");i.exports=function(d){var u=r.getTypeOf(d);return r.checkSupport(u),u!=="string"||o.uint8array?u==="nodebuffer"?new c(d):o.uint8array?new h(r.transformTo("uint8array",d)):new a(r.transformTo("array",d)):new l(d)}},{"../support":30,"../utils":32,"./ArrayReader":17,"./NodeBufferReader":19,"./StringReader":20,"./Uint8ArrayReader":21}],23:[function(t,i,n){n.LOCAL_FILE_HEADER="PK",n.CENTRAL_FILE_HEADER="PK",n.CENTRAL_DIRECTORY_END="PK",n.ZIP64_CENTRAL_DIRECTORY_LOCATOR="PK\x07",n.ZIP64_CENTRAL_DIRECTORY_END="PK",n.DATA_DESCRIPTOR="PK\x07\b"},{}],24:[function(t,i,n){var r=t("./GenericWorker"),o=t("../utils");function a(l){r.call(this,"ConvertWorker to "+l),this.destType=l}o.inherits(a,r),a.prototype.processChunk=function(l){this.push({data:o.transformTo(this.destType,l.data),meta:l.meta})},i.exports=a},{"../utils":32,"./GenericWorker":28}],25:[function(t,i,n){var r=t("./GenericWorker"),o=t("../crc32");function a(){r.call(this,"Crc32Probe"),this.withStreamInfo("crc32",0)}t("../utils").inherits(a,r),a.prototype.processChunk=function(l){this.streamInfo.crc32=o(l.data,this.streamInfo.crc32||0),this.push(l)},i.exports=a},{"../crc32":4,"../utils":32,"./GenericWorker":28}],26:[function(t,i,n){var r=t("../utils"),o=t("./GenericWorker");function a(l){o.call(this,"DataLengthProbe for "+l),this.propName=l,this.withStreamInfo(l,0)}r.inherits(a,o),a.prototype.processChunk=function(l){if(l){var c=this.streamInfo[this.propName]||0;this.streamInfo[this.propName]=c+l.data.length}o.prototype.processChunk.call(this,l)},i.exports=a},{"../utils":32,"./GenericWorker":28}],27:[function(t,i,n){var r=t("../utils"),o=t("./GenericWorker");function a(l){o.call(this,"DataWorker");var c=this;this.dataIsReady=!1,this.index=0,this.max=0,this.data=null,this.type="",this._tickScheduled=!1,l.then(function(h){c.dataIsReady=!0,c.data=h,c.max=h&&h.length||0,c.type=r.getTypeOf(h),c.isPaused||c._tickAndRepeat()},function(h){c.error(h)})}r.inherits(a,o),a.prototype.cleanUp=function(){o.prototype.cleanUp.call(this),this.data=null},a.prototype.resume=function(){return!!o.prototype.resume.call(this)&&(!this._tickScheduled&&this.dataIsReady&&(this._tickScheduled=!0,r.delay(this._tickAndRepeat,[],this)),!0)},a.prototype._tickAndRepeat=function(){this._tickScheduled=!1,this.isPaused||this.isFinished||(this._tick(),this.isFinished||(r.delay(this._tickAndRepeat,[],this),this._tickScheduled=!0))},a.prototype._tick=function(){if(this.isPaused||this.isFinished)return!1;var l=null,c=Math.min(this.max,this.index+16384);if(this.index>=this.max)return this.end();switch(this.type){case"string":l=this.data.substring(this.index,c);break;case"uint8array":l=this.data.subarray(this.index,c);break;case"array":case"nodebuffer":l=this.data.slice(this.index,c)}return this.index=c,this.push({data:l,meta:{percent:this.max?this.index/this.max*100:0}})},i.exports=a},{"../utils":32,"./GenericWorker":28}],28:[function(t,i,n){function r(o){this.name=o||"default",this.streamInfo={},this.generatedError=null,this.extraStreamInfo={},this.isPaused=!0,this.isFinished=!1,this.isLocked=!1,this._listeners={data:[],end:[],error:[]},this.previous=null}r.prototype={push:function(o){this.emit("data",o)},end:function(){if(this.isFinished)return!1;this.flush();try{this.emit("end"),this.cleanUp(),this.isFinished=!0}catch(o){this.emit("error",o)}return!0},error:function(o){return!this.isFinished&&(this.isPaused?this.generatedError=o:(this.isFinished=!0,this.emit("error",o),this.previous&&this.previous.error(o),this.cleanUp()),!0)},on:function(o,a){return this._listeners[o].push(a),this},cleanUp:function(){this.streamInfo=this.generatedError=this.extraStreamInfo=null,this._listeners=[]},emit:function(o,a){if(this._listeners[o])for(var l=0;l<this._listeners[o].length;l++)this._listeners[o][l].call(this,a)},pipe:function(o){return o.registerPrevious(this)},registerPrevious:function(o){if(this.isLocked)throw new Error("The stream '"+this+"' has already been used.");this.streamInfo=o.streamInfo,this.mergeStreamInfo(),this.previous=o;var a=this;return o.on("data",function(l){a.processChunk(l)}),o.on("end",function(){a.end()}),o.on("error",function(l){a.error(l)}),this},pause:function(){return!this.isPaused&&!this.isFinished&&(this.isPaused=!0,this.previous&&this.previous.pause(),!0)},resume:function(){if(!this.isPaused||this.isFinished)return!1;var o=this.isPaused=!1;return this.generatedError&&(this.error(this.generatedError),o=!0),this.previous&&this.previous.resume(),!o},flush:function(){},processChunk:function(o){this.push(o)},withStreamInfo:function(o,a){return this.extraStreamInfo[o]=a,this.mergeStreamInfo(),this},mergeStreamInfo:function(){for(var o in this.extraStreamInfo)Object.prototype.hasOwnProperty.call(this.extraStreamInfo,o)&&(this.streamInfo[o]=this.extraStreamInfo[o])},lock:function(){if(this.isLocked)throw new Error("The stream '"+this+"' has already been used.");this.isLocked=!0,this.previous&&this.previous.lock()},toString:function(){var o="Worker "+this.name;return this.previous?this.previous+" -> "+o:o}},i.exports=r},{}],29:[function(t,i,n){var r=t("../utils"),o=t("./ConvertWorker"),a=t("./GenericWorker"),l=t("../base64"),c=t("../support"),h=t("../external"),d=null;if(c.nodestream)try{d=t("../nodejs/NodejsStreamOutputAdapter")}catch{}function u(m,g){return new h.Promise(function(E,p){var v=[],I=m._internalType,_=m._outputType,b=m._mimeType;m.on("data",function(T,w){v.push(T),g&&g(w)}).on("error",function(T){v=[],p(T)}).on("end",function(){try{var T=function(w,A,y){switch(w){case"blob":return r.newBlob(r.transformTo("arraybuffer",A),y);case"base64":return l.encode(A);default:return r.transformTo(w,A)}}(_,function(w,A){var y,C=0,M=null,R=0;for(y=0;y<A.length;y++)R+=A[y].length;switch(w){case"string":return A.join("");case"array":return Array.prototype.concat.apply([],A);case"uint8array":for(M=new Uint8Array(R),y=0;y<A.length;y++)M.set(A[y],C),C+=A[y].length;return M;case"nodebuffer":return Buffer.concat(A);default:throw new Error("concat : unsupported type '"+w+"'")}}(I,v),b);E(T)}catch(w){p(w)}v=[]}).resume()})}function f(m,g,E){var p=g;switch(g){case"blob":case"arraybuffer":p="uint8array";break;case"base64":p="string"}try{this._internalType=p,this._outputType=g,this._mimeType=E,r.checkSupport(p),this._worker=m.pipe(new o(p)),m.lock()}catch(v){this._worker=new a("error"),this._worker.error(v)}}f.prototype={accumulate:function(m){return u(this,m)},on:function(m,g){var E=this;return m==="data"?this._worker.on(m,function(p){g.call(E,p.data,p.meta)}):this._worker.on(m,function(){r.delay(g,arguments,E)}),this},resume:function(){return r.delay(this._worker.resume,[],this._worker),this},pause:function(){return this._worker.pause(),this},toNodejsStream:function(m){if(r.checkSupport("nodestream"),this._outputType!=="nodebuffer")throw new Error(this._outputType+" is not supported by this method");return new d(this,{objectMode:this._outputType!=="nodebuffer"},m)}},i.exports=f},{"../base64":1,"../external":6,"../nodejs/NodejsStreamOutputAdapter":13,"../support":30,"../utils":32,"./ConvertWorker":24,"./GenericWorker":28}],30:[function(t,i,n){if(n.base64=!0,n.array=!0,n.string=!0,n.arraybuffer=typeof ArrayBuffer<"u"&&typeof Uint8Array<"u",n.nodebuffer=typeof Buffer<"u",n.uint8array=typeof Uint8Array<"u",typeof ArrayBuffer>"u")n.blob=!1;else{var r=new ArrayBuffer(0);try{n.blob=new Blob([r],{type:"application/zip"}).size===0}catch{try{var o=new(self.BlobBuilder||self.WebKitBlobBuilder||self.MozBlobBuilder||self.MSBlobBuilder);o.append(r),n.blob=o.getBlob("application/zip").size===0}catch{n.blob=!1}}}try{n.nodestream=!!t("readable-stream").Readable}catch{n.nodestream=!1}},{"readable-stream":16}],31:[function(t,i,n){for(var r=t("./utils"),o=t("./support"),a=t("./nodejsUtils"),l=t("./stream/GenericWorker"),c=new Array(256),h=0;h<256;h++)c[h]=252<=h?6:248<=h?5:240<=h?4:224<=h?3:192<=h?2:1;c[254]=c[254]=1;function d(){l.call(this,"utf-8 decode"),this.leftOver=null}function u(){l.call(this,"utf-8 encode")}n.utf8encode=function(f){return o.nodebuffer?a.newBufferFrom(f,"utf-8"):function(m){var g,E,p,v,I,_=m.length,b=0;for(v=0;v<_;v++)(64512&(E=m.charCodeAt(v)))==55296&&v+1<_&&(64512&(p=m.charCodeAt(v+1)))==56320&&(E=65536+(E-55296<<10)+(p-56320),v++),b+=E<128?1:E<2048?2:E<65536?3:4;for(g=o.uint8array?new Uint8Array(b):new Array(b),v=I=0;I<b;v++)(64512&(E=m.charCodeAt(v)))==55296&&v+1<_&&(64512&(p=m.charCodeAt(v+1)))==56320&&(E=65536+(E-55296<<10)+(p-56320),v++),E<128?g[I++]=E:(E<2048?g[I++]=192|E>>>6:(E<65536?g[I++]=224|E>>>12:(g[I++]=240|E>>>18,g[I++]=128|E>>>12&63),g[I++]=128|E>>>6&63),g[I++]=128|63&E);return g}(f)},n.utf8decode=function(f){return o.nodebuffer?r.transformTo("nodebuffer",f).toString("utf-8"):function(m){var g,E,p,v,I=m.length,_=new Array(2*I);for(g=E=0;g<I;)if((p=m[g++])<128)_[E++]=p;else if(4<(v=c[p]))_[E++]=65533,g+=v-1;else{for(p&=v===2?31:v===3?15:7;1<v&&g<I;)p=p<<6|63&m[g++],v--;1<v?_[E++]=65533:p<65536?_[E++]=p:(p-=65536,_[E++]=55296|p>>10&1023,_[E++]=56320|1023&p)}return _.length!==E&&(_.subarray?_=_.subarray(0,E):_.length=E),r.applyFromCharCode(_)}(f=r.transformTo(o.uint8array?"uint8array":"array",f))},r.inherits(d,l),d.prototype.processChunk=function(f){var m=r.transformTo(o.uint8array?"uint8array":"array",f.data);if(this.leftOver&&this.leftOver.length){if(o.uint8array){var g=m;(m=new Uint8Array(g.length+this.leftOver.length)).set(this.leftOver,0),m.set(g,this.leftOver.length)}else m=this.leftOver.concat(m);this.leftOver=null}var E=function(v,I){var _;for((I=I||v.length)>v.length&&(I=v.length),_=I-1;0<=_&&(192&v[_])==128;)_--;return _<0||_===0?I:_+c[v[_]]>I?_:I}(m),p=m;E!==m.length&&(o.uint8array?(p=m.subarray(0,E),this.leftOver=m.subarray(E,m.length)):(p=m.slice(0,E),this.leftOver=m.slice(E,m.length))),this.push({data:n.utf8decode(p),meta:f.meta})},d.prototype.flush=function(){this.leftOver&&this.leftOver.length&&(this.push({data:n.utf8decode(this.leftOver),meta:{}}),this.leftOver=null)},n.Utf8DecodeWorker=d,r.inherits(u,l),u.prototype.processChunk=function(f){this.push({data:n.utf8encode(f.data),meta:f.meta})},n.Utf8EncodeWorker=u},{"./nodejsUtils":14,"./stream/GenericWorker":28,"./support":30,"./utils":32}],32:[function(t,i,n){var r=t("./support"),o=t("./base64"),a=t("./nodejsUtils"),l=t("./external");function c(g){return g}function h(g,E){for(var p=0;p<g.length;++p)E[p]=255&g.charCodeAt(p);return E}t("setimmediate"),n.newBlob=function(g,E){n.checkSupport("blob");try{return new Blob([g],{type:E})}catch{try{var p=new(self.BlobBuilder||self.WebKitBlobBuilder||self.MozBlobBuilder||self.MSBlobBuilder);return p.append(g),p.getBlob(E)}catch{throw new Error("Bug : can't construct the Blob.")}}};var d={stringifyByChunk:function(g,E,p){var v=[],I=0,_=g.length;if(_<=p)return String.fromCharCode.apply(null,g);for(;I<_;)E==="array"||E==="nodebuffer"?v.push(String.fromCharCode.apply(null,g.slice(I,Math.min(I+p,_)))):v.push(String.fromCharCode.apply(null,g.subarray(I,Math.min(I+p,_)))),I+=p;return v.join("")},stringifyByChar:function(g){for(var E="",p=0;p<g.length;p++)E+=String.fromCharCode(g[p]);return E},applyCanBeUsed:{uint8array:function(){try{return r.uint8array&&String.fromCharCode.apply(null,new Uint8Array(1)).length===1}catch{return!1}}(),nodebuffer:function(){try{return r.nodebuffer&&String.fromCharCode.apply(null,a.allocBuffer(1)).length===1}catch{return!1}}()}};function u(g){var E=65536,p=n.getTypeOf(g),v=!0;if(p==="uint8array"?v=d.applyCanBeUsed.uint8array:p==="nodebuffer"&&(v=d.applyCanBeUsed.nodebuffer),v)for(;1<E;)try{return d.stringifyByChunk(g,p,E)}catch{E=Math.floor(E/2)}return d.stringifyByChar(g)}function f(g,E){for(var p=0;p<g.length;p++)E[p]=g[p];return E}n.applyFromCharCode=u;var m={};m.string={string:c,array:function(g){return h(g,new Array(g.length))},arraybuffer:function(g){return m.string.uint8array(g).buffer},uint8array:function(g){return h(g,new Uint8Array(g.length))},nodebuffer:function(g){return h(g,a.allocBuffer(g.length))}},m.array={string:u,array:c,arraybuffer:function(g){return new Uint8Array(g).buffer},uint8array:function(g){return new Uint8Array(g)},nodebuffer:function(g){return a.newBufferFrom(g)}},m.arraybuffer={string:function(g){return u(new Uint8Array(g))},array:function(g){return f(new Uint8Array(g),new Array(g.byteLength))},arraybuffer:c,uint8array:function(g){return new Uint8Array(g)},nodebuffer:function(g){return a.newBufferFrom(new Uint8Array(g))}},m.uint8array={string:u,array:function(g){return f(g,new Array(g.length))},arraybuffer:function(g){return g.buffer},uint8array:c,nodebuffer:function(g){return a.newBufferFrom(g)}},m.nodebuffer={string:u,array:function(g){return f(g,new Array(g.length))},arraybuffer:function(g){return m.nodebuffer.uint8array(g).buffer},uint8array:function(g){return f(g,new Uint8Array(g.length))},nodebuffer:c},n.transformTo=function(g,E){if(E=E||"",!g)return E;n.checkSupport(g);var p=n.getTypeOf(E);return m[p][g](E)},n.resolve=function(g){for(var E=g.split("/"),p=[],v=0;v<E.length;v++){var I=E[v];I==="."||I===""&&v!==0&&v!==E.length-1||(I===".."?p.pop():p.push(I))}return p.join("/")},n.getTypeOf=function(g){return typeof g=="string"?"string":Object.prototype.toString.call(g)==="[object Array]"?"array":r.nodebuffer&&a.isBuffer(g)?"nodebuffer":r.uint8array&&g instanceof Uint8Array?"uint8array":r.arraybuffer&&g instanceof ArrayBuffer?"arraybuffer":void 0},n.checkSupport=function(g){if(!r[g.toLowerCase()])throw new Error(g+" is not supported by this platform")},n.MAX_VALUE_16BITS=65535,n.MAX_VALUE_32BITS=-1,n.pretty=function(g){var E,p,v="";for(p=0;p<(g||"").length;p++)v+="\\x"+((E=g.charCodeAt(p))<16?"0":"")+E.toString(16).toUpperCase();return v},n.delay=function(g,E,p){setImmediate(function(){g.apply(p||null,E||[])})},n.inherits=function(g,E){function p(){}p.prototype=E.prototype,g.prototype=new p},n.extend=function(){var g,E,p={};for(g=0;g<arguments.length;g++)for(E in arguments[g])Object.prototype.hasOwnProperty.call(arguments[g],E)&&p[E]===void 0&&(p[E]=arguments[g][E]);return p},n.prepareContent=function(g,E,p,v,I){return l.Promise.resolve(E).then(function(_){return r.blob&&(_ instanceof Blob||["[object File]","[object Blob]"].indexOf(Object.prototype.toString.call(_))!==-1)&&typeof FileReader<"u"?new l.Promise(function(b,T){var w=new FileReader;w.onload=function(A){b(A.target.result)},w.onerror=function(A){T(A.target.error)},w.readAsArrayBuffer(_)}):_}).then(function(_){var b=n.getTypeOf(_);return b?(b==="arraybuffer"?_=n.transformTo("uint8array",_):b==="string"&&(I?_=o.decode(_):p&&v!==!0&&(_=function(T){return h(T,r.uint8array?new Uint8Array(T.length):new Array(T.length))}(_))),_):l.Promise.reject(new Error("Can't read the data of '"+g+"'. Is it in a supported JavaScript type (String, Blob, ArrayBuffer, etc) ?"))})}},{"./base64":1,"./external":6,"./nodejsUtils":14,"./support":30,setimmediate:54}],33:[function(t,i,n){var r=t("./reader/readerFor"),o=t("./utils"),a=t("./signature"),l=t("./zipEntry"),c=t("./support");function h(d){this.files=[],this.loadOptions=d}h.prototype={checkSignature:function(d){if(!this.reader.readAndCheckSignature(d)){this.reader.index-=4;var u=this.reader.readString(4);throw new Error("Corrupted zip or bug: unexpected signature ("+o.pretty(u)+", expected "+o.pretty(d)+")")}},isSignature:function(d,u){var f=this.reader.index;this.reader.setIndex(d);var m=this.reader.readString(4)===u;return this.reader.setIndex(f),m},readBlockEndOfCentral:function(){this.diskNumber=this.reader.readInt(2),this.diskWithCentralDirStart=this.reader.readInt(2),this.centralDirRecordsOnThisDisk=this.reader.readInt(2),this.centralDirRecords=this.reader.readInt(2),this.centralDirSize=this.reader.readInt(4),this.centralDirOffset=this.reader.readInt(4),this.zipCommentLength=this.reader.readInt(2);var d=this.reader.readData(this.zipCommentLength),u=c.uint8array?"uint8array":"array",f=o.transformTo(u,d);this.zipComment=this.loadOptions.decodeFileName(f)},readBlockZip64EndOfCentral:function(){this.zip64EndOfCentralSize=this.reader.readInt(8),this.reader.skip(4),this.diskNumber=this.reader.readInt(4),this.diskWithCentralDirStart=this.reader.readInt(4),this.centralDirRecordsOnThisDisk=this.reader.readInt(8),this.centralDirRecords=this.reader.readInt(8),this.centralDirSize=this.reader.readInt(8),this.centralDirOffset=this.reader.readInt(8),this.zip64ExtensibleData={};for(var d,u,f,m=this.zip64EndOfCentralSize-44;0<m;)d=this.reader.readInt(2),u=this.reader.readInt(4),f=this.reader.readData(u),this.zip64ExtensibleData[d]={id:d,length:u,value:f}},readBlockZip64EndOfCentralLocator:function(){if(this.diskWithZip64CentralDirStart=this.reader.readInt(4),this.relativeOffsetEndOfZip64CentralDir=this.reader.readInt(8),this.disksCount=this.reader.readInt(4),1<this.disksCount)throw new Error("Multi-volumes zip are not supported")},readLocalFiles:function(){var d,u;for(d=0;d<this.files.length;d++)u=this.files[d],this.reader.setIndex(u.localHeaderOffset),this.checkSignature(a.LOCAL_FILE_HEADER),u.readLocalPart(this.reader),u.handleUTF8(),u.processAttributes()},readCentralDir:function(){var d;for(this.reader.setIndex(this.centralDirOffset);this.reader.readAndCheckSignature(a.CENTRAL_FILE_HEADER);)(d=new l({zip64:this.zip64},this.loadOptions)).readCentralPart(this.reader),this.files.push(d);if(this.centralDirRecords!==this.files.length&&this.centralDirRecords!==0&&this.files.length===0)throw new Error("Corrupted zip or bug: expected "+this.centralDirRecords+" records in central dir, got "+this.files.length)},readEndOfCentral:function(){var d=this.reader.lastIndexOfSignature(a.CENTRAL_DIRECTORY_END);if(d<0)throw this.isSignature(0,a.LOCAL_FILE_HEADER)?new Error("Corrupted zip: can't find end of central directory"):new Error("Can't find end of central directory : is this a zip file ? If it is, see https://stuk.github.io/jszip/documentation/howto/read_zip.html");this.reader.setIndex(d);var u=d;if(this.checkSignature(a.CENTRAL_DIRECTORY_END),this.readBlockEndOfCentral(),this.diskNumber===o.MAX_VALUE_16BITS||this.diskWithCentralDirStart===o.MAX_VALUE_16BITS||this.centralDirRecordsOnThisDisk===o.MAX_VALUE_16BITS||this.centralDirRecords===o.MAX_VALUE_16BITS||this.centralDirSize===o.MAX_VALUE_32BITS||this.centralDirOffset===o.MAX_VALUE_32BITS){if(this.zip64=!0,(d=this.reader.lastIndexOfSignature(a.ZIP64_CENTRAL_DIRECTORY_LOCATOR))<0)throw new Error("Corrupted zip: can't find the ZIP64 end of central directory locator");if(this.reader.setIndex(d),this.checkSignature(a.ZIP64_CENTRAL_DIRECTORY_LOCATOR),this.readBlockZip64EndOfCentralLocator(),!this.isSignature(this.relativeOffsetEndOfZip64CentralDir,a.ZIP64_CENTRAL_DIRECTORY_END)&&(this.relativeOffsetEndOfZip64CentralDir=this.reader.lastIndexOfSignature(a.ZIP64_CENTRAL_DIRECTORY_END),this.relativeOffsetEndOfZip64CentralDir<0))throw new Error("Corrupted zip: can't find the ZIP64 end of central directory");this.reader.setIndex(this.relativeOffsetEndOfZip64CentralDir),this.checkSignature(a.ZIP64_CENTRAL_DIRECTORY_END),this.readBlockZip64EndOfCentral()}var f=this.centralDirOffset+this.centralDirSize;this.zip64&&(f+=20,f+=12+this.zip64EndOfCentralSize);var m=u-f;if(0<m)this.isSignature(u,a.CENTRAL_FILE_HEADER)||(this.reader.zero=m);else if(m<0)throw new Error("Corrupted zip: missing "+Math.abs(m)+" bytes.")},prepareReader:function(d){this.reader=r(d)},load:function(d){this.prepareReader(d),this.readEndOfCentral(),this.readCentralDir(),this.readLocalFiles()}},i.exports=h},{"./reader/readerFor":22,"./signature":23,"./support":30,"./utils":32,"./zipEntry":34}],34:[function(t,i,n){var r=t("./reader/readerFor"),o=t("./utils"),a=t("./compressedObject"),l=t("./crc32"),c=t("./utf8"),h=t("./compressions"),d=t("./support");function u(f,m){this.options=f,this.loadOptions=m}u.prototype={isEncrypted:function(){return(1&this.bitFlag)==1},useUTF8:function(){return(2048&this.bitFlag)==2048},readLocalPart:function(f){var m,g;if(f.skip(22),this.fileNameLength=f.readInt(2),g=f.readInt(2),this.fileName=f.readData(this.fileNameLength),f.skip(g),this.compressedSize===-1||this.uncompressedSize===-1)throw new Error("Bug or corrupted zip : didn't get enough information from the central directory (compressedSize === -1 || uncompressedSize === -1)");if((m=function(E){for(var p in h)if(Object.prototype.hasOwnProperty.call(h,p)&&h[p].magic===E)return h[p];return null}(this.compressionMethod))===null)throw new Error("Corrupted zip : compression "+o.pretty(this.compressionMethod)+" unknown (inner file : "+o.transformTo("string",this.fileName)+")");this.decompressed=new a(this.compressedSize,this.uncompressedSize,this.crc32,m,f.readData(this.compressedSize))},readCentralPart:function(f){this.versionMadeBy=f.readInt(2),f.skip(2),this.bitFlag=f.readInt(2),this.compressionMethod=f.readString(2),this.date=f.readDate(),this.crc32=f.readInt(4),this.compressedSize=f.readInt(4),this.uncompressedSize=f.readInt(4);var m=f.readInt(2);if(this.extraFieldsLength=f.readInt(2),this.fileCommentLength=f.readInt(2),this.diskNumberStart=f.readInt(2),this.internalFileAttributes=f.readInt(2),this.externalFileAttributes=f.readInt(4),this.localHeaderOffset=f.readInt(4),this.isEncrypted())throw new Error("Encrypted zip are not supported");f.skip(m),this.readExtraFields(f),this.parseZIP64ExtraField(f),this.fileComment=f.readData(this.fileCommentLength)},processAttributes:function(){this.unixPermissions=null,this.dosPermissions=null;var f=this.versionMadeBy>>8;this.dir=!!(16&this.externalFileAttributes),f==0&&(this.dosPermissions=63&this.externalFileAttributes),f==3&&(this.unixPermissions=this.externalFileAttributes>>16&65535),this.dir||this.fileNameStr.slice(-1)!=="/"||(this.dir=!0)},parseZIP64ExtraField:function(){if(this.extraFields[1]){var f=r(this.extraFields[1].value);this.uncompressedSize===o.MAX_VALUE_32BITS&&(this.uncompressedSize=f.readInt(8)),this.compressedSize===o.MAX_VALUE_32BITS&&(this.compressedSize=f.readInt(8)),this.localHeaderOffset===o.MAX_VALUE_32BITS&&(this.localHeaderOffset=f.readInt(8)),this.diskNumberStart===o.MAX_VALUE_32BITS&&(this.diskNumberStart=f.readInt(4))}},readExtraFields:function(f){var m,g,E,p=f.index+this.extraFieldsLength;for(this.extraFields||(this.extraFields={});f.index+4<p;)m=f.readInt(2),g=f.readInt(2),E=f.readData(g),this.extraFields[m]={id:m,length:g,value:E};f.setIndex(p)},handleUTF8:function(){var f=d.uint8array?"uint8array":"array";if(this.useUTF8())this.fileNameStr=c.utf8decode(this.fileName),this.fileCommentStr=c.utf8decode(this.fileComment);else{var m=this.findExtraFieldUnicodePath();if(m!==null)this.fileNameStr=m;else{var g=o.transformTo(f,this.fileName);this.fileNameStr=this.loadOptions.decodeFileName(g)}var E=this.findExtraFieldUnicodeComment();if(E!==null)this.fileCommentStr=E;else{var p=o.transformTo(f,this.fileComment);this.fileCommentStr=this.loadOptions.decodeFileName(p)}}},findExtraFieldUnicodePath:function(){var f=this.extraFields[28789];if(f){var m=r(f.value);return m.readInt(1)!==1||l(this.fileName)!==m.readInt(4)?null:c.utf8decode(m.readData(f.length-5))}return null},findExtraFieldUnicodeComment:function(){var f=this.extraFields[25461];if(f){var m=r(f.value);return m.readInt(1)!==1||l(this.fileComment)!==m.readInt(4)?null:c.utf8decode(m.readData(f.length-5))}return null}},i.exports=u},{"./compressedObject":2,"./compressions":3,"./crc32":4,"./reader/readerFor":22,"./support":30,"./utf8":31,"./utils":32}],35:[function(t,i,n){function r(m,g,E){this.name=m,this.dir=E.dir,this.date=E.date,this.comment=E.comment,this.unixPermissions=E.unixPermissions,this.dosPermissions=E.dosPermissions,this._data=g,this._dataBinary=E.binary,this.options={compression:E.compression,compressionOptions:E.compressionOptions}}var o=t("./stream/StreamHelper"),a=t("./stream/DataWorker"),l=t("./utf8"),c=t("./compressedObject"),h=t("./stream/GenericWorker");r.prototype={internalStream:function(m){var g=null,E="string";try{if(!m)throw new Error("No output type specified.");var p=(E=m.toLowerCase())==="string"||E==="text";E!=="binarystring"&&E!=="text"||(E="string"),g=this._decompressWorker();var v=!this._dataBinary;v&&!p&&(g=g.pipe(new l.Utf8EncodeWorker)),!v&&p&&(g=g.pipe(new l.Utf8DecodeWorker))}catch(I){(g=new h("error")).error(I)}return new o(g,E,"")},async:function(m,g){return this.internalStream(m).accumulate(g)},nodeStream:function(m,g){return this.internalStream(m||"nodebuffer").toNodejsStream(g)},_compressWorker:function(m,g){if(this._data instanceof c&&this._data.compression.magic===m.magic)return this._data.getCompressedWorker();var E=this._decompressWorker();return this._dataBinary||(E=E.pipe(new l.Utf8EncodeWorker)),c.createWorkerFrom(E,m,g)},_decompressWorker:function(){return this._data instanceof c?this._data.getContentWorker():this._data instanceof h?this._data:new a(this._data)}};for(var d=["asText","asBinary","asNodeBuffer","asUint8Array","asArrayBuffer"],u=function(){throw new Error("This method has been removed in JSZip 3.0, please check the upgrade guide.")},f=0;f<d.length;f++)r.prototype[d[f]]=u;i.exports=r},{"./compressedObject":2,"./stream/DataWorker":27,"./stream/GenericWorker":28,"./stream/StreamHelper":29,"./utf8":31}],36:[function(t,i,n){(function(r){var o,a,l=r.MutationObserver||r.WebKitMutationObserver;if(l){var c=0,h=new l(m),d=r.document.createTextNode("");h.observe(d,{characterData:!0}),o=function(){d.data=c=++c%2}}else if(r.setImmediate||r.MessageChannel===void 0)o="document"in r&&"onreadystatechange"in r.document.createElement("script")?function(){var g=r.document.createElement("script");g.onreadystatechange=function(){m(),g.onreadystatechange=null,g.parentNode.removeChild(g),g=null},r.document.documentElement.appendChild(g)}:function(){setTimeout(m,0)};else{var u=new r.MessageChannel;u.port1.onmessage=m,o=function(){u.port2.postMessage(0)}}var f=[];function m(){var g,E;a=!0;for(var p=f.length;p;){for(E=f,f=[],g=-1;++g<p;)E[g]();p=f.length}a=!1}i.exports=function(g){f.push(g)!==1||a||o()}}).call(this,typeof fh<"u"?fh:typeof self<"u"?self:typeof window<"u"?window:{})},{}],37:[function(t,i,n){var r=t("immediate");function o(){}var a={},l=["REJECTED"],c=["FULFILLED"],h=["PENDING"];function d(p){if(typeof p!="function")throw new TypeError("resolver must be a function");this.state=h,this.queue=[],this.outcome=void 0,p!==o&&g(this,p)}function u(p,v,I){this.promise=p,typeof v=="function"&&(this.onFulfilled=v,this.callFulfilled=this.otherCallFulfilled),typeof I=="function"&&(this.onRejected=I,this.callRejected=this.otherCallRejected)}function f(p,v,I){r(function(){var _;try{_=v(I)}catch(b){return a.reject(p,b)}_===p?a.reject(p,new TypeError("Cannot resolve promise with itself")):a.resolve(p,_)})}function m(p){var v=p&&p.then;if(p&&(typeof p=="object"||typeof p=="function")&&typeof v=="function")return function(){v.apply(p,arguments)}}function g(p,v){var I=!1;function _(w){I||(I=!0,a.reject(p,w))}function b(w){I||(I=!0,a.resolve(p,w))}var T=E(function(){v(b,_)});T.status==="error"&&_(T.value)}function E(p,v){var I={};try{I.value=p(v),I.status="success"}catch(_){I.status="error",I.value=_}return I}(i.exports=d).prototype.finally=function(p){if(typeof p!="function")return this;var v=this.constructor;return this.then(function(I){return v.resolve(p()).then(function(){return I})},function(I){return v.resolve(p()).then(function(){throw I})})},d.prototype.catch=function(p){return this.then(null,p)},d.prototype.then=function(p,v){if(typeof p!="function"&&this.state===c||typeof v!="function"&&this.state===l)return this;var I=new this.constructor(o);return this.state!==h?f(I,this.state===c?p:v,this.outcome):this.queue.push(new u(I,p,v)),I},u.prototype.callFulfilled=function(p){a.resolve(this.promise,p)},u.prototype.otherCallFulfilled=function(p){f(this.promise,this.onFulfilled,p)},u.prototype.callRejected=function(p){a.reject(this.promise,p)},u.prototype.otherCallRejected=function(p){f(this.promise,this.onRejected,p)},a.resolve=function(p,v){var I=E(m,v);if(I.status==="error")return a.reject(p,I.value);var _=I.value;if(_)g(p,_);else{p.state=c,p.outcome=v;for(var b=-1,T=p.queue.length;++b<T;)p.queue[b].callFulfilled(v)}return p},a.reject=function(p,v){p.state=l,p.outcome=v;for(var I=-1,_=p.queue.length;++I<_;)p.queue[I].callRejected(v);return p},d.resolve=function(p){return p instanceof this?p:a.resolve(new this(o),p)},d.reject=function(p){var v=new this(o);return a.reject(v,p)},d.all=function(p){var v=this;if(Object.prototype.toString.call(p)!=="[object Array]")return this.reject(new TypeError("must be an array"));var I=p.length,_=!1;if(!I)return this.resolve([]);for(var b=new Array(I),T=0,w=-1,A=new this(o);++w<I;)y(p[w],w);return A;function y(C,M){v.resolve(C).then(function(R){b[M]=R,++T!==I||_||(_=!0,a.resolve(A,b))},function(R){_||(_=!0,a.reject(A,R))})}},d.race=function(p){var v=this;if(Object.prototype.toString.call(p)!=="[object Array]")return this.reject(new TypeError("must be an array"));var I=p.length,_=!1;if(!I)return this.resolve([]);for(var b=-1,T=new this(o);++b<I;)w=p[b],v.resolve(w).then(function(A){_||(_=!0,a.resolve(T,A))},function(A){_||(_=!0,a.reject(T,A))});var w;return T}},{immediate:36}],38:[function(t,i,n){var r={};(0,t("./lib/utils/common").assign)(r,t("./lib/deflate"),t("./lib/inflate"),t("./lib/zlib/constants")),i.exports=r},{"./lib/deflate":39,"./lib/inflate":40,"./lib/utils/common":41,"./lib/zlib/constants":44}],39:[function(t,i,n){var r=t("./zlib/deflate"),o=t("./utils/common"),a=t("./utils/strings"),l=t("./zlib/messages"),c=t("./zlib/zstream"),h=Object.prototype.toString,d=0,u=-1,f=0,m=8;function g(p){if(!(this instanceof g))return new g(p);this.options=o.assign({level:u,method:m,chunkSize:16384,windowBits:15,memLevel:8,strategy:f,to:""},p||{});var v=this.options;v.raw&&0<v.windowBits?v.windowBits=-v.windowBits:v.gzip&&0<v.windowBits&&v.windowBits<16&&(v.windowBits+=16),this.err=0,this.msg="",this.ended=!1,this.chunks=[],this.strm=new c,this.strm.avail_out=0;var I=r.deflateInit2(this.strm,v.level,v.method,v.windowBits,v.memLevel,v.strategy);if(I!==d)throw new Error(l[I]);if(v.header&&r.deflateSetHeader(this.strm,v.header),v.dictionary){var _;if(_=typeof v.dictionary=="string"?a.string2buf(v.dictionary):h.call(v.dictionary)==="[object ArrayBuffer]"?new Uint8Array(v.dictionary):v.dictionary,(I=r.deflateSetDictionary(this.strm,_))!==d)throw new Error(l[I]);this._dict_set=!0}}function E(p,v){var I=new g(v);if(I.push(p,!0),I.err)throw I.msg||l[I.err];return I.result}g.prototype.push=function(p,v){var I,_,b=this.strm,T=this.options.chunkSize;if(this.ended)return!1;_=v===~~v?v:v===!0?4:0,typeof p=="string"?b.input=a.string2buf(p):h.call(p)==="[object ArrayBuffer]"?b.input=new Uint8Array(p):b.input=p,b.next_in=0,b.avail_in=b.input.length;do{if(b.avail_out===0&&(b.output=new o.Buf8(T),b.next_out=0,b.avail_out=T),(I=r.deflate(b,_))!==1&&I!==d)return this.onEnd(I),!(this.ended=!0);b.avail_out!==0&&(b.avail_in!==0||_!==4&&_!==2)||(this.options.to==="string"?this.onData(a.buf2binstring(o.shrinkBuf(b.output,b.next_out))):this.onData(o.shrinkBuf(b.output,b.next_out)))}while((0<b.avail_in||b.avail_out===0)&&I!==1);return _===4?(I=r.deflateEnd(this.strm),this.onEnd(I),this.ended=!0,I===d):_!==2||(this.onEnd(d),!(b.avail_out=0))},g.prototype.onData=function(p){this.chunks.push(p)},g.prototype.onEnd=function(p){p===d&&(this.options.to==="string"?this.result=this.chunks.join(""):this.result=o.flattenChunks(this.chunks)),this.chunks=[],this.err=p,this.msg=this.strm.msg},n.Deflate=g,n.deflate=E,n.deflateRaw=function(p,v){return(v=v||{}).raw=!0,E(p,v)},n.gzip=function(p,v){return(v=v||{}).gzip=!0,E(p,v)}},{"./utils/common":41,"./utils/strings":42,"./zlib/deflate":46,"./zlib/messages":51,"./zlib/zstream":53}],40:[function(t,i,n){var r=t("./zlib/inflate"),o=t("./utils/common"),a=t("./utils/strings"),l=t("./zlib/constants"),c=t("./zlib/messages"),h=t("./zlib/zstream"),d=t("./zlib/gzheader"),u=Object.prototype.toString;function f(g){if(!(this instanceof f))return new f(g);this.options=o.assign({chunkSize:16384,windowBits:0,to:""},g||{});var E=this.options;E.raw&&0<=E.windowBits&&E.windowBits<16&&(E.windowBits=-E.windowBits,E.windowBits===0&&(E.windowBits=-15)),!(0<=E.windowBits&&E.windowBits<16)||g&&g.windowBits||(E.windowBits+=32),15<E.windowBits&&E.windowBits<48&&!(15&E.windowBits)&&(E.windowBits|=15),this.err=0,this.msg="",this.ended=!1,this.chunks=[],this.strm=new h,this.strm.avail_out=0;var p=r.inflateInit2(this.strm,E.windowBits);if(p!==l.Z_OK)throw new Error(c[p]);this.header=new d,r.inflateGetHeader(this.strm,this.header)}function m(g,E){var p=new f(E);if(p.push(g,!0),p.err)throw p.msg||c[p.err];return p.result}f.prototype.push=function(g,E){var p,v,I,_,b,T,w=this.strm,A=this.options.chunkSize,y=this.options.dictionary,C=!1;if(this.ended)return!1;v=E===~~E?E:E===!0?l.Z_FINISH:l.Z_NO_FLUSH,typeof g=="string"?w.input=a.binstring2buf(g):u.call(g)==="[object ArrayBuffer]"?w.input=new Uint8Array(g):w.input=g,w.next_in=0,w.avail_in=w.input.length;do{if(w.avail_out===0&&(w.output=new o.Buf8(A),w.next_out=0,w.avail_out=A),(p=r.inflate(w,l.Z_NO_FLUSH))===l.Z_NEED_DICT&&y&&(T=typeof y=="string"?a.string2buf(y):u.call(y)==="[object ArrayBuffer]"?new Uint8Array(y):y,p=r.inflateSetDictionary(this.strm,T)),p===l.Z_BUF_ERROR&&C===!0&&(p=l.Z_OK,C=!1),p!==l.Z_STREAM_END&&p!==l.Z_OK)return this.onEnd(p),!(this.ended=!0);w.next_out&&(w.avail_out!==0&&p!==l.Z_STREAM_END&&(w.avail_in!==0||v!==l.Z_FINISH&&v!==l.Z_SYNC_FLUSH)||(this.options.to==="string"?(I=a.utf8border(w.output,w.next_out),_=w.next_out-I,b=a.buf2string(w.output,I),w.next_out=_,w.avail_out=A-_,_&&o.arraySet(w.output,w.output,I,_,0),this.onData(b)):this.onData(o.shrinkBuf(w.output,w.next_out)))),w.avail_in===0&&w.avail_out===0&&(C=!0)}while((0<w.avail_in||w.avail_out===0)&&p!==l.Z_STREAM_END);return p===l.Z_STREAM_END&&(v=l.Z_FINISH),v===l.Z_FINISH?(p=r.inflateEnd(this.strm),this.onEnd(p),this.ended=!0,p===l.Z_OK):v!==l.Z_SYNC_FLUSH||(this.onEnd(l.Z_OK),!(w.avail_out=0))},f.prototype.onData=function(g){this.chunks.push(g)},f.prototype.onEnd=function(g){g===l.Z_OK&&(this.options.to==="string"?this.result=this.chunks.join(""):this.result=o.flattenChunks(this.chunks)),this.chunks=[],this.err=g,this.msg=this.strm.msg},n.Inflate=f,n.inflate=m,n.inflateRaw=function(g,E){return(E=E||{}).raw=!0,m(g,E)},n.ungzip=m},{"./utils/common":41,"./utils/strings":42,"./zlib/constants":44,"./zlib/gzheader":47,"./zlib/inflate":49,"./zlib/messages":51,"./zlib/zstream":53}],41:[function(t,i,n){var r=typeof Uint8Array<"u"&&typeof Uint16Array<"u"&&typeof Int32Array<"u";n.assign=function(l){for(var c=Array.prototype.slice.call(arguments,1);c.length;){var h=c.shift();if(h){if(typeof h!="object")throw new TypeError(h+"must be non-object");for(var d in h)h.hasOwnProperty(d)&&(l[d]=h[d])}}return l},n.shrinkBuf=function(l,c){return l.length===c?l:l.subarray?l.subarray(0,c):(l.length=c,l)};var o={arraySet:function(l,c,h,d,u){if(c.subarray&&l.subarray)l.set(c.subarray(h,h+d),u);else for(var f=0;f<d;f++)l[u+f]=c[h+f]},flattenChunks:function(l){var c,h,d,u,f,m;for(c=d=0,h=l.length;c<h;c++)d+=l[c].length;for(m=new Uint8Array(d),c=u=0,h=l.length;c<h;c++)f=l[c],m.set(f,u),u+=f.length;return m}},a={arraySet:function(l,c,h,d,u){for(var f=0;f<d;f++)l[u+f]=c[h+f]},flattenChunks:function(l){return[].concat.apply([],l)}};n.setTyped=function(l){l?(n.Buf8=Uint8Array,n.Buf16=Uint16Array,n.Buf32=Int32Array,n.assign(n,o)):(n.Buf8=Array,n.Buf16=Array,n.Buf32=Array,n.assign(n,a))},n.setTyped(r)},{}],42:[function(t,i,n){var r=t("./common"),o=!0,a=!0;try{String.fromCharCode.apply(null,[0])}catch{o=!1}try{String.fromCharCode.apply(null,new Uint8Array(1))}catch{a=!1}for(var l=new r.Buf8(256),c=0;c<256;c++)l[c]=252<=c?6:248<=c?5:240<=c?4:224<=c?3:192<=c?2:1;function h(d,u){if(u<65537&&(d.subarray&&a||!d.subarray&&o))return String.fromCharCode.apply(null,r.shrinkBuf(d,u));for(var f="",m=0;m<u;m++)f+=String.fromCharCode(d[m]);return f}l[254]=l[254]=1,n.string2buf=function(d){var u,f,m,g,E,p=d.length,v=0;for(g=0;g<p;g++)(64512&(f=d.charCodeAt(g)))==55296&&g+1<p&&(64512&(m=d.charCodeAt(g+1)))==56320&&(f=65536+(f-55296<<10)+(m-56320),g++),v+=f<128?1:f<2048?2:f<65536?3:4;for(u=new r.Buf8(v),g=E=0;E<v;g++)(64512&(f=d.charCodeAt(g)))==55296&&g+1<p&&(64512&(m=d.charCodeAt(g+1)))==56320&&(f=65536+(f-55296<<10)+(m-56320),g++),f<128?u[E++]=f:(f<2048?u[E++]=192|f>>>6:(f<65536?u[E++]=224|f>>>12:(u[E++]=240|f>>>18,u[E++]=128|f>>>12&63),u[E++]=128|f>>>6&63),u[E++]=128|63&f);return u},n.buf2binstring=function(d){return h(d,d.length)},n.binstring2buf=function(d){for(var u=new r.Buf8(d.length),f=0,m=u.length;f<m;f++)u[f]=d.charCodeAt(f);return u},n.buf2string=function(d,u){var f,m,g,E,p=u||d.length,v=new Array(2*p);for(f=m=0;f<p;)if((g=d[f++])<128)v[m++]=g;else if(4<(E=l[g]))v[m++]=65533,f+=E-1;else{for(g&=E===2?31:E===3?15:7;1<E&&f<p;)g=g<<6|63&d[f++],E--;1<E?v[m++]=65533:g<65536?v[m++]=g:(g-=65536,v[m++]=55296|g>>10&1023,v[m++]=56320|1023&g)}return h(v,m)},n.utf8border=function(d,u){var f;for((u=u||d.length)>d.length&&(u=d.length),f=u-1;0<=f&&(192&d[f])==128;)f--;return f<0||f===0?u:f+l[d[f]]>u?f:u}},{"./common":41}],43:[function(t,i,n){i.exports=function(r,o,a,l){for(var c=65535&r|0,h=r>>>16&65535|0,d=0;a!==0;){for(a-=d=2e3<a?2e3:a;h=h+(c=c+o[l++]|0)|0,--d;);c%=65521,h%=65521}return c|h<<16|0}},{}],44:[function(t,i,n){i.exports={Z_NO_FLUSH:0,Z_PARTIAL_FLUSH:1,Z_SYNC_FLUSH:2,Z_FULL_FLUSH:3,Z_FINISH:4,Z_BLOCK:5,Z_TREES:6,Z_OK:0,Z_STREAM_END:1,Z_NEED_DICT:2,Z_ERRNO:-1,Z_STREAM_ERROR:-2,Z_DATA_ERROR:-3,Z_BUF_ERROR:-5,Z_NO_COMPRESSION:0,Z_BEST_SPEED:1,Z_BEST_COMPRESSION:9,Z_DEFAULT_COMPRESSION:-1,Z_FILTERED:1,Z_HUFFMAN_ONLY:2,Z_RLE:3,Z_FIXED:4,Z_DEFAULT_STRATEGY:0,Z_BINARY:0,Z_TEXT:1,Z_UNKNOWN:2,Z_DEFLATED:8}},{}],45:[function(t,i,n){var r=function(){for(var o,a=[],l=0;l<256;l++){o=l;for(var c=0;c<8;c++)o=1&o?3988292384^o>>>1:o>>>1;a[l]=o}return a}();i.exports=function(o,a,l,c){var h=r,d=c+l;o^=-1;for(var u=c;u<d;u++)o=o>>>8^h[255&(o^a[u])];return-1^o}},{}],46:[function(t,i,n){var r,o=t("../utils/common"),a=t("./trees"),l=t("./adler32"),c=t("./crc32"),h=t("./messages"),d=0,u=4,f=0,m=-2,g=-1,E=4,p=2,v=8,I=9,_=286,b=30,T=19,w=2*_+1,A=15,y=3,C=258,M=C+y+1,R=42,L=113,S=1,U=2,z=3,k=4;function H(x,ae){return x.msg=h[ae],ae}function Y(x){return(x<<1)-(4<x?9:0)}function re(x){for(var ae=x.length;0<=--ae;)x[ae]=0}function j(x){var ae=x.state,Q=ae.pending;Q>x.avail_out&&(Q=x.avail_out),Q!==0&&(o.arraySet(x.output,ae.pending_buf,ae.pending_out,Q,x.next_out),x.next_out+=Q,ae.pending_out+=Q,x.total_out+=Q,x.avail_out-=Q,ae.pending-=Q,ae.pending===0&&(ae.pending_out=0))}function X(x,ae){a._tr_flush_block(x,0<=x.block_start?x.block_start:-1,x.strstart-x.block_start,ae),x.block_start=x.strstart,j(x.strm)}function ue(x,ae){x.pending_buf[x.pending++]=ae}function Z(x,ae){x.pending_buf[x.pending++]=ae>>>8&255,x.pending_buf[x.pending++]=255&ae}function K(x,ae){var Q,G,B=x.max_chain_length,q=x.strstart,se=x.prev_length,N=x.nice_match,O=x.strstart>x.w_size-M?x.strstart-(x.w_size-M):0,W=x.window,te=x.w_mask,$=x.prev,ne=x.strstart+C,we=W[q+se-1],be=W[q+se];x.prev_length>=x.good_match&&(B>>=2),N>x.lookahead&&(N=x.lookahead);do if(W[(Q=ae)+se]===be&&W[Q+se-1]===we&&W[Q]===W[q]&&W[++Q]===W[q+1]){q+=2,Q++;do;while(W[++q]===W[++Q]&&W[++q]===W[++Q]&&W[++q]===W[++Q]&&W[++q]===W[++Q]&&W[++q]===W[++Q]&&W[++q]===W[++Q]&&W[++q]===W[++Q]&&W[++q]===W[++Q]&&q<ne);if(G=C-(ne-q),q=ne-C,se<G){if(x.match_start=ae,N<=(se=G))break;we=W[q+se-1],be=W[q+se]}}while((ae=$[ae&te])>O&&--B!=0);return se<=x.lookahead?se:x.lookahead}function Ie(x){var ae,Q,G,B,q,se,N,O,W,te,$=x.w_size;do{if(B=x.window_size-x.lookahead-x.strstart,x.strstart>=$+($-M)){for(o.arraySet(x.window,x.window,$,$,0),x.match_start-=$,x.strstart-=$,x.block_start-=$,ae=Q=x.hash_size;G=x.head[--ae],x.head[ae]=$<=G?G-$:0,--Q;);for(ae=Q=$;G=x.prev[--ae],x.prev[ae]=$<=G?G-$:0,--Q;);B+=$}if(x.strm.avail_in===0)break;if(se=x.strm,N=x.window,O=x.strstart+x.lookahead,W=B,te=void 0,te=se.avail_in,W<te&&(te=W),Q=te===0?0:(se.avail_in-=te,o.arraySet(N,se.input,se.next_in,te,O),se.state.wrap===1?se.adler=l(se.adler,N,te,O):se.state.wrap===2&&(se.adler=c(se.adler,N,te,O)),se.next_in+=te,se.total_in+=te,te),x.lookahead+=Q,x.lookahead+x.insert>=y)for(q=x.strstart-x.insert,x.ins_h=x.window[q],x.ins_h=(x.ins_h<<x.hash_shift^x.window[q+1])&x.hash_mask;x.insert&&(x.ins_h=(x.ins_h<<x.hash_shift^x.window[q+y-1])&x.hash_mask,x.prev[q&x.w_mask]=x.head[x.ins_h],x.head[x.ins_h]=q,q++,x.insert--,!(x.lookahead+x.insert<y)););}while(x.lookahead<M&&x.strm.avail_in!==0)}function me(x,ae){for(var Q,G;;){if(x.lookahead<M){if(Ie(x),x.lookahead<M&&ae===d)return S;if(x.lookahead===0)break}if(Q=0,x.lookahead>=y&&(x.ins_h=(x.ins_h<<x.hash_shift^x.window[x.strstart+y-1])&x.hash_mask,Q=x.prev[x.strstart&x.w_mask]=x.head[x.ins_h],x.head[x.ins_h]=x.strstart),Q!==0&&x.strstart-Q<=x.w_size-M&&(x.match_length=K(x,Q)),x.match_length>=y)if(G=a._tr_tally(x,x.strstart-x.match_start,x.match_length-y),x.lookahead-=x.match_length,x.match_length<=x.max_lazy_match&&x.lookahead>=y){for(x.match_length--;x.strstart++,x.ins_h=(x.ins_h<<x.hash_shift^x.window[x.strstart+y-1])&x.hash_mask,Q=x.prev[x.strstart&x.w_mask]=x.head[x.ins_h],x.head[x.ins_h]=x.strstart,--x.match_length!=0;);x.strstart++}else x.strstart+=x.match_length,x.match_length=0,x.ins_h=x.window[x.strstart],x.ins_h=(x.ins_h<<x.hash_shift^x.window[x.strstart+1])&x.hash_mask;else G=a._tr_tally(x,0,x.window[x.strstart]),x.lookahead--,x.strstart++;if(G&&(X(x,!1),x.strm.avail_out===0))return S}return x.insert=x.strstart<y-1?x.strstart:y-1,ae===u?(X(x,!0),x.strm.avail_out===0?z:k):x.last_lit&&(X(x,!1),x.strm.avail_out===0)?S:U}function ce(x,ae){for(var Q,G,B;;){if(x.lookahead<M){if(Ie(x),x.lookahead<M&&ae===d)return S;if(x.lookahead===0)break}if(Q=0,x.lookahead>=y&&(x.ins_h=(x.ins_h<<x.hash_shift^x.window[x.strstart+y-1])&x.hash_mask,Q=x.prev[x.strstart&x.w_mask]=x.head[x.ins_h],x.head[x.ins_h]=x.strstart),x.prev_length=x.match_length,x.prev_match=x.match_start,x.match_length=y-1,Q!==0&&x.prev_length<x.max_lazy_match&&x.strstart-Q<=x.w_size-M&&(x.match_length=K(x,Q),x.match_length<=5&&(x.strategy===1||x.match_length===y&&4096<x.strstart-x.match_start)&&(x.match_length=y-1)),x.prev_length>=y&&x.match_length<=x.prev_length){for(B=x.strstart+x.lookahead-y,G=a._tr_tally(x,x.strstart-1-x.prev_match,x.prev_length-y),x.lookahead-=x.prev_length-1,x.prev_length-=2;++x.strstart<=B&&(x.ins_h=(x.ins_h<<x.hash_shift^x.window[x.strstart+y-1])&x.hash_mask,Q=x.prev[x.strstart&x.w_mask]=x.head[x.ins_h],x.head[x.ins_h]=x.strstart),--x.prev_length!=0;);if(x.match_available=0,x.match_length=y-1,x.strstart++,G&&(X(x,!1),x.strm.avail_out===0))return S}else if(x.match_available){if((G=a._tr_tally(x,0,x.window[x.strstart-1]))&&X(x,!1),x.strstart++,x.lookahead--,x.strm.avail_out===0)return S}else x.match_available=1,x.strstart++,x.lookahead--}return x.match_available&&(G=a._tr_tally(x,0,x.window[x.strstart-1]),x.match_available=0),x.insert=x.strstart<y-1?x.strstart:y-1,ae===u?(X(x,!0),x.strm.avail_out===0?z:k):x.last_lit&&(X(x,!1),x.strm.avail_out===0)?S:U}function ge(x,ae,Q,G,B){this.good_length=x,this.max_lazy=ae,this.nice_length=Q,this.max_chain=G,this.func=B}function Ee(){this.strm=null,this.status=0,this.pending_buf=null,this.pending_buf_size=0,this.pending_out=0,this.pending=0,this.wrap=0,this.gzhead=null,this.gzindex=0,this.method=v,this.last_flush=-1,this.w_size=0,this.w_bits=0,this.w_mask=0,this.window=null,this.window_size=0,this.prev=null,this.head=null,this.ins_h=0,this.hash_size=0,this.hash_bits=0,this.hash_mask=0,this.hash_shift=0,this.block_start=0,this.match_length=0,this.prev_match=0,this.match_available=0,this.strstart=0,this.match_start=0,this.lookahead=0,this.prev_length=0,this.max_chain_length=0,this.max_lazy_match=0,this.level=0,this.strategy=0,this.good_match=0,this.nice_match=0,this.dyn_ltree=new o.Buf16(2*w),this.dyn_dtree=new o.Buf16(2*(2*b+1)),this.bl_tree=new o.Buf16(2*(2*T+1)),re(this.dyn_ltree),re(this.dyn_dtree),re(this.bl_tree),this.l_desc=null,this.d_desc=null,this.bl_desc=null,this.bl_count=new o.Buf16(A+1),this.heap=new o.Buf16(2*_+1),re(this.heap),this.heap_len=0,this.heap_max=0,this.depth=new o.Buf16(2*_+1),re(this.depth),this.l_buf=0,this.lit_bufsize=0,this.last_lit=0,this.d_buf=0,this.opt_len=0,this.static_len=0,this.matches=0,this.insert=0,this.bi_buf=0,this.bi_valid=0}function Se(x){var ae;return x&&x.state?(x.total_in=x.total_out=0,x.data_type=p,(ae=x.state).pending=0,ae.pending_out=0,ae.wrap<0&&(ae.wrap=-ae.wrap),ae.status=ae.wrap?R:L,x.adler=ae.wrap===2?0:1,ae.last_flush=d,a._tr_init(ae),f):H(x,m)}function ke(x){var ae=Se(x);return ae===f&&function(Q){Q.window_size=2*Q.w_size,re(Q.head),Q.max_lazy_match=r[Q.level].max_lazy,Q.good_match=r[Q.level].good_length,Q.nice_match=r[Q.level].nice_length,Q.max_chain_length=r[Q.level].max_chain,Q.strstart=0,Q.block_start=0,Q.lookahead=0,Q.insert=0,Q.match_length=Q.prev_length=y-1,Q.match_available=0,Q.ins_h=0}(x.state),ae}function Ue(x,ae,Q,G,B,q){if(!x)return m;var se=1;if(ae===g&&(ae=6),G<0?(se=0,G=-G):15<G&&(se=2,G-=16),B<1||I<B||Q!==v||G<8||15<G||ae<0||9<ae||q<0||E<q)return H(x,m);G===8&&(G=9);var N=new Ee;return(x.state=N).strm=x,N.wrap=se,N.gzhead=null,N.w_bits=G,N.w_size=1<<N.w_bits,N.w_mask=N.w_size-1,N.hash_bits=B+7,N.hash_size=1<<N.hash_bits,N.hash_mask=N.hash_size-1,N.hash_shift=~~((N.hash_bits+y-1)/y),N.window=new o.Buf8(2*N.w_size),N.head=new o.Buf16(N.hash_size),N.prev=new o.Buf16(N.w_size),N.lit_bufsize=1<<B+6,N.pending_buf_size=4*N.lit_bufsize,N.pending_buf=new o.Buf8(N.pending_buf_size),N.d_buf=1*N.lit_bufsize,N.l_buf=3*N.lit_bufsize,N.level=ae,N.strategy=q,N.method=Q,ke(x)}r=[new ge(0,0,0,0,function(x,ae){var Q=65535;for(Q>x.pending_buf_size-5&&(Q=x.pending_buf_size-5);;){if(x.lookahead<=1){if(Ie(x),x.lookahead===0&&ae===d)return S;if(x.lookahead===0)break}x.strstart+=x.lookahead,x.lookahead=0;var G=x.block_start+Q;if((x.strstart===0||x.strstart>=G)&&(x.lookahead=x.strstart-G,x.strstart=G,X(x,!1),x.strm.avail_out===0)||x.strstart-x.block_start>=x.w_size-M&&(X(x,!1),x.strm.avail_out===0))return S}return x.insert=0,ae===u?(X(x,!0),x.strm.avail_out===0?z:k):(x.strstart>x.block_start&&(X(x,!1),x.strm.avail_out),S)}),new ge(4,4,8,4,me),new ge(4,5,16,8,me),new ge(4,6,32,32,me),new ge(4,4,16,16,ce),new ge(8,16,32,32,ce),new ge(8,16,128,128,ce),new ge(8,32,128,256,ce),new ge(32,128,258,1024,ce),new ge(32,258,258,4096,ce)],n.deflateInit=function(x,ae){return Ue(x,ae,v,15,8,0)},n.deflateInit2=Ue,n.deflateReset=ke,n.deflateResetKeep=Se,n.deflateSetHeader=function(x,ae){return x&&x.state?x.state.wrap!==2?m:(x.state.gzhead=ae,f):m},n.deflate=function(x,ae){var Q,G,B,q;if(!x||!x.state||5<ae||ae<0)return x?H(x,m):m;if(G=x.state,!x.output||!x.input&&x.avail_in!==0||G.status===666&&ae!==u)return H(x,x.avail_out===0?-5:m);if(G.strm=x,Q=G.last_flush,G.last_flush=ae,G.status===R)if(G.wrap===2)x.adler=0,ue(G,31),ue(G,139),ue(G,8),G.gzhead?(ue(G,(G.gzhead.text?1:0)+(G.gzhead.hcrc?2:0)+(G.gzhead.extra?4:0)+(G.gzhead.name?8:0)+(G.gzhead.comment?16:0)),ue(G,255&G.gzhead.time),ue(G,G.gzhead.time>>8&255),ue(G,G.gzhead.time>>16&255),ue(G,G.gzhead.time>>24&255),ue(G,G.level===9?2:2<=G.strategy||G.level<2?4:0),ue(G,255&G.gzhead.os),G.gzhead.extra&&G.gzhead.extra.length&&(ue(G,255&G.gzhead.extra.length),ue(G,G.gzhead.extra.length>>8&255)),G.gzhead.hcrc&&(x.adler=c(x.adler,G.pending_buf,G.pending,0)),G.gzindex=0,G.status=69):(ue(G,0),ue(G,0),ue(G,0),ue(G,0),ue(G,0),ue(G,G.level===9?2:2<=G.strategy||G.level<2?4:0),ue(G,3),G.status=L);else{var se=v+(G.w_bits-8<<4)<<8;se|=(2<=G.strategy||G.level<2?0:G.level<6?1:G.level===6?2:3)<<6,G.strstart!==0&&(se|=32),se+=31-se%31,G.status=L,Z(G,se),G.strstart!==0&&(Z(G,x.adler>>>16),Z(G,65535&x.adler)),x.adler=1}if(G.status===69)if(G.gzhead.extra){for(B=G.pending;G.gzindex<(65535&G.gzhead.extra.length)&&(G.pending!==G.pending_buf_size||(G.gzhead.hcrc&&G.pending>B&&(x.adler=c(x.adler,G.pending_buf,G.pending-B,B)),j(x),B=G.pending,G.pending!==G.pending_buf_size));)ue(G,255&G.gzhead.extra[G.gzindex]),G.gzindex++;G.gzhead.hcrc&&G.pending>B&&(x.adler=c(x.adler,G.pending_buf,G.pending-B,B)),G.gzindex===G.gzhead.extra.length&&(G.gzindex=0,G.status=73)}else G.status=73;if(G.status===73)if(G.gzhead.name){B=G.pending;do{if(G.pending===G.pending_buf_size&&(G.gzhead.hcrc&&G.pending>B&&(x.adler=c(x.adler,G.pending_buf,G.pending-B,B)),j(x),B=G.pending,G.pending===G.pending_buf_size)){q=1;break}q=G.gzindex<G.gzhead.name.length?255&G.gzhead.name.charCodeAt(G.gzindex++):0,ue(G,q)}while(q!==0);G.gzhead.hcrc&&G.pending>B&&(x.adler=c(x.adler,G.pending_buf,G.pending-B,B)),q===0&&(G.gzindex=0,G.status=91)}else G.status=91;if(G.status===91)if(G.gzhead.comment){B=G.pending;do{if(G.pending===G.pending_buf_size&&(G.gzhead.hcrc&&G.pending>B&&(x.adler=c(x.adler,G.pending_buf,G.pending-B,B)),j(x),B=G.pending,G.pending===G.pending_buf_size)){q=1;break}q=G.gzindex<G.gzhead.comment.length?255&G.gzhead.comment.charCodeAt(G.gzindex++):0,ue(G,q)}while(q!==0);G.gzhead.hcrc&&G.pending>B&&(x.adler=c(x.adler,G.pending_buf,G.pending-B,B)),q===0&&(G.status=103)}else G.status=103;if(G.status===103&&(G.gzhead.hcrc?(G.pending+2>G.pending_buf_size&&j(x),G.pending+2<=G.pending_buf_size&&(ue(G,255&x.adler),ue(G,x.adler>>8&255),x.adler=0,G.status=L)):G.status=L),G.pending!==0){if(j(x),x.avail_out===0)return G.last_flush=-1,f}else if(x.avail_in===0&&Y(ae)<=Y(Q)&&ae!==u)return H(x,-5);if(G.status===666&&x.avail_in!==0)return H(x,-5);if(x.avail_in!==0||G.lookahead!==0||ae!==d&&G.status!==666){var N=G.strategy===2?function(O,W){for(var te;;){if(O.lookahead===0&&(Ie(O),O.lookahead===0)){if(W===d)return S;break}if(O.match_length=0,te=a._tr_tally(O,0,O.window[O.strstart]),O.lookahead--,O.strstart++,te&&(X(O,!1),O.strm.avail_out===0))return S}return O.insert=0,W===u?(X(O,!0),O.strm.avail_out===0?z:k):O.last_lit&&(X(O,!1),O.strm.avail_out===0)?S:U}(G,ae):G.strategy===3?function(O,W){for(var te,$,ne,we,be=O.window;;){if(O.lookahead<=C){if(Ie(O),O.lookahead<=C&&W===d)return S;if(O.lookahead===0)break}if(O.match_length=0,O.lookahead>=y&&0<O.strstart&&($=be[ne=O.strstart-1])===be[++ne]&&$===be[++ne]&&$===be[++ne]){we=O.strstart+C;do;while($===be[++ne]&&$===be[++ne]&&$===be[++ne]&&$===be[++ne]&&$===be[++ne]&&$===be[++ne]&&$===be[++ne]&&$===be[++ne]&&ne<we);O.match_length=C-(we-ne),O.match_length>O.lookahead&&(O.match_length=O.lookahead)}if(O.match_length>=y?(te=a._tr_tally(O,1,O.match_length-y),O.lookahead-=O.match_length,O.strstart+=O.match_length,O.match_length=0):(te=a._tr_tally(O,0,O.window[O.strstart]),O.lookahead--,O.strstart++),te&&(X(O,!1),O.strm.avail_out===0))return S}return O.insert=0,W===u?(X(O,!0),O.strm.avail_out===0?z:k):O.last_lit&&(X(O,!1),O.strm.avail_out===0)?S:U}(G,ae):r[G.level].func(G,ae);if(N!==z&&N!==k||(G.status=666),N===S||N===z)return x.avail_out===0&&(G.last_flush=-1),f;if(N===U&&(ae===1?a._tr_align(G):ae!==5&&(a._tr_stored_block(G,0,0,!1),ae===3&&(re(G.head),G.lookahead===0&&(G.strstart=0,G.block_start=0,G.insert=0))),j(x),x.avail_out===0))return G.last_flush=-1,f}return ae!==u?f:G.wrap<=0?1:(G.wrap===2?(ue(G,255&x.adler),ue(G,x.adler>>8&255),ue(G,x.adler>>16&255),ue(G,x.adler>>24&255),ue(G,255&x.total_in),ue(G,x.total_in>>8&255),ue(G,x.total_in>>16&255),ue(G,x.total_in>>24&255)):(Z(G,x.adler>>>16),Z(G,65535&x.adler)),j(x),0<G.wrap&&(G.wrap=-G.wrap),G.pending!==0?f:1)},n.deflateEnd=function(x){var ae;return x&&x.state?(ae=x.state.status)!==R&&ae!==69&&ae!==73&&ae!==91&&ae!==103&&ae!==L&&ae!==666?H(x,m):(x.state=null,ae===L?H(x,-3):f):m},n.deflateSetDictionary=function(x,ae){var Q,G,B,q,se,N,O,W,te=ae.length;if(!x||!x.state||(q=(Q=x.state).wrap)===2||q===1&&Q.status!==R||Q.lookahead)return m;for(q===1&&(x.adler=l(x.adler,ae,te,0)),Q.wrap=0,te>=Q.w_size&&(q===0&&(re(Q.head),Q.strstart=0,Q.block_start=0,Q.insert=0),W=new o.Buf8(Q.w_size),o.arraySet(W,ae,te-Q.w_size,Q.w_size,0),ae=W,te=Q.w_size),se=x.avail_in,N=x.next_in,O=x.input,x.avail_in=te,x.next_in=0,x.input=ae,Ie(Q);Q.lookahead>=y;){for(G=Q.strstart,B=Q.lookahead-(y-1);Q.ins_h=(Q.ins_h<<Q.hash_shift^Q.window[G+y-1])&Q.hash_mask,Q.prev[G&Q.w_mask]=Q.head[Q.ins_h],Q.head[Q.ins_h]=G,G++,--B;);Q.strstart=G,Q.lookahead=y-1,Ie(Q)}return Q.strstart+=Q.lookahead,Q.block_start=Q.strstart,Q.insert=Q.lookahead,Q.lookahead=0,Q.match_length=Q.prev_length=y-1,Q.match_available=0,x.next_in=N,x.input=O,x.avail_in=se,Q.wrap=q,f},n.deflateInfo="pako deflate (from Nodeca project)"},{"../utils/common":41,"./adler32":43,"./crc32":45,"./messages":51,"./trees":52}],47:[function(t,i,n){i.exports=function(){this.text=0,this.time=0,this.xflags=0,this.os=0,this.extra=null,this.extra_len=0,this.name="",this.comment="",this.hcrc=0,this.done=!1}},{}],48:[function(t,i,n){i.exports=function(r,o){var a,l,c,h,d,u,f,m,g,E,p,v,I,_,b,T,w,A,y,C,M,R,L,S,U;a=r.state,l=r.next_in,S=r.input,c=l+(r.avail_in-5),h=r.next_out,U=r.output,d=h-(o-r.avail_out),u=h+(r.avail_out-257),f=a.dmax,m=a.wsize,g=a.whave,E=a.wnext,p=a.window,v=a.hold,I=a.bits,_=a.lencode,b=a.distcode,T=(1<<a.lenbits)-1,w=(1<<a.distbits)-1;e:do{I<15&&(v+=S[l++]<<I,I+=8,v+=S[l++]<<I,I+=8),A=_[v&T];t:for(;;){if(v>>>=y=A>>>24,I-=y,(y=A>>>16&255)===0)U[h++]=65535&A;else{if(!(16&y)){if(!(64&y)){A=_[(65535&A)+(v&(1<<y)-1)];continue t}if(32&y){a.mode=12;break e}r.msg="invalid literal/length code",a.mode=30;break e}C=65535&A,(y&=15)&&(I<y&&(v+=S[l++]<<I,I+=8),C+=v&(1<<y)-1,v>>>=y,I-=y),I<15&&(v+=S[l++]<<I,I+=8,v+=S[l++]<<I,I+=8),A=b[v&w];i:for(;;){if(v>>>=y=A>>>24,I-=y,!(16&(y=A>>>16&255))){if(!(64&y)){A=b[(65535&A)+(v&(1<<y)-1)];continue i}r.msg="invalid distance code",a.mode=30;break e}if(M=65535&A,I<(y&=15)&&(v+=S[l++]<<I,(I+=8)<y&&(v+=S[l++]<<I,I+=8)),f<(M+=v&(1<<y)-1)){r.msg="invalid distance too far back",a.mode=30;break e}if(v>>>=y,I-=y,(y=h-d)<M){if(g<(y=M-y)&&a.sane){r.msg="invalid distance too far back",a.mode=30;break e}if(L=p,(R=0)===E){if(R+=m-y,y<C){for(C-=y;U[h++]=p[R++],--y;);R=h-M,L=U}}else if(E<y){if(R+=m+E-y,(y-=E)<C){for(C-=y;U[h++]=p[R++],--y;);if(R=0,E<C){for(C-=y=E;U[h++]=p[R++],--y;);R=h-M,L=U}}}else if(R+=E-y,y<C){for(C-=y;U[h++]=p[R++],--y;);R=h-M,L=U}for(;2<C;)U[h++]=L[R++],U[h++]=L[R++],U[h++]=L[R++],C-=3;C&&(U[h++]=L[R++],1<C&&(U[h++]=L[R++]))}else{for(R=h-M;U[h++]=U[R++],U[h++]=U[R++],U[h++]=U[R++],2<(C-=3););C&&(U[h++]=U[R++],1<C&&(U[h++]=U[R++]))}break}}break}}while(l<c&&h<u);l-=C=I>>3,v&=(1<<(I-=C<<3))-1,r.next_in=l,r.next_out=h,r.avail_in=l<c?c-l+5:5-(l-c),r.avail_out=h<u?u-h+257:257-(h-u),a.hold=v,a.bits=I}},{}],49:[function(t,i,n){var r=t("../utils/common"),o=t("./adler32"),a=t("./crc32"),l=t("./inffast"),c=t("./inftrees"),h=1,d=2,u=0,f=-2,m=1,g=852,E=592;function p(R){return(R>>>24&255)+(R>>>8&65280)+((65280&R)<<8)+((255&R)<<24)}function v(){this.mode=0,this.last=!1,this.wrap=0,this.havedict=!1,this.flags=0,this.dmax=0,this.check=0,this.total=0,this.head=null,this.wbits=0,this.wsize=0,this.whave=0,this.wnext=0,this.window=null,this.hold=0,this.bits=0,this.length=0,this.offset=0,this.extra=0,this.lencode=null,this.distcode=null,this.lenbits=0,this.distbits=0,this.ncode=0,this.nlen=0,this.ndist=0,this.have=0,this.next=null,this.lens=new r.Buf16(320),this.work=new r.Buf16(288),this.lendyn=null,this.distdyn=null,this.sane=0,this.back=0,this.was=0}function I(R){var L;return R&&R.state?(L=R.state,R.total_in=R.total_out=L.total=0,R.msg="",L.wrap&&(R.adler=1&L.wrap),L.mode=m,L.last=0,L.havedict=0,L.dmax=32768,L.head=null,L.hold=0,L.bits=0,L.lencode=L.lendyn=new r.Buf32(g),L.distcode=L.distdyn=new r.Buf32(E),L.sane=1,L.back=-1,u):f}function _(R){var L;return R&&R.state?((L=R.state).wsize=0,L.whave=0,L.wnext=0,I(R)):f}function b(R,L){var S,U;return R&&R.state?(U=R.state,L<0?(S=0,L=-L):(S=1+(L>>4),L<48&&(L&=15)),L&&(L<8||15<L)?f:(U.window!==null&&U.wbits!==L&&(U.window=null),U.wrap=S,U.wbits=L,_(R))):f}function T(R,L){var S,U;return R?(U=new v,(R.state=U).window=null,(S=b(R,L))!==u&&(R.state=null),S):f}var w,A,y=!0;function C(R){if(y){var L;for(w=new r.Buf32(512),A=new r.Buf32(32),L=0;L<144;)R.lens[L++]=8;for(;L<256;)R.lens[L++]=9;for(;L<280;)R.lens[L++]=7;for(;L<288;)R.lens[L++]=8;for(c(h,R.lens,0,288,w,0,R.work,{bits:9}),L=0;L<32;)R.lens[L++]=5;c(d,R.lens,0,32,A,0,R.work,{bits:5}),y=!1}R.lencode=w,R.lenbits=9,R.distcode=A,R.distbits=5}function M(R,L,S,U){var z,k=R.state;return k.window===null&&(k.wsize=1<<k.wbits,k.wnext=0,k.whave=0,k.window=new r.Buf8(k.wsize)),U>=k.wsize?(r.arraySet(k.window,L,S-k.wsize,k.wsize,0),k.wnext=0,k.whave=k.wsize):(U<(z=k.wsize-k.wnext)&&(z=U),r.arraySet(k.window,L,S-U,z,k.wnext),(U-=z)?(r.arraySet(k.window,L,S-U,U,0),k.wnext=U,k.whave=k.wsize):(k.wnext+=z,k.wnext===k.wsize&&(k.wnext=0),k.whave<k.wsize&&(k.whave+=z))),0}n.inflateReset=_,n.inflateReset2=b,n.inflateResetKeep=I,n.inflateInit=function(R){return T(R,15)},n.inflateInit2=T,n.inflate=function(R,L){var S,U,z,k,H,Y,re,j,X,ue,Z,K,Ie,me,ce,ge,Ee,Se,ke,Ue,x,ae,Q,G,B=0,q=new r.Buf8(4),se=[16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15];if(!R||!R.state||!R.output||!R.input&&R.avail_in!==0)return f;(S=R.state).mode===12&&(S.mode=13),H=R.next_out,z=R.output,re=R.avail_out,k=R.next_in,U=R.input,Y=R.avail_in,j=S.hold,X=S.bits,ue=Y,Z=re,ae=u;e:for(;;)switch(S.mode){case m:if(S.wrap===0){S.mode=13;break}for(;X<16;){if(Y===0)break e;Y--,j+=U[k++]<<X,X+=8}if(2&S.wrap&&j===35615){q[S.check=0]=255&j,q[1]=j>>>8&255,S.check=a(S.check,q,2,0),X=j=0,S.mode=2;break}if(S.flags=0,S.head&&(S.head.done=!1),!(1&S.wrap)||(((255&j)<<8)+(j>>8))%31){R.msg="incorrect header check",S.mode=30;break}if((15&j)!=8){R.msg="unknown compression method",S.mode=30;break}if(X-=4,x=8+(15&(j>>>=4)),S.wbits===0)S.wbits=x;else if(x>S.wbits){R.msg="invalid window size",S.mode=30;break}S.dmax=1<<x,R.adler=S.check=1,S.mode=512&j?10:12,X=j=0;break;case 2:for(;X<16;){if(Y===0)break e;Y--,j+=U[k++]<<X,X+=8}if(S.flags=j,(255&S.flags)!=8){R.msg="unknown compression method",S.mode=30;break}if(57344&S.flags){R.msg="unknown header flags set",S.mode=30;break}S.head&&(S.head.text=j>>8&1),512&S.flags&&(q[0]=255&j,q[1]=j>>>8&255,S.check=a(S.check,q,2,0)),X=j=0,S.mode=3;case 3:for(;X<32;){if(Y===0)break e;Y--,j+=U[k++]<<X,X+=8}S.head&&(S.head.time=j),512&S.flags&&(q[0]=255&j,q[1]=j>>>8&255,q[2]=j>>>16&255,q[3]=j>>>24&255,S.check=a(S.check,q,4,0)),X=j=0,S.mode=4;case 4:for(;X<16;){if(Y===0)break e;Y--,j+=U[k++]<<X,X+=8}S.head&&(S.head.xflags=255&j,S.head.os=j>>8),512&S.flags&&(q[0]=255&j,q[1]=j>>>8&255,S.check=a(S.check,q,2,0)),X=j=0,S.mode=5;case 5:if(1024&S.flags){for(;X<16;){if(Y===0)break e;Y--,j+=U[k++]<<X,X+=8}S.length=j,S.head&&(S.head.extra_len=j),512&S.flags&&(q[0]=255&j,q[1]=j>>>8&255,S.check=a(S.check,q,2,0)),X=j=0}else S.head&&(S.head.extra=null);S.mode=6;case 6:if(1024&S.flags&&(Y<(K=S.length)&&(K=Y),K&&(S.head&&(x=S.head.extra_len-S.length,S.head.extra||(S.head.extra=new Array(S.head.extra_len)),r.arraySet(S.head.extra,U,k,K,x)),512&S.flags&&(S.check=a(S.check,U,K,k)),Y-=K,k+=K,S.length-=K),S.length))break e;S.length=0,S.mode=7;case 7:if(2048&S.flags){if(Y===0)break e;for(K=0;x=U[k+K++],S.head&&x&&S.length<65536&&(S.head.name+=String.fromCharCode(x)),x&&K<Y;);if(512&S.flags&&(S.check=a(S.check,U,K,k)),Y-=K,k+=K,x)break e}else S.head&&(S.head.name=null);S.length=0,S.mode=8;case 8:if(4096&S.flags){if(Y===0)break e;for(K=0;x=U[k+K++],S.head&&x&&S.length<65536&&(S.head.comment+=String.fromCharCode(x)),x&&K<Y;);if(512&S.flags&&(S.check=a(S.check,U,K,k)),Y-=K,k+=K,x)break e}else S.head&&(S.head.comment=null);S.mode=9;case 9:if(512&S.flags){for(;X<16;){if(Y===0)break e;Y--,j+=U[k++]<<X,X+=8}if(j!==(65535&S.check)){R.msg="header crc mismatch",S.mode=30;break}X=j=0}S.head&&(S.head.hcrc=S.flags>>9&1,S.head.done=!0),R.adler=S.check=0,S.mode=12;break;case 10:for(;X<32;){if(Y===0)break e;Y--,j+=U[k++]<<X,X+=8}R.adler=S.check=p(j),X=j=0,S.mode=11;case 11:if(S.havedict===0)return R.next_out=H,R.avail_out=re,R.next_in=k,R.avail_in=Y,S.hold=j,S.bits=X,2;R.adler=S.check=1,S.mode=12;case 12:if(L===5||L===6)break e;case 13:if(S.last){j>>>=7&X,X-=7&X,S.mode=27;break}for(;X<3;){if(Y===0)break e;Y--,j+=U[k++]<<X,X+=8}switch(S.last=1&j,X-=1,3&(j>>>=1)){case 0:S.mode=14;break;case 1:if(C(S),S.mode=20,L!==6)break;j>>>=2,X-=2;break e;case 2:S.mode=17;break;case 3:R.msg="invalid block type",S.mode=30}j>>>=2,X-=2;break;case 14:for(j>>>=7&X,X-=7&X;X<32;){if(Y===0)break e;Y--,j+=U[k++]<<X,X+=8}if((65535&j)!=(j>>>16^65535)){R.msg="invalid stored block lengths",S.mode=30;break}if(S.length=65535&j,X=j=0,S.mode=15,L===6)break e;case 15:S.mode=16;case 16:if(K=S.length){if(Y<K&&(K=Y),re<K&&(K=re),K===0)break e;r.arraySet(z,U,k,K,H),Y-=K,k+=K,re-=K,H+=K,S.length-=K;break}S.mode=12;break;case 17:for(;X<14;){if(Y===0)break e;Y--,j+=U[k++]<<X,X+=8}if(S.nlen=257+(31&j),j>>>=5,X-=5,S.ndist=1+(31&j),j>>>=5,X-=5,S.ncode=4+(15&j),j>>>=4,X-=4,286<S.nlen||30<S.ndist){R.msg="too many length or distance symbols",S.mode=30;break}S.have=0,S.mode=18;case 18:for(;S.have<S.ncode;){for(;X<3;){if(Y===0)break e;Y--,j+=U[k++]<<X,X+=8}S.lens[se[S.have++]]=7&j,j>>>=3,X-=3}for(;S.have<19;)S.lens[se[S.have++]]=0;if(S.lencode=S.lendyn,S.lenbits=7,Q={bits:S.lenbits},ae=c(0,S.lens,0,19,S.lencode,0,S.work,Q),S.lenbits=Q.bits,ae){R.msg="invalid code lengths set",S.mode=30;break}S.have=0,S.mode=19;case 19:for(;S.have<S.nlen+S.ndist;){for(;ge=(B=S.lencode[j&(1<<S.lenbits)-1])>>>16&255,Ee=65535&B,!((ce=B>>>24)<=X);){if(Y===0)break e;Y--,j+=U[k++]<<X,X+=8}if(Ee<16)j>>>=ce,X-=ce,S.lens[S.have++]=Ee;else{if(Ee===16){for(G=ce+2;X<G;){if(Y===0)break e;Y--,j+=U[k++]<<X,X+=8}if(j>>>=ce,X-=ce,S.have===0){R.msg="invalid bit length repeat",S.mode=30;break}x=S.lens[S.have-1],K=3+(3&j),j>>>=2,X-=2}else if(Ee===17){for(G=ce+3;X<G;){if(Y===0)break e;Y--,j+=U[k++]<<X,X+=8}X-=ce,x=0,K=3+(7&(j>>>=ce)),j>>>=3,X-=3}else{for(G=ce+7;X<G;){if(Y===0)break e;Y--,j+=U[k++]<<X,X+=8}X-=ce,x=0,K=11+(127&(j>>>=ce)),j>>>=7,X-=7}if(S.have+K>S.nlen+S.ndist){R.msg="invalid bit length repeat",S.mode=30;break}for(;K--;)S.lens[S.have++]=x}}if(S.mode===30)break;if(S.lens[256]===0){R.msg="invalid code -- missing end-of-block",S.mode=30;break}if(S.lenbits=9,Q={bits:S.lenbits},ae=c(h,S.lens,0,S.nlen,S.lencode,0,S.work,Q),S.lenbits=Q.bits,ae){R.msg="invalid literal/lengths set",S.mode=30;break}if(S.distbits=6,S.distcode=S.distdyn,Q={bits:S.distbits},ae=c(d,S.lens,S.nlen,S.ndist,S.distcode,0,S.work,Q),S.distbits=Q.bits,ae){R.msg="invalid distances set",S.mode=30;break}if(S.mode=20,L===6)break e;case 20:S.mode=21;case 21:if(6<=Y&&258<=re){R.next_out=H,R.avail_out=re,R.next_in=k,R.avail_in=Y,S.hold=j,S.bits=X,l(R,Z),H=R.next_out,z=R.output,re=R.avail_out,k=R.next_in,U=R.input,Y=R.avail_in,j=S.hold,X=S.bits,S.mode===12&&(S.back=-1);break}for(S.back=0;ge=(B=S.lencode[j&(1<<S.lenbits)-1])>>>16&255,Ee=65535&B,!((ce=B>>>24)<=X);){if(Y===0)break e;Y--,j+=U[k++]<<X,X+=8}if(ge&&!(240&ge)){for(Se=ce,ke=ge,Ue=Ee;ge=(B=S.lencode[Ue+((j&(1<<Se+ke)-1)>>Se)])>>>16&255,Ee=65535&B,!(Se+(ce=B>>>24)<=X);){if(Y===0)break e;Y--,j+=U[k++]<<X,X+=8}j>>>=Se,X-=Se,S.back+=Se}if(j>>>=ce,X-=ce,S.back+=ce,S.length=Ee,ge===0){S.mode=26;break}if(32&ge){S.back=-1,S.mode=12;break}if(64&ge){R.msg="invalid literal/length code",S.mode=30;break}S.extra=15&ge,S.mode=22;case 22:if(S.extra){for(G=S.extra;X<G;){if(Y===0)break e;Y--,j+=U[k++]<<X,X+=8}S.length+=j&(1<<S.extra)-1,j>>>=S.extra,X-=S.extra,S.back+=S.extra}S.was=S.length,S.mode=23;case 23:for(;ge=(B=S.distcode[j&(1<<S.distbits)-1])>>>16&255,Ee=65535&B,!((ce=B>>>24)<=X);){if(Y===0)break e;Y--,j+=U[k++]<<X,X+=8}if(!(240&ge)){for(Se=ce,ke=ge,Ue=Ee;ge=(B=S.distcode[Ue+((j&(1<<Se+ke)-1)>>Se)])>>>16&255,Ee=65535&B,!(Se+(ce=B>>>24)<=X);){if(Y===0)break e;Y--,j+=U[k++]<<X,X+=8}j>>>=Se,X-=Se,S.back+=Se}if(j>>>=ce,X-=ce,S.back+=ce,64&ge){R.msg="invalid distance code",S.mode=30;break}S.offset=Ee,S.extra=15&ge,S.mode=24;case 24:if(S.extra){for(G=S.extra;X<G;){if(Y===0)break e;Y--,j+=U[k++]<<X,X+=8}S.offset+=j&(1<<S.extra)-1,j>>>=S.extra,X-=S.extra,S.back+=S.extra}if(S.offset>S.dmax){R.msg="invalid distance too far back",S.mode=30;break}S.mode=25;case 25:if(re===0)break e;if(K=Z-re,S.offset>K){if((K=S.offset-K)>S.whave&&S.sane){R.msg="invalid distance too far back",S.mode=30;break}Ie=K>S.wnext?(K-=S.wnext,S.wsize-K):S.wnext-K,K>S.length&&(K=S.length),me=S.window}else me=z,Ie=H-S.offset,K=S.length;for(re<K&&(K=re),re-=K,S.length-=K;z[H++]=me[Ie++],--K;);S.length===0&&(S.mode=21);break;case 26:if(re===0)break e;z[H++]=S.length,re--,S.mode=21;break;case 27:if(S.wrap){for(;X<32;){if(Y===0)break e;Y--,j|=U[k++]<<X,X+=8}if(Z-=re,R.total_out+=Z,S.total+=Z,Z&&(R.adler=S.check=S.flags?a(S.check,z,Z,H-Z):o(S.check,z,Z,H-Z)),Z=re,(S.flags?j:p(j))!==S.check){R.msg="incorrect data check",S.mode=30;break}X=j=0}S.mode=28;case 28:if(S.wrap&&S.flags){for(;X<32;){if(Y===0)break e;Y--,j+=U[k++]<<X,X+=8}if(j!==(4294967295&S.total)){R.msg="incorrect length check",S.mode=30;break}X=j=0}S.mode=29;case 29:ae=1;break e;case 30:ae=-3;break e;case 31:return-4;case 32:default:return f}return R.next_out=H,R.avail_out=re,R.next_in=k,R.avail_in=Y,S.hold=j,S.bits=X,(S.wsize||Z!==R.avail_out&&S.mode<30&&(S.mode<27||L!==4))&&M(R,R.output,R.next_out,Z-R.avail_out)?(S.mode=31,-4):(ue-=R.avail_in,Z-=R.avail_out,R.total_in+=ue,R.total_out+=Z,S.total+=Z,S.wrap&&Z&&(R.adler=S.check=S.flags?a(S.check,z,Z,R.next_out-Z):o(S.check,z,Z,R.next_out-Z)),R.data_type=S.bits+(S.last?64:0)+(S.mode===12?128:0)+(S.mode===20||S.mode===15?256:0),(ue==0&&Z===0||L===4)&&ae===u&&(ae=-5),ae)},n.inflateEnd=function(R){if(!R||!R.state)return f;var L=R.state;return L.window&&(L.window=null),R.state=null,u},n.inflateGetHeader=function(R,L){var S;return R&&R.state&&2&(S=R.state).wrap?((S.head=L).done=!1,u):f},n.inflateSetDictionary=function(R,L){var S,U=L.length;return R&&R.state?(S=R.state).wrap!==0&&S.mode!==11?f:S.mode===11&&o(1,L,U,0)!==S.check?-3:M(R,L,U,U)?(S.mode=31,-4):(S.havedict=1,u):f},n.inflateInfo="pako inflate (from Nodeca project)"},{"../utils/common":41,"./adler32":43,"./crc32":45,"./inffast":48,"./inftrees":50}],50:[function(t,i,n){var r=t("../utils/common"),o=[3,4,5,6,7,8,9,10,11,13,15,17,19,23,27,31,35,43,51,59,67,83,99,115,131,163,195,227,258,0,0],a=[16,16,16,16,16,16,16,16,17,17,17,17,18,18,18,18,19,19,19,19,20,20,20,20,21,21,21,21,16,72,78],l=[1,2,3,4,5,7,9,13,17,25,33,49,65,97,129,193,257,385,513,769,1025,1537,2049,3073,4097,6145,8193,12289,16385,24577,0,0],c=[16,16,16,16,17,17,18,18,19,19,20,20,21,21,22,22,23,23,24,24,25,25,26,26,27,27,28,28,29,29,64,64];i.exports=function(h,d,u,f,m,g,E,p){var v,I,_,b,T,w,A,y,C,M=p.bits,R=0,L=0,S=0,U=0,z=0,k=0,H=0,Y=0,re=0,j=0,X=null,ue=0,Z=new r.Buf16(16),K=new r.Buf16(16),Ie=null,me=0;for(R=0;R<=15;R++)Z[R]=0;for(L=0;L<f;L++)Z[d[u+L]]++;for(z=M,U=15;1<=U&&Z[U]===0;U--);if(U<z&&(z=U),U===0)return m[g++]=20971520,m[g++]=20971520,p.bits=1,0;for(S=1;S<U&&Z[S]===0;S++);for(z<S&&(z=S),R=Y=1;R<=15;R++)if(Y<<=1,(Y-=Z[R])<0)return-1;if(0<Y&&(h===0||U!==1))return-1;for(K[1]=0,R=1;R<15;R++)K[R+1]=K[R]+Z[R];for(L=0;L<f;L++)d[u+L]!==0&&(E[K[d[u+L]]++]=L);if(w=h===0?(X=Ie=E,19):h===1?(X=o,ue-=257,Ie=a,me-=257,256):(X=l,Ie=c,-1),R=S,T=g,H=L=j=0,_=-1,b=(re=1<<(k=z))-1,h===1&&852<re||h===2&&592<re)return 1;for(;;){for(A=R-H,C=E[L]<w?(y=0,E[L]):E[L]>w?(y=Ie[me+E[L]],X[ue+E[L]]):(y=96,0),v=1<<R-H,S=I=1<<k;m[T+(j>>H)+(I-=v)]=A<<24|y<<16|C|0,I!==0;);for(v=1<<R-1;j&v;)v>>=1;if(v!==0?(j&=v-1,j+=v):j=0,L++,--Z[R]==0){if(R===U)break;R=d[u+E[L]]}if(z<R&&(j&b)!==_){for(H===0&&(H=z),T+=S,Y=1<<(k=R-H);k+H<U&&!((Y-=Z[k+H])<=0);)k++,Y<<=1;if(re+=1<<k,h===1&&852<re||h===2&&592<re)return 1;m[_=j&b]=z<<24|k<<16|T-g|0}}return j!==0&&(m[T+j]=R-H<<24|64<<16|0),p.bits=z,0}},{"../utils/common":41}],51:[function(t,i,n){i.exports={2:"need dictionary",1:"stream end",0:"","-1":"file error","-2":"stream error","-3":"data error","-4":"insufficient memory","-5":"buffer error","-6":"incompatible version"}},{}],52:[function(t,i,n){var r=t("../utils/common"),o=0,a=1;function l(B){for(var q=B.length;0<=--q;)B[q]=0}var c=0,h=29,d=256,u=d+1+h,f=30,m=19,g=2*u+1,E=15,p=16,v=7,I=256,_=16,b=17,T=18,w=[0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0],A=[0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13],y=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,3,7],C=[16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15],M=new Array(2*(u+2));l(M);var R=new Array(2*f);l(R);var L=new Array(512);l(L);var S=new Array(256);l(S);var U=new Array(h);l(U);var z,k,H,Y=new Array(f);function re(B,q,se,N,O){this.static_tree=B,this.extra_bits=q,this.extra_base=se,this.elems=N,this.max_length=O,this.has_stree=B&&B.length}function j(B,q){this.dyn_tree=B,this.max_code=0,this.stat_desc=q}function X(B){return B<256?L[B]:L[256+(B>>>7)]}function ue(B,q){B.pending_buf[B.pending++]=255&q,B.pending_buf[B.pending++]=q>>>8&255}function Z(B,q,se){B.bi_valid>p-se?(B.bi_buf|=q<<B.bi_valid&65535,ue(B,B.bi_buf),B.bi_buf=q>>p-B.bi_valid,B.bi_valid+=se-p):(B.bi_buf|=q<<B.bi_valid&65535,B.bi_valid+=se)}function K(B,q,se){Z(B,se[2*q],se[2*q+1])}function Ie(B,q){for(var se=0;se|=1&B,B>>>=1,se<<=1,0<--q;);return se>>>1}function me(B,q,se){var N,O,W=new Array(E+1),te=0;for(N=1;N<=E;N++)W[N]=te=te+se[N-1]<<1;for(O=0;O<=q;O++){var $=B[2*O+1];$!==0&&(B[2*O]=Ie(W[$]++,$))}}function ce(B){var q;for(q=0;q<u;q++)B.dyn_ltree[2*q]=0;for(q=0;q<f;q++)B.dyn_dtree[2*q]=0;for(q=0;q<m;q++)B.bl_tree[2*q]=0;B.dyn_ltree[2*I]=1,B.opt_len=B.static_len=0,B.last_lit=B.matches=0}function ge(B){8<B.bi_valid?ue(B,B.bi_buf):0<B.bi_valid&&(B.pending_buf[B.pending++]=B.bi_buf),B.bi_buf=0,B.bi_valid=0}function Ee(B,q,se,N){var O=2*q,W=2*se;return B[O]<B[W]||B[O]===B[W]&&N[q]<=N[se]}function Se(B,q,se){for(var N=B.heap[se],O=se<<1;O<=B.heap_len&&(O<B.heap_len&&Ee(q,B.heap[O+1],B.heap[O],B.depth)&&O++,!Ee(q,N,B.heap[O],B.depth));)B.heap[se]=B.heap[O],se=O,O<<=1;B.heap[se]=N}function ke(B,q,se){var N,O,W,te,$=0;if(B.last_lit!==0)for(;N=B.pending_buf[B.d_buf+2*$]<<8|B.pending_buf[B.d_buf+2*$+1],O=B.pending_buf[B.l_buf+$],$++,N===0?K(B,O,q):(K(B,(W=S[O])+d+1,q),(te=w[W])!==0&&Z(B,O-=U[W],te),K(B,W=X(--N),se),(te=A[W])!==0&&Z(B,N-=Y[W],te)),$<B.last_lit;);K(B,I,q)}function Ue(B,q){var se,N,O,W=q.dyn_tree,te=q.stat_desc.static_tree,$=q.stat_desc.has_stree,ne=q.stat_desc.elems,we=-1;for(B.heap_len=0,B.heap_max=g,se=0;se<ne;se++)W[2*se]!==0?(B.heap[++B.heap_len]=we=se,B.depth[se]=0):W[2*se+1]=0;for(;B.heap_len<2;)W[2*(O=B.heap[++B.heap_len]=we<2?++we:0)]=1,B.depth[O]=0,B.opt_len--,$&&(B.static_len-=te[2*O+1]);for(q.max_code=we,se=B.heap_len>>1;1<=se;se--)Se(B,W,se);for(O=ne;se=B.heap[1],B.heap[1]=B.heap[B.heap_len--],Se(B,W,1),N=B.heap[1],B.heap[--B.heap_max]=se,B.heap[--B.heap_max]=N,W[2*O]=W[2*se]+W[2*N],B.depth[O]=(B.depth[se]>=B.depth[N]?B.depth[se]:B.depth[N])+1,W[2*se+1]=W[2*N+1]=O,B.heap[1]=O++,Se(B,W,1),2<=B.heap_len;);B.heap[--B.heap_max]=B.heap[1],function(be,Ae){var rt,ye,Le,De,Ye,Be,Je=Ae.dyn_tree,et=Ae.max_code,_t=Ae.stat_desc.static_tree,J=Ae.stat_desc.has_stree,Me=Ae.stat_desc.extra_bits,de=Ae.stat_desc.extra_base,ve=Ae.stat_desc.max_length,Re=0;for(De=0;De<=E;De++)be.bl_count[De]=0;for(Je[2*be.heap[be.heap_max]+1]=0,rt=be.heap_max+1;rt<g;rt++)ve<(De=Je[2*Je[2*(ye=be.heap[rt])+1]+1]+1)&&(De=ve,Re++),Je[2*ye+1]=De,et<ye||(be.bl_count[De]++,Ye=0,de<=ye&&(Ye=Me[ye-de]),Be=Je[2*ye],be.opt_len+=Be*(De+Ye),J&&(be.static_len+=Be*(_t[2*ye+1]+Ye)));if(Re!==0){do{for(De=ve-1;be.bl_count[De]===0;)De--;be.bl_count[De]--,be.bl_count[De+1]+=2,be.bl_count[ve]--,Re-=2}while(0<Re);for(De=ve;De!==0;De--)for(ye=be.bl_count[De];ye!==0;)et<(Le=be.heap[--rt])||(Je[2*Le+1]!==De&&(be.opt_len+=(De-Je[2*Le+1])*Je[2*Le],Je[2*Le+1]=De),ye--)}}(B,q),me(W,we,B.bl_count)}function x(B,q,se){var N,O,W=-1,te=q[1],$=0,ne=7,we=4;for(te===0&&(ne=138,we=3),q[2*(se+1)+1]=65535,N=0;N<=se;N++)O=te,te=q[2*(N+1)+1],++$<ne&&O===te||($<we?B.bl_tree[2*O]+=$:O!==0?(O!==W&&B.bl_tree[2*O]++,B.bl_tree[2*_]++):$<=10?B.bl_tree[2*b]++:B.bl_tree[2*T]++,W=O,we=($=0)===te?(ne=138,3):O===te?(ne=6,3):(ne=7,4))}function ae(B,q,se){var N,O,W=-1,te=q[1],$=0,ne=7,we=4;for(te===0&&(ne=138,we=3),N=0;N<=se;N++)if(O=te,te=q[2*(N+1)+1],!(++$<ne&&O===te)){if($<we)for(;K(B,O,B.bl_tree),--$!=0;);else O!==0?(O!==W&&(K(B,O,B.bl_tree),$--),K(B,_,B.bl_tree),Z(B,$-3,2)):$<=10?(K(B,b,B.bl_tree),Z(B,$-3,3)):(K(B,T,B.bl_tree),Z(B,$-11,7));W=O,we=($=0)===te?(ne=138,3):O===te?(ne=6,3):(ne=7,4)}}l(Y);var Q=!1;function G(B,q,se,N){Z(B,(c<<1)+(N?1:0),3),function(O,W,te,$){ge(O),ue(O,te),ue(O,~te),r.arraySet(O.pending_buf,O.window,W,te,O.pending),O.pending+=te}(B,q,se)}n._tr_init=function(B){Q||(function(){var q,se,N,O,W,te=new Array(E+1);for(O=N=0;O<h-1;O++)for(U[O]=N,q=0;q<1<<w[O];q++)S[N++]=O;for(S[N-1]=O,O=W=0;O<16;O++)for(Y[O]=W,q=0;q<1<<A[O];q++)L[W++]=O;for(W>>=7;O<f;O++)for(Y[O]=W<<7,q=0;q<1<<A[O]-7;q++)L[256+W++]=O;for(se=0;se<=E;se++)te[se]=0;for(q=0;q<=143;)M[2*q+1]=8,q++,te[8]++;for(;q<=255;)M[2*q+1]=9,q++,te[9]++;for(;q<=279;)M[2*q+1]=7,q++,te[7]++;for(;q<=287;)M[2*q+1]=8,q++,te[8]++;for(me(M,u+1,te),q=0;q<f;q++)R[2*q+1]=5,R[2*q]=Ie(q,5);z=new re(M,w,d+1,u,E),k=new re(R,A,0,f,E),H=new re(new Array(0),y,0,m,v)}(),Q=!0),B.l_desc=new j(B.dyn_ltree,z),B.d_desc=new j(B.dyn_dtree,k),B.bl_desc=new j(B.bl_tree,H),B.bi_buf=0,B.bi_valid=0,ce(B)},n._tr_stored_block=G,n._tr_flush_block=function(B,q,se,N){var O,W,te=0;0<B.level?(B.strm.data_type===2&&(B.strm.data_type=function($){var ne,we=4093624447;for(ne=0;ne<=31;ne++,we>>>=1)if(1&we&&$.dyn_ltree[2*ne]!==0)return o;if($.dyn_ltree[18]!==0||$.dyn_ltree[20]!==0||$.dyn_ltree[26]!==0)return a;for(ne=32;ne<d;ne++)if($.dyn_ltree[2*ne]!==0)return a;return o}(B)),Ue(B,B.l_desc),Ue(B,B.d_desc),te=function($){var ne;for(x($,$.dyn_ltree,$.l_desc.max_code),x($,$.dyn_dtree,$.d_desc.max_code),Ue($,$.bl_desc),ne=m-1;3<=ne&&$.bl_tree[2*C[ne]+1]===0;ne--);return $.opt_len+=3*(ne+1)+5+5+4,ne}(B),O=B.opt_len+3+7>>>3,(W=B.static_len+3+7>>>3)<=O&&(O=W)):O=W=se+5,se+4<=O&&q!==-1?G(B,q,se,N):B.strategy===4||W===O?(Z(B,2+(N?1:0),3),ke(B,M,R)):(Z(B,4+(N?1:0),3),function($,ne,we,be){var Ae;for(Z($,ne-257,5),Z($,we-1,5),Z($,be-4,4),Ae=0;Ae<be;Ae++)Z($,$.bl_tree[2*C[Ae]+1],3);ae($,$.dyn_ltree,ne-1),ae($,$.dyn_dtree,we-1)}(B,B.l_desc.max_code+1,B.d_desc.max_code+1,te+1),ke(B,B.dyn_ltree,B.dyn_dtree)),ce(B),N&&ge(B)},n._tr_tally=function(B,q,se){return B.pending_buf[B.d_buf+2*B.last_lit]=q>>>8&255,B.pending_buf[B.d_buf+2*B.last_lit+1]=255&q,B.pending_buf[B.l_buf+B.last_lit]=255&se,B.last_lit++,q===0?B.dyn_ltree[2*se]++:(B.matches++,q--,B.dyn_ltree[2*(S[se]+d+1)]++,B.dyn_dtree[2*X(q)]++),B.last_lit===B.lit_bufsize-1},n._tr_align=function(B){Z(B,2,3),K(B,I,M),function(q){q.bi_valid===16?(ue(q,q.bi_buf),q.bi_buf=0,q.bi_valid=0):8<=q.bi_valid&&(q.pending_buf[q.pending++]=255&q.bi_buf,q.bi_buf>>=8,q.bi_valid-=8)}(B)}},{"../utils/common":41}],53:[function(t,i,n){i.exports=function(){this.input=null,this.next_in=0,this.avail_in=0,this.total_in=0,this.output=null,this.next_out=0,this.avail_out=0,this.total_out=0,this.msg="",this.state=null,this.data_type=2,this.adler=0}},{}],54:[function(t,i,n){(function(r){(function(o,a){if(!o.setImmediate){var l,c,h,d,u=1,f={},m=!1,g=o.document,E=Object.getPrototypeOf&&Object.getPrototypeOf(o);E=E&&E.setTimeout?E:o,l={}.toString.call(o.process)==="[object process]"?function(_){process.nextTick(function(){v(_)})}:function(){if(o.postMessage&&!o.importScripts){var _=!0,b=o.onmessage;return o.onmessage=function(){_=!1},o.postMessage("","*"),o.onmessage=b,_}}()?(d="setImmediate$"+Math.random()+"$",o.addEventListener?o.addEventListener("message",I,!1):o.attachEvent("onmessage",I),function(_){o.postMessage(d+_,"*")}):o.MessageChannel?((h=new MessageChannel).port1.onmessage=function(_){v(_.data)},function(_){h.port2.postMessage(_)}):g&&"onreadystatechange"in g.createElement("script")?(c=g.documentElement,function(_){var b=g.createElement("script");b.onreadystatechange=function(){v(_),b.onreadystatechange=null,c.removeChild(b),b=null},c.appendChild(b)}):function(_){setTimeout(v,0,_)},E.setImmediate=function(_){typeof _!="function"&&(_=new Function(""+_));for(var b=new Array(arguments.length-1),T=0;T<b.length;T++)b[T]=arguments[T+1];var w={callback:_,args:b};return f[u]=w,l(u),u++},E.clearImmediate=p}function p(_){delete f[_]}function v(_){if(m)setTimeout(v,0,_);else{var b=f[_];if(b){m=!0;try{(function(T){var w=T.callback,A=T.args;switch(A.length){case 0:w();break;case 1:w(A[0]);break;case 2:w(A[0],A[1]);break;case 3:w(A[0],A[1],A[2]);break;default:w.apply(a,A)}})(b)}finally{p(_),m=!1}}}}function I(_){_.source===o&&typeof _.data=="string"&&_.data.indexOf(d)===0&&v(+_.data.slice(d.length))}})(typeof self>"u"?r===void 0?this:r:self)}).call(this,typeof fh<"u"?fh:typeof self<"u"?self:typeof window<"u"?window:{})},{}]},{},[10])(10)})})(Tv);var yF=Tv.exports;const nI=X_(yF);var Km={},Pu={};(function(s){const e=":A-Za-z_\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD",t=e+"\\-.\\d\\u00B7\\u0300-\\u036F\\u203F-\\u2040",i="["+e+"]["+t+"]*",n=new RegExp("^"+i+"$"),r=function(a,l){const c=[];let h=l.exec(a);for(;h;){const d=[];d.startIndex=l.lastIndex-h[0].length;const u=h.length;for(let f=0;f<u;f++)d.push(h[f]);c.push(d),h=l.exec(a)}return c},o=function(a){const l=n.exec(a);return!(l===null||typeof l>"u")};s.isExist=function(a){return typeof a<"u"},s.isEmptyObject=function(a){return Object.keys(a).length===0},s.merge=function(a,l,c){if(l){const h=Object.keys(l),d=h.length;for(let u=0;u<d;u++)c==="strict"?a[h[u]]=[l[h[u]]]:a[h[u]]=l[h[u]]}},s.getValue=function(a){return s.isExist(a)?a:""},s.isName=o,s.getAllMatches=r,s.nameRegexp=i})(Pu);const Qm=Pu,TF={allowBooleanAttributes:!1,unpairedTags:[]};Km.validate=function(s,e){e=Object.assign({},TF,e);const t=[];let i=!1,n=!1;s[0]==="\uFEFF"&&(s=s.substr(1));for(let r=0;r<s.length;r++)if(s[r]==="<"&&s[r+1]==="?"){if(r+=2,r=rI(s,r),r.err)return r}else if(s[r]==="<"){let o=r;if(r++,s[r]==="!"){r=oI(s,r);continue}else{let a=!1;s[r]==="/"&&(a=!0,r++);let l="";for(;r<s.length&&s[r]!==">"&&s[r]!==" "&&s[r]!=="	"&&s[r]!==`
`&&s[r]!=="\r";r++)l+=s[r];if(l=l.trim(),l[l.length-1]==="/"&&(l=l.substring(0,l.length-1),r--),!FF(l)){let d;return l.trim().length===0?d="Invalid space after '<'.":d="Tag '"+l+"' is an invalid name.",Yt("InvalidTag",d,Ti(s,r))}const c=wF(s,r);if(c===!1)return Yt("InvalidAttr","Attributes for '"+l+"' have open quote.",Ti(s,r));let h=c.value;if(r=c.index,h[h.length-1]==="/"){const d=r-h.length;h=h.substring(0,h.length-1);const u=aI(h,e);if(u===!0)i=!0;else return Yt(u.err.code,u.err.msg,Ti(s,d+u.err.line))}else if(a)if(c.tagClosed){if(h.trim().length>0)return Yt("InvalidTag","Closing tag '"+l+"' can't have attributes or invalid starting.",Ti(s,o));if(t.length===0)return Yt("InvalidTag","Closing tag '"+l+"' has not been opened.",Ti(s,o));{const d=t.pop();if(l!==d.tagName){let u=Ti(s,d.tagStartPos);return Yt("InvalidTag","Expected closing tag '"+d.tagName+"' (opened in line "+u.line+", col "+u.col+") instead of closing tag '"+l+"'.",Ti(s,o))}t.length==0&&(n=!0)}}else return Yt("InvalidTag","Closing tag '"+l+"' doesn't have proper closing.",Ti(s,r));else{const d=aI(h,e);if(d!==!0)return Yt(d.err.code,d.err.msg,Ti(s,r-h.length+d.err.line));if(n===!0)return Yt("InvalidXml","Multiple possible root nodes found.",Ti(s,r));e.unpairedTags.indexOf(l)!==-1||t.push({tagName:l,tagStartPos:o}),i=!0}for(r++;r<s.length;r++)if(s[r]==="<")if(s[r+1]==="!"){r++,r=oI(s,r);continue}else if(s[r+1]==="?"){if(r=rI(s,++r),r.err)return r}else break;else if(s[r]==="&"){const d=RF(s,r);if(d==-1)return Yt("InvalidChar","char '&' is not expected.",Ti(s,r));r=d}else if(n===!0&&!sI(s[r]))return Yt("InvalidXml","Extra text at the end",Ti(s,r));s[r]==="<"&&r--}}else{if(sI(s[r]))continue;return Yt("InvalidChar","char '"+s[r]+"' is not expected.",Ti(s,r))}if(i){if(t.length==1)return Yt("InvalidTag","Unclosed tag '"+t[0].tagName+"'.",Ti(s,t[0].tagStartPos));if(t.length>0)return Yt("InvalidXml","Invalid '"+JSON.stringify(t.map(r=>r.tagName),null,4).replace(/\r?\n/g,"")+"' found.",{line:1,col:1})}else return Yt("InvalidXml","Start tag expected.",1);return!0};function sI(s){return s===" "||s==="	"||s===`
`||s==="\r"}function rI(s,e){const t=e;for(;e<s.length;e++)if(s[e]=="?"||s[e]==" "){const i=s.substr(t,e-t);if(e>5&&i==="xml")return Yt("InvalidXml","XML declaration allowed only at the start of the document.",Ti(s,e));if(s[e]=="?"&&s[e+1]==">"){e++;break}else continue}return e}function oI(s,e){if(s.length>e+5&&s[e+1]==="-"&&s[e+2]==="-"){for(e+=3;e<s.length;e++)if(s[e]==="-"&&s[e+1]==="-"&&s[e+2]===">"){e+=2;break}}else if(s.length>e+8&&s[e+1]==="D"&&s[e+2]==="O"&&s[e+3]==="C"&&s[e+4]==="T"&&s[e+5]==="Y"&&s[e+6]==="P"&&s[e+7]==="E"){let t=1;for(e+=8;e<s.length;e++)if(s[e]==="<")t++;else if(s[e]===">"&&(t--,t===0))break}else if(s.length>e+9&&s[e+1]==="["&&s[e+2]==="C"&&s[e+3]==="D"&&s[e+4]==="A"&&s[e+5]==="T"&&s[e+6]==="A"&&s[e+7]==="["){for(e+=8;e<s.length;e++)if(s[e]==="]"&&s[e+1]==="]"&&s[e+2]===">"){e+=2;break}}return e}const CF='"',xF="'";function wF(s,e){let t="",i="",n=!1;for(;e<s.length;e++){if(s[e]===CF||s[e]===xF)i===""?i=s[e]:i!==s[e]||(i="");else if(s[e]===">"&&i===""){n=!0;break}t+=s[e]}return i!==""?!1:{value:t,index:e,tagClosed:n}}const SF=new RegExp(`(\\s*)([^\\s=]+)(\\s*=)?(\\s*(['"])(([\\s\\S])*?)\\5)?`,"g");function aI(s,e){const t=Qm.getAllMatches(s,SF),i={};for(let n=0;n<t.length;n++){if(t[n][1].length===0)return Yt("InvalidAttr","Attribute '"+t[n][2]+"' has no space in starting.",Xa(t[n]));if(t[n][3]!==void 0&&t[n][4]===void 0)return Yt("InvalidAttr","Attribute '"+t[n][2]+"' is without value.",Xa(t[n]));if(t[n][3]===void 0&&!e.allowBooleanAttributes)return Yt("InvalidAttr","boolean attribute '"+t[n][2]+"' is not allowed.",Xa(t[n]));const r=t[n][2];if(!MF(r))return Yt("InvalidAttr","Attribute '"+r+"' is an invalid name.",Xa(t[n]));if(!i.hasOwnProperty(r))i[r]=1;else return Yt("InvalidAttr","Attribute '"+r+"' is repeated.",Xa(t[n]))}return!0}function AF(s,e){let t=/\d/;for(s[e]==="x"&&(e++,t=/[\da-fA-F]/);e<s.length;e++){if(s[e]===";")return e;if(!s[e].match(t))break}return-1}function RF(s,e){if(e++,s[e]===";")return-1;if(s[e]==="#")return e++,AF(s,e);let t=0;for(;e<s.length;e++,t++)if(!(s[e].match(/\w/)&&t<20)){if(s[e]===";")break;return-1}return e}function Yt(s,e,t){return{err:{code:s,msg:e,line:t.line||t,col:t.col}}}function MF(s){return Qm.isName(s)}function FF(s){return Qm.isName(s)}function Ti(s,e){const t=s.substring(0,e).split(/\r?\n/);return{line:t.length,col:t[t.length-1].length+1}}function Xa(s){return s.startIndex+s[1].length}var Jm={};const Cv={preserveOrder:!1,attributeNamePrefix:"@_",attributesGroupName:!1,textNodeName:"#text",ignoreAttributes:!0,removeNSPrefix:!1,allowBooleanAttributes:!1,parseTagValue:!0,parseAttributeValue:!1,trimValues:!0,cdataPropName:!1,numberParseOptions:{hex:!0,leadingZeros:!0,eNotation:!0},tagValueProcessor:function(s,e){return e},attributeValueProcessor:function(s,e){return e},stopNodes:[],alwaysCreateTextNode:!1,isArray:()=>!1,commentPropName:!1,unpairedTags:[],processEntities:!0,htmlEntities:!1,ignoreDeclaration:!1,ignorePiTags:!1,transformTagName:!1,transformAttributeName:!1,updateTag:function(s,e,t){return s}},PF=function(s){return Object.assign({},Cv,s)};Jm.buildOptions=PF;Jm.defaultOptions=Cv;class OF{constructor(e){this.tagname=e,this.child=[],this[":@"]={}}add(e,t){e==="__proto__"&&(e="#__proto__"),this.child.push({[e]:t})}addChild(e){e.tagname==="__proto__"&&(e.tagname="#__proto__"),e[":@"]&&Object.keys(e[":@"]).length>0?this.child.push({[e.tagname]:e.child,":@":e[":@"]}):this.child.push({[e.tagname]:e.child})}}var LF=OF;const DF=Pu;function NF(s,e){const t={};if(s[e+3]==="O"&&s[e+4]==="C"&&s[e+5]==="T"&&s[e+6]==="Y"&&s[e+7]==="P"&&s[e+8]==="E"){e=e+9;let i=1,n=!1,r=!1,o="";for(;e<s.length;e++)if(s[e]==="<"&&!r)n&&BF(s,e)?(e+=7,[entityName,val,e]=UF(s,e+1),val.indexOf("&")===-1&&(t[GF(entityName)]={regx:RegExp(`&${entityName};`,"g"),val})):n&&zF(s,e)||n&&VF(s,e)?e+=8:n&&kF(s,e)?e+=9:r=!0,i++,o="";else if(s[e]===">"){if(r?s[e-1]==="-"&&s[e-2]==="-"&&(r=!1,i--):i--,i===0)break}else s[e]==="["?n=!0:o+=s[e];if(i!==0)throw new Error("Unclosed DOCTYPE")}else throw new Error("Invalid Tag instead of DOCTYPE");return{entities:t,i:e}}function UF(s,e){let t="";for(;e<s.length&&s[e]!=="'"&&s[e]!=='"';e++)t+=s[e];if(t=t.trim(),t.indexOf(" ")!==-1)throw new Error("External entites are not supported");const i=s[e++];let n="";for(;e<s.length&&s[e]!==i;e++)n+=s[e];return[t,n,e]}function BF(s,e){return s[e+1]==="!"&&s[e+2]==="E"&&s[e+3]==="N"&&s[e+4]==="T"&&s[e+5]==="I"&&s[e+6]==="T"&&s[e+7]==="Y"}function zF(s,e){return s[e+1]==="!"&&s[e+2]==="E"&&s[e+3]==="L"&&s[e+4]==="E"&&s[e+5]==="M"&&s[e+6]==="E"&&s[e+7]==="N"&&s[e+8]==="T"}function VF(s,e){return s[e+1]==="!"&&s[e+2]==="A"&&s[e+3]==="T"&&s[e+4]==="T"&&s[e+5]==="L"&&s[e+6]==="I"&&s[e+7]==="S"&&s[e+8]==="T"}function kF(s,e){return s[e+1]==="!"&&s[e+2]==="N"&&s[e+3]==="O"&&s[e+4]==="T"&&s[e+5]==="A"&&s[e+6]==="T"&&s[e+7]==="I"&&s[e+8]==="O"&&s[e+9]==="N"}function GF(s){if(DF.isName(s))return s;throw new Error(`Invalid entity name ${s}`)}var HF=NF;const YF=/^[-+]?0x[a-fA-F0-9]+$/,WF=/^([\-\+])?(0*)(\.[0-9]+([eE]\-?[0-9]+)?|[0-9]+(\.[0-9]+([eE]\-?[0-9]+)?)?)$/;!Number.parseInt&&window.parseInt&&(Number.parseInt=window.parseInt);!Number.parseFloat&&window.parseFloat&&(Number.parseFloat=window.parseFloat);const XF={hex:!0,leadingZeros:!0,decimalPoint:".",eNotation:!0};function ZF(s,e={}){if(e=Object.assign({},XF,e),!s||typeof s!="string")return s;let t=s.trim();if(e.skipLike!==void 0&&e.skipLike.test(t))return s;if(e.hex&&YF.test(t))return Number.parseInt(t,16);{const i=WF.exec(t);if(i){const n=i[1],r=i[2];let o=jF(i[3]);const a=i[4]||i[6];if(!e.leadingZeros&&r.length>0&&n&&t[2]!=="."||!e.leadingZeros&&r.length>0&&!n&&t[1]!==".")return s;{const l=Number(t),c=""+l;return c.search(/[eE]/)!==-1||a?e.eNotation?l:s:t.indexOf(".")!==-1?c==="0"&&o===""||c===o||n&&c==="-"+o?l:s:r?o===c||n+o===c?l:s:t===c||t===n+c?l:s}}else return s}}function jF(s){return s&&s.indexOf(".")!==-1&&(s=s.replace(/0+$/,""),s==="."?s="0":s[0]==="."?s="0"+s:s[s.length-1]==="."&&(s=s.substr(0,s.length-1))),s}var qF=ZF;const xv=Pu,Za=LF,KF=HF,QF=qF;let JF=class{constructor(s){this.options=s,this.currentNode=null,this.tagsNodeStack=[],this.docTypeEntities={},this.lastEntities={apos:{regex:/&(apos|#39|#x27);/g,val:"'"},gt:{regex:/&(gt|#62|#x3E);/g,val:">"},lt:{regex:/&(lt|#60|#x3C);/g,val:"<"},quot:{regex:/&(quot|#34|#x22);/g,val:'"'}},this.ampEntity={regex:/&(amp|#38|#x26);/g,val:"&"},this.htmlEntities={space:{regex:/&(nbsp|#160);/g,val:" "},cent:{regex:/&(cent|#162);/g,val:"¢"},pound:{regex:/&(pound|#163);/g,val:"£"},yen:{regex:/&(yen|#165);/g,val:"¥"},euro:{regex:/&(euro|#8364);/g,val:"€"},copyright:{regex:/&(copy|#169);/g,val:"©"},reg:{regex:/&(reg|#174);/g,val:"®"},inr:{regex:/&(inr|#8377);/g,val:"₹"},num_dec:{regex:/&#([0-9]{1,7});/g,val:(e,t)=>String.fromCharCode(Number.parseInt(t,10))},num_hex:{regex:/&#x([0-9a-fA-F]{1,6});/g,val:(e,t)=>String.fromCharCode(Number.parseInt(t,16))}},this.addExternalEntities=$F,this.parseXml=sP,this.parseTextData=eP,this.resolveNameSpace=tP,this.buildAttributesMap=nP,this.isItStopNode=lP,this.replaceEntitiesValue=oP,this.readStopNodeData=hP,this.saveTextToParentTag=aP,this.addChild=rP}};function $F(s){const e=Object.keys(s);for(let t=0;t<e.length;t++){const i=e[t];this.lastEntities[i]={regex:new RegExp("&"+i+";","g"),val:s[i]}}}function eP(s,e,t,i,n,r,o){if(s!==void 0&&(this.options.trimValues&&!i&&(s=s.trim()),s.length>0)){o||(s=this.replaceEntitiesValue(s));const a=this.options.tagValueProcessor(e,s,t,n,r);return a==null?s:typeof a!=typeof s||a!==s?a:this.options.trimValues?Wp(s,this.options.parseTagValue,this.options.numberParseOptions):s.trim()===s?Wp(s,this.options.parseTagValue,this.options.numberParseOptions):s}}function tP(s){if(this.options.removeNSPrefix){const e=s.split(":"),t=s.charAt(0)==="/"?"/":"";if(e[0]==="xmlns")return"";e.length===2&&(s=t+e[1])}return s}const iP=new RegExp(`([^\\s=]+)\\s*(=\\s*(['"])([\\s\\S]*?)\\3)?`,"gm");function nP(s,e,t){if(!this.options.ignoreAttributes&&typeof s=="string"){const i=xv.getAllMatches(s,iP),n=i.length,r={};for(let o=0;o<n;o++){const a=this.resolveNameSpace(i[o][1]);let l=i[o][4],c=this.options.attributeNamePrefix+a;if(a.length)if(this.options.transformAttributeName&&(c=this.options.transformAttributeName(c)),c==="__proto__"&&(c="#__proto__"),l!==void 0){this.options.trimValues&&(l=l.trim()),l=this.replaceEntitiesValue(l);const h=this.options.attributeValueProcessor(a,l,e);h==null?r[c]=l:typeof h!=typeof l||h!==l?r[c]=h:r[c]=Wp(l,this.options.parseAttributeValue,this.options.numberParseOptions)}else this.options.allowBooleanAttributes&&(r[c]=!0)}if(!Object.keys(r).length)return;if(this.options.attributesGroupName){const o={};return o[this.options.attributesGroupName]=r,o}return r}}const sP=function(s){s=s.replace(/\r\n?/g,`
`);const e=new Za("!xml");let t=e,i="",n="";for(let r=0;r<s.length;r++)if(s[r]==="<")if(s[r+1]==="/"){const o=Fr(s,">",r,"Closing Tag is not closed.");let a=s.substring(r+2,o).trim();if(this.options.removeNSPrefix){const h=a.indexOf(":");h!==-1&&(a=a.substr(h+1))}this.options.transformTagName&&(a=this.options.transformTagName(a)),t&&(i=this.saveTextToParentTag(i,t,n));const l=n.substring(n.lastIndexOf(".")+1);if(a&&this.options.unpairedTags.indexOf(a)!==-1)throw new Error(`Unpaired tag can not be used as closing tag: </${a}>`);let c=0;l&&this.options.unpairedTags.indexOf(l)!==-1?(c=n.lastIndexOf(".",n.lastIndexOf(".")-1),this.tagsNodeStack.pop()):c=n.lastIndexOf("."),n=n.substring(0,c),t=this.tagsNodeStack.pop(),i="",r=o}else if(s[r+1]==="?"){let o=Yp(s,r,!1,"?>");if(!o)throw new Error("Pi Tag is not closed.");if(i=this.saveTextToParentTag(i,t,n),!(this.options.ignoreDeclaration&&o.tagName==="?xml"||this.options.ignorePiTags)){const a=new Za(o.tagName);a.add(this.options.textNodeName,""),o.tagName!==o.tagExp&&o.attrExpPresent&&(a[":@"]=this.buildAttributesMap(o.tagExp,n,o.tagName)),this.addChild(t,a,n)}r=o.closeIndex+1}else if(s.substr(r+1,3)==="!--"){const o=Fr(s,"-->",r+4,"Comment is not closed.");if(this.options.commentPropName){const a=s.substring(r+4,o-2);i=this.saveTextToParentTag(i,t,n),t.add(this.options.commentPropName,[{[this.options.textNodeName]:a}])}r=o}else if(s.substr(r+1,2)==="!D"){const o=KF(s,r);this.docTypeEntities=o.entities,r=o.i}else if(s.substr(r+1,2)==="!["){const o=Fr(s,"]]>",r,"CDATA is not closed.")-2,a=s.substring(r+9,o);i=this.saveTextToParentTag(i,t,n);let l=this.parseTextData(a,t.tagname,n,!0,!1,!0,!0);l==null&&(l=""),this.options.cdataPropName?t.add(this.options.cdataPropName,[{[this.options.textNodeName]:a}]):t.add(this.options.textNodeName,l),r=o+2}else{let o=Yp(s,r,this.options.removeNSPrefix),a=o.tagName;const l=o.rawTagName;let c=o.tagExp,h=o.attrExpPresent,d=o.closeIndex;this.options.transformTagName&&(a=this.options.transformTagName(a)),t&&i&&t.tagname!=="!xml"&&(i=this.saveTextToParentTag(i,t,n,!1));const u=t;if(u&&this.options.unpairedTags.indexOf(u.tagname)!==-1&&(t=this.tagsNodeStack.pop(),n=n.substring(0,n.lastIndexOf("."))),a!==e.tagname&&(n+=n?"."+a:a),this.isItStopNode(this.options.stopNodes,n,a)){let f="";if(c.length>0&&c.lastIndexOf("/")===c.length-1)a[a.length-1]==="/"?(a=a.substr(0,a.length-1),n=n.substr(0,n.length-1),c=a):c=c.substr(0,c.length-1),r=o.closeIndex;else if(this.options.unpairedTags.indexOf(a)!==-1)r=o.closeIndex;else{const g=this.readStopNodeData(s,l,d+1);if(!g)throw new Error(`Unexpected end of ${l}`);r=g.i,f=g.tagContent}const m=new Za(a);a!==c&&h&&(m[":@"]=this.buildAttributesMap(c,n,a)),f&&(f=this.parseTextData(f,a,n,!0,h,!0,!0)),n=n.substr(0,n.lastIndexOf(".")),m.add(this.options.textNodeName,f),this.addChild(t,m,n)}else{if(c.length>0&&c.lastIndexOf("/")===c.length-1){a[a.length-1]==="/"?(a=a.substr(0,a.length-1),n=n.substr(0,n.length-1),c=a):c=c.substr(0,c.length-1),this.options.transformTagName&&(a=this.options.transformTagName(a));const f=new Za(a);a!==c&&h&&(f[":@"]=this.buildAttributesMap(c,n,a)),this.addChild(t,f,n),n=n.substr(0,n.lastIndexOf("."))}else{const f=new Za(a);this.tagsNodeStack.push(t),a!==c&&h&&(f[":@"]=this.buildAttributesMap(c,n,a)),this.addChild(t,f,n),t=f}i="",r=d}}else i+=s[r];return e.child};function rP(s,e,t){const i=this.options.updateTag(e.tagname,t,e[":@"]);i===!1||(typeof i=="string"&&(e.tagname=i),s.addChild(e))}const oP=function(s){if(this.options.processEntities){for(let e in this.docTypeEntities){const t=this.docTypeEntities[e];s=s.replace(t.regx,t.val)}for(let e in this.lastEntities){const t=this.lastEntities[e];s=s.replace(t.regex,t.val)}if(this.options.htmlEntities)for(let e in this.htmlEntities){const t=this.htmlEntities[e];s=s.replace(t.regex,t.val)}s=s.replace(this.ampEntity.regex,this.ampEntity.val)}return s};function aP(s,e,t,i){return s&&(i===void 0&&(i=Object.keys(e.child).length===0),s=this.parseTextData(s,e.tagname,t,!1,e[":@"]?Object.keys(e[":@"]).length!==0:!1,i),s!==void 0&&s!==""&&e.add(this.options.textNodeName,s),s=""),s}function lP(s,e,t){const i="*."+t;for(const n in s){const r=s[n];if(i===r||e===r)return!0}return!1}function cP(s,e,t=">"){let i,n="";for(let r=e;r<s.length;r++){let o=s[r];if(i)o===i&&(i="");else if(o==='"'||o==="'")i=o;else if(o===t[0])if(t[1]){if(s[r+1]===t[1])return{data:n,index:r}}else return{data:n,index:r};else o==="	"&&(o=" ");n+=o}}function Fr(s,e,t,i){const n=s.indexOf(e,t);if(n===-1)throw new Error(i);return n+e.length-1}function Yp(s,e,t,i=">"){const n=cP(s,e+1,i);if(!n)return;let r=n.data;const o=n.index,a=r.search(/\s/);let l=r,c=!0;a!==-1&&(l=r.substring(0,a),r=r.substring(a+1).trimStart());const h=l;if(t){const d=l.indexOf(":");d!==-1&&(l=l.substr(d+1),c=l!==n.data.substr(d+1))}return{tagName:l,tagExp:r,closeIndex:o,attrExpPresent:c,rawTagName:h}}function hP(s,e,t){const i=t;let n=1;for(;t<s.length;t++)if(s[t]==="<")if(s[t+1]==="/"){const r=Fr(s,">",t,`${e} is not closed`);if(s.substring(t+2,r).trim()===e&&(n--,n===0))return{tagContent:s.substring(i,t),i:r};t=r}else if(s[t+1]==="?")t=Fr(s,"?>",t+1,"StopNode is not closed.");else if(s.substr(t+1,3)==="!--")t=Fr(s,"-->",t+3,"StopNode is not closed.");else if(s.substr(t+1,2)==="![")t=Fr(s,"]]>",t,"StopNode is not closed.")-2;else{const r=Yp(s,t,">");r&&((r&&r.tagName)===e&&r.tagExp[r.tagExp.length-1]!=="/"&&n++,t=r.closeIndex)}}function Wp(s,e,t){if(e&&typeof s=="string"){const i=s.trim();return i==="true"?!0:i==="false"?!1:QF(s,t)}else return xv.isExist(s)?s:""}var uP=JF,wv={};function dP(s,e){return Sv(s,e)}function Sv(s,e,t){let i;const n={};for(let r=0;r<s.length;r++){const o=s[r],a=fP(o);let l="";if(t===void 0?l=a:l=t+"."+a,a===e.textNodeName)i===void 0?i=o[a]:i+=""+o[a];else{if(a===void 0)continue;if(o[a]){let c=Sv(o[a],e,l);const h=mP(c,e);o[":@"]?pP(c,o[":@"],l,e):Object.keys(c).length===1&&c[e.textNodeName]!==void 0&&!e.alwaysCreateTextNode?c=c[e.textNodeName]:Object.keys(c).length===0&&(e.alwaysCreateTextNode?c[e.textNodeName]="":c=""),n[a]!==void 0&&n.hasOwnProperty(a)?(Array.isArray(n[a])||(n[a]=[n[a]]),n[a].push(c)):e.isArray(a,l,h)?n[a]=[c]:n[a]=c}}}return typeof i=="string"?i.length>0&&(n[e.textNodeName]=i):i!==void 0&&(n[e.textNodeName]=i),n}function fP(s){const e=Object.keys(s);for(let t=0;t<e.length;t++){const i=e[t];if(i!==":@")return i}}function pP(s,e,t,i){if(e){const n=Object.keys(e),r=n.length;for(let o=0;o<r;o++){const a=n[o];i.isArray(a,t+"."+a,!0,!0)?s[a]=[e[a]]:s[a]=e[a]}}}function mP(s,e){const{textNodeName:t}=e,i=Object.keys(s).length;return!!(i===0||i===1&&(s[t]||typeof s[t]=="boolean"||s[t]===0))}wv.prettify=dP;const{buildOptions:gP}=Jm,EP=uP,{prettify:IP}=wv,_P=Km;let vP=class{constructor(s){this.externalEntities={},this.options=gP(s)}parse(s,e){if(typeof s!="string")if(s.toString)s=s.toString();else throw new Error("XML data is accepted in String or Bytes[] form.");if(e){e===!0&&(e={});const n=_P.validate(s,e);if(n!==!0)throw Error(`${n.err.msg}:${n.err.line}:${n.err.col}`)}const t=new EP(this.options);t.addExternalEntities(this.externalEntities);const i=t.parseXml(s);return this.options.preserveOrder||i===void 0?i:IP(i,this.options)}addEntity(s,e){if(e.indexOf("&")!==-1)throw new Error("Entity value can't have '&'");if(s.indexOf("&")!==-1||s.indexOf(";")!==-1)throw new Error("An entity must be set without '&' and ';'. Eg. use '#xD' for '&#xD;'");if(e==="&")throw new Error("An entity with value '&' is not permitted");this.externalEntities[s]=e}};var bP=vP;const yP=`
`;function TP(s,e){let t="";return e.format&&e.indentBy.length>0&&(t=yP),Av(s,e,"",t)}function Av(s,e,t,i){let n="",r=!1;for(let o=0;o<s.length;o++){const a=s[o],l=CP(a);if(l===void 0)continue;let c="";if(t.length===0?c=l:c=`${t}.${l}`,l===e.textNodeName){let m=a[l];xP(c,e)||(m=e.tagValueProcessor(l,m),m=Rv(m,e)),r&&(n+=i),n+=m,r=!1;continue}else if(l===e.cdataPropName){r&&(n+=i),n+=`<![CDATA[${a[l][0][e.textNodeName]}]]>`,r=!1;continue}else if(l===e.commentPropName){n+=i+`<!--${a[l][0][e.textNodeName]}-->`,r=!0;continue}else if(l[0]==="?"){const m=lI(a[":@"],e),g=l==="?xml"?"":i;let E=a[l][0][e.textNodeName];E=E.length!==0?" "+E:"",n+=g+`<${l}${E}${m}?>`,r=!0;continue}let h=i;h!==""&&(h+=e.indentBy);const d=lI(a[":@"],e),u=i+`<${l}${d}`,f=Av(a[l],e,c,h);e.unpairedTags.indexOf(l)!==-1?e.suppressUnpairedNode?n+=u+">":n+=u+"/>":(!f||f.length===0)&&e.suppressEmptyNode?n+=u+"/>":f&&f.endsWith(">")?n+=u+`>${f}${i}</${l}>`:(n+=u+">",f&&i!==""&&(f.includes("/>")||f.includes("</"))?n+=i+e.indentBy+f+i:n+=f,n+=`</${l}>`),r=!0}return n}function CP(s){const e=Object.keys(s);for(let t=0;t<e.length;t++){const i=e[t];if(s.hasOwnProperty(i)&&i!==":@")return i}}function lI(s,e){let t="";if(s&&!e.ignoreAttributes)for(let i in s){if(!s.hasOwnProperty(i))continue;let n=e.attributeValueProcessor(i,s[i]);n=Rv(n,e),n===!0&&e.suppressBooleanAttributes?t+=` ${i.substr(e.attributeNamePrefix.length)}`:t+=` ${i.substr(e.attributeNamePrefix.length)}="${n}"`}return t}function xP(s,e){s=s.substr(0,s.length-e.textNodeName.length-1);let t=s.substr(s.lastIndexOf(".")+1);for(let i in e.stopNodes)if(e.stopNodes[i]===s||e.stopNodes[i]==="*."+t)return!0;return!1}function Rv(s,e){if(s&&s.length>0&&e.processEntities)for(let t=0;t<e.entities.length;t++){const i=e.entities[t];s=s.replace(i.regex,i.val)}return s}var wP=TP;const SP=wP,AP={attributeNamePrefix:"@_",attributesGroupName:!1,textNodeName:"#text",ignoreAttributes:!0,cdataPropName:!1,format:!1,indentBy:"  ",suppressEmptyNode:!1,suppressUnpairedNode:!0,suppressBooleanAttributes:!0,tagValueProcessor:function(s,e){return e},attributeValueProcessor:function(s,e){return e},preserveOrder:!1,commentPropName:!1,unpairedTags:[],entities:[{regex:new RegExp("&","g"),val:"&amp;"},{regex:new RegExp(">","g"),val:"&gt;"},{regex:new RegExp("<","g"),val:"&lt;"},{regex:new RegExp("'","g"),val:"&apos;"},{regex:new RegExp('"',"g"),val:"&quot;"}],processEntities:!0,stopNodes:[],oneListGroup:!1};function tr(s){this.options=Object.assign({},AP,s),this.options.ignoreAttributes||this.options.attributesGroupName?this.isAttribute=function(){return!1}:(this.attrPrefixLen=this.options.attributeNamePrefix.length,this.isAttribute=FP),this.processTextOrObjNode=RP,this.options.format?(this.indentate=MP,this.tagEndChar=`>
`,this.newLine=`
`):(this.indentate=function(){return""},this.tagEndChar=">",this.newLine="")}tr.prototype.build=function(s){return this.options.preserveOrder?SP(s,this.options):(Array.isArray(s)&&this.options.arrayNodeName&&this.options.arrayNodeName.length>1&&(s={[this.options.arrayNodeName]:s}),this.j2x(s,0).val)};tr.prototype.j2x=function(s,e){let t="",i="";for(let n in s)if(Object.prototype.hasOwnProperty.call(s,n))if(typeof s[n]>"u")this.isAttribute(n)&&(i+="");else if(s[n]===null)this.isAttribute(n)?i+="":n[0]==="?"?i+=this.indentate(e)+"<"+n+"?"+this.tagEndChar:i+=this.indentate(e)+"<"+n+"/"+this.tagEndChar;else if(s[n]instanceof Date)i+=this.buildTextValNode(s[n],n,"",e);else if(typeof s[n]!="object"){const r=this.isAttribute(n);if(r)t+=this.buildAttrPairStr(r,""+s[n]);else if(n===this.options.textNodeName){let o=this.options.tagValueProcessor(n,""+s[n]);i+=this.replaceEntitiesValue(o)}else i+=this.buildTextValNode(s[n],n,"",e)}else if(Array.isArray(s[n])){const r=s[n].length;let o="",a="";for(let l=0;l<r;l++){const c=s[n][l];if(!(typeof c>"u"))if(c===null)n[0]==="?"?i+=this.indentate(e)+"<"+n+"?"+this.tagEndChar:i+=this.indentate(e)+"<"+n+"/"+this.tagEndChar;else if(typeof c=="object")if(this.options.oneListGroup){const h=this.j2x(c,e+1);o+=h.val,this.options.attributesGroupName&&c.hasOwnProperty(this.options.attributesGroupName)&&(a+=h.attrStr)}else o+=this.processTextOrObjNode(c,n,e);else if(this.options.oneListGroup){let h=this.options.tagValueProcessor(n,c);h=this.replaceEntitiesValue(h),o+=h}else o+=this.buildTextValNode(c,n,"",e)}this.options.oneListGroup&&(o=this.buildObjectNode(o,n,a,e)),i+=o}else if(this.options.attributesGroupName&&n===this.options.attributesGroupName){const r=Object.keys(s[n]),o=r.length;for(let a=0;a<o;a++)t+=this.buildAttrPairStr(r[a],""+s[n][r[a]])}else i+=this.processTextOrObjNode(s[n],n,e);return{attrStr:t,val:i}};tr.prototype.buildAttrPairStr=function(s,e){return e=this.options.attributeValueProcessor(s,""+e),e=this.replaceEntitiesValue(e),this.options.suppressBooleanAttributes&&e==="true"?" "+s:" "+s+'="'+e+'"'};function RP(s,e,t){const i=this.j2x(s,t+1);return s[this.options.textNodeName]!==void 0&&Object.keys(s).length===1?this.buildTextValNode(s[this.options.textNodeName],e,i.attrStr,t):this.buildObjectNode(i.val,e,i.attrStr,t)}tr.prototype.buildObjectNode=function(s,e,t,i){if(s==="")return e[0]==="?"?this.indentate(i)+"<"+e+t+"?"+this.tagEndChar:this.indentate(i)+"<"+e+t+this.closeTag(e)+this.tagEndChar;{let n="</"+e+this.tagEndChar,r="";return e[0]==="?"&&(r="?",n=""),(t||t==="")&&s.indexOf("<")===-1?this.indentate(i)+"<"+e+t+r+">"+s+n:this.options.commentPropName!==!1&&e===this.options.commentPropName&&r.length===0?this.indentate(i)+`<!--${s}-->`+this.newLine:this.indentate(i)+"<"+e+t+r+this.tagEndChar+s+this.indentate(i)+n}};tr.prototype.closeTag=function(s){let e="";return this.options.unpairedTags.indexOf(s)!==-1?this.options.suppressUnpairedNode||(e="/"):this.options.suppressEmptyNode?e="/":e=`></${s}`,e};tr.prototype.buildTextValNode=function(s,e,t,i){if(this.options.cdataPropName!==!1&&e===this.options.cdataPropName)return this.indentate(i)+`<![CDATA[${s}]]>`+this.newLine;if(this.options.commentPropName!==!1&&e===this.options.commentPropName)return this.indentate(i)+`<!--${s}-->`+this.newLine;if(e[0]==="?")return this.indentate(i)+"<"+e+t+"?"+this.tagEndChar;{let n=this.options.tagValueProcessor(e,s);return n=this.replaceEntitiesValue(n),n===""?this.indentate(i)+"<"+e+t+this.closeTag(e)+this.tagEndChar:this.indentate(i)+"<"+e+t+">"+n+"</"+e+this.tagEndChar}};tr.prototype.replaceEntitiesValue=function(s){if(s&&s.length>0&&this.options.processEntities)for(let e=0;e<this.options.entities.length;e++){const t=this.options.entities[e];s=s.replace(t.regex,t.val)}return s};function MP(s){return this.options.indentBy.repeat(s)}function FP(s){return s.startsWith(this.options.attributeNamePrefix)&&s!==this.options.textNodeName?s.substr(this.attrPrefixLen):!1}var PP=tr;const OP=Km,LP=bP,DP=PP;var Mv={XMLParser:LP,XMLValidator:OP,XMLBuilder:DP};class Xp{constructor(e,t){F(this,"date",new Date),F(this,"author"),F(this,"guid",ws.create()),F(this,"viewpoint"),F(this,"modifiedAuthor"),F(this,"modifiedDate"),F(this,"topic"),F(this,"_components"),F(this,"_comment",""),this._components=e,this._comment=t;const i=this._components.get(xi);this.author=i.config.author}set comment(e){var t;const i=this._components.get(xi);this._comment=e,this.modifiedDate=new Date,this.modifiedAuthor=i.config.author,(t=this.topic)==null||t.comments.set(this.guid,this)}get comment(){return this._comment}serialize(){let e=null;this.viewpoint&&(e=`<Viewpoint Guid="${this.viewpoint.guid}"/>`);let t=null;this.modifiedDate&&(t=`<ModifiedDate>${this.modifiedDate.toISOString()}</ModifiedDate>`);let i=null;return this.modifiedAuthor&&(i=`<ModifiedAuthor>${this.modifiedAuthor}</ModifiedAuthor>`),`
      <Comment Guid="${this.guid}">
        <Date>${this.date.toISOString()}</Date>
        <Author>${this.author}</Author>
        <Comment>${this.comment}</Comment>
        ${e??""}
        ${i??""}
        ${t??""}
      </Comment>
    `}}const Fv=class Bs{constructor(e){F(this,"guid",ws.create()),F(this,"title",Bs.default.title),F(this,"creationDate",new Date),F(this,"creationAuthor",""),F(this,"viewpoints",new qs),F(this,"relatedTopics",new qs),F(this,"comments",new Mn),F(this,"customData",{}),F(this,"description"),F(this,"serverAssignedId"),F(this,"dueDate"),F(this,"modifiedAuthor"),F(this,"modifiedDate"),F(this,"index"),F(this,"_type",Bs.default.type),F(this,"_status",Bs.default.status),F(this,"_priority",Bs.default.priority),F(this,"_stage",Bs.default.stage),F(this,"_assignedTo",Bs.default.assignedTo),F(this,"_labels",Bs.default.labels??new Set),F(this,"_components"),this._components=e;const t=e.get(xi);this.creationAuthor=t.config.author,this.relatedTopics.guard=i=>i!==this.guid}set type(e){const t=this._components.get(xi),{strict:i,types:n}=t.config;(!i||n.has(e))&&(this._type=e)}get type(){return this._type}set status(e){const t=this._components.get(xi),{strict:i,statuses:n}=t.config;(!i||n.has(e))&&(this._status=e)}get status(){return this._status}set priority(e){const t=this._components.get(xi);if(e){const{strict:i,priorities:n}=t.config;if(!(!i||n.has(e)))return;this._priority=e}else this._priority=e}get priority(){return this._priority}set stage(e){const t=this._components.get(xi);if(e){const{strict:i,stages:n}=t.config;if(!(!i||n.has(e)))return;this._stage=e}else this._stage=e}get stage(){return this._stage}set assignedTo(e){const t=this._components.get(xi);if(e){const{strict:i,users:n}=t.config;if(!(!i||n.has(e)))return;this._assignedTo=e}else this._assignedTo=e}get assignedTo(){return this._assignedTo}set labels(e){const t=this._components.get(xi),{strict:i,labels:n}=t.config;if(i){const r=new Set;for(const o of e)(!i||n.has(o))&&r.add(o);this._labels=r}else this._labels=e}get labels(){return this._labels}get _managerVersion(){return this._components.get(xi).config.version}set(e){const t=e,i=this;for(const n in e){if(n==="guid")continue;const r=t[n];n in this&&(i[n]=r)}return this._components.get(xi).list.set(this.guid,this),this}createComment(e,t){const i=new Xp(this._components,e);return i.viewpoint=t,i.topic=this,this.comments.set(i.guid,i),i}createLabelTags(e=this._managerVersion){let t="Labels";e==="2.1"&&(t="Labels"),e==="3"&&(t="Label");let i=[...this.labels].map(n=>`<${t}>${n}</${t}>`).join(`
`);for(const n in this.customData){const r=this.customData[n];typeof r=="string"&&(i+=`
<${t}>${r}</${t}>`)}return e==="2.1"?i:e==="3"?i.length!==0?`<Labels>
${i}
</Labels>`:"<Labels/>":i}createCommentTags(e=this._managerVersion){const t=[...this.comments.values()].map(i=>i.serialize()).join(`
`);return e==="2.1"?t:e==="3"?t.length!==0?`<Comments>
${t}
</Comments>`:"<Comments/>":t}createViewpointTags(e=this._managerVersion){let t="Viewpoints";e==="2.1"&&(t="Viewpoints"),e==="3"&&(t="ViewPoint");const i=this._components.get(ms),n=[...this.viewpoints].map(r=>i.list.get(r)).filter(r=>r).map(r=>`<${t} Guid="${r.guid}">
          <Viewpoint>${r.guid}.bcfv</Viewpoint>
          <Snapshot>${r.guid}.jpeg</Snapshot>
        </${t}>
      `).join(`
`);return e==="2.1"?n:e==="3"?n.length!==0?`<Viewpoints>
${n}
</Viewpoints>`:"<Viewpoints />":n}createRelatedTopicTags(e=this._managerVersion){const t=[...this.relatedTopics].map(i=>`<RelatedTopic Guid="${i}"></RelatedTopic>
      `).join(`
`);return e==="2.1"?t:e==="3"?t.length!==0?`<RelatedTopics>
${t}
</RelatedTopics>`:"<RelatedTopics />":t}serialize(){const e=this._managerVersion;let t=null;this.serverAssignedId&&(t=`ServerAssignedId="${this.serverAssignedId}"`);let i=null;this.priority&&(i=`<Priority>${this.priority}</Priority>`);let n=null;this.index&&e==="2.1"&&(n=`<Index>${this.index}</Index>`);let r=null;this.modifiedDate&&(r=`<ModifiedDate>${this.modifiedDate.toISOString()}</ModifiedDate>`);let o=null;this.modifiedAuthor&&(o=`<ModifiedAuthor>${this.modifiedAuthor}</ModifiedAuthor>`);let a=null;this.dueDate&&(a=`<DueDate>${this.dueDate.toISOString()}</DueDate>`);let l=null;this.assignedTo&&(l=`<AssignedTo>${this.assignedTo}</AssignedTo>`);let c=null;this.description&&(c=`<Description>${this.description}</Description>`);let h=null;this.stage&&(h=`<Stage>${this.stage}</Stage>`);const d=this.createCommentTags(e),u=this.createViewpointTags(e),f=this.createLabelTags(e),m=this.createRelatedTopicTags(e);return`
      <?xml version="1.0" encoding="UTF-8"?>
      <Markup>
        <Topic Guid="${this.guid}" TopicType="${this.type}" TopicStatus="${this.status}" ${t??""}>
          <Title>${this.title}</Title>
          <CreationDate>${this.creationDate.toISOString()}</CreationDate>
          <CreationAuthor>${this.creationAuthor}</CreationAuthor>
          ${i??""}
          ${n??""}
          ${r??""}
          ${o??""}
          ${a??""}
          ${l??""}
          ${c??""}
          ${h??""}
          ${f}
          ${m}
          ${e==="3"?d:""}
          ${e==="3"?u:""}
        </Topic>
        ${e==="2.1"?d:""}
        ${e==="2.1"?u:""}
      </Markup>
    `}};F(Fv,"default",{title:"BCF Topic",type:"Issue",status:"Active"});let cI=Fv;const NP=(s,e)=>{if(e.trim()==="")return;const t=xi.xmlParser.parse(e).Extensions;if(!t)return;const{Priorities:i,TopicStatuses:n,TopicTypes:r,Users:o}=t;if(i&&i.Priority){const a=Array.isArray(i.Priority)?i.Priority:[i.Priority];for(const l of a)s.config.priorities.add(l)}if(n&&n.TopicStatus){const a=Array.isArray(n.TopicStatus)?n.TopicStatus:[n.TopicStatus];for(const l of a)s.config.statuses.add(l)}if(r&&r.TopicType){const a=Array.isArray(r.TopicType)?r.TopicType:[r.TopicType];for(const l of a)s.config.types.add(l)}if(o&&o.User){const a=Array.isArray(o.User)?o.User:[o.User];for(const l of a)s.config.users.add(l)}};class UP extends Ea{constructor(){super(...arguments),F(this,"_config",{version:{type:"Select",options:new Set(["2.1","3"]),multiple:!1,value:""},author:{type:"Text",value:""},types:{type:"TextSet",value:new Set},statuses:{type:"TextSet",value:new Set},priorities:{type:"TextSet",value:new Set},labels:{type:"TextSet",value:new Set},stages:{type:"TextSet",value:new Set},users:{type:"TextSet",value:new Set},includeSelectionTag:{type:"Boolean",value:!1},updateExtensionsOnImport:{type:"Boolean",value:!1},strict:{type:"Boolean",value:!1},includeAllExtensionsOnExport:{type:"Boolean",value:!1},fallbackVersionOnImport:{type:"Select",multiple:!1,options:new Set(["2.1","3"]),value:""},ignoreIncompleteTopicsOnImport:{type:"Boolean",value:!1}})}get version(){return this._config.version.value}set version(e){this._config.version.value=e}get author(){return this._config.author.value}set author(e){this._config.author.value=e}get types(){return this._config.types.value}set types(e){this._config.types.value=e}get statuses(){return this._config.statuses.value}set statuses(e){this._config.statuses.value=e}get priorities(){return this._config.priorities.value}set priorities(e){this._config.priorities.value=e}get labels(){return this._config.labels.value}set labels(e){this._config.labels.value=e}get stages(){return this._config.stages.value}set stages(e){this._config.stages.value=e}get users(){return this._config.users.value}set users(e){this._config.users.value=e}get includeSelectionTag(){return this._config.includeSelectionTag.value}set includeSelectionTag(e){this._config.includeSelectionTag.value=e}get updateExtensionsOnImport(){return this._config.updateExtensionsOnImport.value}set updateExtensionsOnImport(e){this._config.updateExtensionsOnImport.value=e}get strict(){return this._config.strict.value}set strict(e){this._config.strict.value=e}get includeAllExtensionsOnExport(){return this._config.includeAllExtensionsOnExport.value}set includeAllExtensionsOnExport(e){this._config.includeAllExtensionsOnExport.value=e}get fallbackVersionOnImport(){return this._config.fallbackVersionOnImport.value}set fallbackVersionOnImport(e){this._config.fallbackVersionOnImport.value=e}get ignoreIncompleteTopicsOnImport(){return this._config.ignoreIncompleteTopicsOnImport.value}set ignoreIncompleteTopicsOnImport(e){this._config.ignoreIncompleteTopicsOnImport.value=e}}const $m=class nl extends Ke{constructor(){super(...arguments),F(this,"enabled",!1),F(this,"_defaultConfig",{author:"jhon.doe@example.com",version:"2.1",types:new Set(["Clash","Failure","Fault","Inquiry","Issue","Remark","Request"]),statuses:new Set(["Active","In Progress","Done","In Review","Closed"]),priorities:new Set(["On hold","Minor","Normal","Major","Critical"]),labels:new Set,stages:new Set,users:new Set,includeSelectionTag:!1,updateExtensionsOnImport:!0,strict:!1,includeAllExtensionsOnExport:!0,fallbackVersionOnImport:"2.1",ignoreIncompleteTopicsOnImport:!1}),F(this,"config",new UP(this,this.components,"BCF Topics",nl.uuid)),F(this,"list",new Mn),F(this,"onSetup",new oe),F(this,"isSetup",!1),F(this,"onBCFImported",new oe),F(this,"onDisposed",new oe)}setup(e){if(this.isSetup)return;const t={...this._defaultConfig,...e};this.config.version=t.version,this.config.author=t.author,this.config.types=t.types,this.config.statuses=t.statuses,this.config.priorities=t.priorities,this.config.labels=t.labels,this.config.stages=t.stages,this.config.users=t.users,this.config.includeSelectionTag=t.includeSelectionTag,this.config.updateExtensionsOnImport=t.updateExtensionsOnImport,this.config.strict=t.strict,this.config.includeAllExtensionsOnExport=t.includeAllExtensionsOnExport,this.config.fallbackVersionOnImport=t.fallbackVersionOnImport||"",this.config.ignoreIncompleteTopicsOnImport=t.ignoreIncompleteTopicsOnImport,this.isSetup=!0,this.enabled=!0,this.onSetup.trigger()}create(e){const t=new cI(this.components);return e?(t.guid=e.guid??t.guid,t.set(e)):this.list.set(t.guid,t),t}dispose(){this.list.dispose(),this.onDisposed.trigger(),this.onDisposed.reset()}get usedTypes(){const e=[...this.list].map(([t,i])=>i.type);return new Set(e)}get usedStatuses(){const e=[...this.list].map(([t,i])=>i.status);return new Set(e)}get usedPriorities(){const e=[...this.list].map(([t,i])=>i.priority).filter(t=>t);return new Set(e)}get usedStages(){const e=[...this.list].map(([t,i])=>i.stage).filter(t=>t);return new Set(e)}get usedUsers(){const e=[];for(const[t,i]of this.list){e.push(i.creationAuthor),i.assignedTo&&e.push(i.assignedTo),i.modifiedAuthor&&e.push(i.modifiedAuthor);for(const[n,r]of i.comments)e.push(r.author),r.modifiedAuthor&&e.push(r.modifiedAuthor)}return new Set(e)}get usedLabels(){const e=[];for(const[t,i]of this.list)e.push(...i.labels);return new Set(e)}updateExtensions(){for(const[e,t]of this.list){for(const i of t.labels)this.config.labels.add(i);this.config.types.add(t.type),t.priority&&this.config.priorities.add(t.priority),t.stage&&this.config.stages.add(t.stage),this.config.statuses.add(t.status),this.config.users.add(t.creationAuthor),t.assignedTo&&this.config.users.add(t.assignedTo),t.modifiedAuthor&&this.config.users.add(t.modifiedAuthor);for(const[i,n]of t.comments)this.config.users.add(n.author),n.modifiedAuthor&&this.config.users.add(n.modifiedAuthor)}}updateViewpointReferences(){const e=this.components.get(ms);for(const[t,i]of this.list)for(const n of i.viewpoints)e.list.has(n)||i.viewpoints.delete(n)}async export(e=this.list.values()){const t=new nI;t.file("bcf.version",`<?xml version="1.0" encoding="UTF-8"?>
    <Version VersionId="${this.config.version}" xsi:noNamespaceSchemaLocation="https://raw.githubusercontent.com/buildingSMART/BCF-XML/release_3_0/Schemas/version.xsd"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    </Version>`),t.file("bcf.extensions",this.serializeExtensions());const i=await(await fetch("https://thatopen.github.io/engine_components/resources/favicon.ico")).arrayBuffer(),n=this.components.get(ms);for(const r of e){const o=t.folder(r.guid);o.file("markup.bcf",r.serialize());for(const a of r.viewpoints){const l=n.list.get(a);l&&(o.file(`${a}.jpeg`,i,{binary:!0}),o.file(`${a}.bcfv`,await l.serialize()))}}return await t.generateAsync({type:"blob"})}serializeExtensions(){const e=[...this.config.types].map(a=>`<TopicType>${a}</TopicType>`).join(`
`),t=[...this.config.statuses].map(a=>`<TopicStatus>${a}</TopicStatus>`).join(`
`),i=[...this.config.priorities].map(a=>`<Priority>${a}</Priority>`).join(`
`),n=[...this.config.labels].map(a=>`<TopicLabel>${a}</TopicLabel>`).join(`
`),r=[...this.config.stages].map(a=>`<Stage>${a}</Stage>`).join(`
`),o=[...this.config.users].map(a=>`<User>${a}</User>`).join(`
`);return`
      <?xml version="1.0" encoding="UTF-8"?>
      <Extensions xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="your-schema-location.xsd">
        ${e.length!==0?`<TopicTypes>
${e}
</TopicTypes>`:""}
        ${t.length!==0?`<TopicStatuses>
${t}
</TopicStatuses>`:""}
        ${i.length!==0?`<Priorities>
${i}
</Priorities>`:""}
        ${n.length!==0?`<TopicLabels>
${n}
</TopicLabels>`:""}
        ${r.length!==0?`<Stages>
${r}
</Stages>`:""}
        ${o.length!==0?`<Users>
${o}
</Users>`:""}
      </Extensions>
    `}processMarkupComment(e){const{Guid:t,Date:i,Author:n,Comment:r,Viewpoint:o}=e;if(!(t&&i&&n&&Xp))return null;const a=this.components.get(ms),l=new Xp(this.components,r??"");return l.guid=t,l.date=new Date(i),l.author=n,l.viewpoint=o!=null&&o.Guid?a.list.get(o.Guid):void 0,l.modifiedAuthor=e.ModifiedAuthor,l.modifiedDate=e.ModifiedDate?new Date(e.ModifiedDate):void 0,l}getMarkupComments(e,t){var i;let n;if(t==="2.1"&&(n=e.Comment),t==="3"&&(n=(i=e.Topic.Comments)==null?void 0:i.Comment),!n)return[];n=Array.isArray(n)?n:[n];const r=n.map(o=>this.processMarkupComment(o)).filter(o=>o);return Array.isArray(r)?r:[r]}getMarkupLabels(e,t){var i;let n;return t==="2.1"&&(n=e.Topic.Labels),t==="3"&&(n=(i=e.Topic.Labels)==null?void 0:i.Label),n?Array.isArray(n)?n:[n]:[]}getMarkupViewpoints(e,t){var i;let n;return t==="2.1"&&(n=e.Viewpoints),t==="3"&&(n=(i=e.Topic.Viewpoints)==null?void 0:i.ViewPoint),n?(n=Array.isArray(n)?n:[n],n):[]}getMarkupRelatedTopics(e,t){var i;let n;return t==="2.1"&&(n=e.Topic.RelatedTopic),t==="3"&&(n=(i=e.Topic.RelatedTopics)==null?void 0:i.RelatedTopic),n?(Array.isArray(n)?n:[n]).map(r=>r.Guid):[]}async load(e,t){var i;const{fallbackVersionOnImport:n,ignoreIncompleteTopicsOnImport:r,updateExtensionsOnImport:o}=this.config,a=new nI;await a.loadAsync(e);const l=Object.values(a.files);let c=n;const h=l.find(v=>v.name.endsWith(".version"));if(h){const v=await h.async("string"),I=nl.xmlParser.parse(v).Version.VersionId;c=String(I)}if(!(c&&(c==="2.1"||c==="3")))throw new Error(`BCFTopics: ${c} is not supported.`);const d=l.find(v=>v.name.endsWith(".extensions"));if(o&&d){const v=await d.async("string");NP(this,v)}const u=[],f=this.components.get(ms),m=l.filter(v=>v.name.endsWith(".bcfv"));for(const v of m){const I=await v.async("string"),_=nl.xmlParser.parse(I).VisualizationInfo;if(!_){console.warn("Missing VisualizationInfo in Viewpoint");continue}const b={},{Guid:T,ClippingPlanes:w,Components:A,OrthogonalCamera:y,PerspectiveCamera:C}=_;if(T&&(b.guid=T),A){const{Selection:R,Visibility:L}=A;if(R&&R.Component){const U=Array.isArray(R.Component)?R.Component:[R.Component];b.selectionComponents=U.map(z=>z.IfcGuid).filter(z=>z)}if(L&&"DefaultVisibility"in L&&(b.defaultVisibility=L.DefaultVisibility),L&&L.Exceptions&&"Component"in L.Exceptions){const{Component:U}=L.Exceptions,z=Array.isArray(U)?U:[U];b.exceptionComponents=z.map(k=>k.IfcGuid).filter(k=>k)}let S;c==="2.1"&&(S=A.ViewSetupHints),c==="3"&&(S=(i=A.Visibility)==null?void 0:i.ViewSetupHints),S&&("OpeningsVisible"in S&&(b.openingsVisible=S.OpeningsVisible),"SpacesVisible"in S&&(b.spacesVisible=S.SpacesVisible),"SpaceBoundariesVisible"in S&&(b.spaceBoundariesVisible=S.SpaceBoundariesVisible))}if(y||C){const R=_.PerspectiveCamera??_.OrthogonalCamera,{CameraViewPoint:L,CameraDirection:S}=R,U=new P(Number(L.X),Number(L.Z),Number(-L.Y)),z=new P(Number(S.X),Number(S.Z),Number(-S.Y)),k={position:{x:U.x,y:U.y,z:U.z},direction:{x:z.x,y:z.y,z:z.z},aspectRatio:"AspectRatio"in R?R.AspectRatio:1};"ViewToWorldScale"in R&&(b.camera={...k,viewToWorldScale:R.ViewToWorldScale}),"FieldOfView"in R&&(b.camera={...k,fov:R.FieldOfView})}const M=new Zv(this.components,t,{data:b,setCamera:!1});if(A){const{Coloring:R}=A;if(R&&R.Color){const L=Array.isArray(R.Color)?R.Color:[R.Color];for(const S of L){const{Color:U,Component:z}=S,k=(Array.isArray(z)?z:[z]).map(H=>H.IfcGuid);M.componentColors.set(U,k)}}}if(u.push(M),w){const R=this.components.get(ua),L=Array.isArray(w.ClippingPlane)?w.ClippingPlane:[w.ClippingPlane];for(const S of L){const{Location:U,Direction:z}=S;if(!(U&&z))continue;const k=new P(U.X,U.Z,-U.Y),H=new P(z.X,-z.Z,z.Y),Y=R.createFromNormalAndCoplanarPoint(t,H,k);Y.visible=!1,Y.enabled=!1,M.clippingPlanes.add(Y)}}}const g={},E=[],p=l.filter(v=>v.name.endsWith(".bcf"));for(const v of p){const I=await v.async("string"),_=nl.xmlParser.parse(I).Markup,b=_.Topic,{Guid:T,TopicType:w,TopicStatus:A,Title:y,CreationDate:C,CreationAuthor:M}=b;if(r&&!(T&&w&&A&&y&&C&&M))continue;const R=new cI(this.components);R.guid=T??R.guid;const L=this.getMarkupRelatedTopics(_,c);g[R.guid]=new Set(L),R.type=w??R.type,R.status=A??R.status,R.title=y??R.title,R.creationDate=C?new Date(C):R.creationDate,R.creationAuthor=M??R.creationAuthor,R.serverAssignedId=b.ServerAssignedId,R.priority=b.Priority,R.index=b.Index,R.modifiedDate=b.ModifiedDate?new Date(b.ModifiedDate):void 0,R.modifiedAuthor=b.ModifiedAuthor,R.dueDate=b.DueDate?new Date(b.DueDate):void 0,R.assignedTo=b.AssignedTo,R.description=b.Description,R.stage=b.Stage;const S=this.getMarkupLabels(_,c);for(const k of S)R.labels.add(k);const U=this.getMarkupComments(_,c);for(const k of U)R.comments.set(k.guid,k);const z=this.getMarkupViewpoints(_,c);for(const k of z){if(!(k&&k.Guid))continue;const H=f.list.get(k.Guid);H&&R.viewpoints.add(H.guid)}this.list.set(R.guid,R),E.push(R)}for(const v in g){const I=this.list.get(v);if(!I)continue;const _=g[v];for(const b of _)I.relatedTopics.add(b)}return this.onBCFImported.trigger(E),{viewpoints:u,topics:E}}};F($m,"uuid","de977976-e4f6-4e4f-a01a-204727839802");F($m,"xmlParser",new Mv.XMLParser({allowBooleanAttributes:!0,attributeNamePrefix:"",ignoreAttributes:!1,ignoreDeclaration:!0,ignorePiTags:!0,numberParseOptions:{leadingZeros:!0,hex:!0},parseAttributeValue:!0,preserveOrder:!1,processEntities:!1,removeNSPrefix:!0,trimValues:!0}));let xi=$m;const Pv=class as extends Ke{constructor(e){super(e),F(this,"enabled",!0),F(this,"onDisposed",new oe),F(this,"_absoluteMin"),F(this,"_absoluteMax"),F(this,"_meshes",[]),this.components.add(as.uuid,this),this._absoluteMin=as.newBound(!0),this._absoluteMax=as.newBound(!1)}static getDimensions(e){const{min:t,max:i}=e,n=Math.abs(i.x-t.x),r=Math.abs(i.y-t.y),o=Math.abs(i.z-t.z),a=new P;return a.subVectors(i,t).divideScalar(2).add(t),{width:n,height:r,depth:o,center:a}}static newBound(e){const t=e?1:-1;return new P(t*Number.MAX_VALUE,t*Number.MAX_VALUE,t*Number.MAX_VALUE)}static getBounds(e,t,i){const n=i||this.newBound(!1),r=t||this.newBound(!0);for(const o of e)o.x<r.x&&(r.x=o.x),o.y<r.y&&(r.y=o.y),o.z<r.z&&(r.z=o.z),o.x>n.x&&(n.x=o.x),o.y>n.y&&(n.y=o.y),o.z>n.z&&(n.z=o.z);return new je(t,i)}dispose(){const e=this.components.get(Xn);for(const t of this._meshes)e.destroy(t);this._meshes=[],this.onDisposed.trigger(as.uuid),this.onDisposed.reset()}get(){const e=this._absoluteMin.clone(),t=this._absoluteMax.clone();return new je(e,t)}getSphere(){const e=this._absoluteMin.clone(),t=this._absoluteMax.clone(),i=Math.abs((t.x-e.x)/2),n=Math.abs((t.y-e.y)/2),r=Math.abs((t.z-e.z)/2),o=new P(e.x+i,e.y+n,e.z+r),a=o.distanceTo(e);return new vi(o,a)}getMesh(){const e=new je(this._absoluteMin,this._absoluteMax),t=as.getDimensions(e),{width:i,height:n,depth:r,center:o}=t,a=new Ot(i,n,r),l=new Te(a);return this._meshes.push(l),l.position.copy(o),l}reset(){this._absoluteMin=as.newBound(!0),this._absoluteMax=as.newBound(!1)}add(e){for(const t of e.items)this.addMesh(t.mesh)}addMesh(e,t){if(!e.geometry.index)return;const i=as.getFragmentBounds(e);e.updateMatrixWorld();const n=e.matrixWorld,r=new _e,o=e instanceof ji,a=new Set;if(e instanceof ou){t||(t=e.fragment.ids);for(const l of t){const c=e.fragment.getInstancesIDs(l);if(c)for(const h of c)a.add(h)}}else a.add(0);for(const l of a){const c=i.min.clone(),h=i.max.clone();o&&(e.getMatrixAt(l,r),c.applyMatrix4(r),h.applyMatrix4(r)),c.applyMatrix4(n),h.applyMatrix4(n),c.x<this._absoluteMin.x&&(this._absoluteMin.x=c.x),c.y<this._absoluteMin.y&&(this._absoluteMin.y=c.y),c.z<this._absoluteMin.z&&(this._absoluteMin.z=c.z),c.x>this._absoluteMax.x&&(this._absoluteMax.x=c.x),c.y>this._absoluteMax.y&&(this._absoluteMax.y=c.y),c.z>this._absoluteMax.z&&(this._absoluteMax.z=c.z),h.x>this._absoluteMax.x&&(this._absoluteMax.x=h.x),h.y>this._absoluteMax.y&&(this._absoluteMax.y=h.y),h.z>this._absoluteMax.z&&(this._absoluteMax.z=h.z),h.x<this._absoluteMin.x&&(this._absoluteMin.x=h.x),h.y<this._absoluteMin.y&&(this._absoluteMin.y=h.y),h.z<this._absoluteMin.z&&(this._absoluteMin.z=h.z)}}addFragmentIdMap(e){const t=this.components.get($e);for(const i in e){const n=t.list.get(i);if(!n)continue;const r=e[i];this.addMesh(n.mesh,r)}}static getFragmentBounds(e){const t=e.geometry.attributes.position,i=Number.MAX_VALUE,n=-i,r=new P(i,i,i),o=new P(n,n,n);if(!e.geometry.index)throw new Error("Geometry must be indexed!");const a=Array.from(e.geometry.index.array);for(let l=0;l<a.length;l++){if(l%3===0&&a[l]===0&&a[l+1]===0&&a[l+2]===0){l+=2;continue}const c=a[l],h=t.getX(c),d=t.getY(c),u=t.getZ(c);h<r.x&&(r.x=h),d<r.y&&(r.y=d),u<r.z&&(r.z=u),h>o.x&&(o.x=h),d>o.y&&(o.y=d),u>o.z&&(o.z=u)}return new je(r,o)}};F(Pv,"uuid","d1444724-dba6-4cdd-a0c7-68ee1450d166");let hu=Pv;const BP=class Ov extends Ke{constructor(e){super(e),F(this,"enabled",!0),e.add(Ov.uuid,this)}async getIsolatedElements(e,t,i){const n=new Set;function r(l){if(n.has(l))return;const c=e.GetLine(t,l);if(c){n.add(l);for(const h in c){const d=c[h];d&&d.constructor.name==="Handle"&&d.value>0?r(d.value):Array.isArray(d)&&d.forEach(u=>{u&&u.constructor.name==="Handle"&&u.value>0&&r(u.value)})}}}for(const l of i)r(l);const o=[];for(const l of n)o.push(l);o.sort((l,c)=>l-c);const a=[];return o.forEach(l=>{const c=e.GetLine(t,l);a.push(c)}),a}async export(e,t,i){return i.forEach(n=>{e.WriteLine(t,n)}),e.SaveModel(t)}async splitIfc(e,t,i){const n=new Uint8Array(t),r=e.OpenModel(n),o=await this.getIsolatedElements(e,r,i),a=e.CreateModel({schema:Zb.IFC2X3});return await this.export(e,a,o)}};F(BP,"uuid","6eb0ba2f-71c0-464e-bcec-2d7c335186b2");const Lv=class Dv{constructor(e){F(this,"onProgress",new oe),F(this,"inclusive",!1),F(this,"rules",[]),F(this,"ids",{}),F(this,"needsUpdate",new Map),F(this,"components"),this.components=e}static import(e,t){const i=Dv.importers.get(t.type);return i?i(e,t):(console.warn("Invalid query data:.",t),null)}static importRules(e){const t=[];for(const i of e){const n={};for(const r in i){const o=i[r];o.regexp?n[r]=new RegExp(o.value):n[r]=o}t.push(n)}return t}static importIds(e){const t={};for(const i in e.ids)t[i]=new Set(e.ids[i]);return t}clear(e){if(e===void 0){this.ids={},this.needsUpdate.clear();return}delete this.ids[e],this.needsUpdate.delete(e)}addID(e,t){this.ids[e]||(this.ids[e]=new Set),this.ids[e].add(t)}getData(){const e={};for(const i in this.ids)e[i]=Array.from(this.ids[i]);const t=this.exportRules();return{name:this.name,inclusive:this.inclusive,type:"IfcFinderQuery",ids:e,rules:t}}exportRules(){const e=[];for(const t of this.rules){const i={};for(const n in t){const r=t[n];r instanceof RegExp?i[n]={regexp:!0,value:r.source}:i[n]=r}e.push(i)}return e}findInFile(e,t){return new Promise(i=>{const n=new FileReader,r=new TextDecoder("utf-8"),o=1e4*1024,a=1e3;let l=0;const c=/;/,h=()=>{if(l>=t.size){i();return}const d=Math.min(l+o+a,t.size),u=t.slice(l,d);n.readAsArrayBuffer(u)};n.onload=()=>{if(!(n.result instanceof ArrayBuffer))return;const d=new Uint8Array(n.result),u=r.decode(d).split(c);u.shift(),this.findInLines(e,u),this.onProgress.trigger(l/t.size),l+=o,h()},h()})}getIdFromLine(e){const t=e.slice(e.indexOf("#")+1,e.indexOf("="));return parseInt(t,10)}testRules(e){let t=null,i=null,n=null,r=!1;for(const o of this.rules){if(o.type==="category"){if(t===null&&(t=this.getCategoryFromLine(e),t===null)){if(this.inclusive)continue;break}if(!o.value.test(t)){if(this.inclusive)continue;r=!1;break}r=!0;continue}if(i===null&&(i=this.getAttributesFromLine(e),i===null)){if(this.inclusive)continue;r=!1;break}if(t===null&&(t=this.getCategoryFromLine(e),t===null)){if(this.inclusive)continue;r=!1;break}if(n===null&&(n=Object.keys(new jb[t]),n=n.slice(2),n===null)){if(this.inclusive)continue;r=!1;break}if(o.type==="property"){const{name:a,value:l}=o;if(!l.test(e)){if(this.inclusive)continue;r=!1;break}let c=!1;for(let h=0;h<i.length;h++){const d=i[h],u=n[h];if(l.test(d)&&a.test(u)){c=!0;break}}if(c)r=!0;else if(!this.inclusive){r=!1;break}}if(o.type==="operator"){const{name:a,value:l,operator:c}=o;let h=!1;for(let d=0;d<i.length;d++){const u=n[d],f=i[d].replace(/IFCLENGTHMEASURE\(|IFCVOLUMEMEASURE\(|\)/g,"");if(a.test(u)){if(c==="="&&parseFloat(f)===l){h=!0;break}else if(c==="<"&&parseFloat(f)<l){h=!0;break}else if(c===">"&&parseFloat(f)>l){h=!0;break}else if(c===">="&&parseFloat(f)>=l){h=!0;break}else if(c==="<="&&parseFloat(f)<=l){h=!0;break}}}if(h)r=!0;else if(!this.inclusive){r=!1;break}}}return r}getCategoryFromLine(e){const t=e.indexOf("=")+1,i=e.indexOf("("),n=e.slice(t,i).trim();return mF[n]||null}getAttributesFromLine(e){const t=/\((.*)\)/,i=e.match(t);if(!(i&&i[1]))return null;const n=/,(?![^()]*\))/g;return i[1].split(n).map(r=>r.trim())}};F(Lv,"importers",new Map);let bs=Lv;class hI{constructor(e){F(this,"list",new Map),F(this,"id",Nr.generateUUID()),F(this,"mode","intersect"),F(this,"_components"),this._components=e}get queries(){return new Set(this.list.values())}get items(){const e=[];for(const t of this.queries)e.push(t.items);return this.mode==="combine"?ha.combine(e):ha.intersect(e)}add(e){if(this.list.has(e.name))throw new Error(`This group already has a query with the name ${e.name}.`);this.list.set(e.name,e)}clear(e){for(const t of this.queries)t.clear(e)}import(e){this.mode=e.mode,this.id=e.id;for(const t in e.queries){const i=bs.import(this._components,e.queries[t]);i&&this.list.set(t,i)}}export(){const e={};for(const[t,i]of this.list)e[t]=i.export();return{mode:this.mode,id:this.id,queries:e}}async update(e,t){for(const i of this.queries){const n=i.needsUpdate.get(e);(n===void 0||n)&&await i.update(e,t)}}}const Nv=class Uv extends bs{constructor(e,t){super(e),F(this,"name"),this.name=t.name,this.rules=t.rules,this.inclusive=t.inclusive}get items(){const e=this.components.get($e),t=[];for(const i in this.ids){const n=this.ids[i],r=e.groups.get(i);if(!r){console.warn(`Model ${i} not found!`);continue}const o=r.getFragmentMap(n);t.push(o)}return ha.combine(t)}export(){const e=this.getData();return e.type=Uv.type,e}async update(e,t){this.ids[e]=new Set,await this.findInFile(e,t),this.needsUpdate.set(e,!1)}findInLines(e,t){for(const i of t)if(this.testRules(i)){const n=this.getIdFromLine(i);this.addID(e,n)}}};F(Nv,"type","IfcBasicQuery");let uI=Nv;bs.importers.set(uI.type,(s,e)=>{const t=new uI(s,{name:e.name,rules:bs.importRules(e.rules),inclusive:e.inclusive});return t.ids=bs.importIds(e),t});const Bv=class zv extends bs{constructor(e,t){super(e),F(this,"name"),F(this,"psets",[]),this.name=t.name,this.rules=t.rules,this.inclusive=t.inclusive}get items(){const e=this.components.get(qi),t=this.components.get($e),i=[];for(const n in this.ids){const r=t.groups.get(n);if(!r){console.log(`Model not found: ${n}.`);continue}const o=this.ids[n];for(const a of o){const l=e.getEntityRelations(n,a,"DefinesOcurrence");if(l){const c=r.getFragmentMap(l);i.push(c)}}}return ha.combine(i)}export(){const e=this.getData();return e.type=zv.type,e}async update(e,t){await this.findInFile(e,t);const i=new Set;for(const n of this.psets){const r=this.getAttributesFromLine(n);if(r===null)continue;const o=r[4].replace("(","[").replace(")","]").replace(/#/g,""),a=JSON.parse(o);for(const l of a){const c=this.ids[e];if(c&&c.has(l)){const h=this.getIdFromLine(n);i.add(h);break}}}this.ids[e]=i,this.psets=[],this.needsUpdate.set(e,!1)}findInLines(e,t){for(const i of t){const n=this.getCategoryFromLine(i);if(n==="IfcPropertySet"){this.psets.push(i);continue}if(n==="IfcPropertySingleValue"&&this.testRules(i)){const r=this.getIdFromLine(i);this.addID(e,r)}}}};F(Bv,"type","IfcPropertyQuery");let dI=Bv;bs.importers.set(dI.type,(s,e)=>{const t=new dI(s,{name:e.name,inclusive:e.inclusive,rules:bs.importRules(e.rules)});return t.ids=bs.importIds(e),t});const zP=class Vv extends Ke{constructor(e){super(e),F(this,"enabled",!0),F(this,"list",new Map),e.add(Vv.uuid,this)}get queries(){const e=new Set;for(const[,t]of this.list)for(const i of t.queries)e.add(i);return e}import(e){for(const t in e){const i=new hI(this.components);i.import(e[t]),this.list.set(t,i)}}export(){const e={};for(const[t,i]of this.list)e[t]=i.export();return e}create(){const e=new hI(this.components);return this.list.set(e.id,e),e}delete(e){this.list.delete(e)}clear(){this.list.clear()}};F(zP,"uuid","0da7ad77-f734-42ca-942f-a074adfd1e3a");const kv=class Gv extends Ke{constructor(e){super(e),F(this,"enabled",!0),F(this,"list",{}),F(this,"onDisposed",new oe),F(this,"onFragmentsDisposed",t=>{const{groupID:i,fragmentIDs:n}=t;for(const r in this.list){const o=this.list[r],a=Object.keys(o);if(a.includes(i))delete o[i],Object.values(o).length===0&&delete this.list[r];else for(const l of a){const c=o[l];for(const h of n)delete c.map[h];Object.values(c).length===0&&delete o[l]}}}),e.add(Gv.uuid,this),e.get($e).onFragmentsDisposed.add(this.onFragmentsDisposed)}dispose(){this.list={},this.components.get($e).onFragmentsDisposed.remove(this.onFragmentsDisposed),this.onDisposed.trigger(),this.onDisposed.reset()}remove(e){for(const t in this.list){const i=this.list[t];for(const n in i){const r=i[n];delete r.map[e]}}}find(e){const t=this.components.get($e);if(!e){const o={};for(const[a,l]of t.list)o[a]=new Set(l.ids);return o}const i=Object.keys(e).length,n={};for(const o in e){const a=e[o];if(!this.list[o]){console.warn(`Classification ${o} does not exist.`);continue}for(const l of a){const c=this.list[o][l];if(c)for(const h in c.map){n[h]||(n[h]=new Map);for(const d of c.map[h]){const u=n[h].get(d);u===void 0?n[h].set(d,1):n[h].set(d,u+1)}}}}const r={};for(const o in n){const a=n[o];for(const[l,c]of a){if(c===void 0)throw new Error("Malformed fragments map!");c===i&&(r[o]||(r[o]=new Set),r[o].add(l))}}return r}byModel(e,t){this.list.models||(this.list.models={});const i=this.list.models;i[e]||(i[e]={map:{},id:null,name:e});const n=i[e];for(const[r,o]of t.data){const a=o[0];for(const l of a){const c=t.keyFragments.get(l);c&&(n.map[c]||(n.map[c]=new Set),n.map[c].add(r))}}}async byPredefinedType(e){var t;this.list.predefinedTypes||(this.list.predefinedTypes={});const i=this.list.predefinedTypes,n=e.getAllPropertiesIDs();for(const r of n){const o=await e.getProperties(r);if(!o)continue;const a=String((t=o.PredefinedType)==null?void 0:t.value).toUpperCase();i[a]||(i[a]={map:{},id:null,name:a});const l=i[a];for(const[c,h]of e.data){const d=h[0];for(const u of d){const f=e.keyFragments.get(u);if(!f)throw new Error("Fragment ID not found!");l.map[f]||(l.map[f]=new Set),l.map[f].add(o.expressID)}}}}byEntity(e){this.list.entities||(this.list.entities={});for(const[t,i]of e.data){const n=i[1][1],r=cu[n];this.saveItem(e,"entities",r,t)}}async byIfcRel(e,t,i){Pr.isRel(t)&&await Pr.getRelationMap(e,t,async(n,r)=>{const{name:o}=await Pr.getEntityName(e,n);for(const a of r)this.saveItem(e,i,o??"NO REL NAME",a)})}async bySpatialStructure(e,t={}){var i,n;const r=this.components.get(qi),o=r.relationMaps[e.uuid];if(!o)throw new Error(`Classifier: model relations of ${e.name||e.uuid} have to exists to group by spatial structure.`);const a=t.systemName??"spatialStructures",l=t.useProperties===void 0||t.useProperties;for(const[c]of o){if(t.isolate){const f=e.data.get(c);if(!f)continue;const m=f[1][1];if(m===void 0||!t.isolate.has(m))continue}const h=r.getEntityRelations(e,c,"Decomposes");if(h)for(const f of h){let m=f.toString();if(l){const g=await e.getProperties(f);if(!g)continue;m=(i=g.Name)==null?void 0:i.value}this.saveItem(e,a,m,c,f)}const d=r.getEntityRelations(e,c,"ContainsElements");if(!d)continue;let u=c.toString();if(l){const f=await e.getProperties(c);if(!f)continue;u=(n=f.Name)==null?void 0:n.value}for(const f of d){this.saveItem(e,a,u,f,c);const m=r.getEntityRelations(e,Number(f),"IsDecomposedBy");if(m)for(const g of m)this.saveItem(e,a,u,g,c)}}}setColor(e,t,i=!1){const n=this.components.get($e);for(const r in e){const o=n.list.get(r);if(!o)continue;const a=e[r];o.setColor(t,a,i)}}resetColor(e){const t=this.components.get($e);for(const i in e){const n=t.list.get(i);if(!n)continue;const r=e[i];n.resetColor(r)}}export(){const e={};for(const t in this.list){e[t]={};const i=this.list[t];for(const n in i){const r=i[n];e[t][n]={map:ha.export(r.map),name:r.name,id:r.id}}}return e}import(e){for(const t in e){this.list[t]||(this.list[t]={});const i=e[t];for(const n in i){const r=i[n];this.list[t][n]={map:ha.import(r.map),name:r.name,id:r.id}}}}saveItem(e,t,i,n,r=null){this.list[t]||(this.list[t]={});const o=e.data.get(n);if(o)for(const a of o[0]){const l=e.keyFragments.get(a);if(l){const c=this.list[t];c[i]||(c[i]={map:{},id:r,name:i}),c[i].map[l]||(c[i].map[l]=new Set),c[i].map[l].add(n)}}}};F(kv,"uuid","e25a7f3c-46c4-4a14-9d3d-5115f24ebeb7");let Zp=kv;const VP=class Hv extends Ke{constructor(e){super(e),F(this,"onDisposed",new oe),F(this,"enabled",!0),F(this,"height",10),F(this,"groupName","spatialStructures"),F(this,"list",new Set),e.add(Hv.uuid,this)}dispose(){this.list.clear(),this.onDisposed.trigger(),this.onDisposed.reset()}set(e){if(!this.enabled)return;const t=this.components.get(Zp),i=this.components.get($e),n=e?1:-1;let r=0;const o=t.list[this.groupName],a=new _e;for(const l in o){a.elements[13]=r*n*this.height;for(const c in o[l].map){const h=i.list.get(c),d=l+c,u=this.list.has(d);if(!h||e&&u||!e&&!u)continue;e?this.list.add(d):this.list.delete(d);const f=o[l].map[c];h.applyTransform(f,a),h.mesh.computeBoundingSphere(),h.mesh.computeBoundingBox()}r++}}};F(VP,"uuid","d260618b-ce88-4c7d-826c-6debb91de3e2");const Yv=class Wv extends Ke{constructor(e){super(e),F(this,"enabled",!0),this.components.add(Wv.uuid,this)}set(e,t){const i=this.components.get($e);if(!t){for(const[n,r]of i.list)r&&(r.setVisibility(e),this.updateCulledVisibility(r));return}for(const n in t){const r=t[n],o=i.list.get(n);o&&(o.setVisibility(e,r),this.updateCulledVisibility(o))}}isolate(e){this.set(!1),this.set(!0,e)}updateCulledVisibility(e){const t=this.components.get(j2);for(const[i,n]of t.list){const r=n.colorMeshes.get(e.id);r&&(r.count=e.mesh.count)}}};F(Yv,"uuid","dd9ccf2d-8a21-4821-b7f6-2949add16a29");let kP=Yv;class GP extends qm{constructor(){super(...arguments),F(this,"minGeometrySize",10),F(this,"minAssetsSize",1e3),F(this,"maxTriangles",null)}}const HP=class Xv extends Ke{constructor(e){super(e),F(this,"onGeometryStreamed",new ps),F(this,"onAssetStreamed",new ps),F(this,"onProgress",new ps),F(this,"onIfcLoaded",new ps),F(this,"onDisposed",new oe),F(this,"settings",new GP),F(this,"enabled",!0),F(this,"webIfc",new Jo),F(this,"_nextAvailableID",0),F(this,"_splittedGeometries",new Map),F(this,"_spatialTree",new uv),F(this,"_metaData",new fv),F(this,"_visitedGeometries",new Map),F(this,"_streamSerializer",new z_),F(this,"_geometries",new Map),F(this,"_geometryCount",0),F(this,"_civil",new dv),F(this,"_groupSerializer",new N_),F(this,"_assets",[]),F(this,"_meshesWithHoles",new Set),this.components.add(Xv.uuid,this),this.settings.excludedCategories.add(xI)}dispose(){this.onIfcLoaded.reset(),this.onGeometryStreamed.reset(),this.onAssetStreamed.reset(),this.webIfc=null,this.onDisposed.trigger(),this.onDisposed.reset()}async streamFromBuffer(e){await this.readIfcFile(e),await this.streamAllGeometries(),this.cleanUp()}async streamFromCallBack(e){await this.streamIfcFile(e),await this.streamAllGeometries(),this.cleanUp()}async readIfcFile(e){const{path:t,absolute:i,logLevel:n}=this.settings.wasm;this.webIfc.SetWasmPath(t,i),await this.webIfc.Init(),n&&this.webIfc.SetLogLevel(n),this.webIfc.OpenModel(e,this.settings.webIfc),this._nextAvailableID=this.webIfc.GetMaxExpressID(0)}async streamIfcFile(e){const{path:t,absolute:i,logLevel:n}=this.settings.wasm;this.webIfc.SetWasmPath(t,i),await this.webIfc.Init(),n&&this.webIfc.SetLogLevel(n),this.webIfc.OpenModelFromCallback(e,this.settings.webIfc),this._nextAvailableID=this.webIfc.GetMaxExpressID(0)}async streamAllGeometries(){console.log("Converting geometries to tiles...");const{minGeometrySize:e,minAssetsSize:t}=this.settings;this._spatialTree.setUp(this.webIfc);const i=this.webIfc.GetIfcEntityList(0),n=[[]],r=new An;r.ifcMetadata={name:"",description:"",...this._metaData.getNameInfo(this.webIfc),...this._metaData.getDescriptionInfo(this.webIfc),schema:this.webIfc.GetModelSchema(0)||"IFC2X3",maxExpressID:this.webIfc.GetMaxExpressID(0)};let o=0,a=0;for(const m of i){if(!this.webIfc.IsIfcElement(m)&&m!==kr||this.settings.excludedCategories.has(m))continue;const g=this.webIfc.GetLineIDsWithType(0,m),E=g.size();for(let p=0;p<E;p++){o>e&&(o=0,a++,n.push([]));const v=g.get(p);n[a].push(v);const I=this.webIfc.GetLine(0,v);if(I.GlobalId){const b=(I==null?void 0:I.GlobalId.value)||(I==null?void 0:I.GlobalId);r.globalToExpressIDs.set(b,v)}const _=this._spatialTree.itemsByFloor[v]||0;r.data.set(v,[[],[_,m]]),o++}}this._spatialTree.cleanUp();let l=.01,c=0;for(const m of n){c++,this.webIfc.StreamMeshes(0,m,E=>{this.getMesh(this.webIfc,E,r)}),this._geometryCount>this.settings.minGeometrySize&&await this.streamGeometries(),this._assets.length>t&&await this.streamAssets();const g=c/n.length;g>l&&(l+=.01,l=Math.max(l,g),await this.onProgress.trigger(Math.round(l*100)/100))}this._geometryCount&&await this.streamGeometries(),this._assets.length&&await this.streamAssets();const{opaque:h,transparent:d}=r.geometryIDs;for(const[m,{index:g,uuid:E}]of this._visitedGeometries)r.keyFragments.set(g,E),(m>1?h:d).set(m,g);pv.get(r,this.webIfc);const u=this.webIfc.GetCoordinationMatrix(0);r.coordinationMatrix.fromArray(u),r.civilData=this._civil.read(this.webIfc);const f=this._groupSerializer.export(r);await this.onIfcLoaded.trigger(f),r.dispose(!0)}cleanUp(){try{this.webIfc.Dispose()}catch{}this.webIfc=null,this.webIfc=new Jo,this._visitedGeometries.clear(),this._geometries.clear(),this._assets=[],this._meshesWithHoles.clear()}getMesh(e,t,i){const n=t.geometries.size(),r=t.expressID,o={id:r,geometries:[]};for(let a=0;a<n;a++){const l=t.geometries.get(a),c=l.geometryExpressID,h=l.color.w===1,d=c*(h?1:-1);this._visitedGeometries.has(d)||this.getGeometry(e,c,h),this.registerGeometryData(i,r,l,o,c,d);const u=this._splittedGeometries.get(c);if(u)for(const f of u)this.registerGeometryData(i,r,l,o,f,f)}this._assets.push(o)}getGeometry(e,t,i){const n=e.GetGeometry(0,t),r=e.GetIndexArray(n.GetIndexData(),n.GetIndexDataSize()),o=e.GetVertexArray(n.GetVertexData(),n.GetVertexDataSize()),a=new Float32Array(o.length/2),l=new Float32Array(o.length/2);for(let u=0;u<o.length;u+=6)a[u/2]=o[u],a[u/2+1]=o[u+1],a[u/2+2]=o[u+2],l[u/2]=o[u+3],l[u/2+1]=o[u+4],l[u/2+2]=o[u+5];const c=i?1:-1;if(r.length===0){const u=new Float32Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1]);this._geometries.set(t,{position:a,normal:l,index:r,boundingBox:u,hasHoles:!1});const f=this._visitedGeometries.size,m=Nr.generateUUID(),g=t*c;this._visitedGeometries.set(g,{uuid:m,index:f}),this._geometryCount++,n.delete();return}const h=(this.settings.maxTriangles||r.length/3)*3;let d=!0;for(let u=0;u<r.length;u+=h){const f=r.length-u,m=Math.min(f,h),g=u+m,E=[],p=[],v=[];let I=0;for(let S=u;S<g;S++){E.push(I++);const U=r[S];p.push(a[U*3]),p.push(a[U*3+1]),p.push(a[U*3+2]),v.push(l[U*3]),v.push(l[U*3+1]),v.push(l[U*3+2])}const _=new Uint32Array(E),b=new Float32Array(p),T=new Float32Array(v),w=I2(b),A=new Float32Array(w.transformation.elements),y=!1,C=d?t:this._nextAvailableID++;this._geometries.set(C,{position:b,normal:T,index:_,boundingBox:A,hasHoles:y}),d||(this._splittedGeometries.has(t)||this._splittedGeometries.set(t,new Set),this._splittedGeometries.get(t).add(C));const M=this._visitedGeometries.size,R=Nr.generateUUID(),L=C*c;this._visitedGeometries.set(L,{uuid:R,index:M}),this._geometryCount++,d=!1}n.delete()}async streamAssets(){await this.onAssetStreamed.trigger(this._assets),this._assets=null,this._assets=[]}async streamGeometries(){const e=new Map;for(const[t,i]of this._geometries)e.set(t,i),e.size>this.settings.minGeometrySize&&await this.outputGeometries(e);await this.outputGeometries(e),this._geometries.clear(),this._geometryCount=0}async outputGeometries(e){let t=this._streamSerializer.export(e),i={};for(const[n,{boundingBox:r,hasHoles:o}]of e)i[n]={boundingBox:r,hasHoles:o};await this.onGeometryStreamed.trigger({data:i,buffer:t}),i=null,t=null,e.clear()}registerGeometryData(e,t,i,n,r,o){const a=this._visitedGeometries.get(o);if(a===void 0)throw new Error("Error getting geometry data for streaming!");const l=e.data.get(t);if(!l)throw new Error("Data not found!");l[0].push(a.index);const{x:c,y:h,z:d,w:u}=i.color,f=[c,h,d,u],m=i.flatTransformation;n.geometries.push({color:f,geometryID:r,transformation:m})}};F(HP,"uuid","d9999a00-e1f5-4d3f-8cfe-c56e08609764");class YP extends qm{constructor(){super(...arguments),F(this,"propertiesSize",100)}}class WP extends Ke{constructor(){super(...arguments),F(this,"onPropertiesStreamed",new ps),F(this,"onProgress",new ps),F(this,"onIndicesStreamed",new ps),F(this,"onDisposed",new oe),F(this,"enabled",!0),F(this,"settings",new YP),F(this,"webIfc",new Jo)}async dispose(){this.onIndicesStreamed.reset(),this.onPropertiesStreamed.reset(),this.webIfc=null,this.onDisposed.reset()}async streamFromBuffer(e){await this.readIfcFile(e),await this.streamAllProperties(),this.cleanUp()}async streamFromCallBack(e){await this.streamIfcFile(e),await this.streamAllProperties(),this.cleanUp()}async readIfcFile(e){const{path:t,absolute:i,logLevel:n}=this.settings.wasm;this.webIfc.SetWasmPath(t,i),await this.webIfc.Init(),n&&this.webIfc.SetLogLevel(n),this.webIfc.OpenModel(e,this.settings.webIfc)}async streamIfcFile(e){const{path:t,absolute:i,logLevel:n}=this.settings.wasm;this.webIfc.SetWasmPath(t,i),await this.webIfc.Init(),n&&this.webIfc.SetLogLevel(n),this.webIfc.OpenModelFromCallback(e,this.settings.webIfc)}async streamAllProperties(){const{propertiesSize:e}=this.settings,t=new Set(this.webIfc.GetIfcEntityList(0)),i=new Set([Em,Im,_m,mu,kr]);for(const a of i)t.add(a);let n=.01,r=0;for(const a of t){if(r++,mv.has(a))continue;const l=i.has(a),c=this.webIfc.GetLineIDsWithType(0,a),h=c.size();let d=0;for(let u=0;u<h-e;u+=e){const f={};for(let m=0;m<e;m++){d++;const g=c.get(u+m);try{const E=this.webIfc.GetLine(0,g,l);f[E.expressID]=E}catch{console.log(`Could not get property: ${g}`)}}await this.onPropertiesStreamed.trigger({type:a,data:f})}if(d!==h){const u={};for(let f=d;f<h;f++){const m=c.get(f);try{const g=this.webIfc.GetLine(0,m,l);u[g.expressID]=g}catch{console.log(`Could not get property: ${m}`)}}await this.onPropertiesStreamed.trigger({type:a,data:u})}r/t.size>n&&(n=Math.round(n*100)/100,await this.onProgress.trigger(n),n+=.01)}await this.onProgress.trigger(1);const o=await this.components.get(qi).processFromWebIfc(this.webIfc,0);await this.onIndicesStreamed.trigger(o)}cleanUp(){this.webIfc.Dispose(),this.webIfc=null,this.webIfc=new Jo}}F(WP,"uuid","88d2c89c-ce32-47d7-8cb6-d51e4b311a0b");class Zv{constructor(e,t,i){F(this,"title"),F(this,"guid",ws.create()),F(this,"clippingPlanes",new qs),F(this,"camera",{aspectRatio:1,fov:60,direction:{x:0,y:0,z:0},position:{x:0,y:0,z:0}}),F(this,"exceptionComponents",new qs),F(this,"selectionComponents",new qs),F(this,"componentColors",new Mn),F(this,"spacesVisible",!1),F(this,"spaceBoundariesVisible",!1),F(this,"openingsVisible",!1),F(this,"defaultVisibility",!0),F(this,"_components"),F(this,"world");const n={setCamera:!0,...i},{data:r,setCamera:o}=n;this._components=e,this.world=t,r&&(this.guid=r.guid??this.guid,this.set(r)),o&&this.updateCamera()}get _selectionModelIdMap(){const e=this._components.get($e),t={};for(const[i,n]of e.groups){i in t||(t[i]=new Set);for(const r of this.selectionComponents){const o=n.globalToExpressIDs.get(r);o&&t[i].add(o)}}return t}get _exceptionModelIdMap(){const e=this._components.get($e),t={};for(const[i,n]of e.groups){i in t||(t[i]=new Set);for(const r of this.exceptionComponents){const o=n.globalToExpressIDs.get(r);o&&t[i].add(o)}}return t}get selection(){return this._components.get($e).modelIdToFragmentIdMap(this._selectionModelIdMap)}get exception(){return this._components.get($e).modelIdToFragmentIdMap(this._exceptionModelIdMap)}get projection(){return"fov"in this.camera?"Perspective":"Orthographic"}get position(){const e=this._components.get($e),{position:t}=this.camera,{x:i,y:n,z:r}=t,o=new P(i,n,r);return e.applyBaseCoordinateSystem(o,new _e),o}get direction(){const{direction:e}=this.camera,{x:t,y:i,z:n}=e;return new P(t,i,n)}get _managerVersion(){return this._components.get(xi).config.version}get topics(){return[...this._components.get(xi).list.values()].filter(e=>e.viewpoints.has(this.guid))}addComponentsFromMap(e){const t=this._components.get($e).fragmentIdMapToGuids(e);this.selectionComponents.add(...t),this._components.get(ms).list.set(this.guid,this)}set(e){const t=e,i=this;for(const n in e){if(n==="guid")continue;const r=t[n];if(n==="selectionComponents"){this.selectionComponents.clear(),this.selectionComponents.add(...r);continue}if(n==="exceptionComponents"){this.exceptionComponents.clear(),this.exceptionComponents.add(...r);continue}n in this&&(i[n]=r)}return this._components.get(ms).list.set(this.guid,this),this}async go(e,t=!0){const{camera:i}=e??this.world;if(!i.hasCameraControls())throw new Error("Viewpoint: the world's camera need controls to set the viewpoint.");i instanceof pF&&i.projection.set(this.projection);const n=new P(this.camera.position.x,this.camera.position.y,this.camera.position.z),r=new P(this.camera.direction.x,this.camera.direction.y,this.camera.direction.z);if(n.equals(new P)&&r.equals(new P))return;const o=this.position,a=this.direction;let l={x:o.x+a.x*80,y:o.y+a.y*80,z:o.z+a.z*80};const c=this.selection;if(Object.keys(c).length===0){const h=this._components.get(fn).get(this.world).castRayFromVector(o,this.direction);h&&(l=h.point)}else{const h=this._components.get(hu);h.reset(),h.addFragmentIdMap(c),l=h.getSphere().center,h.reset()}await i.controls.setLookAt(o.x,o.y,o.z,l.x,l.y,l.z,t)}updateCamera(e){const{camera:t,renderer:i}=e??this.world;if(!i)throw new Error("Viewpoint: the world needs to have a renderer!");if(!t.hasCameraControls())throw new Error("Viewpoint: world's camera need camera controls!");const n=new P;t.controls.getPosition(n);const r=t.three,o=new P(0,0,-1).applyEuler(r.rotation),{width:a,height:l}=i.getSize();let c=a/l;Number.isNaN(c)&&(c=1);const h=this._components.get($e);n.applyMatrix4(h.baseCoordinationMatrix.clone().invert());const d={aspectRatio:c,position:{x:n.x,y:n.y,z:n.z},direction:{x:o.x,y:o.y,z:o.z}};r instanceof Gi?this.camera={...d,fov:r.fov}:r instanceof Zn&&(this.camera={...d,viewToWorldScale:r.top-r.bottom}),this._components.get(ms).list.set(this.guid,this)}applyVisibility(){const e=this._components.get(kP);e.set(this.defaultVisibility),e.set(!this.defaultVisibility,this.exception),e.set(!0,this.selection)}applyColors(){const e=this._components.get(ms),t=this._components.get($e),i=this._components.get(Zp);for(const[n,r]of this.componentColors){const o=t.guidToFragmentIdMap(r);i.setColor(o,n,e.config.overwriteColors)}}resetColors(){const e=this._components.get($e),t=this._components.get(Zp);for(const[i,n]of this.componentColors){const r=e.guidToFragmentIdMap(n);t.resetColor(r)}}async createComponentTags(e){var t,i;const n=this._components.get($e),r=this._components.get(xi);let o="";if(r.config.includeSelectionTag){const a=e==="selection"?this._selectionModelIdMap:this._exceptionModelIdMap;for(const l in a){const c=n.groups.get(l);if(!c)continue;const h=a[l];for(const d of h){const u=await c.getProperties(d);if(!u)continue;const f=(t=u.GlobalId)==null?void 0:t.value;if(!f)continue;const m=(i=u.Tag)==null?void 0:i.value;let g=null;m&&(g=`AuthoringToolId="${m}"`),o+=`
<Component IfcGuid="${f}" ${g??""} />`}}}else o=[...this.selectionComponents].map(a=>`<Component IfcGuid="${a}" />`).join(`
`);return o}createColorTags(){let e="";for(const[t,i]of this.componentColors.entries()){const n=`#${t.getHexString()}`,r=i.map(o=>`
<Component IfcGuid="${o}" />`).join(`
`);e+=`<Color Color="${n}">
${r}
</Color>`}return e.length!==0?`<Coloring>
${e}
</Coloring>`:"<Coloring />"}async serialize(e=this._managerVersion){const t=this._components.get($e),i=this.position;i.applyMatrix4(t.baseCoordinationMatrix.clone().invert());const n=this.direction;n.normalize();const r=new _e().makeRotationX(Math.PI/2),o=n.clone().applyMatrix4(r);o.normalize();const a=`<CameraViewPoint>
      <X>${i.x}</X>
      <Y>${-i.z}</Y>
      <Z>${i.y}</Z>
    </CameraViewPoint>`,l=`<CameraDirection>
      <X>${n.x}</X>
      <Y>${-n.z}</Y>
      <Z>${n.y}</Z>
    </CameraDirection>`,c=`<CameraUpVector>
      <X>${o.x}</X>
      <Y>${-o.z}</Y>
      <Z>${o.y}</Z>
    </CameraUpVector>`,h=`<AspectRatio>${this.camera.aspectRatio}</AspectRatio>`;let d="";"viewToWorld"in this.camera?d=`<OrthogonalCamera>
        ${a}
        ${l}
        ${c}
        ${h}
        <ViewToWorldScale>${this.camera.viewToWorld}</ViewToWorldScale>
      </OrthogonalCamera>`:"fov"in this.camera&&(d=`<PerspectiveCamera>
        ${a}
        ${l}
        ${c}
        ${h}
        <FieldOfView>${this.camera.fov}</FieldOfView>
      </PerspectiveCamera>`);const u=`<ViewSetupHints SpacesVisible="${this.spacesVisible??!1}" SpaceBoundariesVisible="${this.spaceBoundariesVisible??!1}" OpeningsVisible="${this.openingsVisible??!1}" />`,f=(await this.createComponentTags("selection")).trim(),m=(await this.createComponentTags("exception")).trim(),g=this.createColorTags();return`<?xml version="1.0" encoding="UTF-8"?>
    <VisualizationInfo Guid="${this.guid}">
      <Components>
        ${e==="2.1"?u:""}
        ${f.length!==0?`<Selection>${f}</Selection>`:""}
        <Visibility DefaultVisibility="${this.defaultVisibility}">
          ${e==="3"?u:""}
          ${m.length!==0?`<Exceptions>${m}</Exceptions>`:""}
        </Visibility>
        ${g}
      </Components>
      ${d}
    </VisualizationInfo>`}}class XP extends Ea{constructor(){super(...arguments),F(this,"_config",{overwriteColors:{value:!1,type:"Boolean"}})}get overwriteColors(){return this._config.overwriteColors.value}set overwriteColors(e){this._config.overwriteColors.value=e}}const jv=class jp extends Ke{constructor(e){super(e),F(this,"enabled",!0),F(this,"list",new Mn),F(this,"isSetup",!1),F(this,"onSetup",new oe),F(this,"config",new XP(this,this.components,"Viewpoints",jp.uuid)),F(this,"onDisposed",new oe),e.add(jp.uuid,this)}create(e,t){const i=new Zv(this.components,e,{data:t});return t||this.list.set(i.guid,i),i}setup(){}dispose(){this.list.dispose(),this.onDisposed.trigger(),this.onDisposed.reset()}};F(jv,"uuid","ee867824-a796-408d-8aa0-4e5962a83c66");let ms=jv;class ZP extends Ea{constructor(){super(...arguments),F(this,"_config",{visible:{value:!0,type:"Boolean"},lockRotation:{value:!0,type:"Boolean"},zoom:{type:"Number",interpolable:!0,value:.05,min:.001,max:5},frontOffset:{type:"Number",interpolable:!0,value:0,min:0,max:100},sizeX:{type:"Number",interpolable:!0,value:320,min:20,max:5e3},sizeY:{type:"Number",interpolable:!0,value:160,min:20,max:5e3},backgroundColor:{value:new Ne,type:"Color"}})}get visible(){return this._config.visible.value}set visible(e){this._config.visible.value=e;const t=this._component.renderer.domElement.style;t.display=e?"block":"none"}get lockRotation(){return this._config.lockRotation.value}set lockRotation(e){this._config.lockRotation.value=e,this._component.lockRotation=e}get zoom(){return this._config.zoom.value}set zoom(e){this._config.zoom.value=e,this._component.zoom=e}get frontOffset(){return this._config.frontOffset.value}set frontOffset(e){this._config.frontOffset.value=e,this._component.frontOffset=e}get sizeX(){return this._config.sizeX.value}set sizeX(e){this._config.sizeX.value=e;const{sizeX:t,sizeY:i}=this._config,n=new Oe(t.value,i.value);this._component.resize(n)}get sizeY(){return this._config.sizeY.value}set sizeY(e){this._config.sizeY.value=e;const{sizeX:t,sizeY:i}=this._config,n=new Oe(t.value,i.value);this._component.resize(n)}get backgroundColor(){return this._config.backgroundColor.value}set backgroundColor(e){this._config.backgroundColor.value=e,this._component.backgroundColor=e}}class jP{constructor(e,t){if(F(this,"onDisposed",new oe),F(this,"onAfterUpdate",new oe),F(this,"onBeforeUpdate",new oe),F(this,"onResize",new oe),F(this,"onSetup",new oe),F(this,"frontOffset",0),F(this,"overrideMaterial",new Dm),F(this,"backgroundColor",new Ne(395274)),F(this,"renderer"),F(this,"enabled",!0),F(this,"world"),F(this,"config"),F(this,"isSetup",!1),F(this,"_defaultConfig",{visible:!0,lockRotation:!1,zoom:.05,frontOffset:0,sizeX:320,sizeY:160,backgroundColor:new Ne(395274)}),F(this,"_lockRotation",!0),F(this,"_size",new Oe(320,160)),F(this,"_camera"),F(this,"_plane"),F(this,"_tempVector1",new P),F(this,"_tempVector2",new P),F(this,"_tempTarget",new P),F(this,"down",new P(0,-1,0)),F(this,"updatePlanes",()=>{if(!this.world.renderer)throw new Error("The given world must have a renderer!");const r=[],o=this.world.renderer.three;for(const a of o.clippingPlanes)r.push(a);r.push(this._plane),this.renderer.clippingPlanes=r}),this.world=e,!this.world.renderer)throw new Error("The given world must have a renderer!");this.renderer=new tu,this.renderer.setSize(this._size.x,this._size.y);const i=1,n=this._size.x/this._size.y;this._camera=new Zn(i*n/-2,i*n/2,i/2,i/-2),this.world.renderer.onClippingPlanesUpdated.add(this.updatePlanes),this._camera.position.set(0,200,0),this._camera.zoom=.1,this._camera.rotation.x=-Math.PI/2,this._plane=new ri(this.down,200),this.updatePlanes(),this.config=new ZP(this,t,"MiniMap")}get lockRotation(){return this._lockRotation}set lockRotation(e){this._lockRotation=e,e&&(this._camera.rotation.z=0)}get zoom(){return this._camera.zoom}set zoom(e){this._camera.zoom=e,this._camera.updateProjectionMatrix()}dispose(){this.enabled=!1,this.onBeforeUpdate.reset(),this.onAfterUpdate.reset(),this.onResize.reset(),this.overrideMaterial.dispose(),this.renderer.forceContextLoss(),this.renderer.dispose(),this.onDisposed.trigger(),this.onDisposed.reset()}get(){return this._camera}update(){if(!this.enabled)return;this.onBeforeUpdate.trigger();const e=this.world.scene.three,t=this.world.camera;if(!t.hasCameraControls())throw new Error("The given world must use camera controls!");if(!(e instanceof Hr))throw new Error("The given world must have a THREE.Scene as a root!");const i=t.controls;if(i.getPosition(this._tempVector1),this._camera.position.x=this._tempVector1.x,this._camera.position.z=this._tempVector1.z,this.frontOffset!==0&&(i.getTarget(this._tempVector2),this._tempVector2.sub(this._tempVector1),this._tempVector2.normalize().multiplyScalar(this.frontOffset),this._camera.position.x+=this._tempVector2.x,this._camera.position.z+=this._tempVector2.z),!this._lockRotation){i.getTarget(this._tempTarget);const r=Math.atan2(this._tempTarget.x-this._tempVector1.x,this._tempTarget.z-this._tempVector1.z);this._camera.rotation.z=r+Math.PI}this._plane.set(this.down,this._tempVector1.y);const n=e.background;e.background=this.backgroundColor,this.renderer.render(e,this._camera),e.background=n,this.onAfterUpdate.trigger()}getSize(){return this._size}resize(e=this._size){this._size.copy(e),this.renderer.setSize(e.x,e.y);const t=e.x/e.y,i=1;this._camera.left=i*t/-2,this._camera.right=i*t/2,this._camera.top=i/2,this._camera.bottom=-i/2,this._camera.updateProjectionMatrix(),this.onResize.trigger(e)}setup(e){const t={...this._defaultConfig,...e};this.config.visible=!0,this.config.lockRotation=t.lockRotation,this.config.zoom=t.zoom,this.config.frontOffset=t.frontOffset,this.config.sizeX=t.sizeX,this.config.sizeY=t.sizeY,this.config.backgroundColor=t.backgroundColor,this.isSetup=!0,this.onSetup.trigger()}}const qP=class qv extends Ke{constructor(e){super(e),F(this,"onAfterUpdate",new oe),F(this,"onBeforeUpdate",new oe),F(this,"onDisposed",new oe),F(this,"onSetup",new oe),F(this,"enabled",!0),F(this,"list",new Map),this.components.add(qv.uuid,this)}create(e){if(this.list.has(e.uuid))throw new Error("This world already has a minimap!");const t=new jP(e,this.components);return this.list.set(e.uuid,t),t}delete(e){const t=this.list.get(e);t&&t.dispose(),this.list.delete(e)}dispose(){for(const[e,t]of this.list)t.dispose();this.list.clear(),this.onDisposed.trigger()}update(){for(const[e,t]of this.list)t.update()}};F(qP,"uuid","39ad6aad-84c8-4adf-a1e0-7f25313a9e7f");const Kv=class Qv extends Ke{constructor(e){super(e),F(this,"enabled",!0),e.add(Qv.uuid,this)}static distanceFromPointToLine(e,t,i,n=!1){const r=new xt,o=new P;return r.set(t,i),r.closestPointToPoint(e,n,o),o.distanceTo(e)}getFace(e,t,i){if(!e.geometry.index)throw new Error("Geometry must be indexed!");const n=new Map,r=e.geometry.index.array,{plane:o}=this.getFaceData(t,i,e),a=[];for(let d=0;d<r.length/3;d++){const{plane:u,edges:f}=this.getFaceData(d,i,e);if(u.equals(o)){a.push({index:d,edges:f});for(const{id:m,points:g,distance:E}of f)n.set(m,{points:g,distance:E})}}let l=0;const c=new Map,h=new Map;for(const{index:d,edges:u}of a){const f=new Map;for(const{id:_}of u)if(c.has(_)){const b=c.get(_);f.set(_,b)}const m=u.map(_=>_.id);if(!f.size){const _=l++;for(const{id:b}of u)c.set(b,_);h.set(_,{edges:new Set(m),indices:new Set([d])});continue}let g=null;const E=new Set,p=new Set(m);for(const[_,b]of f){g===null?g=b:b!==g&&E.add(b),c.delete(_);const{edges:T}=h.get(b);T.delete(_),p.delete(_)}if(g===null)throw new Error("Error computing face!");const v=h.get(g),{indices:I}=v;I.add(d);for(const _ of p){c.set(_,g);const{edges:b}=v;b.add(_)}for(const _ of E){const b=h.get(_),{edges:T,indices:w}=b,A=h.get(g),{edges:y,indices:C}=A;for(const M of T)y.add(M),c.set(M,g);for(const M of w)C.add(M);h.delete(_)}}for(const[d,{indices:u,edges:f}]of h)if(u.has(t)){const m=[];for(const g of f){const E=n.get(g);m.push(E)}return{edges:m,indices:u}}return null}getVerticesAndNormal(e,t,i){if(!e.geometry.index)throw new Error("Geometry must be indexed!");const n=e.geometry.index.array,r=e.geometry.attributes.position.array,o=e.geometry.attributes.normal.array,a=n[t*3]*3,l=n[t*3+1]*3,c=n[t*3+2]*3,h=new P(r[a],r[a+1],r[a+2]),d=new P(r[l],r[l+1],r[l+2]),u=new P(r[c],r[c+1],r[c+2]),f=new P(o[a],o[a+1],o[a+2]),m=new P(o[l],o[l+1],o[l+2]),g=new P(o[c],o[c+1],o[c+2]),E=(f.x+m.x+g.x)/3,p=(f.y+m.y+g.y)/3,v=(f.z+m.z+g.z)/3,I=new P(E,p,v);if(i!==void 0&&e instanceof ji){const _=new _e;e.getMatrixAt(i,_);const b=new _e;b.extractRotation(_),I.applyMatrix4(b),h.applyMatrix4(_),d.applyMatrix4(_),u.applyMatrix4(_)}return{p1:h,p2:d,p3:u,faceNormal:I}}round(e){e.x=Math.trunc(e.x*1e3)/1e3,e.y=Math.trunc(e.y*1e3)/1e3,e.z=Math.trunc(e.z*1e3)/1e3}getVolumeFromFragments(e){const t=this.components.get($e),i=new _e,n=[];for(const o in e){const a=t.list.get(o);if(!a)continue;const l=e[o];let c=0;for(const u of l){const f=a.getInstancesIDs(u);f&&(c+=f.size)}const h=new ji(a.mesh.geometry,void 0,c);let d=0;for(const u of l){const f=a.getInstancesIDs(u);if(f)for(const m of f)a.mesh.getMatrixAt(m,i),h.setMatrixAt(d++,i)}n.push(h)}const r=this.getVolumeFromMeshes(n);for(const o of n)o.geometry=null,o.material=[],o.dispose();return r}getVolumeFromMeshes(e){let t=0;for(const i of e)t+=this.getVolumeOfMesh(i);return t}getFaceData(e,t,i){const n=this.getVerticesAndNormal(i,e,t),{p1:r,p2:o,p3:a,faceNormal:l}=n;this.round(r),this.round(o),this.round(a),this.round(l);const c=[{id:`${r.x}|${r.y}|${r.z}`,value:r},{id:`${o.x}|${o.y}|${o.z}`,value:o},{id:`${a.x}|${a.y}|${a.z}`,value:a}];c.sort((v,I)=>v.id<I.id?-1:v.id>I.id?1:0);const[{id:h,value:d},{id:u,value:f},{id:m,value:g}]=c,E=[{id:`${h}|${u}`,distance:d.distanceTo(f),points:[d,f]},{id:`${u}|${m}`,distance:f.distanceTo(g),points:[f,g]},{id:`${h}|${m}`,distance:d.distanceTo(g),points:[d,g]}],p=new ri;return p.setFromNormalAndCoplanarPoint(l,r),p.constant=Math.round(p.constant*10)/10,{plane:p,edges:E}}getVolumeOfMesh(e){let t=0;const i=new P,n=new P,r=new P,{index:o}=e.geometry,a=e.geometry.attributes.position.array;if(!o)return console.warn("Geometry must be indexed to compute its volume!"),0;const l=[];if(e instanceof ji)for(let h=0;h<e.count;h++){const d=new _e;e.getMatrixAt(h,d),l.push(d)}else l.push(new _e().identity());const{matrixWorld:c}=e;for(let h=0;h<o.array.length-2;h+=3)for(const d of l){const u=d.multiply(c),f=o.array[h]*3,m=o.array[h+1]*3,g=o.array[h+2]*3;i.set(a[f],a[f+1],a[f+2]).applyMatrix4(u),n.set(a[m],a[m+1],a[m+2]).applyMatrix4(u),r.set(a[g],a[g+1],a[g+2]).applyMatrix4(u),t+=this.getSignedVolumeOfTriangle(i,n,r)}return Math.abs(t)}getSignedVolumeOfTriangle(e,t,i){const n=i.x*t.y*e.z,r=t.x*i.y*e.z,o=i.x*e.y*t.z,a=e.x*i.y*t.z,l=t.x*e.y*i.z,c=e.x*t.y*i.z;return 1/6*(-n+r+o-a-l+c)}};F(Kv,"uuid","267ca032-672f-4cb0-afa9-d24e904f39d6");let Or=Kv;class Ou{constructor(e){F(this,"cardinality","required"),F(this,"instructions"),F(this,"evalRequirement",(t,i,n,r)=>{const o={parameter:n,currentValue:t,requiredValue:i.parameter,pass:!1};r&&this.addCheckResult(o,r);let a=!1;if(i.type==="simple"&&(a=t===i.parameter),i.type==="enumeration"&&(a=i.parameter.includes(t)),i.type==="pattern"&&(a=new RegExp(i.parameter).test(String(t))),i.type==="length"){const{min:l,length:c,max:h}=i.parameter;c!==void 0&&(a=String(t).length===c),l!==void 0&&(a=String(t).length>=l),h!==void 0&&(a=String(t).length<=h)}if(i.type==="bounds"&&typeof t=="number"){const{min:l,minInclusive:c,max:h,maxInclusive:d}=i.parameter;let u=!0,f=!0;l!==void 0&&(u=c?t>=l:t>l),h!==void 0&&(f=d?t<=h:t<h),a=u&&f}return this.cardinality==="prohibited"&&(a=!a),this.cardinality==="optional"&&(a=!0),o.pass=a,o.pass}),F(this,"testResult",[]),this.components=e}addCheckResult(e,t){const i=t.findIndex(({parameter:n})=>n===e.parameter);i!==-1?t[i]=e:t.push(e)}saveResult(e,t){const{GlobalId:i}=e;if(!i)return;const{value:n}=i,r={expressID:n,pass:t,checks:[],cardinality:this.cardinality};this.testResult.push(r)}}const ys=(s,e)=>{let t="";if(!e)return t;if(e.type==="simple"&&(t=`<simpleValue>${e.parameter}</simpleValue>`),e.type==="enumeration"&&(t=`<xs:restriction base="xs:string">
    ${e.parameter.map(i=>`<xs:enumeration value="${i}" />`).join(`
`)}
    </xs:restriction>`),e.type==="pattern"&&(t=`<xs:restriction base="xs:string">
      <xs:pattern value="${e.parameter}" />
    </xs:restriction>`),e.type==="bounds"){const{min:i,minInclusive:n,max:r,maxInclusive:o}=e.parameter;let a="";i!==void 0&&(a=`<xs:min${n?"Inclusive":"Exclusive"} value="${i}">`);let l="";r!==void 0&&(l=`<xs:max${o?"Inclusive":"Exclusive"} value="${r}">`),t=`<xs:restriction base="xs:double">
      ${a}
      ${l}
    </xs:restriction>`}if(e.type==="length"){const{length:i,min:n,max:r}=e.parameter;let o="";i!==void 0&&n===void 0&&r===void 0&&(o=`<xs:length value="${i}" />`);let a="";n!==void 0&&i===void 0&&(a=`<xs:minLength value="${n}" />`);let l="";r!==void 0&&i===void 0&&(l=`<xs:maxLength value="${r}" />`),t=`<xs:restriction base="xs:string">
      ${o}
      ${a}
      ${l}
    </xs:restriction>`}return`<${s[0].toLowerCase()+s.slice(1)}>
    ${t}
  </${s[0].toLowerCase()+s.slice(1)}>`};class KP extends Ou{constructor(e,t){super(e),F(this,"facetType","Attribute"),F(this,"name"),F(this,"value"),this.name=t}serialize(e){const t=ys("Name",this.name),i=ys("Value",this.value);let n="";return e==="requirement"&&(n+=`cardinality="${this.cardinality}"`,n+=this.instructions?`instructions="${this.instructions}"`:""),`<attribute ${n}>
  ${t}
  ${i}
</attribute>`}async getEntities(){return[]}async test(e){var t;this.testResult=[];for(const n in e){const r=Number(n),o=e[r],a=[],l={guid:(t=o.GlobalId)==null?void 0:t.value,expressID:r,pass:!1,checks:a,cardinality:this.cardinality};this.testResult.push(l);const c=Object.keys(o).filter(d=>{const u=this.evalRequirement(d,this.name,"Name"),f=o[d];return u&&f===null?this.cardinality==="optional"||this.cardinality==="prohibited":u&&(f==null?void 0:f.type)===3&&f.value===2||u&&Array.isArray(f)&&f.length===0||u&&(f==null?void 0:f.type)===1&&f.value.trim()===""?!1:u}),h=c.length>0;if(a.push({parameter:"Name",currentValue:h?c[0]:null,requiredValue:this.name.parameter,pass:this.cardinality==="prohibited"?!h:h}),this.value)if(c[0]){const d=o[c[0]];(d==null?void 0:d.type)===5?a.push({parameter:"Value",currentValue:null,requiredValue:this.value.parameter,pass:this.cardinality==="prohibited"}):this.evalRequirement(d?d.value:null,this.value,"Value",a)}else a.push({parameter:"Value",currentValue:null,requiredValue:this.value.parameter,pass:this.cardinality==="prohibited"});l.pass=a.every(({pass:d})=>d)}const i=[...this.testResult];return this.testResult=[],i}}class QP extends Ou{constructor(e,t){super(e),F(this,"facetType","Classification"),F(this,"system"),F(this,"value"),F(this,"uri"),this.system=t}serialize(e){const t=ys("System",this.system),i=ys("Value",this.value);let n="";return e==="requirement"&&(n+=`cardinality="${this.cardinality}"`,n+=this.uri?`uri=${this.uri}`:"",n+=this.instructions?`instructions="${this.instructions}"`:""),`<classification ${n}>
  ${t}
  ${i}
</classification>`}async getEntities(e,t={}){var i;const n=[],r=await e.getAllPropertiesOfType(qn),o=await e.getAllPropertiesOfType(Wr),a={...r,...o},l=[];for(const h in a){const d=Number(h),u=await e.getProperties(d);if(!u)continue;const f=(i=u.ReferencedSource)==null?void 0:i.value;if(!f)continue;const m=await e.getProperties(f);!m||!this.evalSystem(m)||!this.evalValue(u)||!this.evalURI(u)||l.push(d)}const c=this.components.get(qi);for(const h of l){const d=c.getEntitiesWithRelation(e,"HasAssociations",h);for(const u of d){if(u in t)continue;const f=await e.getProperties(u);f&&(t[u]=f,n.push(u))}}return n}async test(e,t){var i;this.testResult=[];for(const r in e){const o=Number(r),a=e[o],l=[],c={guid:(i=a.GlobalId)==null?void 0:i.value,expressID:o,pass:!1,checks:l,cardinality:this.cardinality};this.testResult.push(c);let h=!0;const d=await this.getSystems(t,o),u=d.map(f=>this.getSystemName(f)).filter(f=>f);for(const f of d){if(!this.evalSystem(f,l))continue;if(h=!1,!(this.value&&this.system))break;if(f.type!==qn)continue;const m=!this.value||this.evalValue(f,l),g=!this.uri||this.evalURI(f,l);if(m&&g)break}h&&this.addCheckResult({parameter:"System",currentValue:u,requiredValue:this.system,pass:this.cardinality==="optional"},l),c.pass=l.every(({pass:f})=>f)}const n=[...this.testResult];return this.testResult=[],n}async processReferencedSource(e,t){var i;const n=(i=t.ReferencedSource)==null?void 0:i.value;if(!n)return null;const r=await e.getProperties(n);return r?(r.type===qn&&(r.ReferencedSource=await this.processReferencedSource(e,r)),r):null}async getSystems(e,t){var i;const n=[],r=this.components.get(qi),o=r.getEntityRelations(e,t,"HasAssociations");if(o)for(const d of o){const u=await e.getProperties(d);u&&(u.type===Wr&&n.push(u),u.type===qn&&(u.ReferencedSource=await this.processReferencedSource(e,u),u.ReferencedSource&&n.push(u)))}const a=n.map(d=>{var u,f,m;return d.type===Wr?(u=d.Name)==null?void 0:u.value:d.type===qn?(m=(f=d.ReferencedSource)==null?void 0:f.Name)==null?void 0:m.value:null}).filter(d=>d),l=r.getEntityRelations(e,t,"IsTypedBy");if(!(l&&l[0]))return n;const c=l[0],h=r.getEntityRelations(e,c,"HasAssociations");if(h)for(const d of h){const u=await e.getProperties(d);if(u){if(u.type===Wr){if(a.includes((i=u.Name)==null?void 0:i.value))continue;n.push(u)}u.type===qn&&(u.ReferencedSource=await this.processReferencedSource(e,u),u.ReferencedSource&&n.push(u))}}return n}getSystemName(e){var t,i,n,r;if(e.type===Wr)return(t=e.Name)==null?void 0:t.value;if(e.type===qn){if(((i=e.ReferencedSource)==null?void 0:i.type)===qn)return this.getSystemName(e.ReferencedSource);if(((n=e.ReferencedSource)==null?void 0:n.type)===Wr)return(r=e.ReferencedSource.Name)==null?void 0:r.value}return null}getAllReferenceIdentifications(e){if(e.type!==qn)return null;const t=[];if(e.Identification&&t.push(e.Identification.value),e.ReferencedSource){const i=this.getAllReferenceIdentifications(e.ReferencedSource);i&&t.push(...i)}return t}evalSystem(e,t){const i=this.getSystemName(e);return this.evalRequirement(i,this.system,"System",t)}evalValue(e,t){if(!this.value)return!0;const i=this.getAllReferenceIdentifications(e);if(!i)return!1;const n=i.find(r=>this.value?this.evalRequirement(r,this.value,"Value"):!1);return t&&this.addCheckResult({parameter:"Value",currentValue:n??null,requiredValue:this.value,pass:!!n},t),!!n}evalURI(e,t){var i;return this.uri?this.evalRequirement((i=e.Location)==null?void 0:i.value,{type:"simple",parameter:this.uri},"URI",t):!0}}class JP extends Ou{constructor(e,t){super(e),F(this,"facetType","Entity"),F(this,"name"),F(this,"predefinedType"),this.name=t}serialize(e){const t=ys("Name",this.name),i=ys("Name",this.predefinedType);let n="";return e==="requirement"&&(n+=`cardinality="${this.cardinality}"`,n+=this.instructions?`instructions="${this.instructions}"`:""),`<entity ${n}>
  ${t}
  ${i}
</entity>`}async getEntities(e,t={}){const i=Object.entries(cu),n=[];for(const[a]of i)await this.evalName({type:a})&&n.push(Number(a));let r={};for(const a of n){const l=await e.getAllPropertiesOfType(a);l&&(r={...r,...l})}if(!this.predefinedType){for(const a in r)a in t||(t[a]=r[a]);return Object.keys(r).map(Number)}const o=[];for(const a in r){const l=Number(a);if(l in t)continue;const c=r[l];await this.evalPredefinedType(e,c)&&(t[l]=c,o.push(l))}return o}async test(e,t){var i;this.testResult=[];for(const n in e){const r=Number(n),o=e[r],a=[],l={guid:(i=o.GlobalId)==null?void 0:i.value,expressID:r,pass:!1,checks:a,cardinality:this.cardinality};this.testResult.push(l),await this.evalName(o,a),await this.evalPredefinedType(t,o,a),l.pass=a.every(({pass:c})=>c)}return this.testResult}async evalName(e,t){const i=cu[e.type];return this.evalRequirement(i,this.name,"Name",t)}async evalPredefinedType(e,t,i){var n,r,o,a;if(!this.predefinedType)return null;const l=this.components.get(qi),c=typeof this.predefinedType.parameter=="string"&&this.predefinedType.parameter==="USERDEFINED";let h=(n=t.PredefinedType)==null?void 0:n.value;if(h==="USERDEFINED"&&!c){const d=Object.keys(t).find(u=>/^((?!Predefined).)*Type$/.test(u));h=d?(r=t[d])==null?void 0:r.value:"USERDEFINED"}if(!h){const d=l.getEntityRelations(e,t.expressID,"IsTypedBy");if(d&&d[0]){const u=await e.getProperties(d[0]);if(u&&(h=(o=u.PredefinedType)==null?void 0:o.value,h==="USERDEFINED"&&!c)){const f=Object.keys(u).find(m=>/^((?!Predefined).)*Type$/.test(m));h=f?(a=u[f])==null?void 0:a.value:"USERDEFINED"}}}return this.evalRequirement(h,this.predefinedType,"PredefinedType",i)}}class $P extends Ou{constructor(e,t,i){super(e),F(this,"facetType","Property"),F(this,"propertySet"),F(this,"baseName"),F(this,"value"),F(this,"dataType"),F(this,"uri"),F(this,"_unsupportedTypes",[Jb,$b]),this.propertySet=t,this.baseName=i}serialize(e){const t=ys("PropertySet",this.propertySet),i=ys("BaseName",this.baseName),n=ys("Value",this.value),r=this.dataType?`dataType=${this.dataType}`:"";let o="";return e==="requirement"&&(o+=`cardinality="${this.cardinality}"`,o+=this.uri?`uri=${this.uri}`:"",o+=this.instructions?`instructions="${this.instructions}"`:""),`<property ${r} ${o}>
  ${t}
  ${i}
  ${n}
</property>`}async getEntities(e,t={}){var i,n;let r={};const o=await e.getAllPropertiesOfType(Xo);r={...r,...o};const a=await e.getAllPropertiesOfType(Mh);if(r={...r,...a},Object.keys(r).length===0)return[];const l=[];for(const h in r){const d=Number(h),u=await e.getProperties(d);if(!u||((i=u.Name)==null?void 0:i.value)!==this.propertySet.parameter)continue;let f;if(u.type===Xo&&(f="HasProperties"),u.type===Mh&&(f="Quantities"),!!f)for(const m of u[f]){const g=await e.getProperties(m.value);if(!(!g||((n=g.Name)==null?void 0:n.value)!==this.baseName.parameter)){if(this.value){const E=Object.keys(g).find(p=>p.endsWith("Value"));if(!E||g[E].value!==this.value.parameter)continue}l.push(d)}}}const c=this.components.get(qi);for(const h of l){const d=c.getEntitiesWithRelation(e,"IsDefinedBy",h);for(const u of d){if(u in t)continue;const f=await e.getProperties(u);f&&(t[u]=f)}}return[]}async test(e,t){var i;this.testResult=[];for(const r in e){const o=Number(r),a=e[o],l=[],c={guid:(i=a.GlobalId)==null?void 0:i.value,expressID:o,pass:!1,checks:l,cardinality:this.cardinality};this.testResult.push(c);const h=(await this.getPsets(t,o)).filter(d=>this.evalRequirement(d.Name??null,this.propertySet,"PropertySet")?(l.push({currentValue:d.Name,parameter:"PropertySet",pass:!0,requiredValue:this.propertySet.parameter}),!0):!1);if(h.length===0){l.push({currentValue:null,parameter:"PropertySet",pass:!1,requiredValue:this.propertySet.parameter});continue}for(const d of h){if(!("Properties"in d)){l.push({currentValue:null,parameter:"BaseName",pass:!1,requiredValue:this.baseName.parameter});continue}const u=d.Properties.filter(f=>{var m;return this._unsupportedTypes.includes(f.type)||!this.evalRequirement(((m=f.Name)==null?void 0:m.value)??null,this.baseName,"BaseName")?!1:(l.push({currentValue:f.Name.value,parameter:"BaseName",pass:!0,requiredValue:this.baseName.parameter}),!0)});if(u.length===0){l.push({currentValue:null,parameter:"BaseName",pass:!1,requiredValue:this.baseName.parameter});continue}for(const f of u)this.evalValue(f,l),this.evalDataType(f,l),this.evalURI()}c.pass=l.every(({pass:d})=>d)}const n=[...this.testResult];return this.testResult=[],n}getItemsAttrName(e){let t;return e===Xo&&(t="HasProperties"),e===Mh&&(t="Quantities"),t}getValueKey(e){return Object.keys(e).find(t=>t.endsWith("Value")||t.endsWith("Values"))}async simplifyPset(e,t,i){var n;const r=[],o=t[i];if(!o)return t;for(const{value:a}of o){const l=await e.getProperties(a);l&&r.push(l)}return{Name:(n=t.Name)==null?void 0:n.value,Properties:r,type:t.type}}async getTypePsets(e,t){const i=[],n=this.components.get(qi).getEntityRelations(e,t,"IsTypedBy");if(!(n&&n[0]))return i;const r=await e.getProperties(n[0]);if(!(r&&"HasPropertySets"in r&&Array.isArray(r.HasPropertySets)))return i;for(const{value:o}of r.HasPropertySets){const a=await e.getProperties(o);if(!(a&&"HasProperties"in a&&Array.isArray(a.HasProperties)))continue;const l=await this.simplifyPset(e,a,"HasProperties");i.push(l)}return i}async getPsets(e,t){var i;const n=await this.getTypePsets(e,t),r=this.components.get(qi).getEntityRelations(e,t,"IsDefinedBy");if(!r)return n;const o=[];for(const a of r){const l=await e.getProperties(a);if(!l)continue;const c=this.getItemsAttrName(l.type);if(!c)continue;const h=await this.simplifyPset(e,l,c),d=n.find(({Name:u})=>u===h.Name);if(d)for(const u of d.Properties){const f=(i=u.Name)==null?void 0:i.value;h.Properties.find(({Name:m})=>m.value===f)||h.Properties.push(u)}o.push(h)}return o}evalValue(e,t){const i=this.getValueKey(e),n=e[i];if(this.value){if(!n)return t==null||t.push({parameter:"Value",currentValue:null,pass:!1,requiredValue:this.value.parameter}),!1;const r=structuredClone(this.value);if(n.name==="IFCLABEL"&&r.type==="simple"&&(r.parameter=String(r.parameter)),(e.type===ug||e.type===dg)&&Array.isArray(n)){const o=n.map(l=>l.value),a=n.find(l=>r?this.evalRequirement(l.value,r,"Value"):!1);return t==null||t.push({currentValue:o,pass:!!a,parameter:"Value",requiredValue:r.parameter}),!!a}return this.evalRequirement(n.value,r,"Value",t)}return i?n.type===3&&n.value===2?(t==null||t.push({parameter:"Value",currentValue:null,pass:!1,requiredValue:null}),!1):n.type===1&&n.value.trim()===""?(t==null||t.push({parameter:"Value",currentValue:"",pass:!1,requiredValue:null}),!1):!0:!0}evalDataType(e,t){if(!this.dataType)return!0;const i=this.getValueKey(e),n=e[i];if(!n)return t==null||t.push({parameter:"DataType",currentValue:null,pass:!1,requiredValue:this.dataType}),!1;if((e.type===ug||e.type===dg)&&Array.isArray(n)&&n[0]){const r=n[0].name;return this.evalRequirement(r,{type:"simple",parameter:this.dataType},"DataType",t)}return this.evalRequirement(n.name,{type:"simple",parameter:this.dataType},"DataType",t)}evalURI(){return!0}}class eO{constructor(e,t,i){F(this,"name"),F(this,"ifcVersion",new Set),F(this,"identifier",ws.create()),F(this,"description"),F(this,"instructions"),F(this,"requirementsDescription"),F(this,"applicability",new qs),F(this,"requirements",new qs),F(this,"components"),this.components=e,this.name=t;for(const n of i)this.ifcVersion.add(n)}set(e){const t=e,i=this;for(const n in e){if(n==="identifier")continue;const r=t[n];n in this&&(i[n]=r)}return this.components.get(sO).list.set(this.identifier,this),this}async test(e){let t=[];if(this.requirements.size===0)return t;const i={};for(const n of this.applicability)await n.getEntities(e,i);return t=await[...this.requirements][0].test(i,e),t}serialize(){const e=`name="${this.name}"`,t=this.identifier?`identifier="${this.identifier}"`:"",i=this.description?`description="${this.description}"`:"",n=this.instructions?`instructions="${this.instructions}"`:"";return`<specification ifcVersion="${[...this.ifcVersion].join(" ")}" ${e} ${t} ${i} ${n}>
      <applicability minOccurs="1" maxOccurs="unbounded">
        ${[...this.applicability].map(r=>r.serialize("applicability")).join(`
`)}
      </applicability>
      <requirements>
        ${[...this.requirements].map(r=>r.serialize("requirement")).join(`
`)}
      </requirements>
    </specification>`}}const Ts=s=>{if(!s)return;const e={};if("simpleValue"in s&&(e.type="simple",e.parameter=s.simpleValue),"restriction"in s){const t=s.restriction;if("pattern"in t&&(e.type="pattern",e.parameter=t.pattern.value),"enumeration"in t){e.type="enumeration";const i=t.enumeration.map(({value:n})=>n);e.parameter=i}}if(e.parameter!==void 0)return e},fI=(s,e)=>{const t=[];for(const i of e){const n=i.name,r=Ts(n);if(!r)continue;const o=new JP(s,r);i.cardinality&&(o.cardinality=i.cardinality),o.predefinedType=Ts(i.predefinedType),o.instructions=i.instructions,t.push(o)}return t},tO=(s,e)=>{const t=[];for(const i of e){const n=i.name,r=Ts(n);if(!r)continue;const o=new KP(s,r);i.cardinality&&(o.cardinality=i.cardinality),o.value=Ts(i.value),o.instructions=i.instructions,t.push(o)}return t},iO=(s,e)=>{const t=[];for(const i of e){const n=i.system,r=Ts(n);if(!r)continue;const o=new QP(s,r);i.cardinality&&(o.cardinality=i.cardinality);const a=Ts(i.value);(a==null?void 0:a.type)==="simple"&&(a.parameter=String(a.parameter)),(a==null?void 0:a.type)==="enumeration"&&Array.isArray(a.parameter)&&(a.parameter=a.parameter.map(String)),o.value=a,o.uri=i.uri,o.instructions=i.instructions,t.push(o)}return t},nO=(s,e)=>{const t=[];for(const i of e){const n=i.propertySet,r=i.baseName,o=Ts(n),a=Ts(r);if(!(a&&o))continue;const l=new $P(s,o,a);i.cardinality&&(l.cardinality=i.cardinality);const c=Ts(i.value);(c==null?void 0:c.type)==="enumeration"&&Array.isArray(c.parameter)&&(c.parameter=c.parameter.map(String)),l.value=c,l.dataType=i.dataType,l.uri=i.uri,l.instructions=i.instructions,t.push(l)}return t},eg=class qp extends Ke{constructor(e){super(e),F(this,"enabled",!0),F(this,"list",new Mn),e.add(qp.uuid,this)}getFragmentIdMap(e,t){const i=t.filter(a=>a.pass).map(a=>a.expressID),n=e.getFragmentMap(i),r=t.filter(a=>!a.pass).map(a=>a.expressID),o=e.getFragmentMap(r);return{pass:n,fail:o}}create(e,t,i){const n=new eO(this.components,e,t);return i&&(n.identifier=i),this.list.set(n.identifier,n),n}load(e){const t=[],i=qp.xmlParser.parse(e).ids,{specifications:n}=i;if(n&&n.specification){const r=Array.isArray(n.specification)?n.specification:[n.specification];for(const o of r){const{name:a,ifcVersion:l,description:c,instructions:h,identifier:d}=o;if(!(a&&l))continue;const u=[],f=[],{applicability:m,requirements:g}=o;if(m){const{maxOccurs:p,...v}=m,I=Array.isArray(v)?v:[v];for(const _ of I)for(const b in _){const T=Array.isArray(_[b])?_[b]:[_[b]];if(b==="entity"){const w=fI(this.components,T);u.push(...w)}}}let E;if(g){const{maxOccurs:p,...v}=g;E=g.description;const I=Array.isArray(v)?v:[v];for(const _ of I)for(const b in _){const T=Array.isArray(_[b])?_[b]:[_[b]];if(b==="entity"){const w=fI(this.components,T);f.push(...w)}if(b==="attribute"){const w=tO(this.components,T);f.push(...w)}if(b==="classification"){const w=iO(this.components,T);f.push(...w)}if(b==="property"){const w=nO(this.components,T);f.push(...w)}}}if(u.length>0&&f.length>0){const p=this.create(a,l.split(/\s+/),d);p.description=c,p.instructions=h,p.requirementsDescription=E,p.applicability.add(...u),p.requirements.add(...f),t.push(p)}}}return t}export(e,t=this.list.values()){const i=t??this.list;return`<ids xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://standards.buildingsmart.org/IDS http://standards.buildingsmart.org/IDS/1.0/ids.xsd" xmlns:ids="http://standards.buildingsmart.org/IDS">
  <!-- Made with That Open Engine ${J_.release} (https://github.com/thatopen/engine_components) -->
  <info>
    <title>${e.title}</title>
    ${e.copyright?`<copyright>${e.copyright}</copyright>`:""}
    ${e.version?`<version>${e.version}</version>`:""}
    ${e.description?`<description>${e.description}</description>`:""}
    ${e.author?`<author>${e.author}</author>`:""}
    ${e.date?`<date>${e.date.toISOString().split("T")[0]}</date>`:""}
    ${e.purpose?`<purpose>${e.purpose}</purpose>`:""}
    ${e.milestone?`<milestone>${e.milestone}</milestone>`:""}
  </info>
  <specifications>
    ${[...i].map(n=>n.serialize()).join(`
`)}
  </specifications>
</ids>`}};F(eg,"uuid","9f0b9f78-9b2e-481a-b766-2fbfd01f342c");F(eg,"xmlParser",new Mv.XMLParser({allowBooleanAttributes:!0,attributeNamePrefix:"",ignoreAttributes:!1,ignoreDeclaration:!0,ignorePiTags:!0,numberParseOptions:{leadingZeros:!0,hex:!0},parseAttributeValue:!0,preserveOrder:!1,processEntities:!1,removeNSPrefix:!0,trimValues:!0}));let sO=eg;const pI=new je,Ch=new P;class Jv extends cC{constructor(){super(),this.isLineSegmentsGeometry=!0,this.type="LineSegmentsGeometry";const e=[-1,2,0,1,2,0,-1,1,0,1,1,0,-1,0,0,1,0,0,-1,-1,0,1,-1,0],t=[-1,2,1,2,-1,1,1,1,-1,-1,1,-1,-1,-2,1,-2],i=[0,2,1,2,3,1,2,4,3,4,5,3,4,6,5,6,7,5];this.setIndex(i),this.setAttribute("position",new dt(e,3)),this.setAttribute("uv",new dt(t,2))}applyMatrix4(e){const t=this.attributes.instanceStart,i=this.attributes.instanceEnd;return t!==void 0&&(t.applyMatrix4(e),i.applyMatrix4(e),t.needsUpdate=!0),this.boundingBox!==null&&this.computeBoundingBox(),this.boundingSphere!==null&&this.computeBoundingSphere(),this}setPositions(e){let t;e instanceof Float32Array?t=e:Array.isArray(e)&&(t=new Float32Array(e));const i=new eu(t,6,1);return this.setAttribute("instanceStart",new Hn(i,3,0)),this.setAttribute("instanceEnd",new Hn(i,3,3)),this.instanceCount=this.attributes.instanceStart.count,this.computeBoundingBox(),this.computeBoundingSphere(),this}setColors(e){let t;e instanceof Float32Array?t=e:Array.isArray(e)&&(t=new Float32Array(e));const i=new eu(t,6,1);return this.setAttribute("instanceColorStart",new Hn(i,3,0)),this.setAttribute("instanceColorEnd",new Hn(i,3,3)),this}fromWireframeGeometry(e){return this.setPositions(e.attributes.position.array),this}fromEdgesGeometry(e){return this.setPositions(e.attributes.position.array),this}fromMesh(e){return this.fromWireframeGeometry(new aC(e.geometry)),this}fromLineSegments(e){const t=e.geometry;return this.setPositions(t.attributes.position.array),this}computeBoundingBox(){this.boundingBox===null&&(this.boundingBox=new je);const e=this.attributes.instanceStart,t=this.attributes.instanceEnd;e!==void 0&&t!==void 0&&(this.boundingBox.setFromBufferAttribute(e),pI.setFromBufferAttribute(t),this.boundingBox.union(pI))}computeBoundingSphere(){this.boundingSphere===null&&(this.boundingSphere=new vi),this.boundingBox===null&&this.computeBoundingBox();const e=this.attributes.instanceStart,t=this.attributes.instanceEnd;if(e!==void 0&&t!==void 0){const i=this.boundingSphere.center;this.boundingBox.getCenter(i);let n=0;for(let r=0,o=e.count;r<o;r++)Ch.fromBufferAttribute(e,r),n=Math.max(n,i.distanceToSquared(Ch)),Ch.fromBufferAttribute(t,r),n=Math.max(n,i.distanceToSquared(Ch));this.boundingSphere.radius=Math.sqrt(n),isNaN(this.boundingSphere.radius)&&console.error("THREE.LineSegmentsGeometry.computeBoundingSphere(): Computed radius is NaN. The instanced position data is likely to have NaN values.",this)}}toJSON(){}}xe.line={worldUnits:{value:1},linewidth:{value:1},resolution:{value:new Oe(1,1)},dashOffset:{value:0},dashScale:{value:1},dashSize:{value:1},gapSize:{value:1}};wi.line={uniforms:fa.merge([xe.common,xe.fog,xe.line]),vertexShader:`
		#include <common>
		#include <color_pars_vertex>
		#include <fog_pars_vertex>
		#include <logdepthbuf_pars_vertex>
		#include <clipping_planes_pars_vertex>

		uniform float linewidth;
		uniform vec2 resolution;

		attribute vec3 instanceStart;
		attribute vec3 instanceEnd;

		attribute vec3 instanceColorStart;
		attribute vec3 instanceColorEnd;

		#ifdef WORLD_UNITS

			varying vec4 worldPos;
			varying vec3 worldStart;
			varying vec3 worldEnd;

			#ifdef USE_DASH

				varying vec2 vUv;

			#endif

		#else

			varying vec2 vUv;

		#endif

		#ifdef USE_DASH

			uniform float dashScale;
			attribute float instanceDistanceStart;
			attribute float instanceDistanceEnd;
			varying float vLineDistance;

		#endif

		void trimSegment( const in vec4 start, inout vec4 end ) {

			// trim end segment so it terminates between the camera plane and the near plane

			// conservative estimate of the near plane
			float a = projectionMatrix[ 2 ][ 2 ]; // 3nd entry in 3th column
			float b = projectionMatrix[ 3 ][ 2 ]; // 3nd entry in 4th column
			float nearEstimate = - 0.5 * b / a;

			float alpha = ( nearEstimate - start.z ) / ( end.z - start.z );

			end.xyz = mix( start.xyz, end.xyz, alpha );

		}

		void main() {

			#ifdef USE_COLOR

				vColor.xyz = ( position.y < 0.5 ) ? instanceColorStart : instanceColorEnd;

			#endif

			#ifdef USE_DASH

				vLineDistance = ( position.y < 0.5 ) ? dashScale * instanceDistanceStart : dashScale * instanceDistanceEnd;
				vUv = uv;

			#endif

			float aspect = resolution.x / resolution.y;

			// camera space
			vec4 start = modelViewMatrix * vec4( instanceStart, 1.0 );
			vec4 end = modelViewMatrix * vec4( instanceEnd, 1.0 );

			#ifdef WORLD_UNITS

				worldStart = start.xyz;
				worldEnd = end.xyz;

			#else

				vUv = uv;

			#endif

			// special case for perspective projection, and segments that terminate either in, or behind, the camera plane
			// clearly the gpu firmware has a way of addressing this issue when projecting into ndc space
			// but we need to perform ndc-space calculations in the shader, so we must address this issue directly
			// perhaps there is a more elegant solution -- WestLangley

			bool perspective = ( projectionMatrix[ 2 ][ 3 ] == - 1.0 ); // 4th entry in the 3rd column

			if ( perspective ) {

				if ( start.z < 0.0 && end.z >= 0.0 ) {

					trimSegment( start, end );

				} else if ( end.z < 0.0 && start.z >= 0.0 ) {

					trimSegment( end, start );

				}

			}

			// clip space
			vec4 clipStart = projectionMatrix * start;
			vec4 clipEnd = projectionMatrix * end;

			// ndc space
			vec3 ndcStart = clipStart.xyz / clipStart.w;
			vec3 ndcEnd = clipEnd.xyz / clipEnd.w;

			// direction
			vec2 dir = ndcEnd.xy - ndcStart.xy;

			// account for clip-space aspect ratio
			dir.x *= aspect;
			dir = normalize( dir );

			#ifdef WORLD_UNITS

				vec3 worldDir = normalize( end.xyz - start.xyz );
				vec3 tmpFwd = normalize( mix( start.xyz, end.xyz, 0.5 ) );
				vec3 worldUp = normalize( cross( worldDir, tmpFwd ) );
				vec3 worldFwd = cross( worldDir, worldUp );
				worldPos = position.y < 0.5 ? start: end;

				// height offset
				float hw = linewidth * 0.5;
				worldPos.xyz += position.x < 0.0 ? hw * worldUp : - hw * worldUp;

				// don't extend the line if we're rendering dashes because we
				// won't be rendering the endcaps
				#ifndef USE_DASH

					// cap extension
					worldPos.xyz += position.y < 0.5 ? - hw * worldDir : hw * worldDir;

					// add width to the box
					worldPos.xyz += worldFwd * hw;

					// endcaps
					if ( position.y > 1.0 || position.y < 0.0 ) {

						worldPos.xyz -= worldFwd * 2.0 * hw;

					}

				#endif

				// project the worldpos
				vec4 clip = projectionMatrix * worldPos;

				// shift the depth of the projected points so the line
				// segments overlap neatly
				vec3 clipPose = ( position.y < 0.5 ) ? ndcStart : ndcEnd;
				clip.z = clipPose.z * clip.w;

			#else

				vec2 offset = vec2( dir.y, - dir.x );
				// undo aspect ratio adjustment
				dir.x /= aspect;
				offset.x /= aspect;

				// sign flip
				if ( position.x < 0.0 ) offset *= - 1.0;

				// endcaps
				if ( position.y < 0.0 ) {

					offset += - dir;

				} else if ( position.y > 1.0 ) {

					offset += dir;

				}

				// adjust for linewidth
				offset *= linewidth;

				// adjust for clip-space to screen-space conversion // maybe resolution should be based on viewport ...
				offset /= resolution.y;

				// select end
				vec4 clip = ( position.y < 0.5 ) ? clipStart : clipEnd;

				// back to clip space
				offset *= clip.w;

				clip.xy += offset;

			#endif

			gl_Position = clip;

			vec4 mvPosition = ( position.y < 0.5 ) ? start : end; // this is an approximation

			#include <logdepthbuf_vertex>
			#include <clipping_planes_vertex>
			#include <fog_vertex>

		}
		`,fragmentShader:`
		uniform vec3 diffuse;
		uniform float opacity;
		uniform float linewidth;

		#ifdef USE_DASH

			uniform float dashOffset;
			uniform float dashSize;
			uniform float gapSize;

		#endif

		varying float vLineDistance;

		#ifdef WORLD_UNITS

			varying vec4 worldPos;
			varying vec3 worldStart;
			varying vec3 worldEnd;

			#ifdef USE_DASH

				varying vec2 vUv;

			#endif

		#else

			varying vec2 vUv;

		#endif

		#include <common>
		#include <color_pars_fragment>
		#include <fog_pars_fragment>
		#include <logdepthbuf_pars_fragment>
		#include <clipping_planes_pars_fragment>

		vec2 closestLineToLine(vec3 p1, vec3 p2, vec3 p3, vec3 p4) {

			float mua;
			float mub;

			vec3 p13 = p1 - p3;
			vec3 p43 = p4 - p3;

			vec3 p21 = p2 - p1;

			float d1343 = dot( p13, p43 );
			float d4321 = dot( p43, p21 );
			float d1321 = dot( p13, p21 );
			float d4343 = dot( p43, p43 );
			float d2121 = dot( p21, p21 );

			float denom = d2121 * d4343 - d4321 * d4321;

			float numer = d1343 * d4321 - d1321 * d4343;

			mua = numer / denom;
			mua = clamp( mua, 0.0, 1.0 );
			mub = ( d1343 + d4321 * ( mua ) ) / d4343;
			mub = clamp( mub, 0.0, 1.0 );

			return vec2( mua, mub );

		}

		void main() {

			#include <clipping_planes_fragment>

			#ifdef USE_DASH

				if ( vUv.y < - 1.0 || vUv.y > 1.0 ) discard; // discard endcaps

				if ( mod( vLineDistance + dashOffset, dashSize + gapSize ) > dashSize ) discard; // todo - FIX

			#endif

			float alpha = opacity;

			#ifdef WORLD_UNITS

				// Find the closest points on the view ray and the line segment
				vec3 rayEnd = normalize( worldPos.xyz ) * 1e5;
				vec3 lineDir = worldEnd - worldStart;
				vec2 params = closestLineToLine( worldStart, worldEnd, vec3( 0.0, 0.0, 0.0 ), rayEnd );

				vec3 p1 = worldStart + lineDir * params.x;
				vec3 p2 = rayEnd * params.y;
				vec3 delta = p1 - p2;
				float len = length( delta );
				float norm = len / linewidth;

				#ifndef USE_DASH

					#ifdef USE_ALPHA_TO_COVERAGE

						float dnorm = fwidth( norm );
						alpha = 1.0 - smoothstep( 0.5 - dnorm, 0.5 + dnorm, norm );

					#else

						if ( norm > 0.5 ) {

							discard;

						}

					#endif

				#endif

			#else

				#ifdef USE_ALPHA_TO_COVERAGE

					// artifacts appear on some hardware if a derivative is taken within a conditional
					float a = vUv.x;
					float b = ( vUv.y > 0.0 ) ? vUv.y - 1.0 : vUv.y + 1.0;
					float len2 = a * a + b * b;
					float dlen = fwidth( len2 );

					if ( abs( vUv.y ) > 1.0 ) {

						alpha = 1.0 - smoothstep( 1.0 - dlen, 1.0 + dlen, len2 );

					}

				#else

					if ( abs( vUv.y ) > 1.0 ) {

						float a = vUv.x;
						float b = ( vUv.y > 0.0 ) ? vUv.y - 1.0 : vUv.y + 1.0;
						float len2 = a * a + b * b;

						if ( len2 > 1.0 ) discard;

					}

				#endif

			#endif

			vec4 diffuseColor = vec4( diffuse, alpha );

			#include <logdepthbuf_fragment>
			#include <color_fragment>

			gl_FragColor = vec4( diffuseColor.rgb, alpha );

			#include <tonemapping_fragment>
			#include <colorspace_fragment>
			#include <fog_fragment>
			#include <premultiplied_alpha_fragment>

		}
		`};class Vl extends Tt{constructor(e){super({type:"LineMaterial",uniforms:fa.clone(wi.line.uniforms),vertexShader:wi.line.vertexShader,fragmentShader:wi.line.fragmentShader,clipping:!0}),this.isLineMaterial=!0,this.setValues(e)}get color(){return this.uniforms.diffuse.value}set color(e){this.uniforms.diffuse.value=e}get worldUnits(){return"WORLD_UNITS"in this.defines}set worldUnits(e){e===!0?this.defines.WORLD_UNITS="":delete this.defines.WORLD_UNITS}get linewidth(){return this.uniforms.linewidth.value}set linewidth(e){this.uniforms.linewidth&&(this.uniforms.linewidth.value=e)}get dashed(){return"USE_DASH"in this.defines}set dashed(e){e===!0!==this.dashed&&(this.needsUpdate=!0),e===!0?this.defines.USE_DASH="":delete this.defines.USE_DASH}get dashScale(){return this.uniforms.dashScale.value}set dashScale(e){this.uniforms.dashScale.value=e}get dashSize(){return this.uniforms.dashSize.value}set dashSize(e){this.uniforms.dashSize.value=e}get dashOffset(){return this.uniforms.dashOffset.value}set dashOffset(e){this.uniforms.dashOffset.value=e}get gapSize(){return this.uniforms.gapSize.value}set gapSize(e){this.uniforms.gapSize.value=e}get opacity(){return this.uniforms.opacity.value}set opacity(e){this.uniforms&&(this.uniforms.opacity.value=e)}get resolution(){return this.uniforms.resolution.value}set resolution(e){this.uniforms.resolution.value.copy(e)}get alphaToCoverage(){return"USE_ALPHA_TO_COVERAGE"in this.defines}set alphaToCoverage(e){this.defines&&(e===!0!==this.alphaToCoverage&&(this.needsUpdate=!0),e===!0?this.defines.USE_ALPHA_TO_COVERAGE="":delete this.defines.USE_ALPHA_TO_COVERAGE)}}const ff=new ct,mI=new P,gI=new P,ai=new ct,li=new ct,Nn=new ct,pf=new P,mf=new _e,di=new xt,EI=new P,xh=new je,wh=new vi,Un=new ct;let Gn,Lr;function II(s,e,t){return Un.set(0,0,-e,1).applyMatrix4(s.projectionMatrix),Un.multiplyScalar(1/Un.w),Un.x=Lr/t.width,Un.y=Lr/t.height,Un.applyMatrix4(s.projectionMatrixInverse),Un.multiplyScalar(1/Un.w),Math.abs(Math.max(Un.x,Un.y))}function rO(s,e){const t=s.matrixWorld,i=s.geometry,n=i.attributes.instanceStart,r=i.attributes.instanceEnd,o=Math.min(i.instanceCount,n.count);for(let a=0,l=o;a<l;a++){di.start.fromBufferAttribute(n,a),di.end.fromBufferAttribute(r,a),di.applyMatrix4(t);const c=new P,h=new P;Gn.distanceSqToSegment(di.start,di.end,h,c),h.distanceTo(c)<Lr*.5&&e.push({point:h,pointOnLine:c,distance:Gn.origin.distanceTo(h),object:s,face:null,faceIndex:a,uv:null,uv1:null})}}function oO(s,e,t){const i=e.projectionMatrix,n=s.material.resolution,r=s.matrixWorld,o=s.geometry,a=o.attributes.instanceStart,l=o.attributes.instanceEnd,c=Math.min(o.instanceCount,a.count),h=-e.near;Gn.at(1,Nn),Nn.w=1,Nn.applyMatrix4(e.matrixWorldInverse),Nn.applyMatrix4(i),Nn.multiplyScalar(1/Nn.w),Nn.x*=n.x/2,Nn.y*=n.y/2,Nn.z=0,pf.copy(Nn),mf.multiplyMatrices(e.matrixWorldInverse,r);for(let d=0,u=c;d<u;d++){if(ai.fromBufferAttribute(a,d),li.fromBufferAttribute(l,d),ai.w=1,li.w=1,ai.applyMatrix4(mf),li.applyMatrix4(mf),ai.z>h&&li.z>h)continue;if(ai.z>h){const p=ai.z-li.z,v=(ai.z-h)/p;ai.lerp(li,v)}else if(li.z>h){const p=li.z-ai.z,v=(li.z-h)/p;li.lerp(ai,v)}ai.applyMatrix4(i),li.applyMatrix4(i),ai.multiplyScalar(1/ai.w),li.multiplyScalar(1/li.w),ai.x*=n.x/2,ai.y*=n.y/2,li.x*=n.x/2,li.y*=n.y/2,di.start.copy(ai),di.start.z=0,di.end.copy(li),di.end.z=0;const f=di.closestPointToPointParameter(pf,!0);di.at(f,EI);const m=Nr.lerp(ai.z,li.z,f),g=m>=-1&&m<=1,E=pf.distanceTo(EI)<Lr*.5;if(g&&E){di.start.fromBufferAttribute(a,d),di.end.fromBufferAttribute(l,d),di.start.applyMatrix4(r),di.end.applyMatrix4(r);const p=new P,v=new P;Gn.distanceSqToSegment(di.start,di.end,v,p),t.push({point:v,pointOnLine:p,distance:Gn.origin.distanceTo(v),object:s,face:null,faceIndex:d,uv:null,uv1:null})}}}class aO extends Te{constructor(e=new Jv,t=new Vl({color:Math.random()*16777215})){super(e,t),this.isLineSegments2=!0,this.type="LineSegments2"}computeLineDistances(){const e=this.geometry,t=e.attributes.instanceStart,i=e.attributes.instanceEnd,n=new Float32Array(2*t.count);for(let o=0,a=0,l=t.count;o<l;o++,a+=2)mI.fromBufferAttribute(t,o),gI.fromBufferAttribute(i,o),n[a]=a===0?0:n[a-1],n[a+1]=n[a]+mI.distanceTo(gI);const r=new eu(n,2,1);return e.setAttribute("instanceDistanceStart",new Hn(r,1,0)),e.setAttribute("instanceDistanceEnd",new Hn(r,1,1)),this}raycast(e,t){const i=this.material.worldUnits,n=e.camera;n===null&&!i&&console.error('LineSegments2: "Raycaster.camera" needs to be set in order to raycast against LineSegments2 while worldUnits is set to false.');const r=e.params.Line2!==void 0&&e.params.Line2.threshold||0;Gn=e.ray;const o=this.matrixWorld,a=this.geometry,l=this.material;Lr=l.linewidth+r,a.boundingSphere===null&&a.computeBoundingSphere(),wh.copy(a.boundingSphere).applyMatrix4(o);let c;if(i)c=Lr*.5;else{const d=Math.max(n.near,wh.distanceToPoint(Gn.origin));c=II(n,d,l.resolution)}if(wh.radius+=c,Gn.intersectsSphere(wh)===!1)return;a.boundingBox===null&&a.computeBoundingBox(),xh.copy(a.boundingBox).applyMatrix4(o);let h;if(i)h=Lr*.5;else{const d=Math.max(n.near,xh.distanceToPoint(Gn.origin));h=II(n,d,l.resolution)}xh.expandByScalar(h),Gn.intersectsBox(xh)!==!1&&(i?rO(this,t):oO(this,n,t))}onBeforeRender(e){const t=this.material.uniforms;t&&t.resolution&&(e.getViewport(ff),this.material.uniforms.resolution.value.set(ff.z,ff.w))}}class uu extends Jv{constructor(){super(),this.isLineGeometry=!0,this.type="LineGeometry"}setPositions(e){const t=e.length-3,i=new Float32Array(2*t);for(let n=0;n<t;n+=3)i[2*n]=e[n],i[2*n+1]=e[n+1],i[2*n+2]=e[n+2],i[2*n+3]=e[n+3],i[2*n+4]=e[n+4],i[2*n+5]=e[n+5];return super.setPositions(i),this}setColors(e){const t=e.length-3,i=new Float32Array(2*t);for(let n=0;n<t;n+=3)i[2*n]=e[n],i[2*n+1]=e[n+1],i[2*n+2]=e[n+2],i[2*n+3]=e[n+3],i[2*n+4]=e[n+4],i[2*n+5]=e[n+5];return super.setColors(i),this}setFromPoints(e){const t=e.length-1,i=new Float32Array(6*t);for(let n=0;n<t;n++)i[6*n]=e[n].x,i[6*n+1]=e[n].y,i[6*n+2]=e[n].z||0,i[6*n+3]=e[n+1].x,i[6*n+4]=e[n+1].y,i[6*n+5]=e[n+1].z||0;return super.setPositions(i),this}fromLine(e){const t=e.geometry;return this.setPositions(t.attributes.position.array),this}}class $v extends aO{constructor(e=new uu,t=new Vl({color:Math.random()*16777215})){super(e,t),this.isLine2=!0,this.type="Line2"}}const eb=class tb{constructor(e,t){D(this,"scene"),D(this,"onSelect",new oe),D(this,"type"),D(this,"selectCurve"),D(this,"selectPoints"),D(this,"hoverCurve"),D(this,"hoverPoints"),D(this,"caster",new _u),this.scene=e,this.type=t,this.hoverCurve=this.newCurve(.003,4473924,!1),this.hoverPoints=this.newPoints(5,4473924),this.selectCurve=this.newCurve(.005,16777215,!0),this.selectPoints=this.newPoints(7,16777215)}dispose(){this.selectCurve&&this.scene.remove(this.selectCurve),this.selectCurve.material.dispose(),this.selectCurve.geometry.dispose(),this.selectCurve=null,this.hoverCurve.material.dispose(),this.hoverCurve.geometry.dispose(),this.hoverCurve=null,this.hoverPoints.material.dispose(),this.hoverPoints.geometry.dispose(),this.selectPoints.material.dispose(),this.selectPoints.geometry.dispose(),this.scene=null}castRay(e,t,i,n){const r=new Oe,o=i.getBoundingClientRect();r.x=(e.clientX-o.left)/o.width*2-1,r.y=-((e.clientY-o.top)/o.height)*2+1,this.caster.setFromCamera(r,t);const a=this.caster.intersectObjects(n);return a.length?a[0]:null}select(e){this.highlight(e,this.selectCurve,this.selectPoints,!0),this.onSelect.trigger(e)}unSelect(){this.selectCurve.removeFromParent(),this.selectPoints.removeFromParent()}hover(e){this.highlight(e,this.hoverCurve,this.hoverPoints,!1)}unHover(){this.hoverCurve.removeFromParent(),this.hoverPoints.removeFromParent()}setResolution({x:e,y:t}){this.selectCurve.material.resolution.set(e/t,1),this.hoverCurve.material.resolution.set(e/t,1)}highlight(e,t,i,n){const{alignment:r}=e.curve;this.scene.add(t),this.scene.add(i);const o=[],a=[],l=[];for(const u of r[this.type]){const f=u.mesh.geometry.attributes.position;for(const p of f.array)o.push(p);if(n){let p;if(this.type==="absolute"){const{horizontal:I}=u.alignment;p=I[u.index].data.TYPE}else p=u.data.TYPE;const v=tb.settings.colors[p]||[1,1,1];for(let I=0;I<f.count;I++)a.push(...v)}const[m,g,E]=f.array;l.push(new P(m,g,E))}const c=o[o.length-3],h=o[o.length-2],d=o[o.length-1];l.push(new P(c,h,d)),o.length/3>t.geometry.attributes.position.count&&(t.geometry.dispose(),t.geometry=new uu),t.geometry.setPositions(o),n&&t.geometry.setColors(a),i.geometry.setFromPoints(l)}newCurve(e,t,i){const n=new uu,r=new Vl({color:t,linewidth:e,vertexColors:i,worldUnits:!1,depthTest:!1}),o=new $v(n,r);return this.scene.add(o),o}newPoints(e,t){const i=new We,n=new at(new Float32Array,3);i.setAttribute("position",n);const r=new qI({size:e,color:t,sizeAttenuation:!1,depthTest:!1}),o=new GT(i,r);return o.frustumCulled=!1,this.scene.add(o),o}};D(eb,"settings",{colors:{LINE:[213/255,0/255,255/255],CIRCULARARC:[0/255,46,255/255],CLOTHOID:[0/255,255/255,0/255],PARABOLICARC:[0/255,255/255,72/255],CONSTANTGRADIENT:[213/255,0/255,255/255]}});let ib=eb;class lO extends Wt{constructor(e=document.createElement("div")){super(),this.isCSS2DObject=!0,this.element=e,this.element.style.position="absolute",this.element.style.userSelect="none",this.element.setAttribute("draggable",!1),this.center=new Oe(.5,.5),this.addEventListener("removed",function(){this.traverse(function(t){t.element instanceof t.element.ownerDocument.defaultView.Element&&t.element.parentNode!==null&&t.element.remove()})})}copy(e,t){return super.copy(e,t),this.element=e.element.cloneNode(!0),this.center=e.center,this}}const Lo=new P,_I=new _e,vI=new _e,bI=new P,yI=new P;class cO{constructor(e={}){const t=this;let i,n,r,o;const a={objects:new WeakMap},l=e.element!==void 0?e.element:document.createElement("div");l.style.overflow="hidden",this.domElement=l,this.getSize=function(){return{width:i,height:n}},this.render=function(m,g){m.matrixWorldAutoUpdate===!0&&m.updateMatrixWorld(),g.parent===null&&g.matrixWorldAutoUpdate===!0&&g.updateMatrixWorld(),_I.copy(g.matrixWorldInverse),vI.multiplyMatrices(g.projectionMatrix,_I),h(m,m,g),f(m)},this.setSize=function(m,g){i=m,n=g,r=i/2,o=n/2,l.style.width=m+"px",l.style.height=g+"px"};function c(m){m.isCSS2DObject&&(m.element.style.display="none");for(let g=0,E=m.children.length;g<E;g++)c(m.children[g])}function h(m,g,E){if(m.visible===!1){c(m);return}if(m.isCSS2DObject){Lo.setFromMatrixPosition(m.matrixWorld),Lo.applyMatrix4(vI);const p=Lo.z>=-1&&Lo.z<=1&&m.layers.test(E.layers)===!0,v=m.element;v.style.display=p===!0?"":"none",p===!0&&(m.onBeforeRender(t,g,E),v.style.transform="translate("+-100*m.center.x+"%,"+-100*m.center.y+"%)translate("+(Lo.x*r+r)+"px,"+(-Lo.y*o+o)+"px)",v.parentNode!==l&&l.appendChild(v),m.onAfterRender(t,g,E));const I={distanceToCameraSquared:d(E,m)};a.objects.set(m,I)}for(let p=0,v=m.children.length;p<v;p++)h(m.children[p],g,E)}function d(m,g){return bI.setFromMatrixPosition(m.matrixWorld),yI.setFromMatrixPosition(g.matrixWorld),bI.distanceToSquared(yI)}function u(m){const g=[];return m.traverseVisible(function(E){E.isCSS2DObject&&g.push(E)}),g}function f(m){const g=u(m).sort(function(p,v){if(p.renderOrder!==v.renderOrder)return v.renderOrder-p.renderOrder;const I=a.objects.get(p).distanceToCameraSquared,_=a.objects.get(v).distanceToCameraSquared;return I-_}),E=g.length;for(let p=0,v=g.length;p<v;p++)g[p].element.style.zIndex=E-p}}}class Di{constructor(e,t,i){D(this,"three"),D(this,"world"),D(this,"onDisposed",new oe),this.world=e;let n;t?n=t:(n=document.createElement("div"),n.style.width="15px",n.style.height="15px",n.style.border="5px solid red"),this.three=new lO(n),(i||e.scene.three).add(this.three),this.visible=!0}set visible(e){this.three.visible=e}get visible(){return this.three.visible}toggleVisibility(){this.visible=!this.visible}dispose(){this.three.removeFromParent(),this.three.element.remove(),this.onDisposed.trigger(),this.onDisposed.reset()}}class hO extends z2{constructor(e,t,i){super(e,t,i),D(this,"three2D",new cO),this.onAfterUpdate.add(()=>{if(this.onBeforeUpdate.trigger(this),!this.enabled||!this.currentWorld)return;const n=this.currentWorld.scene.three,r=this.currentWorld.camera.three;n instanceof Hr&&this.three2D.render(n,r)}),this.onDisposed.add(()=>{this.three2D.domElement.remove()}),this.onResize.add(({x:n,y:r})=>{this.three2D.setSize(n,r)}),this.setupHtmlRenderer(),this.resize()}setupHtmlRenderer(){this.three2D.domElement.style.position="absolute",this.three2D.domElement.style.top="0px",this.three2D.domElement.style.pointerEvents="none",this.container&&this.container.appendChild(this.three2D.domElement)}}const nb=class sb extends Ke{constructor(e){super(e),D(this,"onDisposed",new oe),D(this,"enabled",!0),D(this,"threshold",50),D(this,"autoCluster",!0),D(this,"list",new Map),D(this,"clusterLabels",new Set),D(this,"currentKeys",new Set),D(this,"_color","white"),D(this,"_markerKey",0),D(this,"_clusterKey",0),D(this,"_worldEvents",new Map),D(this,"_setupWorlds",new Set),e.add(sb.uuid,this)}get color(){return this._color}set color(e){this._color=e;for(const[t,i]of this.list)for(const[n,r]of i)r.label.three.element.style.color=e}create(e,t,i,n=!1){this.setupEvents(e,!0);const r=this._markerKey.toString(),o=this.getWorldMarkerList(e);if(o.has(r))return;const a=document.createElement("span");a.innerHTML=t,a.style.color=this._color;const l=new Di(e,a);return l.three.position.copy(i),o.set(r,{key:r,label:l,merged:!1,static:n}),this._markerKey++,r}delete(e){for(const[t,i]of this.list){const n=i.get(e);n&&n.label.dispose(),i.delete(e)}}getWorldMarkerList(e){return this.list.has(e.uuid)||this.list.set(e.uuid,new Map),this.list.get(e.uuid)}dispose(e){for(const[t,i]of this.list){const n=[...i.keys()];for(const r of n){const o=i.get(r);e&&o.type!==e||(o.label.dispose(),i.delete(r))}}if(!e){this.list.clear(),this._markerKey=0;for(const t of this.clusterLabels)t.label.dispose();this.clusterLabels.clear(),this._clusterKey=0,this.currentKeys.clear()}this.onDisposed.trigger()}setupEvents(e,t){if(t&&this._setupWorlds.has(e.uuid)||!e.camera.hasCameraControls())return;const i=this.getWorldEvent(e);e.camera.controls.removeEventListener("sleep",i),e.camera.controls.removeEventListener("rest",i),t&&(e.camera.controls.addEventListener("sleep",i),e.camera.controls.addEventListener("rest",i))}cluster(e){if(!this.autoCluster)return;this.resetMarkers();const t=this.list.get(e.uuid);if(t){for(const[i,n]of t)if(!n.merged&&!n.static){this.currentKeys.clear();for(const[r,o]of t)o.static||n.key!==o.key&&!o.merged&&this.distance(n.label,o.label)<this.threshold&&(this.currentKeys.add(o.key),o.merged=!0);if(this.currentKeys.size>0){this.currentKeys.add(n.key),n.merged=!0;const r=Array.from(this.currentKeys),o=this.getAveragePositionFromLabels(r),a=new Di(n.label.world,this.createClusterElement(this._clusterKey.toString())),{element:l}=a.three;l.textContent=r.length.toString(),a.three.position.copy(o),this.clusterLabels.add({key:this._clusterKey.toString(),markerKeys:r,label:a}),this._clusterKey++}}this.removeMergeMarkers(e)}}getWorldEvent(e){if(!this._worldEvents.has(e.uuid)){const t=()=>{this.cluster(e)};this._worldEvents.set(e.uuid,t)}return this._worldEvents.get(e.uuid)}resetMarkers(){for(const[e,t]of this.list)for(const[i,n]of t)n.merged=!1;for(const e of this.clusterLabels)e.label.dispose();this.clusterLabels.clear(),this._clusterKey=0}removeMergeMarkers(e){const t=this.list.get(e.uuid);if(t){for(const[i,n]of t)n.merged?n.label.dispose():n.label.world.scene.three.add(n.label.three);for(const i of this.clusterLabels)if(i.markerKeys.length===1){for(const[n,r]of this.list){const o=r.get(i.markerKeys[0]);o&&(o.label.world.scene.three.add(o.label.three),o.merged=!1)}i.label.dispose(),this.clusterLabels.delete(i)}}}getAveragePositionFromLabels(e){const t=e.map(i=>{for(const[n,r]of this.list){const o=r.get(i);if(o)return o.label.three.position}return new P});return t.reduce((i,n)=>i.add(n),new P).divideScalar(t.length)}createClusterElement(e){const t=document.createElement("div");return t.textContent=e,t.style.color="#000000",t.style.background="#FFFFFF",t.style.fontSize="1.2rem",t.style.fontWeight="500",t.style.pointerEvents="auto",t.style.borderRadius="50%",t.style.padding="5px 11px",t.style.textAlign="center",t.style.cursor="pointer",t.addEventListener("pointerdown",()=>{this.navigateToCluster(e)}),t.addEventListener("pointerover",()=>{t.style.background="#BCF124"}),t.addEventListener("pointerout",()=>{t.style.background="#FFFFFF"}),t}getScreenPosition(e){const t=new P;if(!e.world.renderer)throw new Error("Renderer not found!");const i=e.three.position.clone();i.project(e.world.camera.three);const n=e.world.renderer.getSize();return t.x=i.x*n.x/2+n.x/2,t.y=-(i.y*n.y/2)+n.y/2,t}distance(e,t){const i=this.getScreenPosition(e),n=this.getScreenPosition(t),r=i.x-n.x,o=i.y-n.y,a=Math.sqrt(r*r+o*o)*.5;return a===0?this.threshold+1:a}navigateToCluster(e){const t=[],i=Array.from(this.clusterLabels).find(c=>c.key===e);if(!i)return;const n=i.label.world.camera;if(!n.hasCameraControls()){console.warn("Zoom to clusters only supported with Camera Controls!");return}for(const c of i.markerKeys)for(const[h,d]of this.list){const u=d.get(c);if(u){const{x:f,y:m,z:g}=u.label.three.position;t.push(f,m,g)}}i.label.dispose(),this.clusterLabels.delete(i);const r=new We,o=new Float32Array(t),a=new at(o,3);r.setAttribute("position",a);const l=new Te(r);l.geometry.computeBoundingSphere(),l.geometry.boundingSphere&&n.controls.fitToSphere(l,!0),r.dispose(),l.clear(),t.length=0}};D(nb,"uuid","4079eb91-79b0-4ede-bcf2-15b837129236");let fr=nb;function uO(s){return s&&s.__esModule&&Object.prototype.hasOwnProperty.call(s,"default")?s.default:s}var tg={exports:{}};tg.exports=Lu;tg.exports.default=Lu;function Lu(s,e,t){t=t||2;var i=e&&e.length,n=i?e[0]*t:s.length,r=rb(s,0,n,t,!0),o=[];if(!r||r.next===r.prev)return o;var a,l,c,h,d,u,f;if(i&&(r=gO(s,e,r,t)),s.length>80*t){a=c=s[0],l=h=s[1];for(var m=t;m<n;m+=t)d=s[m],u=s[m+1],d<a&&(a=d),u<l&&(l=u),d>c&&(c=d),u>h&&(h=u);f=Math.max(c-a,h-l),f=f!==0?32767/f:0}return Dl(r,o,t,a,l,f,0),o}function rb(s,e,t,i,n){var r,o;if(n===Jp(s,e,t,i)>0)for(r=e;r<t;r+=i)o=TI(r,s[r],s[r+1],o);else for(r=t-i;r>=e;r-=i)o=TI(r,s[r],s[r+1],o);return o&&Du(o,o.next)&&(Ul(o),o=o.next),o}function Vr(s,e){if(!s)return s;e||(e=s);var t=s,i;do if(i=!1,!t.steiner&&(Du(t,t.next)||Vt(t.prev,t,t.next)===0)){if(Ul(t),t=e=t.prev,t===t.next)break;i=!0}else t=t.next;while(i||t!==e);return e}function Dl(s,e,t,i,n,r,o){if(s){!o&&r&&bO(s,i,n,r);for(var a=s,l,c;s.prev!==s.next;){if(l=s.prev,c=s.next,r?fO(s,i,n,r):dO(s)){e.push(l.i/t|0),e.push(s.i/t|0),e.push(c.i/t|0),Ul(s),s=c.next,a=c.next;continue}if(s=c,s===a){o?o===1?(s=pO(Vr(s),e,t),Dl(s,e,t,i,n,r,2)):o===2&&mO(s,e,t,i,n,r):Dl(Vr(s),e,t,i,n,r,1);break}}}}function dO(s){var e=s.prev,t=s,i=s.next;if(Vt(e,t,i)>=0)return!1;for(var n=e.x,r=t.x,o=i.x,a=e.y,l=t.y,c=i.y,h=n<r?n<o?n:o:r<o?r:o,d=a<l?a<c?a:c:l<c?l:c,u=n>r?n>o?n:o:r>o?r:o,f=a>l?a>c?a:c:l>c?l:c,m=i.next;m!==e;){if(m.x>=h&&m.x<=u&&m.y>=d&&m.y<=f&&Wo(n,a,r,l,o,c,m.x,m.y)&&Vt(m.prev,m,m.next)>=0)return!1;m=m.next}return!0}function fO(s,e,t,i){var n=s.prev,r=s,o=s.next;if(Vt(n,r,o)>=0)return!1;for(var a=n.x,l=r.x,c=o.x,h=n.y,d=r.y,u=o.y,f=a<l?a<c?a:c:l<c?l:c,m=h<d?h<u?h:u:d<u?d:u,g=a>l?a>c?a:c:l>c?l:c,E=h>d?h>u?h:u:d>u?d:u,p=Kp(f,m,e,t,i),v=Kp(g,E,e,t,i),I=s.prevZ,_=s.nextZ;I&&I.z>=p&&_&&_.z<=v;){if(I.x>=f&&I.x<=g&&I.y>=m&&I.y<=E&&I!==n&&I!==o&&Wo(a,h,l,d,c,u,I.x,I.y)&&Vt(I.prev,I,I.next)>=0||(I=I.prevZ,_.x>=f&&_.x<=g&&_.y>=m&&_.y<=E&&_!==n&&_!==o&&Wo(a,h,l,d,c,u,_.x,_.y)&&Vt(_.prev,_,_.next)>=0))return!1;_=_.nextZ}for(;I&&I.z>=p;){if(I.x>=f&&I.x<=g&&I.y>=m&&I.y<=E&&I!==n&&I!==o&&Wo(a,h,l,d,c,u,I.x,I.y)&&Vt(I.prev,I,I.next)>=0)return!1;I=I.prevZ}for(;_&&_.z<=v;){if(_.x>=f&&_.x<=g&&_.y>=m&&_.y<=E&&_!==n&&_!==o&&Wo(a,h,l,d,c,u,_.x,_.y)&&Vt(_.prev,_,_.next)>=0)return!1;_=_.nextZ}return!0}function pO(s,e,t){var i=s;do{var n=i.prev,r=i.next.next;!Du(n,r)&&ob(n,i,i.next,r)&&Nl(n,r)&&Nl(r,n)&&(e.push(n.i/t|0),e.push(i.i/t|0),e.push(r.i/t|0),Ul(i),Ul(i.next),i=s=r),i=i.next}while(i!==s);return Vr(i)}function mO(s,e,t,i,n,r){var o=s;do{for(var a=o.next.next;a!==o.prev;){if(o.i!==a.i&&CO(o,a)){var l=ab(o,a);o=Vr(o,o.next),l=Vr(l,l.next),Dl(o,e,t,i,n,r,0),Dl(l,e,t,i,n,r,0);return}a=a.next}o=o.next}while(o!==s)}function gO(s,e,t,i){var n=[],r,o,a,l,c;for(r=0,o=e.length;r<o;r++)a=e[r]*i,l=r<o-1?e[r+1]*i:s.length,c=rb(s,a,l,i,!1),c===c.next&&(c.steiner=!0),n.push(TO(c));for(n.sort(EO),r=0;r<n.length;r++)t=IO(n[r],t);return t}function EO(s,e){return s.x-e.x}function IO(s,e){var t=_O(s,e);if(!t)return e;var i=ab(t,s);return Vr(i,i.next),Vr(t,t.next)}function _O(s,e){var t=e,i=s.x,n=s.y,r=-1/0,o;do{if(n<=t.y&&n>=t.next.y&&t.next.y!==t.y){var a=t.x+(n-t.y)*(t.next.x-t.x)/(t.next.y-t.y);if(a<=i&&a>r&&(r=a,o=t.x<t.next.x?t:t.next,a===i))return o}t=t.next}while(t!==e);if(!o)return null;var l=o,c=o.x,h=o.y,d=1/0,u;t=o;do i>=t.x&&t.x>=c&&i!==t.x&&Wo(n<h?i:r,n,c,h,n<h?r:i,n,t.x,t.y)&&(u=Math.abs(n-t.y)/(i-t.x),Nl(t,s)&&(u<d||u===d&&(t.x>o.x||t.x===o.x&&vO(o,t)))&&(o=t,d=u)),t=t.next;while(t!==l);return o}function vO(s,e){return Vt(s.prev,s,e.prev)<0&&Vt(e.next,s,s.next)<0}function bO(s,e,t,i){var n=s;do n.z===0&&(n.z=Kp(n.x,n.y,e,t,i)),n.prevZ=n.prev,n.nextZ=n.next,n=n.next;while(n!==s);n.prevZ.nextZ=null,n.prevZ=null,yO(n)}function yO(s){var e,t,i,n,r,o,a,l,c=1;do{for(t=s,s=null,r=null,o=0;t;){for(o++,i=t,a=0,e=0;e<c&&(a++,i=i.nextZ,!!i);e++);for(l=c;a>0||l>0&&i;)a!==0&&(l===0||!i||t.z<=i.z)?(n=t,t=t.nextZ,a--):(n=i,i=i.nextZ,l--),r?r.nextZ=n:s=n,n.prevZ=r,r=n;t=i}r.nextZ=null,c*=2}while(o>1);return s}function Kp(s,e,t,i,n){return s=(s-t)*n|0,e=(e-i)*n|0,s=(s|s<<8)&16711935,s=(s|s<<4)&252645135,s=(s|s<<2)&858993459,s=(s|s<<1)&1431655765,e=(e|e<<8)&16711935,e=(e|e<<4)&252645135,e=(e|e<<2)&858993459,e=(e|e<<1)&1431655765,s|e<<1}function TO(s){var e=s,t=s;do(e.x<t.x||e.x===t.x&&e.y<t.y)&&(t=e),e=e.next;while(e!==s);return t}function Wo(s,e,t,i,n,r,o,a){return(n-o)*(e-a)>=(s-o)*(r-a)&&(s-o)*(i-a)>=(t-o)*(e-a)&&(t-o)*(r-a)>=(n-o)*(i-a)}function CO(s,e){return s.next.i!==e.i&&s.prev.i!==e.i&&!xO(s,e)&&(Nl(s,e)&&Nl(e,s)&&wO(s,e)&&(Vt(s.prev,s,e.prev)||Vt(s,e.prev,e))||Du(s,e)&&Vt(s.prev,s,s.next)>0&&Vt(e.prev,e,e.next)>0)}function Vt(s,e,t){return(e.y-s.y)*(t.x-e.x)-(e.x-s.x)*(t.y-e.y)}function Du(s,e){return s.x===e.x&&s.y===e.y}function ob(s,e,t,i){var n=Ah(Vt(s,e,t)),r=Ah(Vt(s,e,i)),o=Ah(Vt(t,i,s)),a=Ah(Vt(t,i,e));return!!(n!==r&&o!==a||n===0&&Sh(s,t,e)||r===0&&Sh(s,i,e)||o===0&&Sh(t,s,i)||a===0&&Sh(t,e,i))}function Sh(s,e,t){return e.x<=Math.max(s.x,t.x)&&e.x>=Math.min(s.x,t.x)&&e.y<=Math.max(s.y,t.y)&&e.y>=Math.min(s.y,t.y)}function Ah(s){return s>0?1:s<0?-1:0}function xO(s,e){var t=s;do{if(t.i!==s.i&&t.next.i!==s.i&&t.i!==e.i&&t.next.i!==e.i&&ob(t,t.next,s,e))return!0;t=t.next}while(t!==s);return!1}function Nl(s,e){return Vt(s.prev,s,s.next)<0?Vt(s,e,s.next)>=0&&Vt(s,s.prev,e)>=0:Vt(s,e,s.prev)<0||Vt(s,s.next,e)<0}function wO(s,e){var t=s,i=!1,n=(s.x+e.x)/2,r=(s.y+e.y)/2;do t.y>r!=t.next.y>r&&t.next.y!==t.y&&n<(t.next.x-t.x)*(r-t.y)/(t.next.y-t.y)+t.x&&(i=!i),t=t.next;while(t!==s);return i}function ab(s,e){var t=new Qp(s.i,s.x,s.y),i=new Qp(e.i,e.x,e.y),n=s.next,r=e.prev;return s.next=e,e.prev=s,t.next=n,n.prev=t,i.next=t,t.prev=i,r.next=i,i.prev=r,i}function TI(s,e,t,i){var n=new Qp(s,e,t);return i?(n.next=i.next,n.prev=i,i.next.prev=n,i.next=n):(n.prev=n,n.next=n),n}function Ul(s){s.next.prev=s.prev,s.prev.next=s.next,s.prevZ&&(s.prevZ.nextZ=s.nextZ),s.nextZ&&(s.nextZ.prevZ=s.prevZ)}function Qp(s,e,t){this.i=s,this.x=e,this.y=t,this.prev=null,this.next=null,this.z=0,this.prevZ=null,this.nextZ=null,this.steiner=!1}Lu.deviation=function(s,e,t,i){var n=e&&e.length,r=n?e[0]*t:s.length,o=Math.abs(Jp(s,0,r,t));if(n)for(var a=0,l=e.length;a<l;a++){var c=e[a]*t,h=a<l-1?e[a+1]*t:s.length;o-=Math.abs(Jp(s,c,h,t))}var d=0;for(a=0;a<i.length;a+=3){var u=i[a]*t,f=i[a+1]*t,m=i[a+2]*t;d+=Math.abs((s[u]-s[m])*(s[f+1]-s[u+1])-(s[u]-s[f])*(s[m+1]-s[u+1]))}return o===0&&d===0?0:Math.abs((d-o)/o)};function Jp(s,e,t,i){for(var n=0,r=e,o=t-i;r<t;r+=i)n+=(s[o]-s[r])*(s[r+1]+s[o+1]),o=r;return n}Lu.flatten=function(s){for(var e=s[0][0].length,t={vertices:[],holes:[],dimensions:e},i=0,n=0;n<s.length;n++){for(var r=0;r<s[n].length;r++)for(var o=0;o<e;o++)t.vertices.push(s[n][r][o]);n>0&&(i+=s[n-1].length,t.holes.push(i))}return t};var SO=tg.exports;const AO=uO(SO),RO={name:"CopyShader",uniforms:{tDiffuse:{value:null},opacity:{value:1}},vertexShader:`

		varying vec2 vUv;

		void main() {

			vUv = uv;
			gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );

		}`,fragmentShader:`

		uniform float opacity;

		uniform sampler2D tDiffuse;

		varying vec2 vUv;

		void main() {

			vec4 texel = texture2D( tDiffuse, vUv );
			gl_FragColor = opacity * texel;


		}`};let kl=class{constructor(){this.isPass=!0,this.enabled=!0,this.needsSwap=!0,this.clear=!1,this.renderToScreen=!1}setSize(){}render(){console.error("THREE.Pass: .render() must be implemented in derived pass.")}dispose(){}};const MO=new Zn(-1,1,1,-1,0,1);let FO=class extends We{constructor(){super(),this.setAttribute("position",new dt([-1,3,0,-1,-1,0,3,-1,0],3)),this.setAttribute("uv",new dt([0,2,0,0,2,0],2))}};const PO=new FO;class lb{constructor(e){this._mesh=new Te(PO,e)}dispose(){this._mesh.geometry.dispose()}render(e){e.render(this._mesh,MO)}get material(){return this._mesh.material}set material(e){this._mesh.material=e}}class cb extends kl{constructor(e,t="tDiffuse"){super(),this.textureID=t,this.uniforms=null,this.material=null,e instanceof Tt?(this.uniforms=e.uniforms,this.material=e):e&&(this.uniforms=fa.clone(e.uniforms),this.material=new Tt({name:e.name!==void 0?e.name:"unspecified",defines:Object.assign({},e.defines),uniforms:this.uniforms,vertexShader:e.vertexShader,fragmentShader:e.fragmentShader})),this._fsQuad=new lb(this.material)}render(e,t,i){this.uniforms[this.textureID]&&(this.uniforms[this.textureID].value=i.texture),this._fsQuad.material=this.material,this.renderToScreen?(e.setRenderTarget(null),this._fsQuad.render(e)):(e.setRenderTarget(t),this.clear&&e.clear(e.autoClearColor,e.autoClearDepth,e.autoClearStencil),this._fsQuad.render(e))}dispose(){this.material.dispose(),this._fsQuad.dispose()}}class CI extends kl{constructor(e,t){super(),this.scene=e,this.camera=t,this.clear=!0,this.needsSwap=!1,this.inverse=!1}render(e,t,i){const n=e.getContext(),r=e.state;r.buffers.color.setMask(!1),r.buffers.depth.setMask(!1),r.buffers.color.setLocked(!0),r.buffers.depth.setLocked(!0);let o,a;this.inverse?(o=0,a=1):(o=1,a=0),r.buffers.stencil.setTest(!0),r.buffers.stencil.setOp(n.REPLACE,n.REPLACE,n.REPLACE),r.buffers.stencil.setFunc(n.ALWAYS,o,4294967295),r.buffers.stencil.setClear(a),r.buffers.stencil.setLocked(!0),e.setRenderTarget(i),this.clear&&e.clear(),e.render(this.scene,this.camera),e.setRenderTarget(t),this.clear&&e.clear(),e.render(this.scene,this.camera),r.buffers.color.setLocked(!1),r.buffers.depth.setLocked(!1),r.buffers.color.setMask(!0),r.buffers.depth.setMask(!0),r.buffers.stencil.setLocked(!1),r.buffers.stencil.setFunc(n.EQUAL,1,4294967295),r.buffers.stencil.setOp(n.KEEP,n.KEEP,n.KEEP),r.buffers.stencil.setLocked(!0)}}class OO extends kl{constructor(){super(),this.needsSwap=!1}render(e){e.state.buffers.stencil.setLocked(!1),e.state.buffers.stencil.setTest(!1)}}class LO{constructor(e,t){if(this.renderer=e,this._pixelRatio=e.getPixelRatio(),t===void 0){const i=e.getSize(new Oe);this._width=i.width,this._height=i.height,t=new Nt(this._width*this._pixelRatio,this._height*this._pixelRatio,{type:ki}),t.texture.name="EffectComposer.rt1"}else this._width=t.width,this._height=t.height;this.renderTarget1=t,this.renderTarget2=t.clone(),this.renderTarget2.texture.name="EffectComposer.rt2",this.writeBuffer=this.renderTarget1,this.readBuffer=this.renderTarget2,this.renderToScreen=!0,this.passes=[],this.copyPass=new cb(RO),this.copyPass.material.blending=gs,this.clock=new e_}swapBuffers(){const e=this.readBuffer;this.readBuffer=this.writeBuffer,this.writeBuffer=e}addPass(e){this.passes.push(e),e.setSize(this._width*this._pixelRatio,this._height*this._pixelRatio)}insertPass(e,t){this.passes.splice(t,0,e),e.setSize(this._width*this._pixelRatio,this._height*this._pixelRatio)}removePass(e){const t=this.passes.indexOf(e);t!==-1&&this.passes.splice(t,1)}isLastEnabledPass(e){for(let t=e+1;t<this.passes.length;t++)if(this.passes[t].enabled)return!1;return!0}render(e){e===void 0&&(e=this.clock.getDelta());const t=this.renderer.getRenderTarget();let i=!1;for(let n=0,r=this.passes.length;n<r;n++){const o=this.passes[n];if(o.enabled!==!1){if(o.renderToScreen=this.renderToScreen&&this.isLastEnabledPass(n),o.render(this.renderer,this.writeBuffer,this.readBuffer,e,i),o.needsSwap){if(i){const a=this.renderer.getContext(),l=this.renderer.state.buffers.stencil;l.setFunc(a.NOTEQUAL,1,4294967295),this.copyPass.render(this.renderer,this.writeBuffer,this.readBuffer,e),l.setFunc(a.EQUAL,1,4294967295)}this.swapBuffers()}CI!==void 0&&(o instanceof CI?i=!0:o instanceof OO&&(i=!1))}}this.renderer.setRenderTarget(t)}reset(e){if(e===void 0){const t=this.renderer.getSize(new Oe);this._pixelRatio=this.renderer.getPixelRatio(),this._width=t.width,this._height=t.height,e=this.renderTarget1.clone(),e.setSize(this._width*this._pixelRatio,this._height*this._pixelRatio)}this.renderTarget1.dispose(),this.renderTarget2.dispose(),this.renderTarget1=e,this.renderTarget2=e.clone(),this.writeBuffer=this.renderTarget1,this.readBuffer=this.renderTarget2}setSize(e,t){this._width=e,this._height=t;const i=this._width*this._pixelRatio,n=this._height*this._pixelRatio;this.renderTarget1.setSize(i,n),this.renderTarget2.setSize(i,n);for(let r=0;r<this.passes.length;r++)this.passes[r].setSize(i,n)}setPixelRatio(e){this._pixelRatio=e,this.setSize(this._width,this._height)}dispose(){this.renderTarget1.dispose(),this.renderTarget2.dispose(),this.copyPass.dispose()}}class DO extends kl{constructor(e,t,i=null,n=null,r=null){super(),this.scene=e,this.camera=t,this.overrideMaterial=i,this.clearColor=n,this.clearAlpha=r,this.clear=!0,this.clearDepth=!1,this.needsSwap=!1,this._oldClearColor=new Ne}render(e,t,i){const n=e.autoClear;e.autoClear=!1;let r,o;this.overrideMaterial!==null&&(o=this.scene.overrideMaterial,this.scene.overrideMaterial=this.overrideMaterial),this.clearColor!==null&&(e.getClearColor(this._oldClearColor),e.setClearColor(this.clearColor,e.getClearAlpha())),this.clearAlpha!==null&&(r=e.getClearAlpha(),e.setClearAlpha(this.clearAlpha)),this.clearDepth==!0&&e.clearDepth(),e.setRenderTarget(this.renderToScreen?null:i),this.clear===!0&&e.clear(e.autoClearColor,e.autoClearDepth,e.autoClearStencil),e.render(this.scene,this.camera),this.clearColor!==null&&e.setClearColor(this._oldClearColor),this.clearAlpha!==null&&e.setClearAlpha(r),this.overrideMaterial!==null&&(this.scene.overrideMaterial=o),e.autoClear=n}}class NO{constructor(){this.isPass=!0,this.enabled=!0,this.needsSwap=!0,this.clear=!1,this.renderToScreen=!1}setSize(){}render(){console.error("THREE.Pass: .render() must be implemented in derived pass.")}dispose(){}}new Zn(-1,1,1,-1,0,1);class UO extends We{constructor(){super(),this.setAttribute("position",new dt([-1,3,0,-1,-1,0,3,-1,0],3)),this.setAttribute("uv",new dt([0,2,0,0,2,0],2))}}new UO;const Gl=new We;Gl.setAttribute("position",new at(new Float32Array([-1,-1,3,-1,-1,3]),2));Gl.setAttribute("uv",new at(new Float32Array([0,0,2,0,0,2]),2));Gl.boundingSphere=new vi;Gl.computeBoundingSphere=function(){};const BO=new Zn;class Do{constructor(e){this._mesh=new Te(Gl,e),this._mesh.frustumCulled=!1}render(e){e.render(this._mesh,BO)}get material(){return this._mesh.material}set material(e){this._mesh.material=e}dispose(){this._mesh.material.dispose(),this._mesh.geometry.dispose()}}const zO={uniforms:{sceneDiffuse:{value:null},sceneDepth:{value:null},sceneNormal:{value:null},projMat:{value:new _e},viewMat:{value:new _e},projViewMat:{value:new _e},projectionMatrixInv:{value:new _e},viewMatrixInv:{value:new _e},cameraPos:{value:new P},resolution:{value:new Oe},biasAdjustment:{value:new Oe},time:{value:0},samples:{value:[]},bluenoise:{value:null},distanceFalloff:{value:1},radius:{value:5},near:{value:.1},far:{value:1e3},logDepth:{value:!1},ortho:{value:!1},screenSpaceRadius:{value:!1},frame:{value:0}},depthWrite:!1,depthTest:!1,vertexShader:`
varying vec2 vUv;
void main() {
  vUv = uv;
  gl_Position = vec4(position, 1);
}`,fragmentShader:`
    #define SAMPLES 16
    #define FSAMPLES 16.0
uniform sampler2D sceneDiffuse;
uniform highp sampler2D sceneNormal;
uniform highp sampler2D sceneDepth;
uniform mat4 projectionMatrixInv;
uniform mat4 viewMatrixInv;
uniform mat4 projMat;
uniform mat4 viewMat;
uniform mat4 projViewMat;
uniform vec3 cameraPos;
uniform vec2 resolution;
uniform vec2 biasAdjustment;
uniform float time;
uniform vec3[SAMPLES] samples;
uniform float radius;
uniform float distanceFalloff;
uniform float near;
uniform float far;
uniform float frame;
uniform bool logDepth;
uniform bool ortho;
uniform bool screenSpaceRadius;
uniform sampler2D bluenoise;
    varying vec2 vUv;
    highp float linearize_depth(highp float d, highp float zNear,highp float zFar)
    {
        return (zFar * zNear) / (zFar - d * (zFar - zNear));
    }
    highp float linearize_depth_ortho(highp float d, highp float nearZ, highp float farZ) {
      return nearZ + (farZ - nearZ) * d;
    }
    highp float linearize_depth_log(highp float d, highp float nearZ,highp float farZ) {
      float depth = pow(2.0, d * log2(farZ + 1.0)) - 1.0;
      float a = farZ / (farZ - nearZ);
      float b = farZ * nearZ / (nearZ - farZ);
      float linDepth = a + b / depth;
      /*return ortho ? linearize_depth_ortho(
        linDepth,
        nearZ,
        farZ
      ) :linearize_depth(linDepth, nearZ, farZ);*/
       #ifdef ORTHO

       return linearize_depth_ortho(d, nearZ, farZ);

        #else
        return linearize_depth(linDepth, nearZ, farZ);
        #endif
    }

    vec3 getWorldPosLog(vec3 posS) {
      vec2 uv = posS.xy;
      float z = posS.z;
      float nearZ =near;
      float farZ = far;
      float depth = pow(2.0, z * log2(farZ + 1.0)) - 1.0;
      float a = farZ / (farZ - nearZ);
      float b = farZ * nearZ / (nearZ - farZ);
      float linDepth = a + b / depth;
      vec4 clipVec = vec4(uv, linDepth, 1.0) * 2.0 - 1.0;
      vec4 wpos = projectionMatrixInv * clipVec;
      return wpos.xyz / wpos.w;
    }
    vec3 getWorldPos(float depth, vec2 coord) {
      #ifdef LOGDEPTH
        #ifndef ORTHO
          return getWorldPosLog(vec3(coord, depth));
        #endif
      #endif
      float z = depth * 2.0 - 1.0;
      vec4 clipSpacePosition = vec4(coord * 2.0 - 1.0, z, 1.0);
      vec4 viewSpacePosition = projectionMatrixInv * clipSpacePosition;
      // Perspective division
     vec4 worldSpacePosition = viewSpacePosition;
     worldSpacePosition.xyz /= worldSpacePosition.w;
      return worldSpacePosition.xyz;
  }

  vec3 computeNormal(vec3 worldPos, vec2 vUv) {
    ivec2 p = ivec2(vUv * resolution);
    float c0 = texelFetch(sceneDepth, p, 0).x;
    float l2 = texelFetch(sceneDepth, p - ivec2(2, 0), 0).x;
    float l1 = texelFetch(sceneDepth, p - ivec2(1, 0), 0).x;
    float r1 = texelFetch(sceneDepth, p + ivec2(1, 0), 0).x;
    float r2 = texelFetch(sceneDepth, p + ivec2(2, 0), 0).x;
    float b2 = texelFetch(sceneDepth, p - ivec2(0, 2), 0).x;
    float b1 = texelFetch(sceneDepth, p - ivec2(0, 1), 0).x;
    float t1 = texelFetch(sceneDepth, p + ivec2(0, 1), 0).x;
    float t2 = texelFetch(sceneDepth, p + ivec2(0, 2), 0).x;

    float dl = abs((2.0 * l1 - l2) - c0);
    float dr = abs((2.0 * r1 - r2) - c0);
    float db = abs((2.0 * b1 - b2) - c0);
    float dt = abs((2.0 * t1 - t2) - c0);

    vec3 ce = getWorldPos(c0, vUv).xyz;

    vec3 dpdx = (dl < dr) ? ce - getWorldPos(l1, (vUv - vec2(1.0 / resolution.x, 0.0))).xyz
                          : -ce + getWorldPos(r1, (vUv + vec2(1.0 / resolution.x, 0.0))).xyz;
    vec3 dpdy = (db < dt) ? ce - getWorldPos(b1, (vUv - vec2(0.0, 1.0 / resolution.y))).xyz
                          : -ce + getWorldPos(t1, (vUv + vec2(0.0, 1.0 / resolution.y))).xyz;

    return normalize(cross(dpdx, dpdy));
}

mat3 makeRotationZ(float theta) {
	float c = cos(theta);
	float s = sin(theta);
	return mat3(c, - s, 0,
			s,  c, 0,
			0,  0, 1);
  }

void main() {
      vec4 diffuse = texture2D(sceneDiffuse, vUv);
      float depth = texture2D(sceneDepth, vUv).x;
      if (depth == 1.0) {
        gl_FragColor = vec4(vec3(1.0), 1.0);
        return;
      }
      vec3 worldPos = getWorldPos(depth, vUv);
      #ifdef HALFRES
        vec3 normal = texture2D(sceneNormal, vUv).rgb;
      #else
        vec3 normal = computeNormal(worldPos, vUv);
      #endif
      vec4 noise = texture2D(bluenoise, gl_FragCoord.xy / 128.0);
      vec2 harmoniousNumbers = vec2(
        1.618033988749895,
        1.324717957244746
      );
      noise.rg += harmoniousNumbers * frame;
      noise.rg = fract(noise.rg);
        vec3 helperVec = vec3(0.0, 1.0, 0.0);
        if (dot(helperVec, normal) > 0.99) {
          helperVec = vec3(1.0, 0.0, 0.0);
        }
        vec3 tangent = normalize(cross(helperVec, normal));
        vec3 bitangent = cross(normal, tangent);
        mediump mat3 tbn = mat3(tangent, bitangent, normal) *  makeRotationZ( noise.r * 3.1415962 * 2.0) ;

      mediump float occluded = 0.0;
      mediump float totalWeight = 0.0;
      float radiusToUse = screenSpaceRadius ? distance(
        worldPos,
        getWorldPos(depth, vUv +
          vec2(radius, 0.0) / resolution)
      ) : radius;
      float distanceFalloffToUse =screenSpaceRadius ?
          radiusToUse * distanceFalloff
      : radiusToUse * distanceFalloff * 0.2;
      float bias = (min(
        0.1,
        distanceFalloffToUse * 0.1
      ) / near) * fwidth(distance(worldPos, cameraPos)) / radiusToUse;
      bias = biasAdjustment.x + biasAdjustment.y * bias;
      mediump float offsetMove = noise.g;
      mediump float offsetMoveInv = 1.0 / FSAMPLES;
      float farTimesNear = far * near;
      float farMinusNear = far - near;
      
      for(int i = 0; i < SAMPLES; i++) {
        mediump vec3 sampleDirection = tbn * samples[i];

        float moveAmt = fract(offsetMove);
        offsetMove += offsetMoveInv;
        vec3 samplePos = worldPos + radiusToUse * moveAmt * sampleDirection;
        vec4 offset = projMat * vec4(samplePos, 1.0);
        offset.xyz /= offset.w;
        offset.xyz = offset.xyz * 0.5 + 0.5;
        
        if (all(greaterThan(offset.xyz * (1.0 - offset.xyz), vec3(0.0)))) {
          float sampleDepth = textureLod(sceneDepth, offset.xy, 0.0).x;

          /*#ifdef LOGDEPTH
          float distSample = linearize_depth_log(sampleDepth, near, far);
      #else
          #ifdef ORTHO
              float distSample = near + farMinusNear * sampleDepth;
          #else
              float distSample = (farTimesNear) / (far - sampleDepth * farMinusNear);
          #endif
      #endif*/
      #ifdef ORTHO
          float distSample = near + sampleDepth * farMinusNear;
      #else
          #ifdef LOGDEPTH
              float distSample = linearize_depth_log(sampleDepth, near, far);
          #else
              float distSample = (farTimesNear) / (far - sampleDepth * farMinusNear);
          #endif
      #endif
      
      #ifdef ORTHO
          float distWorld = near + offset.z * farMinusNear;
      #else
          float distWorld = (farTimesNear) / (far - offset.z * farMinusNear);
      #endif
          
          mediump float rangeCheck = smoothstep(0.0, 1.0, distanceFalloffToUse / (abs(distSample - distWorld)));
          vec2 diff = gl_FragCoord.xy - floor(offset.xy * resolution);
          occluded += rangeCheck * float(distSample != distWorld) * float(sampleDepth != depth) * step(distSample + bias, distWorld) * step(
            1.0,
            dot(diff, diff)
          );
          
          totalWeight ++;
        }
      }
      float occ = clamp(1.0 - occluded / (totalWeight == 0.0 ? 1.0 : totalWeight), 0.0, 1.0);
      gl_FragColor = vec4(occ, 0.5 + 0.5 * normal);
}`},VO={uniforms:{sceneDiffuse:{value:null},sceneDepth:{value:null},tDiffuse:{value:null},transparencyDWFalse:{value:null},transparencyDWTrue:{value:null},transparencyDWTrueDepth:{value:null},transparencyAware:{value:!1},projMat:{value:new _e},viewMat:{value:new _e},projectionMatrixInv:{value:new _e},viewMatrixInv:{value:new _e},cameraPos:{value:new P},resolution:{value:new Oe},color:{value:new P(0,0,0)},blueNoise:{value:null},downsampledDepth:{value:null},time:{value:0},intensity:{value:10},renderMode:{value:0},gammaCorrection:{value:!1},logDepth:{value:!1},ortho:{value:!1},near:{value:.1},far:{value:1e3},screenSpaceRadius:{value:!1},radius:{value:0},distanceFalloff:{value:1},fog:{value:!1},fogExp:{value:!1},fogDensity:{value:0},fogNear:{value:1/0},fogFar:{value:1/0},colorMultiply:{value:!0},aoTones:{value:0}},depthWrite:!1,depthTest:!1,vertexShader:`
		varying vec2 vUv;
		void main() {
			vUv = uv;
			gl_Position = vec4(position, 1);
		}`,fragmentShader:`
		uniform sampler2D sceneDiffuse;
    uniform highp sampler2D sceneDepth;
    uniform highp sampler2D downsampledDepth;
    uniform highp sampler2D transparencyDWFalse;
    uniform highp sampler2D transparencyDWTrue;
    uniform highp sampler2D transparencyDWTrueDepth;
    uniform sampler2D tDiffuse;
    uniform sampler2D blueNoise;
    uniform vec2 resolution;
    uniform vec3 color;
    uniform mat4 projectionMatrixInv;
    uniform mat4 viewMatrixInv;
    uniform float intensity;
    uniform float renderMode;
    uniform float near;
    uniform float far;
    uniform float aoTones;
    uniform bool gammaCorrection;
    uniform bool logDepth;
    uniform bool ortho;
    uniform bool screenSpaceRadius;
    uniform bool fog;
    uniform bool fogExp;
    uniform bool colorMultiply;
    uniform bool transparencyAware;
    uniform float fogDensity;
    uniform float fogNear;
    uniform float fogFar;
    uniform float radius;
    uniform float distanceFalloff;
    uniform vec3 cameraPos;
    varying vec2 vUv;
    highp float linearize_depth(highp float d, highp float zNear,highp float zFar)
    {
        return (zFar * zNear) / (zFar - d * (zFar - zNear));
    }
    highp float linearize_depth_ortho(highp float d, highp float nearZ, highp float farZ) {
      return nearZ + (farZ - nearZ) * d;
    }
    highp float linearize_depth_log(highp float d, highp float nearZ,highp float farZ) {
      float depth = pow(2.0, d * log2(farZ + 1.0)) - 1.0;
      float a = farZ / (farZ - nearZ);
      float b = farZ * nearZ / (nearZ - farZ);
      float linDepth = a + b / depth;
      return ortho ? linearize_depth_ortho(
        linDepth,
        nearZ,
        farZ
      ) :linearize_depth(linDepth, nearZ, farZ);
    }
    vec3 getWorldPosLog(vec3 posS) {
        vec2 uv = posS.xy;
        float z = posS.z;
        float nearZ =near;
        float farZ = far;
        float depth = pow(2.0, z * log2(farZ + 1.0)) - 1.0;
        float a = farZ / (farZ - nearZ);
        float b = farZ * nearZ / (nearZ - farZ);
        float linDepth = a + b / depth;
        vec4 clipVec = vec4(uv, linDepth, 1.0) * 2.0 - 1.0;
        vec4 wpos = projectionMatrixInv * clipVec;
        return wpos.xyz / wpos.w;
      }
      vec3 getWorldPos(float depth, vec2 coord) {
       // if (logDepth) {
        #ifdef LOGDEPTH
          #ifndef ORTHO
            return getWorldPosLog(vec3(coord, depth));
          #endif
        #endif
      //  }
        float z = depth * 2.0 - 1.0;
        vec4 clipSpacePosition = vec4(coord * 2.0 - 1.0, z, 1.0);
        vec4 viewSpacePosition = projectionMatrixInv * clipSpacePosition;
        // Perspective division
       vec4 worldSpacePosition = viewSpacePosition;
       worldSpacePosition.xyz /= worldSpacePosition.w;
        return worldSpacePosition.xyz;
    }
  
    vec3 computeNormal(vec3 worldPos, vec2 vUv) {
      ivec2 p = ivec2(vUv * resolution);
      float c0 = texelFetch(sceneDepth, p, 0).x;
      float l2 = texelFetch(sceneDepth, p - ivec2(2, 0), 0).x;
      float l1 = texelFetch(sceneDepth, p - ivec2(1, 0), 0).x;
      float r1 = texelFetch(sceneDepth, p + ivec2(1, 0), 0).x;
      float r2 = texelFetch(sceneDepth, p + ivec2(2, 0), 0).x;
      float b2 = texelFetch(sceneDepth, p - ivec2(0, 2), 0).x;
      float b1 = texelFetch(sceneDepth, p - ivec2(0, 1), 0).x;
      float t1 = texelFetch(sceneDepth, p + ivec2(0, 1), 0).x;
      float t2 = texelFetch(sceneDepth, p + ivec2(0, 2), 0).x;
  
      float dl = abs((2.0 * l1 - l2) - c0);
      float dr = abs((2.0 * r1 - r2) - c0);
      float db = abs((2.0 * b1 - b2) - c0);
      float dt = abs((2.0 * t1 - t2) - c0);
  
      vec3 ce = getWorldPos(c0, vUv).xyz;
  
      vec3 dpdx = (dl < dr) ? ce - getWorldPos(l1, (vUv - vec2(1.0 / resolution.x, 0.0))).xyz
                            : -ce + getWorldPos(r1, (vUv + vec2(1.0 / resolution.x, 0.0))).xyz;
      vec3 dpdy = (db < dt) ? ce - getWorldPos(b1, (vUv - vec2(0.0, 1.0 / resolution.y))).xyz
                            : -ce + getWorldPos(t1, (vUv + vec2(0.0, 1.0 / resolution.y))).xyz;
  
      return normalize(cross(dpdx, dpdy));
  }

    #include <common>
    #include <dithering_pars_fragment>
    void main() {
        //vec4 texel = texture2D(tDiffuse, vUv);//vec3(0.0);
        vec4 sceneTexel = texture2D(sceneDiffuse, vUv);
        float depth = texture2D(
            sceneDepth,
            vUv
        ).x;
        #ifdef HALFRES 
        vec4 texel;
        if (depth == 1.0) {
            texel = vec4(0.0, 0.0, 0.0, 1.0);
        } else {
        vec3 worldPos = getWorldPos(depth, vUv);
        vec3 normal = computeNormal(getWorldPos(depth, vUv), vUv);
       // vec4 texel = texture2D(tDiffuse, vUv);
       // Find closest depth;
       float totalWeight = 0.0;
       float radiusToUse = screenSpaceRadius ? distance(
        worldPos,
        getWorldPos(depth, vUv +
          vec2(radius, 0.0) / resolution)
      ) : radius;
      float distanceFalloffToUse =screenSpaceRadius ?
          radiusToUse * distanceFalloff
      : distanceFalloff;
        for(float x = -1.0; x <= 1.0; x++) {
            for(float y = -1.0; y <= 1.0; y++) {
                vec2 offset = vec2(x, y);
                ivec2 p = ivec2(
                    (vUv * resolution * 0.5) + offset
                );
                vec2 pUv = vec2(p) / (resolution * 0.5);
                float sampleDepth = texelFetch(downsampledDepth,p, 0).x;
                vec4 sampleInfo = texelFetch(tDiffuse, p, 0);
                vec3 normalSample = sampleInfo.gba * 2.0 - 1.0;
                vec3 worldPosSample = getWorldPos(sampleDepth, pUv);
                float tangentPlaneDist = abs(dot(worldPosSample - worldPos, normal));
                float rangeCheck = exp(-1.0 * tangentPlaneDist * (1.0 / distanceFalloffToUse)) * max(dot(normal, normalSample), 0.0);
                float weight = rangeCheck;
                totalWeight += weight;
                texel += sampleInfo * weight;
            }
        }
        if (totalWeight == 0.0) {
            texel = texture2D(tDiffuse, vUv);
        } else {
            texel /= totalWeight;
        }
    }
        #else
        vec4 texel = texture2D(tDiffuse, vUv);
        #endif

        #ifdef LOGDEPTH
        texel.r = clamp(texel.r, 0.0, 1.0);
        if (texel.r == 0.0) {
          texel.r = 1.0;
        }
        #endif
     
        float finalAo = pow(texel.r, intensity);
        if (aoTones > 0.0) {
            finalAo = ceil(finalAo * aoTones) / aoTones;
        }
        float fogFactor;
        float fogDepth = distance(
            cameraPos,
            getWorldPos(depth, vUv)
        );
        if (fog) {
            if (fogExp) {
                fogFactor = 1.0 - exp( - fogDensity * fogDensity * fogDepth * fogDepth );
            } else {
                fogFactor = smoothstep( fogNear, fogFar, fogDepth );
            }
        }
        if (transparencyAware) {
            float transparencyDWOff = texture2D(transparencyDWFalse, vUv).a;
            float transparencyDWOn = texture2D(transparencyDWTrue, vUv).a;
            float adjustmentFactorOff = transparencyDWOff;
            float adjustmentFactorOn = (1.0 - transparencyDWOn) * (
                texture2D(transparencyDWTrueDepth, vUv).r == texture2D(sceneDepth, vUv).r ? 1.0 : 0.0
            );
            float adjustmentFactor = max(adjustmentFactorOff, adjustmentFactorOn);
            finalAo = mix(finalAo, 1.0, adjustmentFactor);
        }
        finalAo = mix(finalAo, 1.0, fogFactor);
        vec3 aoApplied = color * mix(vec3(1.0), sceneTexel.rgb, float(colorMultiply));
        if (renderMode == 0.0) {
            gl_FragColor = vec4( mix(sceneTexel.rgb, aoApplied, 1.0 - finalAo), sceneTexel.a);
        } else if (renderMode == 1.0) {
            gl_FragColor = vec4( mix(vec3(1.0), aoApplied, 1.0 - finalAo), sceneTexel.a);
        } else if (renderMode == 2.0) {
            gl_FragColor = vec4( sceneTexel.rgb, sceneTexel.a);
        } else if (renderMode == 3.0) {
            if (vUv.x < 0.5) {
                gl_FragColor = vec4( sceneTexel.rgb, sceneTexel.a);
            } else if (abs(vUv.x - 0.5) < 1.0 / resolution.x) {
                gl_FragColor = vec4(1.0);
            } else {
                gl_FragColor = vec4( mix(sceneTexel.rgb, aoApplied, 1.0 - finalAo), sceneTexel.a);
            }
        } else if (renderMode == 4.0) {
            if (vUv.x < 0.5) {
                gl_FragColor = vec4( sceneTexel.rgb, sceneTexel.a);
            } else if (abs(vUv.x - 0.5) < 1.0 / resolution.x) {
                gl_FragColor = vec4(1.0);
            } else {
                gl_FragColor = vec4( mix(vec3(1.0), aoApplied, 1.0 - finalAo), sceneTexel.a);
            }
        }
        #include <dithering_fragment>
        if (gammaCorrection) {
            gl_FragColor = sRGBTransferOETF(gl_FragColor);
        }
    }
    `},kO={uniforms:{sceneDiffuse:{value:null},sceneDepth:{value:null},tDiffuse:{value:null},projMat:{value:new _e},viewMat:{value:new _e},projectionMatrixInv:{value:new _e},viewMatrixInv:{value:new _e},cameraPos:{value:new P},resolution:{value:new Oe},time:{value:0},r:{value:5},blueNoise:{value:null},radius:{value:12},worldRadius:{value:5},index:{value:0},poissonDisk:{value:[]},distanceFalloff:{value:1},near:{value:.1},far:{value:1e3},logDepth:{value:!1},screenSpaceRadius:{value:!1}},depthWrite:!1,depthTest:!1,vertexShader:`
		varying vec2 vUv;
		void main() {
			vUv = uv;
			gl_Position = vec4(position, 1.0);
		}`,fragmentShader:`
		uniform sampler2D sceneDiffuse;
    uniform highp sampler2D sceneDepth;
    uniform sampler2D tDiffuse;
    uniform sampler2D blueNoise;
    uniform mat4 projectionMatrixInv;
    uniform mat4 viewMatrixInv;
    uniform vec2 resolution;
    uniform float r;
    uniform float radius;
     uniform float worldRadius;
    uniform float index;
     uniform float near;
     uniform float far;
     uniform float distanceFalloff;
     uniform bool logDepth;
     uniform bool screenSpaceRadius;
    varying vec2 vUv;

    highp float linearize_depth(highp float d, highp float zNear,highp float zFar)
    {
        highp float z_n = 2.0 * d - 1.0;
        return 2.0 * zNear * zFar / (zFar + zNear - z_n * (zFar - zNear));
    }
    highp float linearize_depth_log(highp float d, highp float nearZ,highp float farZ) {
     float depth = pow(2.0, d * log2(farZ + 1.0)) - 1.0;
     float a = farZ / (farZ - nearZ);
     float b = farZ * nearZ / (nearZ - farZ);
     float linDepth = a + b / depth;
     return linearize_depth(linDepth, nearZ, farZ);
   }
   highp float linearize_depth_ortho(highp float d, highp float nearZ, highp float farZ) {
     return nearZ + (farZ - nearZ) * d;
   }
   vec3 getWorldPosLog(vec3 posS) {
     vec2 uv = posS.xy;
     float z = posS.z;
     float nearZ =near;
     float farZ = far;
     float depth = pow(2.0, z * log2(farZ + 1.0)) - 1.0;
     float a = farZ / (farZ - nearZ);
     float b = farZ * nearZ / (nearZ - farZ);
     float linDepth = a + b / depth;
     vec4 clipVec = vec4(uv, linDepth, 1.0) * 2.0 - 1.0;
     vec4 wpos = projectionMatrixInv * clipVec;
     return wpos.xyz / wpos.w;
   }
    vec3 getWorldPos(float depth, vec2 coord) {
     #ifdef LOGDEPTH
      #ifndef ORTHO
          return getWorldPosLog(vec3(coord, depth));
      #endif
     #endif
        
        float z = depth * 2.0 - 1.0;
        vec4 clipSpacePosition = vec4(coord * 2.0 - 1.0, z, 1.0);
        vec4 viewSpacePosition = projectionMatrixInv * clipSpacePosition;
        // Perspective division
       vec4 worldSpacePosition = viewSpacePosition;
       worldSpacePosition.xyz /= worldSpacePosition.w;
        return worldSpacePosition.xyz;
    }
    #include <common>
    #define NUM_SAMPLES 16
    uniform vec2 poissonDisk[NUM_SAMPLES];
    void main() {
        const float pi = 3.14159;
        vec2 texelSize = vec2(1.0 / resolution.x, 1.0 / resolution.y);
        vec2 uv = vUv;
        vec4 data = texture2D(tDiffuse, vUv);
        float occlusion = data.r;
        float baseOcc = data.r;
        vec3 normal = data.gba * 2.0 - 1.0;
        float count = 1.0;
        float d = texture2D(sceneDepth, vUv).x;
        if (d == 1.0) {
          gl_FragColor = data;
          return;
        }
        vec3 worldPos = getWorldPos(d, vUv);
        float size = radius;
        float angle;
        if (index == 0.0) {
             angle = texture2D(blueNoise, gl_FragCoord.xy / 128.0).w * PI2;
        } else if (index == 1.0) {
             angle = texture2D(blueNoise, gl_FragCoord.xy / 128.0).z * PI2;
        } else if (index == 2.0) {
             angle = texture2D(blueNoise, gl_FragCoord.xy / 128.0).y * PI2;
        } else {
             angle = texture2D(blueNoise, gl_FragCoord.xy / 128.0).x * PI2;
        }

        mat2 rotationMatrix = mat2(cos(angle), -sin(angle), sin(angle), cos(angle));
        float radiusToUse = screenSpaceRadius ? distance(
          worldPos,
          getWorldPos(d, vUv +
            vec2(worldRadius, 0.0) / resolution)
        ) : worldRadius;
        float distanceFalloffToUse =screenSpaceRadius ?
        radiusToUse * distanceFalloff
    : radiusToUse * distanceFalloff * 0.2;

        float invDistance = (1.0 / distanceFalloffToUse);
        for(int i = 0; i < NUM_SAMPLES; i++) {
            vec2 offset = (rotationMatrix * poissonDisk[i]) * texelSize * size;
            vec4 dataSample = texture2D(tDiffuse, uv + offset);
            float occSample = dataSample.r;
            vec3 normalSample = dataSample.gba * 2.0 - 1.0;
            float dSample = texture2D(sceneDepth, uv + offset).x;
            vec3 worldPosSample = getWorldPos(dSample, uv + offset);
            float tangentPlaneDist = abs(dot(worldPosSample - worldPos, normal));
            float rangeCheck = float(dSample != 1.0) * exp(-1.0 * tangentPlaneDist * invDistance ) * max(dot(normal, normalSample), 0.0);
            occlusion += occSample * rangeCheck;
            count += rangeCheck;
        }
        if (count > 0.0) {
          occlusion /= count;
        }
        #ifdef LOGDEPTH
          occlusion = clamp(occlusion, 0.0, 1.0);
          if (occlusion == 0.0) {
            occlusion = 1.0;
          }
        #endif
        gl_FragColor = vec4(occlusion, 0.5 + 0.5 * normal);
    }
    `},GO={uniforms:{sceneDepth:{value:null},resolution:{value:new Oe},near:{value:.1},far:{value:1e3},viewMatrixInv:{value:new _e},projectionMatrixInv:{value:new _e},logDepth:{value:!1},ortho:{value:!1}},depthWrite:!1,depthTest:!1,vertexShader:`
    varying vec2 vUv;
    void main() {
        vUv = uv;
        gl_Position = vec4(position, 1);
    }`,fragmentShader:`
    uniform highp sampler2D sceneDepth;
    uniform vec2 resolution;
    uniform float near;
    uniform float far;
    uniform bool logDepth;
    uniform bool ortho;
    uniform mat4 viewMatrixInv;
    uniform mat4 projectionMatrixInv;
    varying vec2 vUv;
    layout(location = 1) out vec4 gNormal;
    vec3 getWorldPosLog(vec3 posS) {
        vec2 uv = posS.xy;
        float z = posS.z;
        float nearZ =near;
        float farZ = far;
        float depth = pow(2.0, z * log2(farZ + 1.0)) - 1.0;
        float a = farZ / (farZ - nearZ);
        float b = farZ * nearZ / (nearZ - farZ);
        float linDepth = a + b / depth;
        vec4 clipVec = vec4(uv, linDepth, 1.0) * 2.0 - 1.0;
        vec4 wpos = projectionMatrixInv * clipVec;
        return wpos.xyz / wpos.w;
      }
      vec3 getWorldPos(float depth, vec2 coord) {
        if (logDepth && !ortho) {
          return getWorldPosLog(vec3(coord, depth));
        }
        float z = depth * 2.0 - 1.0;
        vec4 clipSpacePosition = vec4(coord * 2.0 - 1.0, z, 1.0);
        vec4 viewSpacePosition = projectionMatrixInv * clipSpacePosition;
        // Perspective division
       vec4 worldSpacePosition = viewSpacePosition;
       worldSpacePosition.xyz /= worldSpacePosition.w;
        return worldSpacePosition.xyz;
    }
  
    vec3 computeNormal(vec3 worldPos, vec2 vUv) {
      ivec2 p = ivec2(vUv * resolution);
      float c0 = texelFetch(sceneDepth, p, 0).x;
      float l2 = texelFetch(sceneDepth, p - ivec2(2, 0), 0).x;
      float l1 = texelFetch(sceneDepth, p - ivec2(1, 0), 0).x;
      float r1 = texelFetch(sceneDepth, p + ivec2(1, 0), 0).x;
      float r2 = texelFetch(sceneDepth, p + ivec2(2, 0), 0).x;
      float b2 = texelFetch(sceneDepth, p - ivec2(0, 2), 0).x;
      float b1 = texelFetch(sceneDepth, p - ivec2(0, 1), 0).x;
      float t1 = texelFetch(sceneDepth, p + ivec2(0, 1), 0).x;
      float t2 = texelFetch(sceneDepth, p + ivec2(0, 2), 0).x;
  
      float dl = abs((2.0 * l1 - l2) - c0);
      float dr = abs((2.0 * r1 - r2) - c0);
      float db = abs((2.0 * b1 - b2) - c0);
      float dt = abs((2.0 * t1 - t2) - c0);
  
      vec3 ce = getWorldPos(c0, vUv).xyz;
  
      vec3 dpdx = (dl < dr) ? ce - getWorldPos(l1, (vUv - vec2(1.0 / resolution.x, 0.0))).xyz
                            : -ce + getWorldPos(r1, (vUv + vec2(1.0 / resolution.x, 0.0))).xyz;
      vec3 dpdy = (db < dt) ? ce - getWorldPos(b1, (vUv - vec2(0.0, 1.0 / resolution.y))).xyz
                            : -ce + getWorldPos(t1, (vUv + vec2(0.0, 1.0 / resolution.y))).xyz;
  
      return normalize(cross(dpdx, dpdy));
  }
    void main() {
        vec2 uv = vUv - vec2(0.5) / resolution;
        vec2 pixelSize = vec2(1.0) / resolution;
        highp vec2[4] uvSamples;
        uvSamples[0] = uv;
        uvSamples[1] = uv + vec2(pixelSize.x, 0.0);
        uvSamples[2] = uv + vec2(0.0, pixelSize.y);
        uvSamples[3] = uv + pixelSize;
        float depth00 = texture2D(sceneDepth, uvSamples[0]).r;
        float depth10 = texture2D(sceneDepth, uvSamples[1]).r;
        float depth01 = texture2D(sceneDepth, uvSamples[2]).r;
        float depth11 = texture2D(sceneDepth, uvSamples[3]).r;
        float minDepth = min(min(depth00, depth10), min(depth01, depth11));
        float maxDepth = max(max(depth00, depth10), max(depth01, depth11));
        float targetDepth = minDepth;
        // Checkerboard pattern to avoid artifacts
        if (mod(gl_FragCoord.x + gl_FragCoord.y, 2.0) > 0.5) { 
            targetDepth = maxDepth;
        }
        int chosenIndex = 0;
        float[4] samples;
        samples[0] = depth00;
        samples[1] = depth10;
        samples[2] = depth01;
        samples[3] = depth11;
        for(int i = 0; i < 4; ++i) {
            if (samples[i] == targetDepth) {
                chosenIndex = i;
                break;
            }
        }
        gl_FragColor = vec4(samples[chosenIndex], 0.0, 0.0, 1.0);
        gNormal = vec4(computeNormal(
            getWorldPos(samples[chosenIndex], uvSamples[chosenIndex]), uvSamples[chosenIndex]
        ), 0.0);
    }`};var hb="";const HO=parseInt(gu.replace(/\D+/g,"")),YO=HO>=162?class extends Nt{constructor(s=1,e=1,t=1,i={}){super(s,e,{...i,count:t}),this.isWebGLMultipleRenderTargets=!0}get texture(){return this.textures}}:class extends Nt{constructor(s=1,e=1,t=1,i={}){super(s,e,i),this.isWebGLMultipleRenderTargets=!0;const n=this.texture;this.texture=[];for(let r=0;r<t;r++)this.texture[r]=n.clone(),this.texture[r].isRenderTargetTexture=!0}setSize(s,e,t=1){if(this.width!==s||this.height!==e||this.depth!==t){this.width=s,this.height=e,this.depth=t;for(let i=0,n=this.texture.length;i<n;i++)this.texture[i].image.width=s,this.texture[i].image.height=e,this.texture[i].image.depth=t;this.dispose()}this.viewport.set(0,0,s,e),this.scissor.set(0,0,s,e)}copy(s){this.dispose(),this.width=s.width,this.height=s.height,this.depth=s.depth,this.scissor.copy(s.scissor),this.scissorTest=s.scissorTest,this.viewport.copy(s.viewport),this.depthBuffer=s.depthBuffer,this.stencilBuffer=s.stencilBuffer,s.depthTexture!==null&&(this.depthTexture=s.depthTexture.clone()),this.texture.length=0;for(let e=0,t=s.texture.length;e<t;e++)this.texture[e]=s.texture[e].clone(),this.texture[e].isRenderTargetTexture=!0;return this}};Uint8Array.from(atob(hb),s=>s.charCodeAt(0));const WO=Uint8Array.from(atob(hb),s=>s.charCodeAt(0));function ub(s,e,t){if(e.getQueryParameter(s,e.QUERY_RESULT_AVAILABLE)){const i=e.getQueryParameter(s,e.QUERY_RESULT)/1e6;t.lastTime=t.lastTime===0?i:t.timeRollingAverage*t.lastTime+(1-t.timeRollingAverage)*i}else setTimeout(()=>{ub(s,e,t)},1)}class XO extends NO{constructor(e,t,i=512,n=512){super(),this.width=i,this.height=n,this.clear=!0,this.camera=t,this.scene=e,this.configuration=new Proxy({aoSamples:16,aoRadius:5,aoTones:0,denoiseSamples:8,denoiseRadius:12,distanceFalloff:1,intensity:5,denoiseIterations:2,renderMode:0,biasOffset:0,biasMultiplier:0,color:new Ne(0,0,0),gammaCorrection:!0,logarithmicDepthBuffer:!1,screenSpaceRadius:!1,halfRes:!1,depthAwareUpsampling:!0,autoRenderBeauty:!0,colorMultiply:!0,transparencyAware:!1,stencil:!1,accumulate:!1},{set:(r,o,a)=>{const l=r[o];return r[o]=a,a.equals?a.equals(l)||this.firstFrame():l!==a&&this.firstFrame(),o==="aoSamples"&&l!==a&&this.configureAOPass(this.configuration.logarithmicDepthBuffer,this.camera.isOrthographicCamera),o==="denoiseSamples"&&l!==a&&this.configureDenoisePass(this.configuration.logarithmicDepthBuffer,this.camera.isOrthographicCamera),o==="halfRes"&&l!==a&&(this.configureAOPass(this.configuration.logarithmicDepthBuffer,this.camera.isOrthographicCamera),this.configureHalfResTargets(),this.configureEffectCompositer(this.configuration.logarithmicDepthBuffer,this.camera.isOrthographicCamera),this.setSize(this.width,this.height)),o==="depthAwareUpsampling"&&l!==a&&this.configureEffectCompositer(this.configuration.logarithmicDepthBuffer,this.camera.isOrthographicCamera),o==="transparencyAware"&&l!==a&&(this.autoDetectTransparency=!1,this.configureTransparencyTarget()),o==="stencil"&&l!==a&&(this.beautyRenderTarget.dispose(),this.beautyRenderTarget=new Nt(this.width,this.height,{minFilter:qt,magFilter:Ct,type:ki,format:Qt,stencilBuffer:a}),this.beautyRenderTarget.depthTexture=new rl(this.width,this.height,a?ia:Yn),this.beautyRenderTarget.depthTexture.format=a?na:Dr),!0}}),this.samples=[],this.samplesDenoise=[],this.autoDetectTransparency=!0,this.frame=0,this.lastViewMatrix=new _e,this.lastProjectionMatrix=new _e,this.beautyRenderTarget=new Nt(this.width,this.height,{minFilter:qt,magFilter:Ct,type:ki,format:Qt,stencilBuffer:!1}),this.beautyRenderTarget.depthTexture=new rl(this.width,this.height,Yn),this.beautyRenderTarget.depthTexture.format=Dr,this.configureEffectCompositer(this.configuration.logarithmicDepthBuffer,this.camera.isOrthographicCamera),this.configureSampleDependentPasses(),this.configureHalfResTargets(),this.detectTransparency(),this.configureTransparencyTarget(),this.writeTargetInternal=new Nt(this.width,this.height,{minFilter:qt,magFilter:qt,depthBuffer:!1,format:Qt}),this.readTargetInternal=new Nt(this.width,this.height,{minFilter:qt,magFilter:qt,depthBuffer:!1,format:Qt}),this.accumulationRenderTarget=new Nt(this.width,this.height,{minFilter:qt,magFilter:qt,depthBuffer:!1,format:Qt,type:ki,stencilBuffer:!1,depthBuffer:!1,alpha:!0}),this.bluenoise=new XI(WO,128,128),this.accumulationQuad=new Do(new Tt({uniforms:{frame:{value:0},tDiffuse:{value:null}},transparent:!0,opacity:1,vertexShader:`
             varying vec2 vUv;
             void main() {
                 vUv = uv;
                 gl_Position = vec4(position, 1);
             }`,fragmentShader:`
             uniform sampler2D tDiffuse;
             uniform float frame;
                varying vec2 vUv;
                void main() {
                    vec4 color = texture2D(tDiffuse, vUv);
                    gl_FragColor = vec4(color.rgb, 1.0 / (frame + 1.0));
                }
                `})),this.bluenoise.colorSpace=us,this.bluenoise.wrapS=gl,this.bluenoise.wrapT=gl,this.bluenoise.minFilter=Ct,this.bluenoise.magFilter=Ct,this.bluenoise.needsUpdate=!0,this.lastTime=0,this.timeRollingAverage=.99,this._r=new Oe,this._c=new Ne}configureHalfResTargets(){this.firstFrame(),this.configuration.halfRes?(this.depthDownsampleTarget=new YO(this.width/2,this.height/2,2),this.depthDownsampleTarget.textures[0].format=Iu,this.depthDownsampleTarget.textures[0].type=Sn,this.depthDownsampleTarget.textures[0].minFilter=Ct,this.depthDownsampleTarget.textures[0].magFilter=Ct,this.depthDownsampleTarget.textures[0].depthBuffer=!1,this.depthDownsampleTarget.textures[1].format=Qt,this.depthDownsampleTarget.textures[1].type=ki,this.depthDownsampleTarget.textures[1].minFilter=Ct,this.depthDownsampleTarget.textures[1].magFilter=Ct,this.depthDownsampleTarget.textures[1].depthBuffer=!1,this.depthDownsampleQuad=new Do(new Tt(GO))):(this.depthDownsampleTarget&&(this.depthDownsampleTarget.dispose(),this.depthDownsampleTarget=null),this.depthDownsampleQuad&&(this.depthDownsampleQuad.dispose(),this.depthDownsampleQuad=null))}detectTransparency(){if(this.autoDetectTransparency){let e=!1;this.scene.traverse(t=>{t.material&&t.material.transparent&&(e=!0)}),this.configuration.transparencyAware=e}}configureTransparencyTarget(){this.configuration.transparencyAware?(this.transparencyRenderTargetDWFalse=new Nt(this.width,this.height,{minFilter:qt,magFilter:Ct,type:ki,format:Qt}),this.transparencyRenderTargetDWTrue=new Nt(this.width,this.height,{minFilter:qt,magFilter:Ct,type:ki,format:Qt}),this.transparencyRenderTargetDWTrue.depthTexture=new rl(this.width,this.height,Yn),this.depthCopyPass=new Do(new Tt({uniforms:{depthTexture:{value:this.beautyRenderTarget.depthTexture}},vertexShader:`
            varying vec2 vUv;
            void main() {
                vUv = uv;
                gl_Position = vec4(position, 1);
            }`,fragmentShader:`
            uniform sampler2D depthTexture;
            varying vec2 vUv;
            void main() {
               gl_FragDepth = texture2D(depthTexture, vUv).r + 0.00001;
               gl_FragColor = vec4(0.0, 0.0, 0.0, 0.0);
            }
            `}))):(this.transparencyRenderTargetDWFalse&&(this.transparencyRenderTargetDWFalse.dispose(),this.transparencyRenderTargetDWFalse=null),this.transparencyRenderTargetDWTrue&&(this.transparencyRenderTargetDWTrue.dispose(),this.transparencyRenderTargetDWTrue=null),this.depthCopyPass&&(this.depthCopyPass.dispose(),this.depthCopyPass=null))}renderTransparency(e){const t=this.scene.background,i=e.getClearColor(new Ne),n=e.getClearAlpha(),r=new Map,o=e.autoClearDepth;this.scene.traverse(a=>{r.set(a,a.visible)}),this.scene.background=null,e.autoClearDepth=!1,e.setClearColor(new Ne(0,0,0),0),this.depthCopyPass.material.uniforms.depthTexture.value=this.beautyRenderTarget.depthTexture,e.setRenderTarget(this.transparencyRenderTargetDWFalse),this.scene.traverse(a=>{a.material&&(a.visible=r.get(a)&&(a.material.transparent&&!a.material.depthWrite&&!a.userData.treatAsOpaque||!!a.userData.cannotReceiveAO))}),e.clear(!0,!0,!0),this.depthCopyPass.render(e),e.render(this.scene,this.camera),e.setRenderTarget(this.transparencyRenderTargetDWTrue),this.scene.traverse(a=>{a.material&&(a.visible=r.get(a)&&a.material.transparent&&a.material.depthWrite&&!a.userData.treatAsOpaque)}),e.clear(!0,!0,!0),this.depthCopyPass.render(e),e.render(this.scene,this.camera),this.scene.traverse(a=>{a.visible=r.get(a)}),e.setClearColor(i,n),this.scene.background=t,e.autoClearDepth=o}configureSampleDependentPasses(){this.firstFrame(),this.configureAOPass(this.configuration.logarithmicDepthBuffer,this.camera.isOrthographicCamera),this.configureDenoisePass(this.configuration.logarithmicDepthBuffer,this.camera.isOrthographicCamera)}configureAOPass(e=!1,t=!1){this.firstFrame(),this.samples=this.generateHemisphereSamples(this.configuration.aoSamples);const i={...zO};i.fragmentShader=i.fragmentShader.replace("16",this.configuration.aoSamples).replace("16.0",this.configuration.aoSamples+".0"),e&&(i.fragmentShader=`#define LOGDEPTH
`+i.fragmentShader),t&&(i.fragmentShader=`#define ORTHO
`+i.fragmentShader),this.configuration.halfRes&&(i.fragmentShader=`#define HALFRES
`+i.fragmentShader),this.effectShaderQuad?(this.effectShaderQuad.material.dispose(),this.effectShaderQuad.material=new Tt(i)):this.effectShaderQuad=new Do(new Tt(i))}configureDenoisePass(e=!1,t=!1){this.firstFrame(),this.samplesDenoise=this.generateDenoiseSamples(this.configuration.denoiseSamples,11);const i={...kO};i.fragmentShader=i.fragmentShader.replace("16",this.configuration.denoiseSamples),e&&(i.fragmentShader=`#define LOGDEPTH
`+i.fragmentShader),t&&(i.fragmentShader=`#define ORTHO
`+i.fragmentShader),this.poissonBlurQuad?(this.poissonBlurQuad.material.dispose(),this.poissonBlurQuad.material=new Tt(i)):this.poissonBlurQuad=new Do(new Tt(i))}configureEffectCompositer(e=!1,t=!1){this.firstFrame();const i={...VO};e&&(i.fragmentShader=`#define LOGDEPTH
`+i.fragmentShader),t&&(i.fragmentShader=`#define ORTHO
`+i.fragmentShader),this.configuration.halfRes&&this.configuration.depthAwareUpsampling&&(i.fragmentShader=`#define HALFRES
`+i.fragmentShader),this.effectCompositerQuad?(this.effectCompositerQuad.material.dispose(),this.effectCompositerQuad.material=new Tt(i)):this.effectCompositerQuad=new Do(new Tt(i))}generateHemisphereSamples(e){const t=[];for(let i=0;i<e;i++){const n=2.399963*i;let r=Math.sqrt(i+.5)/Math.sqrt(e);const o=r*Math.cos(n),a=r*Math.sin(n),l=Math.sqrt(1-(o*o+a*a));t.push(new P(o,a,l))}return t}generateDenoiseSamples(e,t){const i=2*Math.PI*t/e,n=1/e,r=n,o=[];let a=n,l=0;for(let c=0;c<e;c++)o.push(new Oe(Math.cos(l),Math.sin(l)).multiplyScalar(Math.pow(a,.75))),a+=r,l+=i;return o}setSize(e,t){this.firstFrame(),this.width=e,this.height=t;const i=this.configuration.halfRes?.5:1;this.beautyRenderTarget.setSize(e,t),this.writeTargetInternal.setSize(e*i,t*i),this.readTargetInternal.setSize(e*i,t*i),this.accumulationRenderTarget.setSize(e*i,t*i),this.configuration.halfRes&&this.depthDownsampleTarget.setSize(e*i,t*i),this.configuration.transparencyAware&&(this.transparencyRenderTargetDWFalse.setSize(e,t),this.transparencyRenderTargetDWTrue.setSize(e,t))}firstFrame(){this.needsFrame=!0}render(e,t,i,n,r){e.capabilities.logarithmicDepthBuffer!==this.configuration.logarithmicDepthBuffer&&(this.configuration.logarithmicDepthBuffer=e.capabilities.logarithmicDepthBuffer,this.configureAOPass(this.configuration.logarithmicDepthBuffer,this.camera.isOrthographicCamera),this.configureDenoisePass(this.configuration.logarithmicDepthBuffer,this.camera.isOrthographicCamera),this.configureEffectCompositer(this.configuration.logarithmicDepthBuffer,this.camera.isOrthographicCamera)),this.detectTransparency(),this.camera.updateMatrixWorld(),this.lastViewMatrix.equals(this.camera.matrixWorldInverse)&&this.lastProjectionMatrix.equals(this.camera.projectionMatrix)&&this.configuration.accumulate&&!this.needsFrame?this.frame++:(this.configuration.accumulate&&(e.setRenderTarget(this.accumulationRenderTarget),e.clear(!0,!0,!0)),this.frame=0,this.needsFrame=!1),this.lastViewMatrix.copy(this.camera.matrixWorldInverse),this.lastProjectionMatrix.copy(this.camera.projectionMatrix);let o,a,l;this.debugMode&&(o=e.getContext(),a=o.getExtension("EXT_disjoint_timer_query_webgl2"),a===null&&(console.error("EXT_disjoint_timer_query_webgl2 not available, disabling debug mode."),this.debugMode=!1)),this.configuration.autoRenderBeauty&&(e.setRenderTarget(this.beautyRenderTarget),e.render(this.scene,this.camera),this.configuration.transparencyAware&&this.renderTransparency(e)),this.debugMode&&(l=o.createQuery(),o.beginQuery(a.TIME_ELAPSED_EXT,l));const c=e.xr.enabled;e.xr.enabled=!1,this._r.set(this.width,this.height);let h=this.configuration.aoRadius;if(this.configuration.halfRes&&this.configuration.screenSpaceRadius&&(h*=.5),this.frame<1024/this.configuration.aoSamples){this.configuration.halfRes&&(e.setRenderTarget(this.depthDownsampleTarget),this.depthDownsampleQuad.material.uniforms.sceneDepth.value=this.beautyRenderTarget.depthTexture,this.depthDownsampleQuad.material.uniforms.resolution.value=this._r,this.depthDownsampleQuad.material.uniforms.near.value=this.camera.near,this.depthDownsampleQuad.material.uniforms.far.value=this.camera.far,this.depthDownsampleQuad.material.uniforms.projectionMatrixInv.value=this.camera.projectionMatrixInverse,this.depthDownsampleQuad.material.uniforms.viewMatrixInv.value=this.camera.matrixWorld,this.depthDownsampleQuad.material.uniforms.logDepth.value=this.configuration.logarithmicDepthBuffer,this.depthDownsampleQuad.material.uniforms.ortho.value=this.camera.isOrthographicCamera,this.depthDownsampleQuad.render(e)),this.effectShaderQuad.material.uniforms.sceneDiffuse.value=this.beautyRenderTarget.texture,this.effectShaderQuad.material.uniforms.sceneDepth.value=this.configuration.halfRes?this.depthDownsampleTarget.textures[0]:this.beautyRenderTarget.depthTexture,this.effectShaderQuad.material.uniforms.sceneNormal.value=this.configuration.halfRes?this.depthDownsampleTarget.textures[1]:null,this.effectShaderQuad.material.uniforms.projMat.value=this.camera.projectionMatrix,this.effectShaderQuad.material.uniforms.viewMat.value=this.camera.matrixWorldInverse,this.effectShaderQuad.material.uniforms.projViewMat.value=this.camera.projectionMatrix.clone().multiply(this.camera.matrixWorldInverse.clone()),this.effectShaderQuad.material.uniforms.projectionMatrixInv.value=this.camera.projectionMatrixInverse,this.effectShaderQuad.material.uniforms.viewMatrixInv.value=this.camera.matrixWorld,this.effectShaderQuad.material.uniforms.cameraPos.value=this.camera.getWorldPosition(new P),this.effectShaderQuad.material.uniforms.biasAdjustment.value=new Oe(this.configuration.biasOffset,this.configuration.biasMultiplier),this.effectShaderQuad.material.uniforms.resolution.value=this.configuration.halfRes?this._r.clone().multiplyScalar(.5).floor():this._r,this.effectShaderQuad.material.uniforms.time.value=performance.now()/1e3,this.effectShaderQuad.material.uniforms.samples.value=this.samples,this.effectShaderQuad.material.uniforms.bluenoise.value=this.bluenoise,this.effectShaderQuad.material.uniforms.radius.value=h,this.effectShaderQuad.material.uniforms.distanceFalloff.value=this.configuration.distanceFalloff,this.effectShaderQuad.material.uniforms.near.value=this.camera.near,this.effectShaderQuad.material.uniforms.far.value=this.camera.far,this.effectShaderQuad.material.uniforms.logDepth.value=e.capabilities.logarithmicDepthBuffer,this.effectShaderQuad.material.uniforms.ortho.value=this.camera.isOrthographicCamera,this.effectShaderQuad.material.uniforms.screenSpaceRadius.value=this.configuration.screenSpaceRadius,this.effectShaderQuad.material.uniforms.frame.value=this.frame,e.setRenderTarget(this.writeTargetInternal),this.effectShaderQuad.render(e);for(let u=0;u<this.configuration.denoiseIterations;u++)[this.writeTargetInternal,this.readTargetInternal]=[this.readTargetInternal,this.writeTargetInternal],this.poissonBlurQuad.material.uniforms.tDiffuse.value=this.readTargetInternal.texture,this.poissonBlurQuad.material.uniforms.sceneDepth.value=this.configuration.halfRes?this.depthDownsampleTarget.textures[0]:this.beautyRenderTarget.depthTexture,this.poissonBlurQuad.material.uniforms.projMat.value=this.camera.projectionMatrix,this.poissonBlurQuad.material.uniforms.viewMat.value=this.camera.matrixWorldInverse,this.poissonBlurQuad.material.uniforms.projectionMatrixInv.value=this.camera.projectionMatrixInverse,this.poissonBlurQuad.material.uniforms.viewMatrixInv.value=this.camera.matrixWorld,this.poissonBlurQuad.material.uniforms.cameraPos.value=this.camera.getWorldPosition(new P),this.poissonBlurQuad.material.uniforms.resolution.value=this.configuration.halfRes?this._r.clone().multiplyScalar(.5).floor():this._r,this.poissonBlurQuad.material.uniforms.time.value=performance.now()/1e3,this.poissonBlurQuad.material.uniforms.blueNoise.value=this.bluenoise,this.poissonBlurQuad.material.uniforms.radius.value=this.configuration.denoiseRadius*(this.configuration.halfRes?.5:1),this.poissonBlurQuad.material.uniforms.worldRadius.value=h,this.poissonBlurQuad.material.uniforms.distanceFalloff.value=this.configuration.distanceFalloff,this.poissonBlurQuad.material.uniforms.index.value=u,this.poissonBlurQuad.material.uniforms.poissonDisk.value=this.samplesDenoise,this.poissonBlurQuad.material.uniforms.near.value=this.camera.near,this.poissonBlurQuad.material.uniforms.far.value=this.camera.far,this.poissonBlurQuad.material.uniforms.logDepth.value=e.capabilities.logarithmicDepthBuffer,this.poissonBlurQuad.material.uniforms.screenSpaceRadius.value=this.configuration.screenSpaceRadius,e.setRenderTarget(this.writeTargetInternal),this.poissonBlurQuad.render(e);e.setRenderTarget(this.accumulationRenderTarget);const d=e.autoClear;e.autoClear=!1,this.accumulationQuad.material.uniforms.tDiffuse.value=this.writeTargetInternal.texture,this.accumulationQuad.material.uniforms.frame.value=this.frame,this.accumulationQuad.render(e),e.autoClear=d}this.configuration.transparencyAware&&(this.effectCompositerQuad.material.uniforms.transparencyDWFalse.value=this.transparencyRenderTargetDWFalse.texture,this.effectCompositerQuad.material.uniforms.transparencyDWTrue.value=this.transparencyRenderTargetDWTrue.texture,this.effectCompositerQuad.material.uniforms.transparencyDWTrueDepth.value=this.transparencyRenderTargetDWTrue.depthTexture,this.effectCompositerQuad.material.uniforms.transparencyAware.value=!0),this.effectCompositerQuad.material.uniforms.sceneDiffuse.value=this.beautyRenderTarget.texture,this.effectCompositerQuad.material.uniforms.sceneDepth.value=this.beautyRenderTarget.depthTexture,this.effectCompositerQuad.material.uniforms.aoTones.value=this.configuration.aoTones,this.effectCompositerQuad.material.uniforms.near.value=this.camera.near,this.effectCompositerQuad.material.uniforms.far.value=this.camera.far,this.effectCompositerQuad.material.uniforms.projectionMatrixInv.value=this.camera.projectionMatrixInverse,this.effectCompositerQuad.material.uniforms.viewMatrixInv.value=this.camera.matrixWorld,this.effectCompositerQuad.material.uniforms.logDepth.value=e.capabilities.logarithmicDepthBuffer,this.effectCompositerQuad.material.uniforms.ortho.value=this.camera.isOrthographicCamera,this.effectCompositerQuad.material.uniforms.downsampledDepth.value=this.configuration.halfRes?this.depthDownsampleTarget.textures[0]:this.beautyRenderTarget.depthTexture,this.effectCompositerQuad.material.uniforms.resolution.value=this._r,this.effectCompositerQuad.material.uniforms.blueNoise.value=this.bluenoise,this.effectCompositerQuad.material.uniforms.intensity.value=this.configuration.intensity,this.effectCompositerQuad.material.uniforms.renderMode.value=this.configuration.renderMode,this.effectCompositerQuad.material.uniforms.screenSpaceRadius.value=this.configuration.screenSpaceRadius,this.effectCompositerQuad.material.uniforms.radius.value=h,this.effectCompositerQuad.material.uniforms.distanceFalloff.value=this.configuration.distanceFalloff,this.effectCompositerQuad.material.uniforms.gammaCorrection.value=this.configuration.gammaCorrection,this.effectCompositerQuad.material.uniforms.tDiffuse.value=this.accumulationRenderTarget.texture,this.effectCompositerQuad.material.uniforms.color.value=this._c.copy(this.configuration.color).convertSRGBToLinear(),this.effectCompositerQuad.material.uniforms.colorMultiply.value=this.configuration.colorMultiply,this.effectCompositerQuad.material.uniforms.cameraPos.value=this.camera.getWorldPosition(new P),this.effectCompositerQuad.material.uniforms.fog.value=!!this.scene.fog,this.scene.fog&&(this.scene.fog.isFog?(this.effectCompositerQuad.material.uniforms.fogExp.value=!1,this.effectCompositerQuad.material.uniforms.fogNear.value=this.scene.fog.near,this.effectCompositerQuad.material.uniforms.fogFar.value=this.scene.fog.far):this.scene.fog.isFogExp2?(this.effectCompositerQuad.material.uniforms.fogExp.value=!0,this.effectCompositerQuad.material.uniforms.fogDensity.value=this.scene.fog.density):console.error(`Unsupported fog type ${this.scene.fog.constructor.name} in SSAOPass.`)),e.setRenderTarget(this.renderToScreen?null:t),this.effectCompositerQuad.render(e),this.debugMode&&(o.endQuery(a.TIME_ELAPSED_EXT),ub(l,o,this)),e.xr.enabled=c}enableDebugMode(){this.debugMode=!0}disableDebugMode(){this.debugMode=!1}setDisplayMode(e){this.configuration.renderMode=["Combined","AO","No AO","Split","Split AO"].indexOf(e)}setQualityMode(e){e==="Performance"?(this.configuration.aoSamples=8,this.configuration.denoiseSamples=4,this.configuration.denoiseRadius=12):e==="Low"?(this.configuration.aoSamples=16,this.configuration.denoiseSamples=4,this.configuration.denoiseRadius=12):e==="Medium"?(this.configuration.aoSamples=16,this.configuration.denoiseSamples=8,this.configuration.denoiseRadius=12):e==="High"?(this.configuration.aoSamples=64,this.configuration.denoiseSamples=8,this.configuration.denoiseRadius=6):e==="Ultra"&&(this.configuration.aoSamples=64,this.configuration.denoiseSamples=16,this.configuration.denoiseRadius=6)}}const ZO={name:"GammaCorrectionShader",uniforms:{tDiffuse:{value:null}},vertexShader:`

		varying vec2 vUv;

		void main() {

			vUv = uv;
			gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );

		}`,fragmentShader:`

		uniform sampler2D tDiffuse;

		varying vec2 vUv;

		void main() {

			vec4 tex = texture2D( tDiffuse, vUv );

			gl_FragColor = sRGBTransferOETF( tex );

		}`};function jO(){return new Tt({side:2,clipping:!0,uniforms:{},vertexShader:`
    varying vec4 vColor;
    
    #include <clipping_planes_pars_vertex>
  
    void main() {
       #include <begin_vertex>
    
       vec4 absPosition = vec4(position, 1.0);
       vec3 trueNormal = normal;
       
       #ifdef USE_INSTANCING
          absPosition = instanceMatrix * absPosition;
          trueNormal = (instanceMatrix * vec4(normal, 0.)).xyz;
       #endif
       
       absPosition = modelMatrix * absPosition;
       trueNormal = (normalize(modelMatrix * vec4(trueNormal, 0.))).xyz;
       
       vec3 planePosition = absPosition.xyz / 40.;
       float d = abs(dot(trueNormal, planePosition));
       vColor = vec4(abs(trueNormal), d);
       gl_Position = projectionMatrix * viewMatrix * absPosition;
       
       #include <project_vertex>
       #include <clipping_planes_vertex>
    }
    `,fragmentShader:`
    varying vec4 vColor;
    
    #include <clipping_planes_pars_fragment>
  
    void main() {
      #include <clipping_planes_fragment>
      gl_FragColor = vColor;
    }
    `})}function qO(){return new Tt({side:2,clipping:!0,uniforms:{},vertexShader:`
    varying vec3 vCameraPosition;
    varying vec3 vPosition;
    varying vec3 vNormal;
    
    #include <clipping_planes_pars_vertex>
  
    void main() {
       #include <begin_vertex>
       
       vec4 absPosition = vec4(position, 1.0);
       vNormal = normal;
       
       #ifdef USE_INSTANCING
          absPosition = instanceMatrix * absPosition;
          vNormal = (instanceMatrix * vec4(normal, 0.)).xyz;
       #endif
       
       absPosition = modelMatrix * absPosition;
       vNormal = (normalize(modelMatrix * vec4(vNormal, 0.))).xyz;
       
       gl_Position = projectionMatrix * viewMatrix * absPosition;
       
       vCameraPosition = cameraPosition;
       vPosition = absPosition.xyz;
       
       #include <project_vertex>
       #include <clipping_planes_vertex>
    }
    `,fragmentShader:`
    varying vec3 vCameraPosition;
    varying vec3 vPosition;
    varying vec3 vNormal;
    
    #include <clipping_planes_pars_fragment>
  
    void main() {
      #include <clipping_planes_fragment>
      vec3 cameraPixelVec = normalize(vCameraPosition - vPosition);
      float difference = abs(dot(vNormal, cameraPixelVec));
      
      // This achieves a double gloss effect: when the surface is perpendicular and when it's parallel
      difference = abs((difference * 2.) - 1.);
      
      gl_FragColor = vec4(difference, difference, difference, 1.);
    }
    `})}class KO extends kl{constructor(e,t,i,n,r){if(super(),D(this,"components"),D(this,"resolution"),D(this,"renderScene"),D(this,"renderCamera"),D(this,"fsQuad"),D(this,"normalOverrideMaterial"),D(this,"glossOverrideMaterial"),D(this,"planeBuffer"),D(this,"glossBuffer"),D(this,"outlineBuffer"),D(this,"excludedMeshes",[]),D(this,"outlinedMeshes",{}),D(this,"outlineScene",new Hr),D(this,"_outlineEnabled",!1),D(this,"_lineColor",10066329),D(this,"_opacity",.4),D(this,"_tolerance",3),D(this,"_glossEnabled",!0),D(this,"_glossExponent",1.9),D(this,"_minGloss",-.1),D(this,"_maxGloss",.1),!i.renderer)throw new Error("The given world must have a renderer!");this.components=t,this.renderScene=n,this.renderCamera=r,this.resolution=new Oe(e.x,e.y),this.fsQuad=new lb,this.fsQuad.material=this.createOutlinePostProcessMaterial(),this.planeBuffer=this.newRenderTarget(),this.glossBuffer=this.newRenderTarget(),this.outlineBuffer=this.newRenderTarget();const o=jO();o.clippingPlanes=i.renderer.clippingPlanes,this.normalOverrideMaterial=o;const a=qO();a.clippingPlanes=i.renderer.clippingPlanes,this.glossOverrideMaterial=a}get lineColor(){return this._lineColor}set lineColor(e){this._lineColor=e,this.fsQuad.material.uniforms.lineColor.value.set(e)}get tolerance(){return this._tolerance}set tolerance(e){this._tolerance=e;const t=this.fsQuad.material;t.uniforms.tolerance.value=e}get opacity(){return this._opacity}set opacity(e){this._opacity=e;const t=this.fsQuad.material;t.uniforms.opacity.value=e}get glossEnabled(){return this._glossEnabled}set glossEnabled(e){if(e===this._glossEnabled)return;this._glossEnabled=e;const t=this.fsQuad.material;t.uniforms.glossEnabled.value=e?1:0}get glossExponent(){return this._glossExponent}set glossExponent(e){this._glossExponent=e;const t=this.fsQuad.material;t.uniforms.glossExponent.value=e}get minGloss(){return this._minGloss}set minGloss(e){this._minGloss=e;const t=this.fsQuad.material;t.uniforms.minGloss.value=e}get maxGloss(){return new Mi().color.convertLinearToSRGB(),this._maxGloss}set maxGloss(e){this._maxGloss=e;const t=this.fsQuad.material;t.uniforms.maxGloss.value=e}get outlineEnabled(){return this._outlineEnabled}set outlineEnabled(e){if(e===this._outlineEnabled)return;this._outlineEnabled=e;const t=this.fsQuad.material;t.uniforms.outlineEnabled.value=e?1:0}async dispose(){this.planeBuffer.dispose(),this.glossBuffer.dispose(),this.outlineBuffer.dispose(),this.normalOverrideMaterial.dispose(),this.glossOverrideMaterial.dispose(),this.fsQuad.material.dispose(),this.fsQuad.dispose(),this.excludedMeshes=[],this.outlineScene.children=[];const e=this.components.get(Xn);for(const t in this.outlinedMeshes){const i=this.outlinedMeshes[t];for(const n of i.meshes){e.destroy(n,!0,!0);const r=n;r.fragment&&r.fragment.dispose(!0)}i.material.dispose()}}setSize(e,t){this.planeBuffer.setSize(e,t),this.glossBuffer.setSize(e,t),this.outlineBuffer.setSize(e,t),this.resolution.set(e,t);const i=this.fsQuad.material;i.uniforms.screenSize.value.set(this.resolution.x,this.resolution.y,1/this.resolution.x,1/this.resolution.y),i.uniformsNeedUpdate=!0}render(e,t,i){const n=t.depthBuffer;t.depthBuffer=!1;const r=this.renderScene.overrideMaterial,o=this.renderScene.background;this.renderScene.background=null;for(const l of this.excludedMeshes)l.visible=!1;e.setRenderTarget(this.planeBuffer),this.renderScene.overrideMaterial=this.normalOverrideMaterial,e.render(this.renderScene,this.renderCamera),this._glossEnabled&&(e.setRenderTarget(this.glossBuffer),this.renderScene.overrideMaterial=this.glossOverrideMaterial,e.render(this.renderScene,this.renderCamera)),this.renderScene.overrideMaterial=r,e.setRenderTarget(this.outlineBuffer),this._outlineEnabled?e.render(this.outlineScene,this.renderCamera):e.clear();for(const l of this.excludedMeshes)l.visible=!0;this.renderScene.background=o;const a=this.fsQuad.material;a.uniforms.planeBuffer.value=this.planeBuffer.texture,a.uniforms.glossBuffer.value=this.glossBuffer.texture,a.uniforms.outlineBuffer.value=this.outlineBuffer.texture,a.uniforms.sceneColorBuffer.value=i.texture,this.renderToScreen?(e.setRenderTarget(null),this.fsQuad.render(e)):(e.setRenderTarget(t),this.fsQuad.render(e)),t.depthBuffer=n}get vertexShader(){return`
	  varying vec2 vUv;
	  void main() {
	  	vUv = uv;
	  	gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);
	  }
	`}get fragmentShader(){return`
	  uniform sampler2D sceneColorBuffer;
	  uniform sampler2D planeBuffer;
	  uniform sampler2D glossBuffer;
	  uniform sampler2D outlineBuffer;
	  uniform vec4 screenSize;
	  uniform vec3 lineColor;
	  
	  uniform float outlineEnabled;
	  
      uniform int width;
	  uniform float opacity;
      uniform float tolerance;
      uniform float glossExponent;
      uniform float minGloss;
      uniform float maxGloss;
      uniform float glossEnabled;

	  varying vec2 vUv;

	  vec4 getValue(sampler2D buffer, int x, int y) {
	  	return texture2D(buffer, vUv + screenSize.zw * vec2(x, y));
	  }

      float normalDiff(vec3 normal1, vec3 normal2) {
        return ((dot(normal1, normal2) - 1.) * -1.) / 2.;
      }

      // Returns 0 if it's background, 1 if it's not
      float getIsBackground(vec3 normal) {
        float background = 1.0;
        background *= step(normal.x, 0.);
        background *= step(normal.y, 0.);
        background *= step(normal.z, 0.);
        background = (background - 1.) * -1.;
        return background;
      }

	  void main() {
	  
	    vec4 sceneColor = getValue(sceneColorBuffer, 0, 0);
	    vec3 normSceneColor = normalize(sceneColor.rgb);
  
        vec4 plane = getValue(planeBuffer, 0, 0);
	    vec3 normal = plane.xyz;
        float distance = plane.w;
  
        vec3 normalTop = getValue(planeBuffer, 0, width).rgb;
        vec3 normalBottom = getValue(planeBuffer, 0, -width).rgb;
        vec3 normalRight = getValue(planeBuffer, width, 0).rgb;
        vec3 normalLeft = getValue(planeBuffer, -width, 0).rgb;
        vec3 normalTopRight = getValue(planeBuffer, width, width).rgb;
        vec3 normalTopLeft = getValue(planeBuffer, -width, width).rgb;
        vec3 normalBottomRight = getValue(planeBuffer, width, -width).rgb;
        vec3 normalBottomLeft = getValue(planeBuffer, -width, -width).rgb;
  
        float distanceTop = getValue(planeBuffer, 0, width).a;
        float distanceBottom = getValue(planeBuffer, 0, -width).a;
        float distanceRight = getValue(planeBuffer, width, 0).a;
        float distanceLeft = getValue(planeBuffer, -width, 0).a;
        float distanceTopRight = getValue(planeBuffer, width, width).a;
        float distanceTopLeft = getValue(planeBuffer, -width, width).a;
        float distanceBottomRight = getValue(planeBuffer, width, -width).a;
        float distanceBottomLeft = getValue(planeBuffer, -width, -width).a;
        
        vec3 sceneColorTop = normalize(getValue(sceneColorBuffer, 1, 0).rgb);
        vec3 sceneColorBottom = normalize(getValue(sceneColorBuffer, -1, 0).rgb);
        vec3 sceneColorLeft = normalize(getValue(sceneColorBuffer, 0, -1).rgb);
        vec3 sceneColorRight = normalize(getValue(sceneColorBuffer, 0, 1).rgb);
        vec3 sceneColorTopRight = normalize(getValue(sceneColorBuffer, 1, 1).rgb);
        vec3 sceneColorBottomRight = normalize(getValue(sceneColorBuffer, -1, 1).rgb);
        vec3 sceneColorTopLeft = normalize(getValue(sceneColorBuffer, 1, 1).rgb);
        vec3 sceneColorBottomLeft = normalize(getValue(sceneColorBuffer, -1, 1).rgb);

        // Checks if the planes of this texel and the neighbour texels are different

        float planeDiff = 0.0;

        planeDiff += step(0.001, normalDiff(normal, normalTop));
        planeDiff += step(0.001, normalDiff(normal, normalBottom));
        planeDiff += step(0.001, normalDiff(normal, normalLeft));
        planeDiff += step(0.001, normalDiff(normal, normalRight));
        planeDiff += step(0.001, normalDiff(normal, normalTopRight));
        planeDiff += step(0.001, normalDiff(normal, normalTopLeft));
        planeDiff += step(0.001, normalDiff(normal, normalBottomRight));
        planeDiff += step(0.001, normalDiff(normal, normalBottomLeft));
        
        planeDiff += step(0.001, normalDiff(normSceneColor, sceneColorTop));
        planeDiff += step(0.001, normalDiff(normSceneColor, sceneColorBottom));
        planeDiff += step(0.001, normalDiff(normSceneColor, sceneColorLeft));
        planeDiff += step(0.001, normalDiff(normSceneColor, sceneColorRight));
       	planeDiff += step(0.001, normalDiff(normSceneColor, sceneColorTopRight));
        planeDiff += step(0.001, normalDiff(normSceneColor, sceneColorTopLeft));
        planeDiff += step(0.001, normalDiff(normSceneColor, sceneColorBottomRight));
        planeDiff += step(0.001, normalDiff(normSceneColor, sceneColorBottomLeft));

        planeDiff += step(0.001, abs(distance - distanceTop));
        planeDiff += step(0.001, abs(distance - distanceBottom));
        planeDiff += step(0.001, abs(distance - distanceLeft));
        planeDiff += step(0.001, abs(distance - distanceRight));
        planeDiff += step(0.001, abs(distance - distanceTopRight));
        planeDiff += step(0.001, abs(distance - distanceTopLeft));
        planeDiff += step(0.001, abs(distance - distanceBottomRight));
        planeDiff += step(0.001, abs(distance - distanceBottomLeft));

        // Add extra background outline

        int width2 = width + 1;
        vec3 normalTop2 = getValue(planeBuffer, 0, width2).rgb;
        vec3 normalBottom2 = getValue(planeBuffer, 0, -width2).rgb;
        vec3 normalRight2 = getValue(planeBuffer, width2, 0).rgb;
        vec3 normalLeft2 = getValue(planeBuffer, -width2, 0).rgb;
        vec3 normalTopRight2 = getValue(planeBuffer, width2, width2).rgb;
        vec3 normalTopLeft2 = getValue(planeBuffer, -width2, width2).rgb;
        vec3 normalBottomRight2 = getValue(planeBuffer, width2, -width2).rgb;
        vec3 normalBottomLeft2 = getValue(planeBuffer, -width2, -width2).rgb;

        planeDiff += -(getIsBackground(normalTop2) - 1.);
        planeDiff += -(getIsBackground(normalBottom2) - 1.);
        planeDiff += -(getIsBackground(normalRight2) - 1.);
        planeDiff += -(getIsBackground(normalLeft2) - 1.);
        planeDiff += -(getIsBackground(normalTopRight2) - 1.);
        planeDiff += -(getIsBackground(normalBottomRight2) - 1.);
        planeDiff += -(getIsBackground(normalBottomRight2) - 1.);
        planeDiff += -(getIsBackground(normalBottomLeft2) - 1.);

        // Tolerance sets the minimum amount of differences to consider
        // this texel an edge

        float line = step(tolerance, planeDiff);

        // Exclude background and apply opacity

        float background = getIsBackground(normal);
        line *= background;
        line *= opacity;
        
        // Add gloss
        
        vec3 gloss = getValue(glossBuffer, 0, 0).xyz;
        float diffGloss = abs(maxGloss - minGloss);
        vec3 glossExpVector = vec3(glossExponent,glossExponent,glossExponent);
        gloss = min(pow(gloss, glossExpVector), vec3(1.,1.,1.));
        gloss *= diffGloss;
        gloss += minGloss;
        vec4 glossedColor = sceneColor + vec4(gloss, 1.) * glossEnabled;
        
        vec4 corrected = mix(sceneColor, glossedColor, background);
        
        // Draw lines
        
        corrected = mix(corrected, vec4(lineColor, 1.), line);
        
        // Add outline
        
        vec4 outlinePreview =getValue(outlineBuffer, 0, 0);
        float outlineColorCorrection = 1. / max(0.2, outlinePreview.a);
        vec3 outlineColor = outlinePreview.rgb * outlineColorCorrection;
        
        // thickness between 10 and 2, opacity between 1 and 0.2
	    int outlineThickness = int(outlinePreview.a * 10.);
	    
	    float outlineDiff = 0.;
        
        outlineDiff += step(0.1, getValue(outlineBuffer, 0, 0).a);
        outlineDiff += step(0.1, getValue(outlineBuffer, 1, 0).a);
        outlineDiff += step(0.1, getValue(outlineBuffer, -1, 0).a);
        outlineDiff += step(0.1, getValue(outlineBuffer, 0, -1).a);
        outlineDiff += step(0.1, getValue(outlineBuffer, 0, 1).a);
        outlineDiff += step(0.1, getValue(outlineBuffer, outlineThickness, 0).a);
        outlineDiff += step(0.1, getValue(outlineBuffer, -outlineThickness, 0).a);
        outlineDiff += step(0.1, getValue(outlineBuffer, 0, -outlineThickness).a);
        outlineDiff += step(0.1, getValue(outlineBuffer, 0, outlineThickness).a);
        outlineDiff += step(0.1, getValue(outlineBuffer, outlineThickness, outlineThickness).a);
        outlineDiff += step(0.1, getValue(outlineBuffer, -outlineThickness, outlineThickness).a);
        outlineDiff += step(0.1, getValue(outlineBuffer, -outlineThickness, -outlineThickness).a);
        outlineDiff += step(0.1, getValue(outlineBuffer, outlineThickness, -outlineThickness).a);
        
        float outLine = step(4., outlineDiff) * step(outlineDiff, 12.) * outlineEnabled;
        corrected = mix(corrected, vec4(outlineColor, 1.), outLine);
        
        gl_FragColor = corrected;
	}
			`}createOutlinePostProcessMaterial(){return new Tt({uniforms:{opacity:{value:this._opacity},debugVisualize:{value:0},sceneColorBuffer:{value:null},tolerance:{value:this._tolerance},planeBuffer:{value:null},glossBuffer:{value:null},outlineBuffer:{value:null},glossEnabled:{value:1},minGloss:{value:this._minGloss},maxGloss:{value:this._maxGloss},outlineEnabled:{value:0},glossExponent:{value:this._glossExponent},width:{value:1},lineColor:{value:new Ne(this._lineColor)},screenSize:{value:new ct(this.resolution.x,this.resolution.y,1/this.resolution.x,1/this.resolution.y)}},vertexShader:this.vertexShader,fragmentShader:this.fragmentShader})}newRenderTarget(){const e=new Nt(this.resolution.x,this.resolution.y);return e.texture.colorSpace="srgb-linear",e.texture.format=Qt,e.texture.type=ki,e.texture.minFilter=Ct,e.texture.magFilter=Ct,e.texture.generateMipmaps=!1,e.stencilBuffer=!1,e}}class QO{constructor(e,t,i){if(D(this,"composer"),D(this,"overrideClippingPlanes",!1),D(this,"_components"),D(this,"_world"),D(this,"_renderTarget"),D(this,"_enabled",!1),D(this,"_initialized",!1),D(this,"_n8ao"),D(this,"_customEffects"),D(this,"_basePass"),D(this,"_gammaPass"),D(this,"_depthTexture"),D(this,"_renderer"),D(this,"_settings",{gamma:!0,custom:!0,ao:!1}),!i.renderer)throw new Error("The given world must have a renderer!");this._components=e,this._renderer=t,this._world=i,this._renderTarget=new Nt(window.innerWidth,window.innerHeight),this._renderTarget.texture.colorSpace="srgb-linear",this.composer=new LO(t,this._renderTarget),this.composer.setSize(window.innerWidth,window.innerHeight)}get basePass(){if(!this._basePass)throw new Error("Custom effects not initialized!");return this._basePass}get gammaPass(){if(!this._gammaPass)throw new Error("Custom effects not initialized!");return this._gammaPass}get customEffects(){if(!this._customEffects)throw new Error("Custom effects not initialized!");return this._customEffects}get n8ao(){if(!this._n8ao)throw new Error("Custom effects not initialized!");return this._n8ao}get enabled(){return this._enabled}set enabled(e){this._initialized||this.initialize(),this._enabled=e}get settings(){return{...this._settings}}dispose(){var e,t,i,n;this.composer.dispose(),this._renderTarget.dispose(),(e=this._depthTexture)==null||e.dispose(),(t=this._customEffects)==null||t.dispose(),(i=this._gammaPass)==null||i.dispose(),(n=this._n8ao)==null||n.dispose()}setPasses(e){let t=!1;for(const i in e){const n=i;if(this.settings[n]!==e[n]){t=!0;break}}if(t){for(const i in e){const n=i;this._settings[n]!==void 0&&(this._settings[n]=e[n])}this.updatePasses()}}setSize(e,t){if(!(e===0||t===0)&&this._initialized){const i=this._settings.custom;i&&this.setPasses({custom:!1}),this.setPasses({custom:!1}),this.composer.setSize(e,t),this.basePass.setSize(e,t),this.n8ao.setSize(e,t),this.customEffects.setSize(e,t),this.gammaPass.setSize(e,t),i&&this.setPasses({custom:!0})}}update(){this._enabled&&this.composer.render()}updateCamera(){const e=this._world.camera.three;this._n8ao&&(this._n8ao.camera=e),this._customEffects&&(this._customEffects.renderCamera=e),this._basePass&&(this._basePass.camera=e)}updateProjection(e){this.composer.passes.forEach(t=>{t.camera=e}),this.update()}initialize(){if(!this._world.renderer)throw new Error("The given world must have a renderer!");const e=this._world.scene.three,t=this._world.camera.three;if(!(e instanceof Hr))throw new Error("The given scene must have a THREE.Scene as core!");const i=this._world.camera;i.projection&&i.projection.onChanged.add(()=>{this.updateCamera()});const n=this._world.renderer;this.overrideClippingPlanes||(this._renderer.clippingPlanes=n.clippingPlanes),this._renderer.outputColorSpace="srgb",this._renderer.toneMapping=Es,this.newBasePass(e,t),this.newSaoPass(e,t),this.newGammaPass(),this.newCustomPass(e,t),this._initialized=!0,this.updatePasses()}updatePasses(){for(const e of this.composer.passes)this.composer.removePass(e);this._basePass&&this.composer.addPass(this.basePass),this._settings.gamma&&this.composer.addPass(this.gammaPass),this._settings.ao&&this.composer.addPass(this.n8ao),this._settings.custom&&this.composer.addPass(this.customEffects)}newCustomPass(e,t){this._customEffects=new KO(new Oe(window.innerWidth,window.innerHeight),this._components,this._world,e,t)}newGammaPass(){this._gammaPass=new cb(ZO)}newSaoPass(e,t){if(!this._world.renderer)throw new Error("The given world must have a renderer!");const{width:i,height:n}=this._world.renderer.getSize();this._n8ao=new XO(e,t,i,n);const{configuration:r}=this._n8ao;r.aoSamples=16,r.denoiseSamples=1,r.denoiseRadius=13,r.aoRadius=1,r.distanceFalloff=4,r.aoRadius=1,r.intensity=4,r.halfRes=!0,r.color=new Ne().setHex(13421772,"srgb-linear")}newBasePass(e,t){this._basePass=new DO(e,t)}}class $p extends hO{constructor(e,t,i){super(e,t,i),D(this,"_postproduction"),this.onResize.add(n=>this.resizePostproduction(n)),this.onWorldChanged.add(()=>{this.currentWorld&&(this._postproduction&&this._postproduction.dispose(),this._postproduction=new QO(e,this.three,this.currentWorld),this.setPostproductionSize())})}get postproduction(){if(!this._postproduction)throw new Error("Renderer not initialized yet with a world!");return this._postproduction}update(){if(!this.enabled||!this.currentWorld)return;this.onBeforeUpdate.trigger();const e=this.currentWorld.scene.three,t=this.currentWorld.camera.three;this.postproduction.enabled?this.postproduction.composer.render():this.three.render(e,t),e instanceof Hr&&this.three2D.render(e,t),this.onAfterUpdate.trigger()}dispose(){super.dispose(),this.postproduction.dispose()}resizePostproduction(e){this.postproduction&&this.setPostproductionSize(e)}setPostproductionSize(e){if(!this.container)return;const t=e?e.x:this.container.clientWidth,i=e?e.y:this.container.clientHeight;this.postproduction.setSize(t,i)}}class JO{constructor(e,t,i,n,r){D(this,"mesh",new Te(new We)),D(this,"components"),D(this,"world"),D(this,"styleName"),D(this,"_precission",1e4),D(this,"_tempVector",new P),D(this,"_plane"),D(this,"_geometry"),D(this,"_outlinedMesh"),D(this,"_plane2DCoordinateSystem",new _e),D(this,"_planeAxis"),this.components=e,this.world=t,this.mesh.material=r,this.mesh.frustumCulled=!1,this.mesh.userData.indexFragmentMap=new Map,this._plane=i;const{x:o,y:a,z:l}=i.normal;Math.abs(o)===1?this._planeAxis="x":Math.abs(a)===1?this._planeAxis="y":Math.abs(l)===1&&(this._planeAxis="z"),this._geometry=n,this.mesh.geometry.attributes.position=n.attributes.position;const c=i.normal.clone().multiplyScalar(.01);this._outlinedMesh=new Te(this.mesh.geometry),this.mesh.position.copy(c),this._outlinedMesh.position.copy(c),this.visible=!0}get visible(){return this.mesh.parent!==null}set visible(e){const t=this.getStyleAndScene();if(e){if(this.world.scene.three.add(this.mesh),t){const{style:i,outlineScene:n}=t;this._outlinedMesh.material=i.material,i.meshes.add(this._outlinedMesh),n.add(this._outlinedMesh)}}else if(this.mesh.removeFromParent(),t){const{style:i}=t;i.meshes.delete(this._outlinedMesh),this._outlinedMesh.removeFromParent()}}set geometry(e){this._geometry=e,this.mesh.geometry.attributes.position=e.attributes.position}dispose(){const e=this.getStyleAndScene();if(e){const{style:t}=e;t.meshes.delete(this._outlinedMesh),this._outlinedMesh.removeFromParent()}this.mesh.material=[],this._outlinedMesh.material=[],this.mesh.userData.indexFragmentMap.clear(),this.mesh.userData={},this.mesh.geometry.dispose(),this.mesh.removeFromParent(),this.mesh.geometry=null,this._outlinedMesh.geometry=null,this.mesh=null,this._plane=null,this._geometry=null,this.components=null}update(e,t){const i=this._geometry.attributes.position.array;if(!i)return;this.updatePlane2DCoordinateSystem();const{userData:n}=this.mesh,r=n.indexFragmentMap;r.clear();let o=0;const a=[];let l=0;const c=this.components.get($e);for(const[h,d]of t)for(const u in d){const f=c.list.get(u);f&&(f.mesh.userData.fills||(f.mesh.userData.fills=new Set),f.mesh.userData.fills.add(this.mesh))}for(let h=0;h<e.length;h++){const d=e[h],u=[];for(let E=l;E<d;E+=2)u.push(E*3);const f=this.computeFill(u,i),m=t.get(d);let g=0;for(const E of f)a.push(E),m&&g%3===0&&r.set(o++,m),g++;l=d}this.mesh.geometry.setIndex(a)}computeFill(e,t){const i=new Map,n={},r=new Map;let o=0;const a=new Map,l=new Map,c=new Set,h=this._precission;for(let u=0;u<e.length;u++){const f=e[u];let m=0,g=0,E=0,p=0;const v=t[f],I=t[f+1],_=t[f+2],b=t[f+3],T=t[f+4],w=t[f+5];if(this._tempVector.set(v,I,_),this._tempVector.applyMatrix4(this._plane2DCoordinateSystem),m=Math.trunc(this._tempVector.x*h)/h,g=Math.trunc(this._tempVector.y*h)/h,this._tempVector.set(b,T,w),this._tempVector.applyMatrix4(this._plane2DCoordinateSystem),E=Math.trunc(this._tempVector.x*h)/h,p=Math.trunc(this._tempVector.y*h)/h,m===E&&g===p)continue;const A=`${m}|${g}`,y=`${E}|${p}`;i.has(A)||i.set(A,f/3),i.has(y)||i.set(y,f/3+1);const C=i.get(A),M=i.get(y);n[C]=[m,g],n[M]=[E,p];const R=l.has(C),L=a.has(C),S=l.has(M),U=a.has(M);if(!R&&!L&&!S&&!U)l.set(C,o),a.set(M,o),c.add(o),r.set(o,[C,M]),o++;else if(R&&U){const z=l.get(C),k=a.get(M);if(z!==k){const H=r.get(k),Y=r.get(z);if(!H||!Y)continue;r.delete(z),c.delete(z),a.set(Y[Y.length-1],k),a.delete(H[H.length-1]);for(const re of Y)H.push(re)}else c.delete(k);l.delete(C),a.delete(M)}else if(L&&S){const z=l.get(M),k=a.get(C);if(z!==k){const H=r.get(k),Y=r.get(z);if(!H||!Y)continue;r.delete(z),c.delete(z),a.set(Y[Y.length-1],k),a.delete(H[H.length-1]);for(const re of Y)H.push(re)}else c.delete(k);l.delete(M),a.delete(C)}else if(R&&S){const z=l.get(M),k=l.get(C),H=r.get(k),Y=r.get(z);if(!H||!Y)continue;r.delete(z),c.delete(z),l.delete(H[0]),l.delete(Y[0]),a.delete(Y[Y.length-1]),l.set(Y[Y.length-1],k),Y.reverse(),H.splice(0,0,...Y)}else if(L&&U){const z=a.get(M),k=a.get(C),H=r.get(k),Y=r.get(z);if(!H||!Y)continue;r.delete(z),c.delete(z),a.delete(H[H.length-1]),a.delete(Y[Y.length-1]),l.delete(Y[0]),a.set(Y[0],k),Y.reverse(),H.push(...Y)}else if(R){const z=l.get(C),k=r.get(z);if(!k)continue;k.unshift(M),l.delete(C),l.set(M,z)}else if(L){const z=a.get(C),k=r.get(z);if(!k)continue;k.push(M),a.delete(C),a.set(M,z)}else if(S){const z=l.get(M),k=r.get(z);if(!k)continue;k.unshift(C),l.delete(M),l.set(C,z)}else if(U){const z=a.get(M),k=r.get(z);if(!k)continue;k.push(C),a.delete(M),a.set(C,z)}}const d=[];for(const[u,f]of r){if(c.has(u))continue;const m=[],g=new Map;let E=0;for(const v of f){const I=n[v];m.push(I[0],I[1]),g.set(E++,v)}const p=AO(m);for(const v of p){const I=g.get(v);if(I===void 0)throw new Error("Map error!");d.push(I)}}return d}updatePlane2DCoordinateSystem(){this._plane2DCoordinateSystem=new _e;const e=new P(1,0,0),t=new P(0,1,0),i=this._plane.normal,n=new P;this._plane.coplanarPoint(n),this._planeAxis==="x"?e.crossVectors(t,i):this._planeAxis==="y"?t.crossVectors(i,e):this._planeAxis==="z"||(e.crossVectors(t,i).normalize(),t.crossVectors(i,e)),this._plane2DCoordinateSystem.fromArray([e.x,e.y,e.z,0,t.x,t.y,t.z,0,i.x,i.y,i.z,0,n.x,n.y,n.z,1]),this._plane2DCoordinateSystem.invert()}getStyleAndScene(){if(!this.world.renderer)return null;const e=this.world.renderer instanceof $p;if(this.styleName&&e){const t=this.world.renderer,i=t.postproduction.customEffects.outlinedMeshes[this.styleName],n=t.postproduction.customEffects.outlineScene;return{style:i,outlineScene:n}}return null}}class $O{constructor(e,t,i){D(this,"onDisposed",new oe),D(this,"onAfterUpdate",new oe),D(this,"onBeforeUpdate",new oe),D(this,"enabled",!0),D(this,"fillNeedsUpdate",!1),D(this,"components"),D(this,"world"),D(this,"_edges",{}),D(this,"_visible",!0),D(this,"_inverseMatrix",new _e),D(this,"_localPlane",new ri),D(this,"_tempLine",new xt),D(this,"_tempVector",new P),D(this,"_plane"),this.components=e,this.world=t,this._plane=i}get visible(){return this._visible}set visible(e){this._visible=e;for(const t in this._edges){const i=this._edges[t];e?this.world.scene.three.add(i.mesh):i.mesh.removeFromParent(),i.fill&&(i.fill.visible=e)}}get fillMeshes(){const e=[];for(const t in this._edges){const i=this._edges[t];i.fill&&e.push(i.fill.mesh)}return e}update(){const e=this.components.get(Rh).styles.list;this.updateDeletedEdges(e);for(const t in e)this.drawEdges(t);this.fillNeedsUpdate=!1}get(){return this._edges}dispose(){const e=Object.keys(this._edges);for(const t of e)this.disposeEdge(t);this.onDisposed.trigger(),this.onDisposed.reset()}newEdgesMesh(e){const t=this.components.get(Rh).styles.list[e].lineMaterial,i=new We,n=new Float32Array(3e5),r=new at(n,3,!1);r.setUsage(Zy),i.setAttribute("position",r);const o=new jI(i,t);return o.frustumCulled=!1,o}newFillMesh(e,t){const i=this.components.get(Rh).styles.list[e],n=i.fillMaterial;if(n){const r=new JO(this.components,this.world,this._plane,t,n);return this.newFillOutline(e,r,i),r}}newFillOutline(e,t,i){if(!i.outlineMaterial||!this.world.renderer)return;const n=this.world.renderer;if(n instanceof $p){const r=n.postproduction.customEffects.outlinedMeshes;r[e]||(r[e]={meshes:new Set,material:i.outlineMaterial}),t.styleName=e}}drawEdges(e){const t=this.components.get(Rh).styles.list[e];this._edges[e]||this.initializeStyle(e);const i=this._edges[e];let n=0;const r=i.mesh.geometry.attributes.position;r.array.fill(0);const o=[];let a=0;const l=new Map;for(const h of t.meshes)if(h.geometry){if(!h.geometry.boundsTree)throw new Error("Bounds tree not found for clipping edges subset.");if(h instanceof ji){if(h.count===0)continue;const d=h;for(let u=0;u<d.count;u++){const f=d instanceof ou,m=d,g=t.fragments[m.fragment.id];if(f&&g){const v=m.fragment.getItemID(u);if(v===null||!g.has(v))continue}const E=new Te(h.geometry);E.matrix.copy(h.matrix);const p=new _e;if(d.getMatrixAt(u,p),E.applyMatrix4(p),E.applyMatrix4(h.matrixWorld),E.updateMatrix(),E.updateMatrixWorld(),this._inverseMatrix.copy(E.matrixWorld).invert(),this._localPlane.copy(this._plane).applyMatrix4(this._inverseMatrix),n=this.shapecast(E,r,n),n!==a){if(f&&g){const v=m.fragment.getItemID(u);v!==null&&l.set(n,{[m.fragment.id]:new Set([v])})}o.push(n),a=n}}}else this._inverseMatrix.copy(h.matrixWorld).invert(),this._localPlane.copy(this._plane).applyMatrix4(this._inverseMatrix),n=this.shapecast(h,r,n),n!==a&&(o.push(n),a=n)}i.mesh.geometry.setDrawRange(0,n),i.mesh.position.copy(this._plane.normal).multiplyScalar(1e-4),r.needsUpdate=!0;const c=i.mesh.geometry.attributes.position;Number.isNaN(c.array[0])||this.fillNeedsUpdate&&i.fill&&(i.fill.geometry=i.mesh.geometry,i.fill.update(o,l),i.fill.visible=this._visible)}initializeStyle(e){const t=this.newEdgesMesh(e),i=t.geometry,n=this.newFillMesh(e,i);this._edges[e]={mesh:t,name:e,fill:n}}shapecast(e,t,i){return e.geometry.boundsTree.shapecast({intersectsBounds:n=>this._localPlane.intersectsBox(n),intersectsTriangle:n=>{let r=0;if(this._tempLine.start.copy(n.a),this._tempLine.end.copy(n.b),this._localPlane.intersectLine(this._tempLine,this._tempVector)){const o=this._tempVector.applyMatrix4(e.matrixWorld);t.setXYZ(i,o.x,o.y,o.z),r++,i++}if(this._tempLine.start.copy(n.b),this._tempLine.end.copy(n.c),this._localPlane.intersectLine(this._tempLine,this._tempVector)){const o=this._tempVector.applyMatrix4(e.matrixWorld);t.setXYZ(i,o.x,o.y,o.z),r++,i++}if(this._tempLine.start.copy(n.c),this._tempLine.end.copy(n.a),this._localPlane.intersectLine(this._tempLine,this._tempVector)){const o=this._tempVector.applyMatrix4(e.matrixWorld);t.setXYZ(i,o.x,o.y,o.z),r++,i++}r!==2&&(i-=r)}}),i}updateDeletedEdges(e){const t=Object.keys(this._edges);for(const i of t)e[i]===void 0&&(this.disposeEdge(i),this.disposeOutline(i))}disposeOutline(e){if(!this.world.renderer)return;const t=this.world.renderer;if(t instanceof $p){const i=t.postproduction.customEffects.outlinedMeshes;delete i[e]}}disposeEdge(e){const t=this.components.get(Xn),i=this._edges[e];i.fill&&i.fill.dispose(),t.destroy(i.mesh,!1),delete this._edges[e]}}class du extends Fu{constructor(e,t,i,n,r,o=5,a=!0){super(e,t,i,n,r,o,a),D(this,"edges"),D(this,"edgesMaxUpdateRate",50),D(this,"_visible",!0),D(this,"_edgesVisible",!0),D(this,"updateFill",()=>{this.edges.fillNeedsUpdate=!0,this.edges.update()}),this.edges=new $O(e,t,this.three),this.toggleControls(!0),this.edges.visible=!0,this.onDraggingEnded.add(()=>{this.updateFill(),this.edges.visible=!0}),this.onDraggingStarted.add(()=>this.edges.visible=!1)}get visible(){return this._visible}set visible(e){super.visible=e,this.toggleControls(e)}set enabled(e){this._enabled=e,this.world.renderer&&this.world.renderer.setPlane(e,this.three)}get enabled(){return super.enabled}dispose(){super.dispose(),this.edges.dispose()}}class eL{constructor(){D(this,"onDisposed",new oe),D(this,"enabled",!0),D(this,"list",{}),D(this,"_defaultLineMaterial",new Fn({color:0,linewidth:.001})),D(this,"onAfterUpdate",new oe),D(this,"onBeforeUpdate",new oe)}update(e){this.onBeforeUpdate.trigger(this.list),this.onAfterUpdate.trigger(this.list)}create(e,t,i,n,r,o){if(!i.renderer)throw new Error("The given world doesn't have a renderer!");n||(n=this._defaultLineMaterial);for(const c of t)c.geometry.boundsTree||c.geometry.computeBoundsTree();const a=i.renderer;n.clippingPlanes=a.clippingPlanes;const l={name:e,lineMaterial:n,meshes:t,fillMaterial:r,outlineMaterial:o,fragments:{}};return this.list[e]=l,l}dispose(){const e=Object.keys(this.list);for(const t of e)this.deleteStyle(t);this.list={},this.onDisposed.trigger(),this.onDisposed.reset()}deleteStyle(e,t=!0){var i,n;const r=this.list[e];r&&(r.meshes.clear(),t&&(r.lineMaterial.dispose(),(i=r.fillMaterial)==null||i.dispose(),(n=r.outlineMaterial)==null||n.dispose())),delete this.list[e]}}const db=class fb extends Ke{constructor(e){super(e),D(this,"onDisposed",new oe),D(this,"enabled",!0),D(this,"styles"),D(this,"fillsNeedUpdate",!1),D(this,"_visible",!0),this.components.list.set(fb.uuid,this),this.styles=new eL}get visible(){return this._visible}set visible(e){this._visible=e;const t=this.components.get(ua);for(const i of t.list)i instanceof du&&(i.edges.visible=e)}dispose(){this.styles.dispose(),this.onDisposed.trigger()}async update(e=!1){if(!this.enabled)return;const t=this.components.get(ua);for(const i of t.list)i instanceof du&&(e||this.fillsNeedUpdate?i.updateFill():i.update());this.fillsNeedUpdate=!1}};D(db,"uuid","24dfc306-a3c4-410f-8071-babc4afa5e4d");let Rh=db;const tL={name:"HorizontalBlurShader",uniforms:{tDiffuse:{value:null},h:{value:1/512}},vertexShader:`

		varying vec2 vUv;

		void main() {

			vUv = uv;
			gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );

		}`,fragmentShader:`

		uniform sampler2D tDiffuse;
		uniform float h;

		varying vec2 vUv;

		void main() {

			vec4 sum = vec4( 0.0 );

			sum += texture2D( tDiffuse, vec2( vUv.x - 4.0 * h, vUv.y ) ) * 0.051;
			sum += texture2D( tDiffuse, vec2( vUv.x - 3.0 * h, vUv.y ) ) * 0.0918;
			sum += texture2D( tDiffuse, vec2( vUv.x - 2.0 * h, vUv.y ) ) * 0.12245;
			sum += texture2D( tDiffuse, vec2( vUv.x - 1.0 * h, vUv.y ) ) * 0.1531;
			sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y ) ) * 0.1633;
			sum += texture2D( tDiffuse, vec2( vUv.x + 1.0 * h, vUv.y ) ) * 0.1531;
			sum += texture2D( tDiffuse, vec2( vUv.x + 2.0 * h, vUv.y ) ) * 0.12245;
			sum += texture2D( tDiffuse, vec2( vUv.x + 3.0 * h, vUv.y ) ) * 0.0918;
			sum += texture2D( tDiffuse, vec2( vUv.x + 4.0 * h, vUv.y ) ) * 0.051;

			gl_FragColor = sum;

		}`},iL={name:"VerticalBlurShader",uniforms:{tDiffuse:{value:null},v:{value:1/512}},vertexShader:`

		varying vec2 vUv;

		void main() {

			vUv = uv;
			gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );

		}`,fragmentShader:`

		uniform sampler2D tDiffuse;
		uniform float v;

		varying vec2 vUv;

		void main() {

			vec4 sum = vec4( 0.0 );

			sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 4.0 * v ) ) * 0.051;
			sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 3.0 * v ) ) * 0.0918;
			sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 2.0 * v ) ) * 0.12245;
			sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 1.0 * v ) ) * 0.1531;
			sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y ) ) * 0.1633;
			sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 1.0 * v ) ) * 0.1531;
			sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 2.0 * v ) ) * 0.12245;
			sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 3.0 * v ) ) * 0.0918;
			sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 4.0 * v ) ) * 0.051;

			gl_FragColor = sum;

		}`},pb=class Uo extends Ke{constructor(e){super(e),D(this,"onDisposed",new oe),D(this,"enabled",!0),D(this,"cameraHeight",10),D(this,"darkness",1.2),D(this,"opacity",1),D(this,"resolution",512),D(this,"amount",3.5),D(this,"planeColor",16777215),D(this,"shadowOffset",0),D(this,"shadowExtraScaleFactor",1.5),D(this,"list",{}),D(this,"tempMaterial",new Mi({visible:!1})),D(this,"depthMaterial",new Dm),this.components.add(Uo.uuid,this),this.initializeDepthMaterial()}dispose(){for(const e in this.list)this.deleteShadow(e);this.tempMaterial.dispose(),this.depthMaterial.dispose(),this.components=null,this.onDisposed.trigger(Uo.uuid),this.onDisposed.reset()}create(e,t,i){if(this.list[t])throw new Error(`There is already a shadow with ID ${t}`);const{size:n,center:r,min:o}=this.getSizeCenterMin(e),a=this.createShadow(t,n,i);return this.initializeShadow(a,r,o),this.createPlanes(a,n),this.bakeShadow(e,a),a.root}deleteShadow(e){const t=this.components.get(Xn),i=this.list[e];if(delete this.list[e],!i)throw new Error(`No shadow with ID ${e} was found.`);t.destroy(i.root),t.destroy(i.blurPlane),i.rt.dispose(),i.rtBlur.dispose()}createPlanes(e,t){const i=new er(t.x,t.z).rotateX(Math.PI/2);this.createBasePlane(e,i),Uo.createBlurPlane(e,i)}initializeShadow(e,t,i){this.initializeRoot(e,t,i),Uo.initializeRenderTargets(e),Uo.initializeCamera(e)}bakeShadow(e,t){const i=t.world.scene.three;if(!(i instanceof Hr))throw new Error("The core of the scene of the world must be a scene!");if(!t.world.renderer)throw new Error("The given world must have a renderer!");const n=t.world.renderer.three,r=e.map(c=>!!c.parent);for(let c=0;c<e.length;c++)r[c]||i.add(e[c]);const o=i.children.filter(c=>!e.includes(c)&&c!==t.root);for(let c=o.length-1;c>=0;c--)i.remove(o[c]);const a=i.background;i.background=null,i.overrideMaterial=this.depthMaterial;const l=[];for(const c of e)l.push(c.visible),c.visible=!0;n.setRenderTarget(t.rt),n.render(i,t.camera),i.overrideMaterial=null,this.blurShadow(t,this.amount),this.blurShadow(t,this.amount*.4),n.setRenderTarget(null),i.background=a;for(let c=0;c<e.length;c++)e[c].visible=l[c];for(let c=o.length-1;c>=0;c--)i.add(o[c]);for(let c=0;c<e.length;c++)r[c]||i.remove(e[c])}static initializeCamera(e){e.camera.rotation.x=Math.PI/2,e.root.add(e.camera)}static initializeRenderTargets(e){e.rt.texture.generateMipmaps=!1,e.rtBlur.texture.generateMipmaps=!1}initializeRoot(e,t,i){const n=e.world.scene.three;e.root.position.set(t.x,i.y-this.shadowOffset,t.z),n.add(e.root)}createBasePlane(e,t){const i=this.createPlaneMaterial(e),n=new Te(t,i);n.renderOrder=2,e.root.add(n),n.scale.y=-1}static createBlurPlane(e,t){e.blurPlane.geometry=t,e.blurPlane.visible=!1,e.root.add(e.blurPlane)}createPlaneMaterial(e){if(!e.world.renderer)throw new Error("The given world must have a renderer!");const t=e.world.renderer.three;return new Mi({map:e.rt.texture,opacity:this.opacity,transparent:!0,depthWrite:!1,clippingPlanes:t.clippingPlanes})}initializeDepthMaterial(){this.depthMaterial.depthTest=!1,this.depthMaterial.depthWrite=!1;const e="gl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );",t="gl_FragColor = vec4( vec3( 0.0 ), ( 1.0 - fragCoordZ ) * darkness );";this.depthMaterial.userData.darkness={value:this.darkness},this.depthMaterial.onBeforeCompile=i=>{i.uniforms.darkness=this.depthMaterial.userData.darkness,i.fragmentShader=`
						uniform float darkness;
						${i.fragmentShader.replace(e,t)}
					`}}createShadow(e,t,i){return this.list[e]={root:new fs,world:i,rt:new Nt(this.resolution,this.resolution),rtBlur:new Nt(this.resolution,this.resolution),blurPlane:new Te,camera:this.createCamera(t)},this.list[e]}createCamera(e){return new Zn(-e.x/2,e.x/2,e.z/2,-e.z/2,0,this.cameraHeight)}getSizeCenterMin(e){const t=e[0].parent,i=new fs;i.children=e;const n=new je().setFromObject(i);t==null||t.add(...e);const r=new P;n.getSize(r),r.x*=this.shadowExtraScaleFactor,r.z*=this.shadowExtraScaleFactor;const o=new P;n.getCenter(o);const a=n.min;return{size:r,center:o,min:a}}blurShadow(e,t){if(!e.world.renderer)throw new Error("The given world must have a renderer!");const i=new Tt(tL);i.depthTest=!1;const n=new Tt(iL);n.depthTest=!1,e.blurPlane.visible=!0,e.blurPlane.material=i,e.blurPlane.material.uniforms.tDiffuse.value=e.rt.texture,i.uniforms.h.value=t*1/256;const r=e.world.renderer.three;r.setRenderTarget(e.rtBlur),r.render(e.blurPlane,e.camera),e.blurPlane.material=n,e.blurPlane.material.uniforms.tDiffuse.value=e.rtBlur.texture,n.uniforms.v.value=t*1/256,r.setRenderTarget(e.rt),r.render(e.blurPlane,e.camera),e.blurPlane.visible=!1}};D(pb,"uuid","f833a09a-a3ab-4c58-b03e-da5298c7a1b6");let SL=pb;const nL=class mb extends Ke{constructor(e){super(e),D(this,"enabled",!0),D(this,"inputs",["OBC","BUI"]),D(this,"_requestEventID","thatOpenCompanyComponentRequested"),D(this,"_createEventID","thatOpenCompanyComponentCreated"),e.add(mb.uuid,this)}async import(e){return new Promise(t=>{const i=document.createElement("script"),n=`
        function main() {
          const { ${this.inputs} } = window.ThatOpenCompany;
        
          ${e}
        
          const onComponentRequested = () => {
            window.removeEventListener("${this._requestEventID}", onComponentRequested);
            const event = new CustomEvent("${this._createEventID}", { detail: main });
            window.dispatchEvent(event);
          };
          
          window.addEventListener("${this._requestEventID}", onComponentRequested);
        }
        
        main();
      `,r=o=>{window.removeEventListener(this._createEventID,r);const a=o.detail,l=this.components.get(a);i.remove(),t(l)};i.addEventListener("load",()=>{window.addEventListener(this._createEventID,r),window.dispatchEvent(new Event(this._requestEventID))}),i.src=URL.createObjectURL(new File([n],"temp.js")),document.head.appendChild(i)})}};D(nL,"uuid","74c0c370-1af8-4ca9-900a-4a4196c0f2f5");const sL=["Station","Radius","Length","InitialKP","FinalKP","KP","Slope","Height","InitialKPV","FinalKPV"],gb=class Eb extends Ke{constructor(e){super(e),D(this,"enabled",!0),D(this,"world",null),D(this,"_markerKey",0),D(this,"_list",new Map),D(this,"type","horizontal"),D(this,"divisionLength",100),e.add(Eb.uuid,this)}addKPStation(e,t,i){const n=this.components.get(fr),r=document.createElement("div"),o=document.createElement("div");r.appendChild(o),o.innerHTML=t,o.style.color=n.color,o.style.borderBottom="1px dotted white",o.style.width="160px",o.style.textAlign="left";const a=new Di(e,r),l=new P;l.x=i.geometry.attributes.position.getX(i.geometry.attributes.position.count-1),l.y=i.geometry.attributes.position.getY(i.geometry.attributes.position.count-1),l.z=i.geometry.attributes.position.getZ(i.geometry.attributes.position.count-1);const c=new P;c.x=i.geometry.attributes.position.getX(i.geometry.attributes.position.count-2),c.y=i.geometry.attributes.position.getY(i.geometry.attributes.position.count-2),c.z=i.geometry.attributes.position.getZ(i.geometry.attributes.position.count-2);const h=new P;h.x=(l.x+c.x)/2,h.y=(l.y+c.y)/2,h.z=(l.z+c.z)/2,a.three.position.copy(h);const d=new P;d.subVectors(l,c).normalize();const u=new fi;u.setFromUnitVectors(new P(0,1,0),d);const f=new Ki().setFromQuaternion(u).z,m=Nr.radToDeg(f);o.style.transform=`rotate(${-m-90}deg) translate(-35%, -50%)`;const g=this._markerKey.toString();n.setupEvents(e,!0),n.getWorldMarkerList(e).set(g,{label:a,key:g,merged:!1,static:!1}),this._markerKey++,this.save(g,"KP")}addVerticalMarker(e,t,i,n,r){const o=this.components.get(fr),a=document.createElement("span");a.innerHTML=t,a.style.color=o.color;const l=new Di(e,a,r);if(n==="Height"){const h=document.createElement("span");h.innerHTML=t,h.style.color=o.color;const{position:d}=i.geometry.attributes,u=(d.array.length/3-1)*3,f=d.array.slice(u,u+3);l.three.position.set(f[0],f[1]+10,f[2])}else if(n==="InitialKPV"){const{position:h}=i.geometry.attributes,d=h.getX(0),u=h.getY(0),f=h.getZ(0);l.three.position.set(d-20,u,f)}else if(n==="FinalKPV"){const{position:h}=i.geometry.attributes,d=h.getX(i.geometry.attributes.position.count-1),u=h.getY(i.geometry.attributes.position.count-1),f=h.getZ(i.geometry.attributes.position.count-1);l.three.position.set(d+20,u,f)}else if(n==="Slope"){a.style.color="grey";const{position:h}=i.geometry.attributes,d=new P;d.x=h.getX(0),d.y=h.getY(0),d.z=h.getZ(0);const u=new P;u.x=h.getX(h.count-1),u.y=h.getY(h.count-1),u.z=h.getZ(h.count-1);const f=new P;f.addVectors(d,u).multiplyScalar(.5),l.three.position.set(f.x,f.y-10,f.z)}const c=this._markerKey.toString();return o.setupEvents(e,!0),o.getWorldMarkerList(e).set(c,{label:l,key:c,type:n,merged:!1,static:!1}),this._markerKey++,this.save(c,n),l}addCivilMarker(e,t,i,n){const r=this.components.get(fr),o=document.createElement("span");o.innerHTML=t,o.style.color=r.color;const a=new Di(e,o);if(n==="InitialKP"){const c=i.geometry.attributes.position.getX(0),h=i.geometry.attributes.position.getY(0),d=i.geometry.attributes.position.getZ(0);a.three.position.set(c+2,h+2,d)}else if(n==="FinalKP"){const c=i.geometry.attributes.position.getX(i.geometry.attributes.position.count-1),h=i.geometry.attributes.position.getY(i.geometry.attributes.position.count-1),d=i.geometry.attributes.position.getZ(i.geometry.attributes.position.count-1);a.three.position.set(c+2,h-2,d)}else if(n==="Length"){const c=new P;c.x=i.geometry.attributes.position.getX(0),c.y=i.geometry.attributes.position.getY(0),c.z=i.geometry.attributes.position.getZ(0);const h=new P;h.x=i.geometry.attributes.position.getX(i.geometry.attributes.position.count-1),h.y=i.geometry.attributes.position.getY(i.geometry.attributes.position.count-1),h.z=i.geometry.attributes.position.getZ(i.geometry.attributes.position.count-1);const d=c.distanceTo(h);a.three.element.innerText=d.toFixed(2);const u=h.clone().add(c).divideScalar(2);a.three.position.copy(u)}const l=this._markerKey.toString();return r.setupEvents(e,!0),r.getWorldMarkerList(e).set(l,{label:a,key:l,type:n,merged:!1,static:!1}),this._markerKey++,this.save(l,n),a}showKPStations(e){if(!this.world)throw new Error("A world is needed for this component to work!");if(this.type==="horizontal"){const t=this.generateStartAndEndKP(e);for(const[,n]of t)this.addKPStation(this.world,n.value,n.normal);const i=this.generateConstantKP(e);for(const[,n]of i)this.addKPStation(this.world,n.value,n.normal)}}showCurveLength(e,t){if(!this.world)throw new Error("A world is needed for this component to work!");const i=this.components.get(fr),n=e.length,r=`${t.toFixed(2)} m`,o=Math.round(n/2),a=e[o],l=i.create(this.world,r,a,!0);l!==void 0&&this.save(l,"Radius")}showLineLength(e,t){if(!this.world)throw new Error("A world is needed for this component to work!");const i=this.components.get(fr),n=new P;n.x=e.geometry.getAttribute("position").getX(0),n.y=e.geometry.getAttribute("position").getY(0),n.z=e.geometry.getAttribute("position").getZ(0);const r=new P;r.x=e.geometry.getAttribute("position").getX(1),r.y=e.geometry.getAttribute("position").getY(1),r.z=e.geometry.getAttribute("position").getZ(1);const o=`${t.toFixed(2)} m`,a=new P;a.addVectors(n,r).multiplyScalar(.5);const l=i.create(this.world,o,a,!0);l!==void 0&&this.save(l,"Radius")}showCurveRadius(e,t){if(!this.world)throw new Error("A world is needed for this component to work!");const i=this.components.get(fr),n=new P;n.x=e.geometry.getAttribute("position").getX(0),n.y=e.geometry.getAttribute("position").getY(0),n.z=e.geometry.getAttribute("position").getZ(0);const r=new P;r.x=e.geometry.getAttribute("position").getX(1),r.y=e.geometry.getAttribute("position").getY(1),r.z=e.geometry.getAttribute("position").getZ(1);const o=`R = ${t.toFixed(2)} m`,a=new P;a.addVectors(n,r).multiplyScalar(.5);const l=i.create(this.world,o,a,!0);l!==void 0&&this.save(l,"Radius")}deleteByType(e=sL){const t=this.components.get(fr);for(const i of e){const n=this._list.get(i);if(n){for(const r of n)t.delete(r);this._list.delete(i)}}}generateStartAndEndKP(e){const{alignment:t}=e.curve,i=new Map;for(const n of t.horizontal){const r=n.getLength();if(i.size>0){const o=n.index-1,a=i.get(o).distance+r,l=n.mesh.geometry.getAttribute("position"),c=l.count-1,h=new P;h.x=l.getX(c),h.y=l.getY(c),h.z=l.getZ(c);const d=this.createNormalLine(n.mesh);i.set(n.index,{value:this.getShortendKPValue(a),distance:a,point:h,normal:d})}else{const o=n.mesh.geometry.getAttribute("position"),a=o.count-1,l=new P;l.x=o.getX(a),l.y=o.getY(a),l.z=o.getZ(a);const c=this.createNormalLine(n.mesh);i.set(n.index,{value:this.getShortendKPValue(r),distance:r,point:l,normal:c})}}return i}createNormalLine(e){const t=e.geometry.attributes.position.count-1,i=t-1,n=new P;n.x=e.geometry.attributes.position.getX(t),n.y=e.geometry.attributes.position.getY(t),n.z=e.geometry.attributes.position.getZ(t);const r=new P;r.x=e.geometry.attributes.position.getX(i),r.y=e.geometry.attributes.position.getY(i),r.z=e.geometry.attributes.position.getZ(i);const o=new P().subVectors(n,r).clone().applyAxisAngle(new P(0,0,1),Math.PI*.5).normalize(),a=new We().setFromPoints([o.clone().setLength(10).add(n),o.clone().setLength(-10).add(n)]);return new Ht(a)}generateConstantKP(e){const{alignment:t}=e.curve,i=new Map,n=t.getLength("horizontal"),r=Math.floor(n/this.divisionLength);for(let o=0;o<r;o++){const a=o/r,l=t.getPointAt(a,"horizontal"),c=n*a,h=this.getNormal(t,l);i.set(o,{value:this.getShortendKPValue(c),distance:c,point:l,normal:h})}return i}getNormal(e,t){const i=[],n={start:new P,end:new P};for(let a=0;a<e.horizontal.length;a++){const l=e.horizontal[a].mesh.geometry.attributes.position,c=l.count;for(let h=0;h<c;h++){const d=l.getX(h),u=l.getY(h),f=l.getZ(h);i.push(new P(d,u,f))}}for(let a=0;a<i.length-1;a++){const l=i[a],c=i[a+1],h=l.distanceTo(t),d=c.distanceTo(t),u=l.distanceTo(c);Math.abs(h+d-u)<1e-5&&(n.start=l,n.end=c)}const r=new P().subVectors(n.end,n.start).clone().applyAxisAngle(new P(0,0,1),Math.PI*.5).normalize(),o=new We().setFromPoints([r.clone().setLength(10).add(t),r.clone().setLength(-10).add(t)]);return new Ht(o,new Fn({color:16711680}))}getShortendKPValue(e){const t=e.toFixed(2),[i,n]=t.toString().split("."),r=n||"00";if(parseInt(i,10)>1e3&&parseInt(i,10)<1e4){const[o,...a]=i;return`${o}+${a.join("")}.${r}`}if(parseInt(i,10)>1e4){const[o,a,...l]=i;return`${o}${a}+${l.join("")}.${r}`}return`0+${i.padStart(3,"0")}.${r}`}save(e,t){this._list.has(t)||this._list.set(t,new Set),this._list.get(t).add(e)}};D(gb,"uuid","0af12c32-81ee-4100-a030-e9ae546f6170");let ml=gb;class Ib extends Ke{constructor(e){super(e),D(this,"onHighlight",new oe),D(this,"onMarkerChange",new oe),D(this,"onMarkerHidden",new oe),D(this,"onDisposed",new oe),D(this,"enabled",!0),D(this,"mouseMarkers"),D(this,"_curves",[]),D(this,"_previousAlignment",null),D(this,"_highlighter"),D(this,"_world",null),D(this,"updateLinesResolution",t=>{var i;(i=this._highlighter)==null||i.setResolution(t)}),D(this,"onMouseMove",t=>{var i,n,r;if(!this._world)throw new Error("No world was given for this navigator!");if(!this._world.renderer)return;const o=this._world.renderer.three.domElement.parentElement,a=this._world.camera.three,l=(i=this._highlighter)==null?void 0:i.castRay(t,a,o,this._curves);if(l){const{object:c}=l;(n=this._highlighter)==null||n.hover(c),this.updateMarker(l,"hover");return}this.mouseMarkers&&(this.mouseMarkers.hover.visible=!1),(r=this._highlighter)==null||r.unHover(),this.onMarkerHidden.trigger({type:"hover"})}),D(this,"onClick",t=>{var i,n;if(!this._world)throw new Error("No world was given for this navigator!");if(!this._world.renderer)return;const r=this._world.renderer.three.domElement.parentElement,o=this._world.camera.three,a=(i=this._highlighter)==null?void 0:i.castRay(t,o,r,this._curves);if(a){const l=a,c=l.object;if((n=this._highlighter)==null||n.select(c),this.updateMarker(l,"select"),this._world.camera.hasCameraControls()&&(c.geometry.boundingBox||c.geometry.computeBoundingBox(),c.geometry.boundingBox)){const h=this.getScaledBox(c.geometry.boundingBox,2);this._world.camera.controls.fitToBox(h,!0)}this.onHighlight.trigger({mesh:c,point:l.point}),this._previousAlignment!==c.curve.alignment&&(this.components.get(ml).showKPStations(c),this._previousAlignment=c.curve.alignment)}}),D(this,"onControlsUpdated",()=>{if(!this._world)throw new Error("No world was given for this navigator!");if(!(this._world.camera.three instanceof Zn)||!this._highlighter)return;const{zoom:t,left:i,right:n,top:r,bottom:o}=this._world.camera.three,a=i-n,l=r-o,c=Math.max(a,l)/t,h=40,{caster:d}=this._highlighter;d.params.Line.threshold=c/h})}get highlighter(){if(!this._highlighter)throw new Error("Highlighter not initialized. You must set a world first!");return this._highlighter}get world(){return this._world}set world(e){var t,i,n;if(e===this._world||(this._world&&this.setupEvents(!1),this._world=e,(t=this._highlighter)==null||t.dispose(),(i=this.mouseMarkers)==null||i.hover.dispose(),(n=this.mouseMarkers)==null||n.select.dispose(),!e))return;const r=e.scene.three;this._highlighter=new ib(r,this.view),this.mouseMarkers={select:this.newMouseMarker("#ffffff",e),hover:this.newMouseMarker("#575757",e)},this.setupEvents(!0)}async draw(e,t){if(!e.civilData)throw new Error("The provided model doesn't have civil data!");if(!this._world)throw new Error("No world was given for this navigator!");const{alignments:i}=e.civilData,n=t||i.values(),r=this._world.scene.three,o=new je;o.makeEmpty(),o.min.set(Number.MAX_VALUE,Number.MAX_VALUE,Number.MAX_VALUE),o.max.set(-Number.MAX_VALUE,-Number.MAX_VALUE,-Number.MAX_VALUE);for(const l of n){if(!l)throw new Error("Alignment not found!");for(const c of l[this.view])if(r.add(c.mesh),this._curves.push(c.mesh),!o.isEmpty())o.expandByObject(c.mesh);else{c.mesh.geometry.computeBoundingBox();const h=c.mesh.geometry.boundingBox;h instanceof je&&o.copy(h).applyMatrix4(c.mesh.matrixWorld)}}const a=this.getScaledBox(o,1.2);this._world.camera.hasCameraControls()&&await this._world.camera.controls.fitToBox(a,!1)}async dispose(){var e;(e=this._highlighter)==null||e.dispose(),this.clear(),this.onHighlight.reset(),this._curves=[],this.onDisposed.trigger(),this.onDisposed.reset()}clear(){var e,t;(e=this._highlighter)==null||e.unSelect(),(t=this._highlighter)==null||t.unHover();for(const i of this._curves)i.removeFromParent();this._curves=[]}setMarker(e,t,i){if(!this._curves.length)return;const n=e.getCurveAt(t,this.view),r=e.getPointAt(t,this.view),{index:o}=n.curve.getSegmentAt(n.percentage);this.setMouseMarker(r,n.curve.mesh,o,i)}setDefSegments(e){const t=[],i=[],n=(r,o)=>{const a=o[1]-r[1],l=o[0]-r[0];return a/l};for(let r=0;r<e.length;r++){const o=e[r];let a,l,c,h;for(let u=0;u<Object.keys(o).length/3;u++)if(o[u*3]!==void 0&&o[u*3+1]!==void 0){a=o[u*3],l=o[u*3+1];break}for(let u=Object.keys(o).length/3-1;u>=0;u--)if(o[u*3]!==void 0&&o[u*3+1]!==void 0){c=o[u*3],h=o[u*3+1];break}const d=(n([a,l],[c,h])*100).toFixed(2);i.push({slope:d})}for(const r of e)for(let o=0;o<r.length-3;o+=3){const a=r[o],l=r[o+1],c=r[o+2],h=r[o+3],d=r[o+4],u=r[o+5];t.push({start:new P(a,l,c),end:new P(h,d,u)})}return{defSegments:t,slope:i}}hideMarker(e){this.mouseMarkers&&(this.mouseMarkers[e].visible=!1)}setupEvents(e){var t,i;if(!this._world)throw new Error("No world was given for this navigator!");if(this._world.isDisposing||!this._world.renderer)return;const n=this._world.renderer.three.domElement.parentElement;(t=this._world.renderer)==null||t.onResize.remove(this.updateLinesResolution),n.removeEventListener("pointermove",this.onMouseMove),n.removeEventListener("click",this.onClick),this._world.camera.hasCameraControls()&&this._world.camera.controls.removeEventListener("update",this.onControlsUpdated),e&&(n.addEventListener("pointermove",this.onMouseMove),n.addEventListener("click",this.onClick),(i=this._world.renderer)==null||i.onResize.add(this.updateLinesResolution),this._world.camera.hasCameraControls()&&this._world.camera.controls.addEventListener("update",this.onControlsUpdated))}newMouseMarker(e,t){if(!this._world)throw new Error("No world was given for this navigator!");const i=t.scene.three,n=document.createElement("div"),r=document.createElement("div");n.appendChild(r),r.style.backgroundColor=e,r.style.width="3rem",r.style.height="3px";const o=new Di(this._world,n,i);return o.visible=!1,o}setMouseMarker(e,t,i,n){if(i===void 0||!this.mouseMarkers)return;this.mouseMarkers[n].visible=!0;const r=this.mouseMarkers[n].three;r.position.copy(e);const o=t,{startPoint:a,endPoint:l}=o.curve.getSegment(i),c=Math.atan2(l.y-a.y,l.x-a.x),h=r.element.children[0],d=90-c/Math.PI*180;h.style.transform=`rotate(${d}deg)`}updateMarker(e,t){const{point:i,index:n,object:r}=e,o=r,a=o.curve,l=o.curve.alignment,c=l.getPercentageAt(i,this.view),h=i.clone();this.setMouseMarker(h,o,n,t),c!==null&&this.onMarkerChange.trigger({alignment:l,percentage:c,type:t,curve:a})}getScaledBox(e,t){const i=new je,n=new P,r=new P;return e.getCenter(r),e.getSize(n),n.multiplyScalar(t),i.setFromCenterAndSize(r,n),i}}class rL{constructor(e,t,i){D(this,"components"),D(this,"_scene"),D(this,"_world"),D(this,"offset",10),D(this,"markupLines",[]),D(this,"currentCurveMesh"),D(this,"markupMaterial",new Fn({color:6842472})),this.components=e,this._scene=t,this._world=i}showCurveInfo(e){switch(this.disposeMarkups(),this.currentCurveMesh=e,e.curve.data.TYPE){case"LINE":this.showLineInfo(e,this.offset);break;case"CIRCULARARC":this.showCircularArcInfo(e,this.offset);break;case"CLOTHOID":this.showClothoidInfo(e,this.offset);break;default:console.log("Unknown curve type:",e.curve.data.TYPE);break}}updateOffset(e,t,i){const n=Math.max(e.height,e.width)/(t*150);n!==this.offset&&(this.offset=n,i&&this.currentCurveMesh&&this.showCurveInfo(this.currentCurveMesh))}dispose(){for(const e of this.markupLines)e.removeFromParent();this.disposeMarkups(),this.markupMaterial.dispose()}disposeMarkups(){for(const e of this.markupLines)e.geometry.dispose(),e.removeFromParent();this.markupLines=[]}unSelect(){this.disposeMarkups()}calculateTangent(e,t){const i=t*3,n=Math.max(0,i-3),r=Math.min(e.length-3,i+3),o=new P().fromArray(e,n);return new P().fromArray(e,r).clone().sub(o).normalize()}calculateParallelCurve(e,t,i){const n=[];for(let r=0;r<t;r++){const o=this.calculateTangent(e,r).clone().applyAxisAngle(new P(0,0,1),Math.PI/2);o.normalize();const a=o.clone().multiplyScalar(i),l=r*3,c=new P().fromArray(e,l).add(a);n.push(c)}return n}calculateDimensionLines(e,t){const i=[],n=e.geometry.attributes.position.array,r=t.geometry.attributes.position.array;if(n.length<6&&r.length<6)throw new Error("Line must have at least two vertices");const o=new P(n[0],n[1],n[2]),a=new P(r[0],r[1],r[2]),l=[],c=n.length-3,h=new P(n[c],n[c+1],n[c+2]),d=r.length-3,u=new P(r[d],r[d+1],r[d+2]);return i.push(o,a),l.push(h,u),{startDimensionPoints:i,endDimensionPoints:l}}offsetDimensionLine(e,t){const i=new P().copy(e[e.length-1]).sub(e[0]).normalize().clone().multiplyScalar(t);return e.map(n=>n.clone().add(i))}showLineInfo(e,t){const i=this.components.get(ml);i.world=this._world,i.deleteByType(["Length","Radius"]);const n=e.geometry.attributes.position.array,r=this.calculateParallelCurve(n,n.length/3,t),o=new We().setFromPoints(r),a=new Ht(o,this.markupMaterial);i.showLineLength(a,e.curve.getLength()),this._scene.add(a),this.markupLines.push(a);const{startDimensionPoints:l,endDimensionPoints:c}=this.calculateDimensionLines(e,a),h=this.offsetDimensionLine(l,t*.1),d=this.offsetDimensionLine(c,t*.1),u=new We().setFromPoints(h),f=new We().setFromPoints(d),m=new Ht(u,this.markupMaterial);this._scene.add(m),this.markupLines.push(m);const g=new Ht(f,this.markupMaterial);this._scene.add(g),this.markupLines.push(g)}showClothoidInfo(e,t){const i=this.components.get(ml);i.world=this._world,i.deleteByType(["Length","Radius"]);const n=e.geometry.attributes.position.array,r=this.calculateParallelCurve(n,n.length/3,t),o=new We().setFromPoints(r);i.showCurveLength(r,e.curve.getLength());const a=new Ht(o,this.markupMaterial);this._scene.add(a),this.markupLines.push(a);const{startDimensionPoints:l,endDimensionPoints:c}=this.calculateDimensionLines(e,a),h=this.offsetDimensionLine(l,t*.1),d=this.offsetDimensionLine(c,t*.1),u=new We().setFromPoints(h),f=new We().setFromPoints(d),m=new Ht(u,this.markupMaterial);this._scene.add(m),this.markupLines.push(m);const g=new Ht(f,this.markupMaterial);this._scene.add(g),this.markupLines.push(g)}showCircularArcInfo(e,t){const i=this.components.get(ml);i.world=this._world,i.deleteByType(["Length","Radius"]);const n=e.curve.data.RADIUS,r=e.geometry.attributes.position.array,o=e.geometry.attributes.position.count,a=[],l=new P(r[0],r[1],r[2]),c=(o-1)*3,h=new P(r[c],r[c+1],r[c+2]),d=o/2*3,u=new P(r[d],r[d+1],r[d+2]),f=h.clone().sub(l).normalize(),m=new P(-f.y,f.x,0);m.multiplyScalar(n);const g=u.clone().add(m);a.push(u),a.push(g);const E=new We().setFromPoints(a),p=new Ht(E,this.markupMaterial);i.showCurveRadius(p,Math.abs(n)),this._scene.add(p),this.markupLines.push(p);const v=[];for(let L=0;L<o;L++){const S=this.calculateTangent(r,L),U=e.curve.data.RADIUS,z=new P(S.y,-S.x,0);z.normalize(),U<0&&z.negate();const k=z.clone().multiplyScalar(t),H=L*3,Y=new P(r[H]+k.x,r[H+1]+k.y,r[H+2]+k.z);v.push(Y)}const I=new We().setFromPoints(v);i.showCurveLength(v,e.curve.getLength());const _=new Ht(I,this.markupMaterial);this._scene.add(_),this.markupLines.push(_);const{startDimensionPoints:b,endDimensionPoints:T}=this.calculateDimensionLines(e,_),w=this.offsetDimensionLine(b,t*.1),A=this.offsetDimensionLine(T,t*.1),y=new We().setFromPoints(w),C=new We().setFromPoints(A),M=new Ht(y,this.markupMaterial);this._scene.add(M),this.markupLines.push(M);const R=new Ht(C,this.markupMaterial);this._scene.add(R),this.markupLines.push(R)}}const _b=class vb extends Ib{constructor(e){super(e),D(this,"view","horizontal"),D(this,"planHighlighter"),this.components.add(vb.uuid,this),this.onHighlight.add(({mesh:t})=>{!this._highlighter||!this.planHighlighter||this.planHighlighter.showCurveInfo(t)})}get world(){return super.world}set world(e){var t;super.world=e,e&&((t=this.planHighlighter)==null||t.dispose(),this.planHighlighter=new rL(this.components,e.scene.three,e))}};D(_b,"uuid","3096dea0-5bc2-41c7-abce-9089b6c9431b");let AL=_b;const bb=class yb extends Ib{constructor(e){super(e),D(this,"enabled",!0),D(this,"view","vertical"),this.components.add(yb.uuid,this)}get world(){return super.world}set world(e){this.world!==e&&(super.world=e,this._highlighter&&this._highlighter.onSelect.add(t=>{if(!this.world)throw new Error("A world is needed to work with this component!");const i=this.components.get(ml);i.deleteByType(["Slope","Height","InitialKPV","FinalKPV"]);const{alignment:n}=t.curve,r=[];for(const c of n.vertical){const h=c.mesh.geometry.attributes.position.array;r.push(h)}const{defSegments:o,slope:a}=this.setDefSegments(r),l=this.world.scene.three;for(let c=0;c<n.vertical.length;c++){const h=n.vertical[c];i.addVerticalMarker(this.world,`S: ${a[c].slope}%`,h.mesh,"Slope",l),i.addVerticalMarker(this.world,`H: ${o[c].end.y.toFixed(2)}`,h.mesh,"Height",l)}i.addVerticalMarker(this.world,"KP: 0",n.vertical[0].mesh,"InitialKPV",l),i.addVerticalMarker(this.world,`KP: ${n.vertical.length}`,n.vertical[n.vertical.length-1].mesh,"FinalKPV",l)}))}};D(bb,"uuid","097eea29-2d5a-431a-a247-204d44670621");let RL=bb;const Tb=class Cb extends Ke{constructor(e){super(e),D(this,"onHighlight",new oe),D(this,"onMarkerChange",new oe),D(this,"onMarkerHidden",new oe),D(this,"enabled",!0),D(this,"mouseMarkers"),D(this,"_highlighter"),D(this,"_curves",[]),D(this,"_world",null),D(this,"updateLinesResolution",t=>{var i;(i=this.highlighter)==null||i.setResolution(t)}),D(this,"onClick",t=>{if(!this.enabled||!this._highlighter)return;if(!this.world)throw new Error("No world found!");if(!this.world.renderer)return;const i=this.world.renderer.three.domElement,n=this.world.camera.three,r=this._highlighter.castRay(t,n,i,this._curves);if(r){const o=r.object;this._highlighter.select(o),this.updateMarker(r,"select");const{point:a,index:l}=r;l!==void 0&&this.onHighlight.trigger({curve:o,point:a,index:l});return}this._highlighter.unSelect(),this.mouseMarkers&&(this.mouseMarkers.hover.visible=!1),this.onMarkerHidden.trigger({type:"hover"})}),D(this,"onMouseMove",async t=>{if(!this.enabled||!this._highlighter)return;if(!this.world)throw new Error("No world found!");if(!this.world.renderer)return;const i=this.world.renderer.three.domElement,n=this.world.camera.three,r=this._highlighter.castRay(t,n,i,this._curves);if(r){this._highlighter.hover(r.object),this.updateMarker(r,"hover");return}this._highlighter.unHover()}),this.components.add(Cb.uuid,this)}get world(){return this._world}set world(e){var t,i,n;if(e===this._world||(this._world&&this.setupEvents(!1),this._world=e,(t=this._highlighter)==null||t.dispose(),(i=this.mouseMarkers)==null||i.hover.dispose(),(n=this.mouseMarkers)==null||n.select.dispose(),!e))return;const r=e.scene.three;this._highlighter=new ib(r,"absolute"),this.mouseMarkers={select:this.newMouseMarker("#ffffff",e),hover:this.newMouseMarker("#575757",e)},this.setupEvents(!0)}get highlighter(){if(!this._highlighter)throw new Error("Navigator not initialized!");return this._highlighter}draw(e){if(!e.civilData)throw new Error("Model must have civil data!");if(!this.world)throw new Error("A world must be given before drawing an alignment!");const t=this.world.scene.three;for(const[i,n]of e.civilData.alignments)for(const{mesh:r}of n.absolute)t.add(r),this._curves.push(r)}setMarker(e,t,i){if(!this.mouseMarkers)throw new Error("No mouse markers found! Initialize the world before using this.");const n=e.getPointAt(t,"absolute");this.mouseMarkers[i].visible=!0,this.mouseMarkers[i].three.position.copy(n)}hideMarker(e){if(!this.mouseMarkers)throw new Error("No mouse markers found! Initialize the world before using this.");const t=this.mouseMarkers[e].three;t.visible=!1}newMouseMarker(e,t){const i=t.scene.three,n=document.createElement("div");n.style.backgroundColor=e,n.style.width="1rem",n.style.height="1rem",n.style.borderRadius="1rem";const r=new Di(t,n,i);return r.visible=!1,r}setupEvents(e){var t,i;if(!this.world)throw new Error("No world found!");if(this.world.isDisposing||!this.world.renderer)return;const n=this.world.renderer.three.domElement;(t=this.world.renderer)==null||t.onResize.remove(this.updateLinesResolution),n.removeEventListener("click",this.onClick),n.removeEventListener("pointermove",this.onMouseMove),e&&(n.addEventListener("click",this.onClick),n.addEventListener("pointermove",this.onMouseMove),(i=this.world.renderer)==null||i.onResize.add(this.updateLinesResolution))}updateMarker(e,t){if(!this.mouseMarkers)return;const{point:i,object:n}=e,r=n,o=r.curve,a=r.curve.alignment,l=a.getPercentageAt(i,"absolute");this.mouseMarkers[t].visible=!0,this.mouseMarkers[t].three.position.copy(i),l!==null&&this.onMarkerChange.trigger({alignment:a,percentage:l,type:t,curve:o})}};D(Tb,"uuid","0a59c09e-2b49-474a-9320-99f51f40f182");let ML=Tb;const xb=class wb extends Ke{constructor(e){super(e),D(this,"enabled",!0),D(this,"world",null),D(this,"plane"),D(this,"_world3D",null),this.components.add(wb.uuid,this)}get world3D(){return this._world3D}set world3D(e){var t;if(this._world3D=e,(t=this.plane)==null||t.dispose(),!e)return;const i=this.components.get(ua),n=i.Type;i.Type=du,this.plane=i.createFromNormalAndCoplanarPoint(e,new P(1,0,0),new P),i.Type=n,this.plane.visible=!1,this.plane.enabled=!1}async set(e,t){if(!this.world||!this.plane)throw new Error("You must set a world before using this component");this.plane.enabled=!0;const i=e.curve.getPercentageAt(t);if(i===null)return;const{startPoint:n,endPoint:r}=e.curve.getSegmentAt(i);if(e.geometry.index===null)throw new Error("Geometry must be indexed!");const o=new P;o.subVectors(r,n),o.normalize(),this.plane.setFromNormalAndCoplanarPoint(o,t),this.plane.edges.update();const a=this.plane.helper.matrix.clone();a.invert();const l=this.world.scene.three,c=this.plane.edges.get();for(const h in c){const{mesh:d}=c[h];d.position.set(0,0,0),d.rotation.set(0,0,0),d.updateMatrix(),d.applyMatrix4(a),d.parent!==l&&l.add(d)}this.plane.enabled=!1}};D(xb,"uuid","96b2c87e-d90b-4639-8257-8f01136fe324");let FL=xb;function Js(){const s=document.createElement("div");return s.style.backgroundColor="black",s.style.color="white",s.style.padding="8px",s.style.borderRadius="8px",s.style.fontFamily="sans-serif",s}const Zh=class jh{constructor(e,t,i){D(this,"label"),D(this,"boundingBox",new Te),D(this,"world"),D(this,"components"),D(this,"_length"),D(this,"_visible",!0),D(this,"_start"),D(this,"_end"),D(this,"_root",new fs),D(this,"_endpoints",[]),D(this,"_line"),this.components=e,this.world=t,this._start=i.start,this._end=i.end,this._length=this.getLength(),this._line=this.createLine(i),this.newEndpointElement(i.endpointElement),this.newEndpointElement(i.endpointElement.cloneNode(!0)),this.label=this.newText(),this._root.renderOrder=2,this.world.scene.three.add(this._root)}get visible(){return this._visible}set visible(e){this._visible=e,this.label.visible=e,this._endpoints[0].visible=e,this._endpoints[1].visible=e;const[t,i]=this._endpoints,n=t.three,r=i.three,o=this.label.three;e?(this.world.scene.three.add(this._root),this._root.add(o,n,r)):(o.removeFromParent(),n.removeFromParent(),r.removeFromParent(),this._root.removeFromParent())}get endPoint(){return this._end}set endPoint(e){this._end=e;const t=this._line.geometry.attributes.position;t.setXYZ(1,e.x,e.y,e.z),t.needsUpdate=!0,this._endpoints[1].three.position.copy(e),this.updateLabel()}get startPoint(){return this._start}set startPoint(e){this._start=e;const t=this._line.geometry.attributes.position;t.setXYZ(0,e.x,e.y,e.z),t.needsUpdate=!0,this._endpoints[0].three.position.copy(e),this.updateLabel()}get _center(){let e=this._end.clone().sub(this._start);const t=e.length()*.5;return e=e.normalize().multiplyScalar(t),this._start.clone().add(e)}dispose(){const e=this.components.get(Xn);this.visible=!1,e.destroy(this._root),e.destroy(this._line);for(const t of this._endpoints)t.dispose();this._endpoints.length=0,this.label.dispose(),this.boundingBox&&e.destroy(this.boundingBox),this.components=null}createBoundingBox(){this.boundingBox.geometry=new Ot(1,1,this._length),this.boundingBox.position.copy(this._center),this.boundingBox.lookAt(this._end),this.boundingBox.visible=!1,this._root.add(this.boundingBox)}toggleLabel(){this.label.toggleVisibility()}newEndpointElement(e){const t=this._endpoints.length===0?this._start:this._end,i=new Di(this.world,e);i.three.position.copy(t),this._endpoints.push(i),this._root.add(i.three)}updateLabel(){this._length=this.getLength(),this.label.three.element.textContent=this.getTextContent(),this.label.three.position.copy(this._center),this._line.computeLineDistances()}createLine(e){const t=new We;t.setFromPoints([e.start,e.end]);const i=new Ht(t,e.lineMaterial);return this._root.add(i),i}newText(){const e=Js();e.textContent=this.getTextContent();const t=new Di(this.world,e);return t.three.position.copy(this._center),this._root.add(t.three),t}getTextContent(){return`${(this._length/jh.scale).toFixed(jh.rounding)} ${jh.units}`}getLength(){return this._start.distanceTo(this._end)}};D(Zh,"scale",1),D(Zh,"units","m"),D(Zh,"rounding",2);let ig=Zh;class oL{constructor(e,t,i){D(this,"enabled",!0),D(this,"points",[]),D(this,"workingPlane",null),D(this,"labelMarker"),D(this,"world"),D(this,"components"),D(this,"onDisposed",new oe),D(this,"onAreaComputed",new oe),D(this,"onWorkingPlaneComputed",new oe),D(this,"onPointAdded",new oe),D(this,"onPointRemoved",new oe),D(this,"_visible",!0),D(this,"_rotationMatrix",null),D(this,"_dimensionLines",[]),D(this,"_defaultLineMaterial",new Fn({color:"red"})),this.world=t,this.components=e;const n=Js();this.labelMarker=new Di(t,n),this.labelMarker.visible=!1,this.onPointAdded.add(r=>{this.points.length===3&&!this._dimensionLines[2]&&(this.addDimensionLine(r,this.points[0]),this.labelMarker.visible=!0)}),i==null||i.forEach(r=>this.setPoint(r))}get visible(){return this._visible}set visible(e){this._visible=e;for(const t of this._dimensionLines)t.visible=e,t.label.visible=!1;this.labelMarker.visible=e}setPoint(e,t){let i;if(t?i=t:i=this.points.length===0?0:this.points.length,i===0){this.points[0]=e;return}if(i<0||i>this.points.length)return;const n=this.points.length>i;this.points[i]=e,this.onPointAdded.trigger(e),n||this.addDimensionLine(this.points[i-1],e);const{previousLine:r,nextLine:o}=this.getLinesBetweenIndex(i);r&&(r.endPoint=e),o&&(o.startPoint=e)}removePoint(e){if(this.points.length===3)return;this.points.splice(e,1);const{previousLine:t,nextLine:i}=this.getLinesBetweenIndex(e);i&&(t.endPoint=i.endPoint),i==null||i.dispose(),this._dimensionLines.splice(e,1),this.onPointRemoved.trigger()}toggleLabel(){this.labelMarker.toggleVisibility()}addDimensionLine(e,t){const i=new ig(this.components,this.world,{start:e,end:t,lineMaterial:this._defaultLineMaterial,endpointElement:Js()});return i.toggleLabel(),this._dimensionLines.length>1?this._dimensionLines.splice(this._dimensionLines.length-1,0,i):this._dimensionLines.push(i),i}getLinesBetweenIndex(e){const t=e===0?this._dimensionLines.length-1:e-1,i=this._dimensionLines[t],n=this._dimensionLines[e];return{previousLine:i,nextLine:n}}computeWorkingPlane(){this.workingPlane=new ri().setFromCoplanarPoints(this.points[0],this.points[1],this.points[2]);const e=new P(0,1,0),t=this.workingPlane.normal.angleTo(e),i=new P().crossVectors(this.workingPlane.normal,e).normalize();this._rotationMatrix=new _e().makeRotationAxis(i,t),this.onWorkingPlaneComputed.trigger(this.workingPlane)}computeArea(){if(!(this._rotationMatrix&&this.workingPlane))return this.onAreaComputed.trigger(0),0;let e=0,t=0;const i=this._rotationMatrix,n=this.points.map(o=>{const a=o.clone().applyMatrix4(i),l=new Oe(a.x,a.z);return e+=l.x,t+=l.y,l}),r=Math.abs(Om.area(n));return this.labelMarker.three.element.textContent=`${r.toFixed(2)} m²`,this.labelMarker.three.position.set(e/n.length,-this.workingPlane.constant,t/n.length).applyMatrix4(i.clone().invert()),this.onAreaComputed.trigger(r),r}dispose(){this.onAreaComputed.reset(),this.onWorkingPlaneComputed.reset(),this.onPointAdded.reset(),this.onPointRemoved.reset();for(const e of this._dimensionLines)e.dispose();this.labelMarker.dispose(),this._dimensionLines=[],this.points=[],this._rotationMatrix=null,this.workingPlane=null,this._defaultLineMaterial.dispose(),this.onDisposed.trigger(),this.onDisposed.reset()}get(){return{points:this.points,workingPlane:this.workingPlane,area:this.computeArea()}}}class ng extends _2{constructor(e,t){super(e,t),D(this,"onDisposed",new oe),D(this,"marker",null),D(this,"_className","default-vertex-picker"),this.onEnabled.add(i=>{this.marker&&(this.marker.visible=i)})}get className(){return this._className}set className(e){this._className=e,this.marker&&(this.marker.three.element.className=e)}dispose(){this.marker&&this.marker.dispose(),super.dispose()}get(e){const t=super.get(e);return t?(this.marker||(this.marker=new Di(e),this.marker.three.element.className=this._className),this.marker.world!==e&&(this.marker.world=e,this.marker.three.removeFromParent(),e.scene.three.add(this.marker.three)),this.marker.visible=!0,this.marker.three.position.copy(t)):this.marker&&(this.marker.visible=!1),t}}const Sb=class em extends Ke{constructor(e){super(e),D(this,"onDisposed",new oe),D(this,"list",[]),D(this,"world"),D(this,"_enabled",!1),D(this,"_visible",!0),D(this,"_vertexPicker"),D(this,"_currentAreaElement",null),D(this,"_clickCount",0),D(this,"create",()=>{if(!this.enabled)return;if(!this.world)throw new Error("World not defined for the area measurement!");const t=this._vertexPicker.get(this.world);if(t){if(!this._currentAreaElement){const i=new oL(this.components,this.world);i.onPointAdded.add(()=>{this._clickCount===2&&!i.workingPlane&&(i.computeWorkingPlane(),this._vertexPicker.workingPlane=i.workingPlane)}),i.onPointRemoved.add(()=>this._clickCount--),this._currentAreaElement=i}this._currentAreaElement.setPoint(t,this._clickCount),this._currentAreaElement.computeArea(),this._clickCount++}}),D(this,"onMouseMove",()=>{if(!this.world){console.log("No world given for the area measurement!");return}const t=this._vertexPicker.get(this.world);t&&this._currentAreaElement&&(this._currentAreaElement.setPoint(t,this._clickCount),this._currentAreaElement.computeArea())}),D(this,"onKeydown",t=>{this.enabled&&(t.key==="z"&&t.ctrlKey&&this._currentAreaElement&&this._currentAreaElement.removePoint(this._clickCount-1),t.key==="Enter"&&this._currentAreaElement&&this.endCreation(),t.key==="Escape"&&(this._clickCount===0&&!this._currentAreaElement?this.enabled=!1:this.cancelCreation()))}),this.components.add(em.uuid,this),this._vertexPicker=new ng(e)}set enabled(e){this._enabled=e,this._vertexPicker.enabled=e,this.setupEvents(e),e||this.cancelCreation()}get enabled(){return this._enabled}set workingPlane(e){this._vertexPicker.workingPlane=e}get workingPlane(){return this._vertexPicker.workingPlane}get visible(){return this._visible}set visible(e){this._visible=e;for(const t of this.list)t.visible=e}dispose(){this.setupEvents(!1),this._vertexPicker.dispose(),this._currentAreaElement&&this._currentAreaElement.dispose();for(const e of this.list)e.dispose();this.components=null,this.onDisposed.trigger(em.uuid),this.onDisposed.reset()}delete(){}deleteAll(){for(const e of this.list)e.dispose();this.list=[]}endCreation(){this._currentAreaElement&&(this._currentAreaElement.points.length<3||(this._currentAreaElement&&(this.list.push(this._currentAreaElement),this._currentAreaElement.removePoint(this._clickCount),this._currentAreaElement.computeWorkingPlane(),this._currentAreaElement.computeArea(),this._currentAreaElement=null),this._vertexPicker.workingPlane=null,this._clickCount=0))}cancelCreation(){this._currentAreaElement&&(this._currentAreaElement.dispose(),this._currentAreaElement=null),this._vertexPicker.workingPlane=null,this._clickCount=0}setupEvents(e){if(!this.world)throw new Error("The area measurement needs a world to work!");if(this.world.isDisposing)return;if(!this.world.renderer)throw new Error("The world of the area measurement needs a renderer!");const t=this.world.renderer.three.domElement.parentElement;e?(t.addEventListener("pointermove",this.onMouseMove),window.addEventListener("keydown",this.onKeydown)):(t.removeEventListener("pointermove",this.onMouseMove),window.removeEventListener("keydown",this.onKeydown))}};D(Sb,"uuid","c453a99e-f054-4781-9060-33df617db4a5");let PL=Sb;class aL{constructor(e,t){D(this,"enabled",!0),D(this,"visible",!0),D(this,"points",[]),D(this,"world"),D(this,"onDisposed",new oe),D(this,"_lineMaterial",new Vl({color:6629591,linewidth:2})),D(this,"_lineGeometry",new uu),D(this,"_line",new $v(this._lineGeometry,this._lineMaterial)),D(this,"_labelMarker"),D(this,"onAngleComputed",new oe),D(this,"onPointAdded",new oe),this.world=e;const i=Js();this._labelMarker=new Di(e,i),this.labelMarker.visible=!0,this.onPointAdded.add(()=>{this.points.length===1&&e.scene.three.add(this._line),this.points.length===3&&(this.labelMarker.visible=!0)}),this.onAngleComputed.add(n=>{this.labelMarker.three.element.textContent=`${n.toFixed(2)}°`,this.labelMarker.three.position.copy(this.points[1]??new P)}),t==null||t.forEach(n=>this.setPoint(n))}set lineMaterial(e){this._lineMaterial.dispose(),this._lineMaterial=e,this._line.material=e,this._lineMaterial.resolution.set(window.innerWidth,window.innerHeight)}get lineMaterial(){return this._lineMaterial}set labelMarker(e){this._labelMarker.dispose(),this._labelMarker=e}get labelMarker(){return this._labelMarker}get angle(){return{points:this.points,angle:this.computeAngle()}}setPoint(e,t){let i;if(t?i=t:i=this.points.length===0?0:this.points.length,![0,1,2].includes(i))return;this.points[i]=e,this.onPointAdded.trigger(e);const n=this.points.map(r=>[r.x,r.y,r.z]);this._lineGeometry.setPositions(n.flat())}toggleLabel(){this.labelMarker.toggleVisibility()}computeAngle(){const e=this.points[0],t=this.points[1],i=this.points[2];if(!(e&&t&&i))return 0;const n=new P().subVectors(t,e),r=new P().subVectors(t,i),o=Nr.radToDeg(n.angleTo(r));return this.onAngleComputed.trigger(o),o}dispose(){this.points=[],this.labelMarker.dispose(),this.onAngleComputed.reset(),this.onPointAdded.reset(),this.labelMarker.dispose(),this._line.removeFromParent(),this._lineMaterial.dispose(),this._lineGeometry.dispose(),this.onDisposed.trigger(),this.onDisposed.reset()}}const Ab=class tm extends Ke{constructor(e){super(e),D(this,"onDisposed",new oe),D(this,"world"),D(this,"list",[]),D(this,"_lineMaterial"),D(this,"_enabled",!1),D(this,"_vertexPicker"),D(this,"_currentAngleElement",null),D(this,"_clickCount",0),D(this,"create",()=>{if(!this.enabled)return;if(!this.world){console.log("No world selected for angle measurement!");return}const t=this._vertexPicker.get(this.world);if(t){if(!this._currentAngleElement){const i=new aL(this.world);i.lineMaterial=this.lineMaterial,this._currentAngleElement=i}this._currentAngleElement.setPoint(t,this._clickCount),this._currentAngleElement.setPoint(t,this._clickCount+1),this._currentAngleElement.setPoint(t,this._clickCount+2),this._currentAngleElement.computeAngle(),this._clickCount++,this._clickCount===3&&this.endCreation()}}),D(this,"onMouseMove",()=>{if(!this.world){console.log("No world selected for angle measurement!");return}const t=this._vertexPicker.get(this.world);t&&this._currentAngleElement&&(this._currentAngleElement.setPoint(t,this._clickCount),this._currentAngleElement.computeAngle())}),D(this,"onKeyDown",t=>{this.enabled&&t.key==="Escape"&&this.cancelCreation()}),this.components.add(tm.uuid,this),this._vertexPicker=new ng(e),this._lineMaterial=new Vl({color:6629591,linewidth:2})}get enabled(){return this._enabled}set enabled(e){this._enabled=e,this.setupEvents(e),this._vertexPicker.enabled=e,e||this.cancelCreation()}get lineMaterial(){return this._lineMaterial}set lineMaterial(e){this._lineMaterial.dispose(),this._lineMaterial=e,this._lineMaterial.resolution.set(window.innerWidth,window.innerHeight)}get workingPlane(){return this._vertexPicker.workingPlane}set workingPlane(e){this._vertexPicker.workingPlane=e}dispose(){this.setupEvents(!1),this._lineMaterial.dispose(),this._vertexPicker.dispose();for(const e of this.list)e.dispose();this._currentAngleElement&&this._currentAngleElement.dispose(),this.components=null,this.onDisposed.trigger(tm.uuid),this.onDisposed.reset()}delete(){}deleteAll(){for(const e of this.list)e.dispose();this.list=[]}endCreation(){this._currentAngleElement&&(this.list.push(this._currentAngleElement),this._currentAngleElement.computeAngle(),this._currentAngleElement=null),this._clickCount=0}cancelCreation(){this._currentAngleElement&&(this._currentAngleElement.dispose(),this._currentAngleElement=null),this._clickCount=0}setupEvents(e){if(!this.world)throw new Error("No world selected for angle measurement!");if(this.world.isDisposing)return;if(!this.world.renderer)throw new Error("The given world doesn't have a renderer!");const t=this.world.renderer.three.domElement.parentElement;e?(t.addEventListener("pointermove",this.onMouseMove),window.addEventListener("keydown",this.onKeyDown)):(t.removeEventListener("pointermove",this.onMouseMove),window.removeEventListener("keydown",this.onKeyDown))}};D(Ab,"uuid","622fb2c9-528c-4b0a-8a0e-6a1375f0a3aa");let OL=Ab;const Rb=class im extends Ke{constructor(e){super(e),D(this,"onDisposed",new oe),D(this,"onBeforeUpdate",new oe),D(this,"onAfterUpdate",new oe),D(this,"onCleaned",new oe),D(this,"snapDistance",.25),D(this,"list",[]),D(this,"world"),D(this,"_vertexPicker"),D(this,"_lineMaterial",new Fn({color:"#DC2626",linewidth:2,depthTest:!1})),D(this,"_visible",!0),D(this,"_enabled",!1),D(this,"_temp",{isDragging:!1,start:new P,end:new P,dimension:void 0}),D(this,"create",t=>{const i=t instanceof Wt?t:void 0;if(this._enabled){if(!this._temp.isDragging){this.drawStart(i);return}this.endCreation()}}),D(this,"onMouseMove",()=>{this.world&&this._vertexPicker.get(this.world)}),D(this,"onKeydown",t=>{this.enabled&&t.key==="Escape"&&this.cancelCreation()}),this.components.add(im.uuid,this),this._vertexPicker=new ng(e,{previewElement:Js(),snapDistance:this.snapDistance})}get enabled(){return this._enabled}set enabled(e){e||this.cancelCreation(),this._enabled=e,this._vertexPicker.enabled=e,this.setupEvents(e)}get visible(){return this._visible}set visible(e){this._visible=e;for(const t of this.list)t.visible=e}get color(){return this._lineMaterial.color}set color(e){this._lineMaterial.color=e}dispose(){this.setupEvents(!1),this.enabled=!1;for(const e of this.list)e.dispose();this._lineMaterial.dispose(),this.list=[],this._vertexPicker.dispose(),this.onDisposed.trigger(im.uuid),this.onDisposed.reset()}async update(e){this._enabled&&this._temp.isDragging&&this.drawInProcess()}createOnPoints(e,t){const i=this.drawDimension();return i.startPoint=e,i.endPoint=t,i.createBoundingBox(),this.list.push(i),i}delete(){if(!this.world)throw new Error("World is needed for Length Measurement!");if(!this._enabled||this.list.length===0)return;const e=this.getBoundingBoxes(),t=this.components.get(fn).get(this.world).castRay(e);if(!t)return;const i=this.list.find(n=>n.boundingBox===t.object);if(i){const n=this.list.indexOf(i);this.list.splice(n,1),i.dispose()}}async deleteMeasurement(e){if(e){const t=this.list.indexOf(e);this.list.splice(t,1),e.dispose()}}deleteAll(){for(const e of this.list)e.dispose();this.list=[],this.onCleaned.trigger(null)}cancelCreation(){var e;this._temp.dimension&&(this._temp.isDragging=!1,(e=this._temp.dimension)==null||e.dispose(),this._temp.dimension=void 0)}endCreation(){this._temp.dimension&&(this._temp.dimension.createBoundingBox(),this.list.push(this._temp.dimension),this._temp.dimension=void 0,this._temp.isDragging=!1)}drawStart(e){if(!this.world)throw new Error("The length measurement needs a world to work!");const t=e?[e]:void 0,i=this.components.get(fn).get(this.world).castRay(t),n=this._vertexPicker.get(this.world);i&&n&&(this._temp.isDragging=!0,this._temp.start=e?i.point:n)}drawInProcess(){if(!this.world)throw new Error("The length measurement needs a world to work!");if(!this.components.get(fn).get(this.world).castRay())return;const e=this._vertexPicker.get(this.world);e&&(this._temp.end=e,this._temp.dimension||(this._temp.dimension=this.drawDimension()),this._temp.dimension.endPoint=this._temp.end)}drawDimension(){if(!this.world)throw new Error("The length measurement needs a world to work!");return new ig(this.components,this.world,{start:this._temp.start,end:this._temp.end,lineMaterial:this._lineMaterial,endpointElement:Js()})}getBoundingBoxes(){return this.list.map(e=>e.boundingBox).filter(e=>e!==void 0)}setupEvents(e){if(!this.world)throw new Error("The length measurement needs a world to work!");if(this.world.isDisposing)return;if(!this.world.renderer)throw new Error("The world of the length measurement needs a renderer!");const t=this.world.renderer.three.domElement.parentElement;t&&(t.removeEventListener("pointermove",this.onMouseMove),window.removeEventListener("keydown",this.onKeydown),e&&(t.addEventListener("pointermove",this.onMouseMove),window.addEventListener("keydown",this.onKeydown)))}};D(Rb,"uuid","2f9bcacf-18a9-4be6-a293-e898eae64ea1");let ja=Rb;const Mb=class Fb extends Ke{constructor(e){super(e),D(this,"onDisposed",new oe),D(this,"onVolumeFound",new oe),D(this,"label",null),D(this,"world"),D(this,"_enabled",!1),D(this,"create",()=>{if(!this.enabled)return;if(!this.world)throw new Error("World is needed for Volume Measurement!");const t=this.components.get(fn).get(this.world).castRay(),i=this.components.get(Or);if(!t||!t.object)return;const{object:n}=t;if(n instanceof Te){const r=i.getVolumeFromMeshes([n]);this.onVolumeFound.trigger(r)}}),D(this,"onMouseMove",()=>{}),D(this,"onKeydown",t=>{}),this.components.add(Fb.uuid,this)}set enabled(e){this._enabled=e,this.setupEvents(e),e||this.cancelCreation()}get enabled(){return this._enabled}async dispose(){var e;this.setupEvents(!1),(e=this.label)==null||e.dispose(),this.onDisposed.trigger(),this.onDisposed.reset(),this.components=null}delete(){}async deleteAll(){}endCreation(){}cancelCreation(){}getVolumeFromFragments(e){const t=this.components.get(Or).getVolumeFromFragments(e),i=this.components.get(hu);i.reset(),i.addFragmentIdMap(e);const n=i.getSphere();return this.setLabel(n,t),t}getVolumeFromMeshes(e){const t=this.components.get(Or),i=this.components.get(hu);i.reset();for(const o of e)i.addMesh(o);const n=i.getSphere(),r=t.getVolumeFromMeshes(e);return this.setLabel(n,r),r}clear(){this.label&&(this.label.visible=!1)}newLabel(){if(!this.world)throw new Error("World is needed for Volume Measurement!");const e=Js();return new Di(this.world,e)}setupEvents(e){if(!this.world)throw new Error("The volume measurement needs a world to work!");if(this.world.isDisposing)return;if(!this.world.renderer)throw new Error("The world of the volume measurement needs a renderer!");const t=this.world.renderer.three.domElement.parentElement;e?(t.addEventListener("click",this.create),t.addEventListener("pointermove",this.onMouseMove),window.addEventListener("keydown",this.onKeydown)):(t.removeEventListener("click",this.create),t.removeEventListener("pointermove",this.onMouseMove),window.removeEventListener("keydown",this.onKeydown))}setLabel(e,t){if(!this.world)throw new Error("World is needed for Volume Measurement!");this.label||(this.label=this.newLabel(),this.label.three.removeFromParent()),this.label.visible=!0,this.world.scene.three.add(this.label.three),this.label.three.position.copy(e.center);const i=Math.trunc(t*100)/100;this.label.three.element.textContent=i.toString()}};D(Mb,"uuid","811da532-7af3-4635-b592-1c06ae494af5");let LL=Mb;const Pb=class Ob extends Ke{constructor(e){super(e),D(this,"onDisposed",new oe),D(this,"selection",[]),D(this,"preview",new Te(new We,new Mi({side:2,depthTest:!1,transparent:!0,opacity:.25,color:"#BCF124"}))),D(this,"selectionMaterial",new Mi({side:2,depthTest:!1,transparent:!0,color:"#BCF124",opacity:.75})),D(this,"world"),D(this,"_enabled",!1),D(this,"_currentSelelection",null),D(this,"create",()=>{if(!this.world)throw new Error("No world given to the face measurement!");if(!this.enabled||!this._currentSelelection)return;const t=this.world.scene.three,i=new We,n=new Te(i,this.selectionMaterial);i.setAttribute("position",this.preview.geometry.attributes.position),n.position.copy(this.preview.position),t.add(n),i.computeBoundingSphere();const{area:r,perimeter:o}=this._currentSelelection,a=this.newLabel(i,r);n.add(a.three),this.selection.push({area:r,perimeter:o,mesh:n,label:a})}),D(this,"onMouseMove",()=>{if(!this.world)throw new Error("The face measurement needs a world to work!");if(!this.enabled){this.unselect();return}const t=this.components.get(fn).get(this.world).castRay();if(!t||!t.object||t.faceIndex===void 0){this.unselect();return}const{object:i,faceIndex:n}=t;i instanceof Te||i instanceof ji?this.updateSelection(i,n,t.instanceId):this.unselect()}),D(this,"onKeydown",t=>{}),this.components.add(Ob.uuid,this),this.preview.frustumCulled=!1}set enabled(e){if(!this.world)throw new Error("No world given for the Face measurement!");this._enabled=e,this.setupEvents(e),e?this.world.scene.three.add(this.preview):(this.preview.removeFromParent(),this.cancelCreation()),this.setVisibility(e)}get enabled(){return this._enabled}dispose(){this.setupEvents(!1),this.deleteAll(),this.preview.removeFromParent(),this.preview.material.dispose(),this.preview.geometry.dispose(),this.selectionMaterial.dispose(),this.onDisposed.trigger(),this.onDisposed.reset(),this.components=null}delete(){if(!this.world)throw new Error("No world given to the face measurement!");const e=this.selection.map(r=>r.mesh),t=this.components.get(fn).get(this.world).castRay(e);if(!t||!t.object)return;const i=this.selection.find(r=>r.mesh===t.object);if(!i)return;i.mesh.removeFromParent(),i.mesh.geometry.dispose(),i.label.dispose();const n=this.selection.indexOf(i);this.selection.splice(n,1)}deleteAll(){for(const e of this.selection)e.mesh.removeFromParent(),e.mesh.geometry.dispose(),e.label.dispose();this.selection=[]}endCreation(){}cancelCreation(){}get(){const e=[];for(const t of this.selection){const i=t.mesh.geometry,{area:n,perimeter:r}=t,o=i.attributes.position.array;e.push({position:o,area:n,perimeter:r})}return e}set(e){if(!this.world)throw new Error("No world given to the face measurement!");const t=this.world.scene.three;for(const i of e){const n=new We,r=new Te(n,this.selectionMaterial);t.add(r);const o=new at(i.position,3);n.setAttribute("position",o),n.computeBoundingSphere();const{area:a,perimeter:l}=i,c=this.newLabel(n,a);r.add(c.three),this.selection.push({area:a,perimeter:l,mesh:r,label:c})}}setupEvents(e){if(!this.world)throw new Error("The face measurement needs a world to work!");if(this.world.isDisposing)return;if(!this.world.renderer)throw new Error("The world of the face measurement needs a renderer!");const t=this.world.renderer.three.domElement.parentElement;t.removeEventListener("pointermove",this.onMouseMove),window.removeEventListener("keydown",this.onKeydown),e&&(t.addEventListener("pointermove",this.onMouseMove),window.addEventListener("keydown",this.onKeydown))}setVisibility(e){if(!this.world)throw new Error("The face measurement needs a world to work!");if(this.world.isDisposing)return;const t=this.world.scene.three;for(const i of this.selection){const n=i.label.three;e?(t.add(i.mesh),i.mesh.add(n)):(i.mesh.removeFromParent(),n.removeFromParent())}}unselect(){this.preview.removeFromParent(),this._currentSelelection=null}updateSelection(e,t,i){if(!this.world)throw new Error("The face measurement needs a world to work!");this.world.scene.three.add(this.preview);const n=this.components.get(Or).getFace(e,t,i);if(n===null)return;const r=this.regenerateHighlight(e,n.indices,i);let o=0;for(const{distance:a}of n.edges)o+=a;this._currentSelelection={perimeter:o,area:r}}newLabel(e,t){if(!e.boundingSphere)throw new Error("Error computing area geometry");if(!this.world)throw new Error("The face measurement needs a world to work!");const{center:i}=e.boundingSphere,n=Js(),r=Math.trunc(t*100)/100;n.textContent=r.toString();const o=new Di(this.world,n);return o.three.position.copy(i),o}regenerateHighlight(e,t,i){const n=[],r=[];let o=0,a=0;const l=new Ft,c=this.components.get(Or);for(const u of t){const{p1:f,p2:m,p3:g}=c.getVerticesAndNormal(e,u,i);n.push(f.x,f.y,f.z),n.push(m.x,m.y,m.z),n.push(g.x,g.y,g.z),l.set(f,m,g),a+=l.getArea(),r.push(o,o+1,o+2),o+=3}this.preview.position.set(0,0,0),this.preview.rotation.set(0,0,0),this.preview.scale.set(1,1,1),this.preview.updateMatrix(),this.preview.applyMatrix4(e.matrixWorld);const h=new Float32Array(n),d=new at(h,3);return this.preview.geometry.setAttribute("position",d),this.preview.geometry.setIndex(r),a}};D(Pb,"uuid","30279548-1309-44f6-aa97-ce26eed73522");let DL=Pb;const Lb=class Db extends Ke{constructor(e){super(e),D(this,"onDisposed",new oe),D(this,"preview"),D(this,"tolerance",.3),D(this,"world"),D(this,"_enabled",!1),D(this,"_lineMaterial",new Fn({color:"#DC2626",linewidth:2,depthTest:!1,transparent:!0})),D(this,"create",async()=>{if(!this.preview||!this.enabled||!this.preview.visible)return;const t=this.components.get(ja);t.world=this.world;const i=this.preview.startPoint.clone(),n=this.preview.endPoint.clone();t.createOnPoints(i,n)}),D(this,"onMouseMove",()=>{if(!this.preview)return;if(!this.world)throw new Error("The edge measurement needs a world to work!");if(!this.enabled){this.preview.visible=!1;return}const t=this.components.get(fn).get(this.world).castRay();if(!t||!t.object){this.preview.visible=!1;return}const{object:i,faceIndex:n,point:r}=t;if(n===void 0){this.preview.visible=!1;return}i instanceof Te||i instanceof ji?this.updateSelection(i,r,n,t.instanceId):this.preview.visible=!1}),D(this,"onKeydown",t=>{}),this.components.add(Db.uuid,this)}set enabled(e){if(this._enabled=e,this.setupEvents(e),e){if(!this.world)throw new Error("The edge measurement needs a world to work!");if(!this.preview){const t=document.createElement("div");t.className="w-2 h-2 bg-red-600 rounded-full",this.preview=new ig(this.components,this.world,{start:new P,end:new P,lineMaterial:this._lineMaterial,endpointElement:t}),this.preview.visible=!1}}else this.cancelCreation()}get enabled(){return this._enabled}dispose(){this.preview&&this.preview.dispose(),this._lineMaterial.dispose(),this.setupEvents(!1),this.onDisposed.trigger(),this.onDisposed.reset(),this.components=null}delete(){if(!this.enabled)return;const e=this.components.get(ja),t=e.enabled;e.enabled=!0,e.delete(),e.enabled=t}deleteAll(){this.components.get(ja).deleteAll()}endCreation(){}cancelCreation(){}get(){const e=this.components.get(ja).list,t=[];for(const i of e){const n=i.startPoint,r=i.endPoint,o=[n.x,n.y,n.z,r.x,r.y,r.z];t.push(o)}return t}set(e){const t=this.components.get(ja);t.world=this.world;for(const i of e){const[n,r,o,a,l,c]=i,h=new P(n,r,o),d=new P(a,l,c);t.createOnPoints(h,d)}}setupEvents(e){if(!this.world)throw new Error("The edge measurement needs a world to work!");if(this.world.isDisposing)return;if(!this.world.renderer)throw new Error("The world of the edge measurement needs a renderer!");const t=this.world.renderer.three.domElement.parentElement;e?(t.addEventListener("pointermove",this.onMouseMove),window.addEventListener("keydown",this.onKeydown)):(t.removeEventListener("pointermove",this.onMouseMove),window.removeEventListener("keydown",this.onKeydown))}updateSelection(e,t,i,n){if(!this.preview||!e.geometry.index)return;const r=this.components.get(Or).getFace(e,i,n);if(!r)return;const{edges:o}=r;let a=Number.MAX_VALUE,l=[];for(const d of o){const[u,f]=d.points,m=Or.distanceFromPointToLine(t,u,f,!0);m<this.tolerance&&m<a&&(a=m,l=d.points)}if(!l.length){this.preview.visible=!1;return}const[c,h]=l;this.preview.startPoint=c,this.preview.endPoint=h,this.preview.visible=!0}};D(Lb,"uuid","e7be5749-89df-4514-8d25-83aa38ce12d8");let NL=Lb;class lL extends rv{constructor(e,t){super(e,t),D(this,"threshold",50),D(this,"bboxThreshold",200),D(this,"maxLostTime",3e4),D(this,"maxHiddenTime",5e3),D(this,"boxes",new Map),D(this,"_staticGeometries",{culled:{},unculled:{}}),D(this,"_geometry"),D(this,"_material",new Mi({transparent:!0,side:2,opacity:1})),D(this,"onViewUpdated",new ps),D(this,"_modelIDIndex",new Map),D(this,"_indexModelID",new Map),D(this,"_nextModelID",0),D(this,"_geometries",new Map),D(this,"_geometriesGroups",new Map),D(this,"_geometriesInMemory",new Set),D(this,"_intervalID",null),D(this,"codes",new Map),D(this,"handleWorkerMessage",async n=>{const r=n.data.colors,o={},a={},l={},c={},h=performance.now();let d=!1;const u=new Set(this._geometriesInMemory);for(const[f,m]of r){const g=this._geometries.get(f);if(!g||!(m>this.threshold))continue;u.delete(f);const{exists:E}=g,p=this._indexModelID.get(g.modelIndex);E?(g.time=h,c[p]||(c[p]=new Set),c[p].add(g.geometryID),this._geometriesInMemory.add(f),d=!0):(o[p]||(o[p]=new Map),g.time=h,g.exists=!0,o[p].has(m)||o[p].set(m,new Set),o[p].get(m).add(g.geometryID),this._geometriesInMemory.add(f),d=!0)}for(const f of u){const m=this._geometries.get(f);m&&(this.handleLostGeometries(h,f,m,a,l),d=!0)}d&&await this.onViewUpdated.trigger({toLoad:o,toRemove:a,toHide:l,toShow:c}),this._isWorkerBusy=!1}),this.config.updateInterval=500,this._geometry=new Ot(1,1,1),this._geometry.groups=[],this._geometry.deleteAttribute("uv");const i=this._geometry.attributes.position.array;for(let n=0;n<i.length;n++)i[n]+=.5;this._geometry.attributes.position.needsUpdate=!0,this.worker.addEventListener("message",this.handleWorkerMessage)}dispose(){super.dispose(),this.onViewUpdated.reset(),this._intervalID!==null&&(window.clearInterval(this._intervalID),this._intervalID=null);for(const[e,t]of this._geometriesGroups){t.removeFromParent();const i=[...t.children];for(const n of i)n.removeFromParent()}this._geometriesGroups.clear();for(const[e,t]of this.boxes)t.dispose(!0);this.boxes.clear();for(const[e,t]of this._geometries)t.fragment&&(t.fragment.dispose(!0),t.fragment=void 0);this._geometries.clear(),this._staticGeometries={culled:{},unculled:{}},this._geometry.dispose(),this._material.dispose(),this._modelIDIndex.clear(),this._indexModelID.clear(),this.codes.clear()}add(e,t,i){const n=this.createModelIndex(e),r=nt.enabled;nt.enabled=!1;const o=new Map,a=new _e,l=new ca(this._geometry,this._material,10);this.boxes.set(n,l),this.scene.add(l.mesh);const c=new fs;this.scene.add(c),this._geometriesGroups.set(n,c);const h=new Map;for(const u of t)for(const f of u.geometries){const{geometryID:m,transformation:g,color:E}=f,p=new Ne;p.setRGB(E[0],E[1],E[2],"srgb");const v=this.getInstanceID(u.id,m),I=i[m];if(!I){console.log(`Geometry not found: ${m}`);continue}const{boundingBox:_}=I;let b;o.has(m)?b=o.get(m):(b=this.getAvailableColor(),this.increaseColor(),o.set(m,b));const{r:T,g:w,b:A,code:y}=b,C=new Ne;C.setRGB(T/255,w/255,A/255,"srgb"),this.codes.has(n)||this.codes.set(n,new Map),this.codes.get(n).set(m,y);const M=new _e,R=Object.values(_);if(M.fromArray(g),a.fromArray(R),M.multiply(a),h.has(v)){const L=h.get(v);if(L===void 0||!L.colors)throw new Error("Malformed item!");L.colors.push(C),L.geometryColors.push(p),L.transforms.push(M)}else h.set(v,{id:v,colors:[C],geometryColors:[p],transforms:[M]});if(this._geometries.has(y))this._geometries.get(y).assetIDs.add(u.id);else{const L=new Set([u.id]);this._geometries.set(y,{modelIndex:n,geometryID:m,assetIDs:L,exists:!1,hidden:!1,time:0})}}const d=Array.from(h.values());l.add(d),nt.enabled=r}remove(e){const t=this._modelIDIndex.get(e);if(t===void 0)throw new Error("Model doesn't exist!");const i=this._geometriesGroups.get(t);i.removeFromParent();const n=[...i.children];for(const o of n)o.removeFromParent();this._geometriesGroups.delete(t),this.boxes.get(t).dispose(!1),this.boxes.delete(t);const r=this.codes.get(t);this.codes.delete(t);for(const[o,a]of r){const l=this._geometries.get(a);l&&l.fragment&&(l.fragment.dispose(!1),l.fragment=void 0),this._geometries.delete(a)}this._modelIDIndex.delete(e),this._indexModelID.delete(t),this._geometriesInMemory.clear()}addFragment(e,t,i){const n=nt.enabled;nt.enabled=!1;const r=this._modelIDIndex.get(e),o=this.codes.get(r).get(t),a=this._geometries.get(o);if(this.setGeometryVisibility(a,!1,!1),!a.fragment){a.fragment=new ca(i.mesh.geometry,this._material,i.capacity);const u=this._geometriesGroups.get(r);if(!u)throw new Error("Group not found!");u.add(a.fragment.mesh)}const[l,c,h]=o.split("-").map(u=>parseInt(u,10)),d=[];for(const u of i.ids){const f=i.get(u);if(!f.colors)throw new Error("Malformed fragments!");for(const m of f.colors)m.setRGB(l/255,c/255,h/255,"srgb");d.push(f)}a.fragment.add(d),nt.enabled=n,this.needsUpdate=!0}removeFragment(e,t){const i=this._modelIDIndex.get(e),n=this.codes.get(i).get(t),r=this._geometries.get(n);if(r.hidden||this.setGeometryVisibility(r,!0,!1),r.fragment){const{fragment:o}=r;o.dispose(!1),r.fragment=void 0}}setModelTransformation(e,t){const i=this._modelIDIndex.get(e);if(i===void 0)throw new Error("Model not found!");const n=this.boxes.get(i);n&&(n.mesh.position.set(0,0,0),n.mesh.rotation.set(0,0,0),n.mesh.scale.set(1,1,1),n.mesh.applyMatrix4(t));const r=this._geometriesGroups.get(i);r&&(r.position.set(0,0,0),r.rotation.set(0,0,0),r.scale.set(1,1,1),r.applyMatrix4(t))}setVisibility(e,t,i){const n=this._modelIDIndex.get(t);if(n!==void 0)for(const[r,o]of i){const a=this.codes.get(n);if(a===void 0)throw new Error("Map not found!");const l=a.get(r),c=this._geometries.get(l);if(c===void 0)throw new Error("Geometry not found!");c.hidden=!e,this.setGeometryVisibility(c,e,!0,o)}}updateTransformations(e){const t=this._modelIDIndex.get(e);if(t===void 0)return;const i=this.components.get($e).groups.get(e);if(i){i.updateWorldMatrix(!0,!1),i.updateMatrix();const n=this.boxes.get(t);n&&(n.mesh.position.set(0,0,0),n.mesh.rotation.set(0,0,0),n.mesh.scale.set(1,1,1),n.mesh.updateMatrix(),n.mesh.applyMatrix4(i.matrixWorld),n.mesh.updateMatrix());const r=this._geometriesGroups.get(t);r&&(r.position.set(0,0,0),r.rotation.set(0,0,0),r.scale.set(1,1,1),r.updateMatrix(),r.applyMatrix4(i.matrixWorld),r.updateMatrix())}}async addStaticGeometries(e,t=!0){const i={data:{colors:new Map}},n=this.threshold+1e3;for(const r in e){const o=this._modelIDIndex.get(r);if(o===void 0)continue;const a=this.codes.get(o);if(!a)continue;const l=e[r];for(const c of l){const h=a.get(c);if(!h)continue;const d=this._geometries.get(h);if(!d)continue;d.exists=!0,t||(d.hidden=!1,d.time=performance.now(),i.data.colors.set(h,n)),this._geometriesInMemory.add(h);const u=t?this._staticGeometries.culled:this._staticGeometries.unculled;u[r]||(u[r]=new Set),u[r].add(c)}}t||await this.handleWorkerMessage(i)}removeStaticGeometries(e,t){const i=[];t===void 0?i.push("culled","unculled"):t===!0?i.push("culled"):i.push("unculled");for(const n in e){const r=e[n];for(const o of i){const a=this._staticGeometries[o][n];if(a)for(const l of r)a.delete(l)}}}cancel(e){for(const t in e){const i=this._modelIDIndex.get(t);if(i===void 0)throw new Error("Model not found.");const n=this.codes.get(i);if(n===void 0)throw new Error("Codes not found.");for(const r of e[t]){const o=n.get(r);if(o===void 0)throw new Error("Color code not found.");this._geometriesInMemory.delete(o);const a=this._geometries.get(o);if(!a)throw new Error("Geometry not found.");a.exists=!1}}}getBoundingBoxes(e){const t=new An;for(const i in e){const n=e[i],r=this._modelIDIndex.get(i);if(r===void 0)continue;const o=this.boxes.get(r);if(!o)continue;const a=o.clone(n);t.add(a.mesh),t.items.push(a)}return t}getInstanceID(e,t){const i=10**(Math.log(t)*Math.LOG10E+1|0);return e+t/i}setGeometryVisibility(e,t,i,n){const{modelIndex:r,geometryID:o,assetIDs:a}=e,l=this.boxes.get(r);if(l===void 0)throw new Error("Model not found!");const c=n||a;if(i&&e.fragment)e.fragment.setVisibility(t,c);else{const h=new Set;for(const d of c){const u=this.getInstanceID(d,o);h.add(u)}l.setVisibility(t,h)}}handleLostGeometries(e,t,i,n,r){var o,a,l;const c=this._indexModelID.get(i.modelIndex),h=e-i.time,{culled:d,unculled:u}=this._staticGeometries;if(h>this.maxLostTime){if((o=d[c])!=null&&o.has(i.geometryID)||(a=u[c])!=null&&a.has(i.geometryID))return;n[c]||(n[c]=new Set),i.exists=!1,n[c].add(i.geometryID),this._geometriesInMemory.delete(t)}else if(h>this.maxHiddenTime){if((l=u[c])!=null&&l.has(i.geometryID))return;r[c]||(r[c]=new Set),r[c].add(i.geometryID)}}createModelIndex(e){if(this._modelIDIndex.has(e))throw new Error("Can't load the same model twice!");const t=this._nextModelID;return this._nextModelID++,this._modelIDIndex.set(e,t),this._indexModelID.set(t,e),t}}const Nb=class nm extends Ke{constructor(e){super(e),D(this,"enabled",!0),D(this,"onFragmentsDeleted",new oe),D(this,"onFragmentsLoaded",new oe),D(this,"onDisposed",new oe),D(this,"models",{}),D(this,"serializer",new z_),D(this,"maxRamTime",5e3),D(this,"useCache",!0),D(this,"cancel",!1),D(this,"url",""),D(this,"fetch",async t=>fetch(this.url+t)),D(this,"fileDB",new U_("that-open-company-streaming")),D(this,"_culler",null),D(this,"_world",null),D(this,"_ramCache",new Map),D(this,"_isDisposing",!1),D(this,"_geometryInstances",{}),D(this,"_loadedFragments",{}),D(this,"fragIDData",new Map),D(this,"_baseMaterial",new aa),D(this,"_baseMaterialT",new aa({transparent:!0,opacity:.5})),D(this,"disposeStreamedGroup",t=>{this._isDisposing=!0;const{groupID:i,fragmentIDs:n}=t;if(this.models[i]){delete this.models[i],delete this._geometryInstances[i],delete this._loadedFragments[i];for(const r of n)this.fragIDData.delete(r);this.culler.remove(i),this._isDisposing=!1}}),this.components.add(nm.uuid,this),this.components.get($e).onFragmentsDisposed.add(this.disposeStreamedGroup),An.setPropertiesDB(!0)}get world(){if(!this._world)throw new Error("You must set a world before using the streamer!");return this._world}set world(e){var t;this._world=e,(t=this._culler)==null||t.dispose(),this._culler=new lL(this.components,e),this._culler.onViewUpdated.add(async({toLoad:i,toRemove:n,toShow:r,toHide:o})=>{await this.loadFoundGeometries(i),await this.unloadLostGeometries(n),this.setMeshVisibility(r,!0),this.setMeshVisibility(o,!1)})}get culler(){if(!this._culler)throw new Error("You must set a world before using the streamer!");return this._culler}dispose(){var e;this._isDisposing=!0,this.onFragmentsLoaded.reset(),this.onFragmentsDeleted.reset(),this._ramCache.clear(),this.components.get($e).onFragmentsDisposed.remove(this.disposeStreamedGroup),this.models={},this._geometryInstances={},this._loadedFragments={},this.fragIDData.clear(),this._baseMaterial.dispose(),this._baseMaterialT.dispose(),(e=this._culler)==null||e.dispose(),this.onDisposed.trigger(nm.uuid),this.onDisposed.reset(),this._isDisposing=!1,An.setPropertiesDB(!1)}async load(e,t,i){const{assets:n,geometries:r,globalDataFileId:o}=e,a=await(await this.fetch(o)).arrayBuffer(),l=new Uint8Array(a),c=this.components.get($e).load(l,{coordinate:t,isStreamed:!0});c.name=o.replace("-processed-global",""),this.world.scene.three.add(c);const{opaque:h,transparent:d}=c.geometryIDs;for(const[g,E]of h){const p=c.keyFragments.get(E);if(p===void 0)throw new Error("Malformed fragments group!");this.fragIDData.set(p,[c,g,new Set])}for(const[g,E]of d){const p=c.keyFragments.get(E);if(p===void 0)throw new Error("Malformed fragments group!");this.fragIDData.set(p,[c,Math.abs(g),new Set])}this.culler.add(c.uuid,n,r);const u=new Map;for(const g of n)u.set(g.id,g);const f={assetsMap:u,geometries:r};Object.defineProperty(f,"assets",{get:()=>Array.from(f.assetsMap.values())}),this.models[c.uuid]=f;const m=new Map;for(const g of n){const E=g.id;for(const{transformation:p,geometryID:v,color:I}of g.geometries){m.has(v)||m.set(v,[]);const _=m.get(v);if(!_)throw new Error("Malformed instances");_.push({id:E,transformation:p,color:I})}}if(this._geometryInstances[c.uuid]=m,i){const g=new Map,E=new Map;for(const b in i.ids){const T=i.ids[b],w=parseInt(b,10);g.set(w,T)}for(const b in i.types){const T=i.types[b],w=parseInt(b,10);E.set(w,T)}const p=o.replace("-global","-properties");An.url=this.url,c.streamSettings={baseFileName:p,ids:g,types:E};const{indexesFile:v}=i,I=await(await this.fetch(v)).text(),_=this.components.get(qi);_.setRelationMap(c,_.getRelationsMapFromJSON(I))}return this.culler.updateTransformations(c.uuid),this.culler.needsUpdate=!0,c}remove(e){const t=this.components.get($e),i=t.groups.get(e);i&&t.disposeGroup(i)}setVisibility(e,t){const i=new Map;if(!t){const n=this.components.get($e),r={};for(const[,o]of n.groups){const a=o.getFragmentMap();for(const l in a)r[l]=a[l]}t=r}for(const n in t){const r=this.fragIDData.get(n);if(r===void 0)throw new Error("Geometry not found!");const[o,a,l]=r,c=o.uuid;i.has(c)||i.set(c,new Map);const h=i.get(c),d=t[n];for(const f of d)e?l.delete(f):l.add(f);h.get(a)||h.set(a,new Set);const u=h.get(a);for(const f of d)u.add(f)}for(const[n,r]of i){this.culler.setVisibility(e,n,r);for(const[o]of r){const a=this._loadedFragments[n];if(!a)continue;const l=a[o];if(l)for(const c of l){const h=t[c.id];h&&c.setVisibility(e,h)}}}this.culler.needsUpdate=!0}async clearCache(){await this.fileDB.clear()}async setStatic(e,t,i){const n={};for(const r of e){const o=this.fragIDData.get(r);if(!o){console.log(`Item not found: ${r}.`);continue}const[a,l]=o,c=a.uuid;n[c]||(n[c]=new Set),n[c].add(l)}if(t){const r={};for(const o in n){const a=new Map;a.set(1,n[o]),r[o]=a}await this.loadFoundGeometries(r,!1),await this.culler.addStaticGeometries(n,i)}else this.culler.removeStaticGeometries(n,i)}getBoundingBoxes(e){const t={},i=this.components.get($e),n=new Map;for(const[o,a]of i.groups)for(const[,l]of a.keyFragments)n.set(l,o);const r=new Set;for(const o in e){const a=n.get(o);if(a===void 0){console.log("Fragment group not found!");continue}const l=e[o];r.has(a)||(t[a]=new Set,r.add(a));for(const c of l){const h=this.models[a].assetsMap.get(c);if(h)for(const d of h.geometries){const u=d.geometryID,f=this.culler.getInstanceID(c,u);t[a].add(f)}}}return this.culler.getBoundingBoxes(t)}async loadFoundGeometries(e,t=!0){this.cancel=!1;const i={};for(const n in e){const r=new Set;for(const[,o]of e[n])for(const a of o)r.add(a);i[n]=r}for(const n in e){if(this._isDisposing)return;if(this.cancel){this.cancelLoading(i);return}const r=this.components.get($e).groups.get(n);if(!r)return;const{geometries:o}=this.models[n],a=new Map,l=new Set;for(const[f,m]of e[n])for(const g of m){if(this.cancel){this.cancelLoading(i);return}l.add(g);const E=o[g];if(!E)throw new Error("Geometry not found");if(E.geometryFile){const p=E.geometryFile,v=a.get(p)||0;a.set(p,v+f)}}if(this.useCache){const f=a.entries();for(const[m,g]of f)this.fileDB.isCached(m)&&a.set(m,g+99999)}const c=Array.from(a).sort((f,m)=>m[1]-f[1]),h=[];for(const[f]of c){const m=this.loadFragmentFile(n,r,t,f,l,i);h.push(m)}await Promise.all(h);const d=new Set,u=performance.now();for(const[f,{time:m}]of this._ramCache)u-m>this.maxRamTime&&d.add(f);for(const f of d)this._ramCache.delete(f)}}async unloadLostGeometries(e){if(this._isDisposing)return;const t=[],i=this.components.get($e);for(const n in e){const r=i.groups.get(n);if(!r)throw new Error("Fragment group not found!");if(!this._loadedFragments[n])continue;const o=this._loadedFragments[n],a=e[n];for(const l of a){if(this.culler.removeFragment(r.uuid,l),!o[l])continue;const c=o[l];for(const h of c)r.items.splice(r.items.indexOf(h),1),t.push(h);delete o[l]}}t.length&&this.onFragmentsDeleted.trigger(t);for(const n of t)i.list.delete(n.id),this.world.meshes.delete(n.mesh),n.mesh.material=[],n.dispose(!0)}setMeshVisibility(e,t){for(const i in e)for(const n of e[i]){const r=this._loadedFragments[i];if(!r)continue;const o=r[n];if(o)for(const a of o)a.mesh.visible=t}}newFragment(e,t,i,n,r,o,a){if(n.length===0||this._isDisposing)return;const l=e.geometryIDs,c=r?l.transparent:l.opaque,h=t*(r?-1:1),d=c.get(h);if(d===void 0)return;const u=e.keyFragments.get(d);if(u===void 0)return;const f=this.components.get($e);if(f.list.has(u))return;const m=r?this._baseMaterialT:this._baseMaterial,g=new ca(i,m,n.length);g.mesh.visible=a,g.id=u,g.mesh.uuid=u,g.group=e,e.add(g.mesh),e.items.push(g),f.list.set(g.id,g),this.world.meshes.add(g.mesh),this._loadedFragments[e.uuid]||(this._loadedFragments[e.uuid]={});const E=this._loadedFragments[e.uuid];E[t]||(E[t]=[]),E[t].push(g);const p=new Map;for(let b=0;b<n.length;b++){const T=new _e,w=new Ne,{id:A,transformation:y,color:C}=n[b];T.fromArray(y);const[M,R,L]=C;if(w.setRGB(M,R,L,"srgb"),p.has(A)){const S=p.get(A);if(!S)continue;S.transforms.push(T),S.colors&&S.colors.push(w)}else p.set(A,{id:A,colors:[w],transforms:[T]})}const v=Array.from(p.values());g.add(v);const I=this.fragIDData.get(g.id);if(!I)throw new Error("Fragment data not found!");const _=I[2];_.size&&g.setVisibility(!1,_),this.culler.addFragment(e.uuid,t,g),o.push(g)}cancelLoading(e){this.cancel=!1,this.culler.cancel(e)}async loadFragmentFile(e,t,i,n,r,o){if(!this._ramCache.has(n)){let c=new Uint8Array;if(this.useCache){const d=await this.fileDB.get(n);if(d){const u=await d.arrayBuffer();c=new Uint8Array(u)}else{const u=await(await this.fetch(n)).arrayBuffer();c=new Uint8Array(u),await this.fileDB.add(n,c)}}else{const d=await(await this.fetch(n)).arrayBuffer();c=new Uint8Array(d)}const h=this.serializer.import(c);this._ramCache.set(n,{data:h,time:performance.now()})}const a=this._ramCache.get(n);if(!a)return;a.time=performance.now();const l=[];if(a)for(const[c,{position:h,index:d,normal:u}]of a.data){if(this._isDisposing)return;if(this.cancel){this.cancelLoading(o);return}if(o[e].delete(c),!r.has(c)||!this._geometryInstances[e]||!this._geometryInstances[e].has(c))continue;const f=this._geometryInstances[e].get(c);if(!f)throw new Error("Instances not found!");const m=new We,g=new at(h,3),E=new at(u,3);m.setAttribute("position",g),m.setAttribute("normal",E),m.setIndex(Array.from(d));const p=[],v=[];for(const I of f)I.color[3]===1?v.push(I):p.push(I);this.newFragment(t,c,m,p,!0,l,i),this.newFragment(t,c,m,v,!1,l,i)}l.length&&!this._isDisposing&&this.onFragmentsLoaded.trigger(l)}};D(Nb,"uuid","22437e8d-9dbc-4b99-a04f-d2da280d50c8");let UL=Nb;class cL{constructor(){D(this,"_meshes",new Map)}highlight(e,t,i,n){if(!t.userData.indexFragmentMap||!t.geometry.index)return;const{userData:r}=t,o=r.indexFragmentMap,a=[],l=t.geometry.index.array;for(const[d,u]of o)for(const f in u)if(n[f]){for(const m of u[f])if(n[f].has(m)){const g=l[d*3],E=l[d*3+1],p=l[d*3+2];a.push(g,E,p)}}this._meshes.has(e)||this._meshes.set(e,new Map);const c=this._meshes.get(e);if(!c.has(t.uuid)){const d=new Mi({depthTest:!1,side:2,color:i}),u=new We;u.attributes=t.geometry.attributes;const f=new Te(u,d);f.frustumCulled=!1,c.set(t.uuid,f)}const h=c.get(t.uuid);h.position.copy(t.position),t.parent&&t.parent!==h.parent&&t.parent.add(h),h.geometry.setIndex(a),h.material.color.copy(i)}clear(e){for(const[t,i]of this._meshes)if(!(e&&e!==t))for(const[n,r]of i)r.removeFromParent()}dispose(){for(const[e,t]of this._meshes)for(const[i,n]of t)n.removeFromParent(),n.geometry.attributes={},n.geometry.dispose(),n.material.dispose();this._meshes.clear()}}const Ub=class sm extends Ke{constructor(e){super(e),D(this,"onDisposed",new oe),D(this,"onBeforeUpdate",new oe),D(this,"onAfterUpdate",new oe),D(this,"onSetup",new oe),D(this,"isSetup",!1),D(this,"enabled",!0),D(this,"events",{}),D(this,"multiple","ctrlKey"),D(this,"zoomFactor",1.5),D(this,"zoomToSelection",!1),D(this,"backupColor",null),D(this,"selection",{}),D(this,"config",{selectName:"select",hoverName:"hover",selectionColor:new Ne("#BCF124"),hoverColor:new Ne("#6528D7"),autoHighlightOnClick:!0,world:null,selectEnabled:!0,hoverEnabled:!0}),D(this,"colors",new Map),D(this,"autoToggle",new Set),D(this,"mouseDownPosition",{x:0,y:0}),D(this,"mouseMoveThreshold",5),D(this,"selectable",{}),D(this,"eventManager",new c2),D(this,"_fills",new cL),D(this,"_mouseState",{down:!1,moved:!1}),D(this,"_colorsBeforeSelect",{}),D(this,"saveHighlightersBeforeSelect",t=>{var i;const n=this.components.get($e);for(const r in t){const o=n.list.get(r);if(!o)continue;const a=(i=o.group)==null?void 0:i.uuid;if(a)for(const l in this.selection){if(l===this.config.selectName||l===this.config.hoverName)continue;const c=this.selection[l][r];if(c){l in this._colorsBeforeSelect||(this._colorsBeforeSelect[l]={}),a in this._colorsBeforeSelect[l]||(this._colorsBeforeSelect[l]={[a]:new Set});for(const h of c)this._colorsBeforeSelect[l][a].add(h)}}}}),D(this,"restoreHighlightersAfterDeselect",()=>{const t=this.components.get($e);for(const i in this._colorsBeforeSelect){let n={};const r=this._colorsBeforeSelect[i];for(const o in r){const a=t.groups.get(o);if(!a)continue;const l=a.getFragmentMap(r[o]);n={...n,...l}}this.highlightByID(i,n,!1,!1)}this._colorsBeforeSelect={}}),D(this,"clearHover",()=>{this.selection[this.config.hoverName]={}}),D(this,"onMouseDown",t=>{this.enabled&&(this.mouseDownPosition={x:t.clientX,y:t.clientY},this._mouseState.down=!0)}),D(this,"onMouseUp",async t=>{if(!this.enabled)return;const{world:i,autoHighlightOnClick:n,selectEnabled:r}=this.config;if(!i)throw new Error("No world found!");if(!i.renderer)throw new Error("This world doesn't have a renderer!");if(t.target===i.renderer.three.domElement){if(this._mouseState.down=!1,this._mouseState.moved||t.button!==0){this._mouseState.moved=!1;return}if(this._mouseState.moved=!1,n&&r){const o=this.multiple==="none"?!0:!t[this.multiple];await this.highlight(this.config.selectName,o,this.zoomToSelection)}}}),D(this,"onMouseMove",async t=>{if(!this.enabled)return;const i=t.clientX-this.mouseDownPosition.x,n=t.clientY-this.mouseDownPosition.y,r=Math.sqrt(i*i+n*n),{hoverName:o,hoverEnabled:a}=this.config;if(this._mouseState.moved){this.clear(o);return}if(r>this.mouseMoveThreshold){this._mouseState.moved=this._mouseState.down;const l={};for(const c in this.selection){if(c===o)continue;const h=this.selection[c];for(const d in h){d in l||(l[d]=new Set);const u=h[d];for(const f of u)l[d].add(f)}}a&&await this.highlight(this.config.hoverName,!0,!1,l)}}),this.components.add(sm.uuid,this),this.eventManager.list.add(this.onSetup),this.eventManager.list.add(this.onDisposed)}async dispose(){this.setupEvents(!1),this._fills.dispose(),this.onBeforeUpdate.reset(),this.onAfterUpdate.reset(),this.isSetup=!1,this.selection={};for(const e in this.events){const{onClear:t,onHighlight:i}=this.events[e];this.eventManager.list.delete(t),this.eventManager.list.delete(i)}this.onDisposed.trigger(sm.uuid),this.eventManager.reset()}add(e,t){if(this.selection[e]||this.colors.has(e))throw new Error("A selection with that name already exists!");this.colors.set(e,t),this.selection[e]={};const i=new oe,n=new oe,r=new oe;this.events[e]={onHighlight:i,onClear:r,onBeforeHighlight:n},this.eventManager.add([r,i,n])}remove(e){if(this.clear(e),delete this.selection[e],this.colors.delete(e),this.selection[e]||this.colors.has(e))throw new Error("A selection with that name already exists!");if(this.events[e]){const{onHighlight:t,onClear:i,onBeforeHighlight:n}=this.events[e];this.eventManager.remove([i,t,n]),delete this.events[e]}}async highlight(e,t=!0,i=this.zoomToSelection,n={}){if(!this.enabled)return null;if(!this.config.world)throw new Error("No world found in config!");const r=this.config.world;if(!this.selection[e])throw new Error(`Selection ${e} does not exist.`);const o=[],a=this.components.get($e).meshes;for(const h of a)o.push(h);const l=this.components.get(ua);for(const h of l.list){const d=h;if(d.edges){const u=d.edges.fillMeshes;for(const f of u)o.push(f)}}const c=this.components.get(fn).get(r).castRay(o);if((!c||!c.face)&&t)return this.clear(e),null;if(c){const h=c.object;if(!h.fragment&&h.userData.indexFragmentMap){if(c.faceIndex===void 0||!h.geometry.index)return null;const{userData:E}=h,p=E.indexFragmentMap.get(c.faceIndex);if(p){await this.highlightByID(e,p,t,i,n,h,!0);const v=Object.keys(p)[0];return{id:Array.from(p[v])[0],fragments:p}}return null}const d=h.geometry,u=c.instanceId;if(!d||u===void 0)return null;const f=h.fragment.getItemID(u);if(f===null)throw new Error("Item ID not found!");const m=h.fragment.group;if(!m)throw new Error("Fragment must belong to a FragmentsGroup!");const g=m.getFragmentMap([f]);return await this.highlightByID(e,g,t,i,n,void 0,!0),{id:f,fragments:g}}return null}async highlightByID(e,t,i=!0,n=this.zoomToSelection,r={},o=void 0,a=!1){if(!this.enabled)return;this.events[e].onBeforeHighlight.trigger(this.selection[e]),i&&this.clear(e);const l=this.components.get($e),c=this.colors.get(e);if(c===void 0)throw new Error("Color for selection not found!");const h={};for(const d in t){const u=t[d],f=r[d];for(const m of u)if(!(f&&f.has(m))){if(this.selectable[e]){const g=this.selectable[e];if(!g[d]||!g[d].has(m))continue}h[d]||(h[d]=new Set),h[d].add(m)}}for(const d in h){this.selection[e][d]||(this.selection[e][d]=new Set);const u=h[d],f=new Set,m=new Set;for(const E of u){const p=this.selection[e][d];a&&this.autoToggle.has(e)&&p.has(E)?(f.add(E),p.delete(E)):(p.add(E),m.add(E))}const g=l.list.get(d);if(g&&(f.size&&(this.backupColor?g.setColor(this.backupColor,f):g.resetColor(f)),m.size&&c!==null&&g.setColor(c,m),g.mesh.userData.fills&&c!==null))for(const E of g.mesh.userData.fills)this._fills.highlight(e,E,c,t)}this.events[e].onHighlight.trigger(this.selection[e]),o&&c!==null&&this._fills.highlight(e,o,c,t),n&&await this.zoomSelection(e)}clear(e,t){const i=e?[e]:Object.keys(this.selection);for(const n of i){this._fills.clear(n);const r=this.components.get($e),o=this.selection[n];for(const a in o){const l=r.list.get(a);if(!l)continue;let c=o[a];if(c){if(t){const h=t[a];if(!h)continue;const d=new Set,u=new Set;for(const f of c)h.has(f)?d.add(f):u.add(f);c=d,u.size?o[a]=u:delete o[a]}this.backupColor?l.setColor(this.backupColor,c):l.resetColor(c)}}t||(this.selection[n]={}),this.events[n].onClear.trigger(null)}}setup(e){this.config={...this.config,...e},this.add(this.config.selectName,this.config.selectionColor),this.autoToggle.add(this.config.selectName),this.add(this.config.hoverName,this.config.hoverColor),this.setupEvents(!0),this.enabled=!0,this.isSetup=!0,this.onSetup.trigger(this)}updateFragments(e){for(const t of e)for(const i in this.selection){const n=this.selection[i][t.id],r=this.colors.get(i);n&&r&&t.setColor(r,n)}}async zoomSelection(e){if(!this.config.world)throw new Error("No world found in config!");const t=this.config.world;if(!t.camera.hasCameraControls())return;const i=this.components.get(hu),n=this.components.get($e);i.reset();const r=this.selection[e];if(!Object.keys(r).length)return;for(const g in r){const E=n.list.get(g);if(!E)continue;const p=r[g];i.addMesh(E.mesh,p)}const o=i.getSphere(),a=1/0,l=-1/0,{x:c,y:h,z:d}=o.center,u=o.radius===a||c===a||h===a||d===a,f=o.radius===l||c===l||h===l||d===l,m=o.radius===0;u||f||m||(o.radius*=this.zoomFactor,await t.camera.controls.fitToSphere(o,!0))}setupEvents(e){if(!this.config.world){console.log("No world found while setting up events!");return}if(this.config.world.isDisposing)return;if(!this.config.world.renderer)throw new Error("The given world doesn't have a renderer!");const t=this.config.world.renderer.three.domElement,i=this.events[this.config.selectName].onHighlight;i.remove(this.clearHover),i.remove(this.saveHighlightersBeforeSelect);const n=this.events[this.config.selectName].onClear;n.remove(this.restoreHighlightersAfterDeselect),t.removeEventListener("mousedown",this.onMouseDown),t.removeEventListener("mouseup",this.onMouseUp),t.removeEventListener("pointermove",this.onMouseMove),e&&(i.add(this.clearHover),i.add(this.saveHighlightersBeforeSelect),n.add(this.restoreHighlightersAfterDeselect),t.addEventListener("mousedown",this.onMouseDown),t.addEventListener("mouseup",this.onMouseUp),t.addEventListener("pointermove",this.onMouseMove))}};D(Ub,"uuid","cb8a76f2-654a-4b50-80c6-66fd83cafd77");let BL=Ub;class hL extends Ke{constructor(){super(...arguments),D(this,"onDisposed",new oe),D(this,"world")}get enabled(){return!this.world||this.world.isDisposing?!1:this.getRenderer().postproduction.customEffects.outlineEnabled}set enabled(e){if(!this.world||this.world.isDisposing)return;const t=this.getRenderer();t.postproduction.customEffects.outlineEnabled=e}create(e,t){const i=this.getRenderer();if(i.postproduction.customEffects.outlinedMeshes[e]!==void 0)throw new Error(`There's already a style with the name ${e}.`);i.postproduction.customEffects.outlinedMeshes[e]={material:t,meshes:new Set}}add(e,t){const i=this.getRenderer(),n=this.getStyles()[e];if(!n)throw new Error(`The style ${e} does not exist`);const r=i.postproduction.customEffects.outlineScene,o=this.components.get($e);for(const a in t){const l=o.list.get(a);if(!l)continue;const c=t[a],h=l.clone(c);h.mesh.position.set(0,0,0),h.mesh.rotation.set(0,0,0),h.mesh.applyMatrix4(l.mesh.matrixWorld),h.mesh.instanceColor=null,h.mesh.material=[n.material],n.meshes.add(h.mesh),r.add(h.mesh)}}clear(e){if(e){this.clearStyle(e,!1);return}const t=this.getStyles(),i=Object.keys(t);for(const n of i)this.clearStyle(n,!1);this.world=void 0}dispose(){if(this.world&&!this.world.isDisposing){const e=this.getStyles(),t=Object.keys(e);for(const i of t)this.clearStyle(i,!0)}this.onDisposed.trigger(),this.onDisposed.reset()}clearStyle(e,t){const i=this.getStyles(),n=i[e];if(!n)return;const r=this.components.get(Xn);for(const o of n.meshes){const a=o;a.fragment&&a.fragment.dispose(!1),r.destroy(o)}n.meshes.clear(),t&&(n.material.dispose(),delete i[e])}getStyles(){return this.getRenderer().postproduction.customEffects.outlinedMeshes}getRenderer(){if(!this.world)throw new Error("You must set a world to use the outliner!");const e=this.world.renderer;if(!e.postproduction)throw new Error("The world given to the outliner must use the postproduction renderer.");return e}}D(hL,"uuid","2fd3bcc5-b3b6-4ded-9f64-f47a02854a10");class ls extends Ke{constructor(){super(...arguments),D(this,"enabled",!1),D(this,"onDisposed",new oe),D(this,"onNavigated",new oe),D(this,"onExited",new oe),D(this,"planeType","section"),D(this,"offset",100),D(this,"list",new Map),D(this,"world"),D(this,"current",null),D(this,"cached3DCamera",{position:new P,target:new P,projection:"Perspective",zoom:1,top:10,bottom:-10,right:10,left:-10})}create(e){const t=this.getWorld(),{id:i,point:n,normal:r,type:o}=e;let{name:a,offset:l}=e;const c=this.components.get(ua),h=c.Type;c.Type=du;const d=c.createFromNormalAndCoplanarPoint(t,r,n);d.visible=!1,d.edges.visible=!1,d.enabled=!1,a=a||i,l=l||this.offset,d.type=o||this.planeType,d.updateFill();const u=r.clone().multiplyScalar(-l).add(n),f=n.clone(),m={id:i,name:a,plane:d,offset:l,cached:{position:u,target:f,zoom:1,size:10}};return this.list.set(i,m),c.Type=h,m}delete(e){const t=this.list.get(e);t&&(t.plane.dispose(),this.list.delete(e))}async goTo(e,t=!1){var i;const n=this.getCamera();if(((i=this.current)==null?void 0:i.id)===e)return;const r=this.list.get(e);if(!r)throw new Error(`There's no section with the ID: ${e}.`);this.cacheCameraPosition(),await this.hidePreviousClippingPlane(),await n.projection.set("Orthographic"),this.current=r;const o=new P,a=new P,{cached:l}=r,{position:c,target:h}=l;o.copy(h),a.copy(c),await n.controls.setLookAt(a.x,a.y,a.z,o.x,o.y,o.z,t);const d=r.cached.size,u=n.threePersp.aspect;n.threeOrtho.top=d,n.threeOrtho.bottom=-d,n.threeOrtho.left=-d*u,n.threeOrtho.right=d*u,n.threeOrtho.updateProjectionMatrix(),await n.controls.zoomTo(l.zoom,!1),n.set("Plan"),this.current.plane&&(this.current.plane.enabled=!0,this.current.plane.edges.fillNeedsUpdate=!0,this.current.plane.edges.visible=!0),this.enabled=!0,this.onNavigated.trigger({id:e})}async exit(e=!1){if(!this.enabled||!this.world)return;this.cacheCameraPosition();const t=this.getCamera();t.set("Orbit");const{position:i,target:n,projection:r}=this.cached3DCamera;await t.projection.set(r),this.current&&(this.current.plane.enabled=!1,this.current.plane.edges.enabled=!1,this.current.plane.edges.visible=!1),this.current=null;const{x:o,y:a,z:l}=i,{x:c,y:h,z:d}=n;await t.controls.setLookAt(o,a,l,c,h,d,e),t.projection.current==="Orthographic"&&(await t.controls.zoomTo(this.cached3DCamera.zoom,!1),t.threeOrtho.left=this.cached3DCamera.left,t.threeOrtho.right=this.cached3DCamera.right,t.threeOrtho.top=this.cached3DCamera.top,t.threeOrtho.bottom=this.cached3DCamera.bottom),this.enabled=!1,this.onExited.trigger()}dispose(){for(const[,{plane:e}]of this.list)e.dispose();this.list.clear(),this.onDisposed.trigger(),this.onDisposed.reset()}getWorld(){if(!this.world)throw new Error("World is needed to create sections!");return this.world}getCamera(){const e=this.getWorld().camera;if(!e.hasCameraControls()||!e.projection)throw new Error("The world given to sections must have an OrthoPerspective camera.");return e}cacheCameraPosition(){if(!this.world)throw new Error("World is needed to create clipping planes!");const e=this.getCamera();if(this.enabled){if(!this.current)throw new Error("Current section not found!");const{cached:t}=this.current,{position:i,target:n}=t;e.controls.getPosition(i),e.controls.getTarget(n),t.zoom=e.threeOrtho.zoom,t.size=e.threeOrtho.top}else{e.three.getWorldPosition(this.cached3DCamera.position),e.controls.getTarget(this.cached3DCamera.target),this.cached3DCamera.projection=e.projection.current,this.cached3DCamera.zoom=e.threeOrtho.zoom;const{top:t,bottom:i,left:n,right:r}=e.threeOrtho;this.cached3DCamera.top=t,this.cached3DCamera.bottom=i,this.cached3DCamera.left=n,this.cached3DCamera.right=r}}async hidePreviousClippingPlane(){if(this.current){const e=this.current.plane;e&&(e.enabled=!1),this.current.plane.edges.visible=!1}}}D(ls,"uuid","45b41ba3-7bb8-4e08-909f-e0fa87973965");const Bb=class zb extends Ke{constructor(e){super(e),D(this,"onDisposed",new oe),D(this,"planeType","floorplan"),D(this,"onNavigated",new oe),D(this,"onExited",new oe),D(this,"enabled",!1),D(this,"currentPlan",null),D(this,"offset",1.5),D(this,"list",[]),D(this,"_cachedPlanCamera",null),this.components.add(zb.uuid,this)}get world(){return this.components.get(ls).world}set world(e){const t=this.components.get(ls);t.world=e}get defaultCameraOffset(){return this.components.get(ls).offset}set defaultCameraOffset(e){const t=this.components.get(ls);t.offset=e}dispose(){this.onExited.reset(),this.onNavigated.reset();const e=this.components.get(ls);for(const t of this.list)e.delete(t.id);this.list=[],this.onDisposed.trigger(),this.onDisposed.reset()}async generate(e){if(!e.hasProperties)throw new Error("Properties are needed to compute plan views!");const t=await e.getAllPropertiesOfType(mu);if(!t)throw new Error("Floorplans not found!");const i=e.coordinationMatrix.elements[13],n=await Pr.getUnits(e);for(const r of Object.values(t)){const o={value:0};this.getAbsoluteFloorHeight(r.ObjectPlacement,o);const a=o.value*n+i+this.offset;this.create({name:r.Name.value,id:r.GlobalId.value,normal:new P(0,-1,0),point:new P(0,a,0)})}}create(e){const t=this.components.get(ls);e.type=e.type||this.planeType;const i={...t.create(e),planOffset:this.offset};this.list.push(i)}async goTo(e,t=!1){this.enabled&&this.cachePlanCamera(),await this.components.get(ls).goTo(e,t),await this.applyCachedPlanCamera();const i=this.list.find(n=>n.id===e);i&&(this.currentPlan=i),this.enabled=!0}async exitPlanView(e=!1){this.enabled&&(this.cachePlanCamera(),await this.components.get(ls).exit(e),this.currentPlan=null,this.enabled=!1,this.onExited.trigger())}cachePlanCamera(){var e;const t=(e=this.world)==null?void 0:e.camera,i=new P,n=new P;t.controls.getTarget(i),t.controls.getPosition(n),this._cachedPlanCamera={target:i,position:n,zoom:t.threeOrtho.zoom,top:t.threeOrtho.top,right:t.threeOrtho.right,bottom:t.threeOrtho.bottom,left:t.threeOrtho.left}}async applyCachedPlanCamera(){var e;if(!this._cachedPlanCamera)return;const t=(e=this.world)==null?void 0:e.camera,{position:i,target:n}=this._cachedPlanCamera,r=new P,o=new P;t.controls.getPosition(r),t.controls.getTarget(o);const a=r.y,l=o.y;await t.controls.setLookAt(i.x,a,i.z,n.x,l,n.z),await t.controls.zoomTo(this._cachedPlanCamera.zoom),t.threeOrtho.top=this._cachedPlanCamera.top,t.threeOrtho.bottom=this._cachedPlanCamera.bottom,t.threeOrtho.left=this._cachedPlanCamera.left,t.threeOrtho.right=this._cachedPlanCamera.right,t.threeOrtho.updateProjectionMatrix()}getAbsoluteFloorHeight(e,t){const i=e.RelativePlacement.Location.Coordinates;t.value+=i[2].value,e.PlacementRelTo&&this.getAbsoluteFloorHeight(e.PlacementRelTo,t)}};D(Bb,"uuid","a80874aa-1c93-43a4-80f2-df346da086b1");let zL=Bb;export{Ot as B,Ne as C,OL as D,ji as I,hO as K,ls as L,dL as M,AL as N,SL as O,hL as Q,du as S,DL as U,P as V,LL as _,Te as a,NL as b,PL as c,Rh as d,Mi as e,Fn as f,UL as g,fr as h,ML as i,FL as j,zL as k,ja as l,vi as m,$p as q,RL as x,BL as z};
